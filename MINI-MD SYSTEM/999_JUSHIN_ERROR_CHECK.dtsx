<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="2/26/2016 11:17:27 AM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="UNIAD27"
  DTS:CreatorName="UNIAD27\UNIAD27"
  DTS:DTSID="{576D393F-96D0-4E95-9A6B-578ABC590B45}"
  DTS:EnableConfig="True"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="12.0.4100.1"
  DTS:LocaleID="1041"
  DTS:ObjectName="999_JUSHIN_ERROR_CHECK"
  DTS:PackageType="5"
  DTS:VersionBuild="1056"
  DTS:VersionGUID="{6FC852D0-61F9-43EA-ABDE-177F8CDD7015}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Logging.txt]"
      DTS:CreationName="FILE"
      DTS:DTSID="{BBF4464F-5B56-4CCA-90E4-3663DE56B6EF}"
      DTS:ObjectName="Logging.txt">
      <DTS:PropertyExpression
        DTS:Name="ConnectionString">@[User::autoLoggerPath] +"\\"+ @[System::PackageName]  +"_"+ ((DT_WSTR,4)YEAR(DATEADD("Day",0,GETDATE()))  + RIGHT("00" + (DT_WSTR,2)MONTH(DATEADD("Day",0,GETDATE())),2) +  RIGHT("00" + (DT_WSTR,2)DAY(DATEADD("Day",0,GETDATE())),2))</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:FileUsageType="1"
          DTS:ConnectionString="D:\public\dailyLog\999_JUSHIN_ERROR_CHECK_20170706" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[MINI-MD]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{27A057BB-1D5A-4866-99EC-AF12636DBD88}"
      DTS:ObjectName="MINI-MD">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=10.130.105.16, 1435;User ID=sa;Initial Catalog=mini_md_db;Provider=SQLNCLI11.1;Persist Security Info=True;Auto Translate=False;">
          <DTS:Password
            DTS:Name="Password"
            Sensitive="1"
            Encrypted="1">AQAAANCMnd8BFdERjHoAwE/Cl+sBAAAA32tYfgxgJkK7gRQWnfokdwAAAAAIAAAARABUAFMAAAAQZgAAAAEAACAAAADazH5xQ8G4ziBbJMPkF+hR7Np+J0/L+wTpkQ16SN0N1gAAAAAOgAAAAAIAACAAAABSELSugklUZ0sDM2g7vWg+yMOK6yw3+Wpz+pmW7rGh8iAAAACA0VB7vZ+KQDtCo+WPW0dRlsZ7LgxjsQkYaghp0i+RAkAAAAAoWXwnTKuG7H+zqJnJR1047pDp+KVp8SOxmeDhk85ycDfaId8cJTQVCC/KXjRTeUDfSIJdG+MVFK6AyLFpus16</DTS:Password>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Configurations>
    <DTS:Configuration
      DTS:ConfigurationString="CSV_FILE_PATH"
      DTS:ConfigurationVariable="\Package.Variables[User::CSV_FILE_PATH].Properties[Value]"
      DTS:CreationName=""
      DTS:DTSID="{AFEFC757-123A-4FA2-B1DC-77B6E1A4F279}"
      DTS:ObjectName="Confi_CSV_PATH" />
    <DTS:Configuration
      DTS:ConfigurationString="FILE_EXT"
      DTS:ConfigurationVariable="\Package.Variables[User::FILE_EXT].Properties[Value]"
      DTS:CreationName=""
      DTS:DTSID="{A135F2D3-11C6-4A7B-AF49-EF3396D0D956}"
      DTS:ObjectName="Confi_FILE_EXT" />
    <DTS:Configuration
      DTS:ConfigurationString="CurrentDate"
      DTS:ConfigurationVariable="\Package.Variables[User::CurrentDate].Properties[Value]"
      DTS:CreationName=""
      DTS:DTSID="{926F6E89-C375-4D21-A774-B83761569FAC}"
      DTS:ObjectName="Confi_CURRENT_DATE" />
  </DTS:Configurations>
  <DTS:LogProviders>
    <DTS:LogProvider
      DTS:ConfigString="Logging.txt"
      DTS:CreationName="Microsoft.LogProviderTextFile"
      DTS:Description="イベントのログ エントリを CSV ファイルに書き込みます"
      DTS:DTSID="{C2B6D6A4-4F50-4126-94FD-2E143E82B493}"
      DTS:ObjectName="テキスト ファイルの SSIS ログ プロバイダー">
      <DTS:ObjectData>
        <InnerObject />
      </DTS:ObjectData>
    </DTS:LogProvider>
  </DTS:LogProviders>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{33E575A8-C3EF-4F08-8422-F6139E8B2E7C}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="autoLoggerPath">
      <DTS:VariableValue
        DTS:DataType="8">D:\public\dailyLog</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{86C592E3-B21B-4A59-86D1-5303110452E7}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="SUBSTRING(@[User::fileFolder], 1, LEN(@[User::fileFolder])-4) + &quot;backup&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="backupFolder">
      <DTS:VariableValue
        DTS:DataType="8">D:\public\receive\backup</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{62B1C071-5149-43AD-A173-27889579B94E}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="boolConfigError">
      <DTS:VariableValue
        DTS:DataType="11">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{8A048F02-576B-47E9-8959-525DE4943FC3}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="column_separator">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{AC970573-DB95-4921-850A-D0816CEDBDDC}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="col_boolean_no">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{D1B5C404-9C5B-4D39-92B5-C69CBCE66CAA}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="col_boolean_val">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{5CD3290D-A785-4702-AD7F-BF9C7D47AE3D}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="col_len">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{20B5E229-02D6-4702-9866-D10DEF97155D}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="col_len_no">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{B4AD8A4F-AFA1-41A1-AD73-9B4BA7974E2E}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="connectionString">
      <DTS:VariableValue
        DTS:DataType="8">Persist Security Info=False;User ID=sa;Initial Catalog=mini_md_db;Password=Minimd@0123;Data Source=10.130.105.16,1435</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{1E1828C9-D8F1-4BEF-8959-DBF778B072D7}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="currentDate">
      <DTS:VariableValue
        DTS:DataType="7">7/6/2017</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{92A88EF6-CB45-470E-9D86-91A9EC0DCE42}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="doneFileFullPath">
      <DTS:VariableValue
        DTS:DataType="8">E:\public\receive\data\TEST_FILENAME_DONE</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{0E3B46ED-5098-469F-A6AA-839E7E20E490}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="faultyRowNum">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{2B4F79D2-8E5F-4FC1-9C41-AFC70D355031}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="fileError">
      <DTS:VariableValue
        DTS:DataType="11">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{F04B9550-3756-4159-A6D5-B47A9A8F4794}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="fileExtension">
      <DTS:VariableValue
        DTS:DataType="8">TSV</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{C8280F1B-D107-46CD-9E78-E4286A9DEDE2}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="fileFolder">
      <DTS:VariableValue
        DTS:DataType="8">D:\public\receive\data</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{68F22721-C27E-41A1-B324-AF6233D22A19}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="fileFullPath">
      <DTS:VariableValue
        DTS:DataType="8">E:\public\receive\data\TEST_FILENAME.TSV</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{68467B7D-9FC4-4546-82AF-5CF96D778C9D}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="fileName">
      <DTS:VariableValue
        DTS:DataType="8">M_SHIIRE_JOUKEN_RIREKI</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{5E272710-8362-4C5E-9419-D17AB768B7CC}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="file_empty">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{22F7A359-E043-4493-8ABA-9D5B390E755D}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="layout_col_no">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{A2F8FF6A-5BC5-4C5A-B2AC-2FFDF6C200C6}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="layout_col_type">
      <DTS:VariableValue
        DTS:DataSubType="ManagedSerializable"
        DTS:DataType="13">
        <SOAP-ENV:Envelope xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
          <SOAP-ENV:Body>
            <xsd:anyType
              id="ref-1"></xsd:anyType>
          </SOAP-ENV:Body>
        </SOAP-ENV:Envelope>
      </DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{49555265-DE8C-4368-9D30-46160FFF6F33}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="mailFromId">
      <DTS:VariableValue
        DTS:DataType="8">minimd.ro@gmail.com</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{EE4412ED-E793-445B-98BE-23D75A487A88}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="mailFromName">
      <DTS:VariableValue
        DTS:DataType="8">MINIMD</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{DE68B11A-5DDA-43F6-9F5F-FE2DDF5AEB33}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="mailServer">
      <DTS:VariableValue
        DTS:DataType="8">smtp.gmail.com</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{C2058B84-31FA-42AD-A29E-59192CF97D26}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="mandatory_field_no">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{BAD8DD34-64F7-49EE-843A-91FB8BE88BD5}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="maxLength">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{1F7639FB-26F2-4E16-B93B-E0AEAB14BFB8}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="maxLengthCol">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{3B91BF1B-4DF8-412E-A96E-0EB12025853E}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="no_of_field">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{3D1087B9-43FE-4448-9E10-A38FA8D5CE05}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="packageCode">
      <DTS:VariableValue
        DTS:DataType="8">2060</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{B62B2C82-376B-41E3-94B9-9FEAE62F0CD2}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="pk_col_no">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{6F0E1BA1-0B42-4CE4-88F7-7A43705AB052}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="resultFlag">
      <DTS:VariableValue
        DTS:DataType="8">OK</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{7AC91EDC-A379-43AC-B577-741FA4E2D095}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="rowCount">
      <DTS:VariableValue
        DTS:DataType="20">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{9AE35F0C-A3AF-4568-AED7-2DFB07728402}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="SELECT_CHECKS_Qry">
      <DTS:VariableValue
        DTS:DataType="8">SELECT [ファイル名],[エクステンション],[区切タイプ],[フィールド数],[必要項目号],[プライマリキー号],[固定長チェック号],[固定長],[マックス桁数号],[マックス桁数],[ディフォルトチェック号],[ディフォルト値],[データ型チェック号],[データ型],[データ有無チェック] FROM KANSHI_JUSHIN_DATA_KENSYO_CONFIG WHERE 削除フラグ='0'</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{BB09FC6E-9503-4D46-B8A0-13FA242E2F96}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="sysDate">
      <DTS:VariableValue
        DTS:DataType="7">9/7/2016 7:28:09 PM</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:LoggingOptions
    DTS:FilterKind="0"
    DTS:LoggingMode="1">
    <DTS:Property
      DTS:DataType="8"
      DTS:Name="EventFilter">4,7,OnError,13,OnInformation,12,OnTaskFailed,22,OnVariableValueChanged</DTS:Property>
    <DTS:Property
      DTS:EventName="OnError"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnInformation"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnTaskFailed"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnVariableValueChanged"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:SelectedLogProviders>
      <DTS:SelectedLogProvider
        DTS:InstanceID="{C2B6D6A4-4F50-4126-94FD-2E143E82B493}" />
    </DTS:SelectedLogProviders>
  </DTS:LoggingOptions>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\DONEファイルバックアップする"
      DTS:CreationName="Microsoft.FileSystemTask"
      DTS:Description="File System Task"
      DTS:DTSID="{1757739F-B4C5-4CD4-8E8C-8B6B42E4798A}"
      DTS:ExecutableType="Microsoft.FileSystemTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="DONEファイルバックアップする"
      DTS:TaskContact="File System Task;Microsoft Corporation; SQL Server 2014; © 2014 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:ObjectData>
        <FileSystemData
          TaskOperationType="MoveFile"
          TaskOverwriteDestFile="True"
          TaskSourcePath="User::doneFileFullPath"
          TaskIsSourceVariable="True"
          TaskDestinationPath="User::backupFolder"
          TaskIsDestinationVariable="True" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\エラーチェックの報告書メール"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:Description="Script Task"
      DTS:DTSID="{0BFF412E-FB4B-4D24-9AE5-7AECEC7F3C75}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="エラーチェックの報告書メール"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_0bd102a7f68744b9a11177eb346244fa"
          VSTAMajorVersion="3"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadOnlyVariables="User::connectionString,User::currentDate,User::fileFolder,User::fileFullPath,User::fileName,User::mailFromId,User::mailFromName,User::mailServer,User::packageCode,User::rowCount,User::sysDate"
          ReadWriteVariables="User::boolConfigError,User::resultFlag">
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_0bd102a7f68744b9a11177eb346244fa.Properties.Settings.get_Default():ST_0bd102a7f68744b9a11177eb346244fa.Properties.Sett" +
    "ings")]

namespace ST_0bd102a7f68744b9a11177eb346244fa.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[#region Namespaces
using System;
using System.Data;
using System.Data.SqlClient;
using System.IO;
using System.Net.Mail;
using System.Text;
using System.Net;
#endregion

namespace ST_0bd102a7f68744b9a11177eb346244fa
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Main Method
        /// <summary>
        /// 作成人: イルファンマンスリー
        /// 作成日: 2016-04-20
        /// 説明: This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            string strConnectionString = Dts.Variables["connectionString"].Value.ToString();    //Connection string from variable list
            SqlConnection myConnection = new SqlConnection(strConnectionString);
            string strGyomName = string.Empty;
            string strFilename = Path.GetFileName(Dts.Variables["User::fileFullPath"].Value.ToString()); //Get only File name with extension from path.
            int intFileLineCount = Convert.ToInt32(Dts.Variables["User::rowCount"].Value.ToString());   //Get File rows count
            string strMailServer = Dts.Variables["User::mailServer"].Value.ToString();
            string strMailFromId = Dts.Variables["User::mailFromId"].Value.ToString();
            string strMailFromName = Dts.Variables["User::mailFromName"].Value.ToString();
            string strPackageCode = Dts.Variables["User::packageCode"].Value.ToString();
            string strLogFolderPath = string.Empty;
            DateTime dtCurDate = Convert.ToDateTime(Dts.Variables["User::currentDate"].Value);
            StringBuilder strBrQuery = new StringBuilder();
            StringBuilder ObjSB;
            SqlCommand myCommand;
            string strQuery = string.Empty;
            DataTable DtErrorLog;
            StringBuilder strBuildErrorLog;
            string strTo;
            MailAddress mailFrom;
            MailMessage mailMsg;
            try
            {
                strLogFolderPath = Dts.Variables["User::fileFolder"].Value.ToString().Replace(@"receive\data","Error");
                strGyomName = Dts.Variables["User::fileName"].Value.ToString();
                _connectionOpen(myConnection);  //Open SQL Connection
                ObjSB = new StringBuilder();
                DtErrorLog = new DataTable();
                strBuildErrorLog = new StringBuilder();
                #region Create Mail Body And Send Mail
                SmtpClient emailClient = new SmtpClient(strMailServer);
                emailClient.Port = 587;
                emailClient.Credentials = new NetworkCredential(strMailFromId, "righton0123");
                emailClient.DeliveryMethod = SmtpDeliveryMethod.Network;
                emailClient.EnableSsl = true;
                //emailClient.Credentials = new NetworkCredential("edi", "tani_gami");
                mailFrom = new MailAddress(strMailFromId, strMailFromName);
                mailMsg = new MailMessage();
                mailMsg.From = mailFrom;

                //Start: リターン電子メールアドレス,who will recieve the ERROR_Log mail
                strBrQuery.Clear();
                strBrQuery.Append("SELECT 電子メール FROM [KANSHI_MAIL_ADDRESS]");
                strBrQuery.AppendLine("WHERE ユーザグループ='ERROR' AND 削除フラグ='0'");
                DtErrorLog = _getDataTable(strBrQuery.ToString(), myConnection);
                strTo = string.Empty;
                if (DtErrorLog.Rows.Count > 0)
                {
                    strTo = DtErrorLog.Rows[0]["電子メール"].ToString();
                    DtErrorLog.Reset(); //リセットデータテーブル。
                }
                //End: Get E-mail address, who will recieve the ERROR_Log mail
                #region PACKAGE_ERRORテーブルからエラーログ
                strBrQuery.Clear();
                strBrQuery.Append("SELECT パッケージコード,データ日付,ファイル名,エラー内容,登録日時  ");
                strBrQuery.AppendLine(" FROM KANSHI_PACKAGE_ERROR ");
                strBrQuery.AppendLine(" WHERE パッケージコード='" + strPackageCode + "'AND データ日付='" + dtCurDate + "' AND エラーフラグ = '0'; ");
                DtErrorLog = _getDataTable(strBrQuery.ToString(), myConnection);
                if (DtErrorLog.Rows.Count > 0)
                {
                    strBuildErrorLog.Clear();
                    for (int intI = 0; intI < DtErrorLog.Rows.Count; intI++)
                    {
                        strBuildErrorLog.Append(DtErrorLog.Rows[intI]["エラー内容"] + " " + DtErrorLog.Rows[intI]["登録日時"] + Environment.NewLine);
                    }
                    #region Create Log file
                    //create Log file only if any error occured.
                    if (Directory.Exists(strLogFolderPath))
                    {
                        if (File.Exists(strLogFolderPath + @"\" + strGyomName + "_JUSHINCHECK_ERROR_" + dtCurDate.ToString("yyyyMMdd") + ".txt"))
                        {
                            File.Delete(strLogFolderPath + @"\" + strGyomName + "_JUSHINCHECK_ERROR_" + dtCurDate.ToString("yyyyMMdd") + ".txt");
                        }
                        File.Create(strLogFolderPath + @"\" + strGyomName + "_JUSHINCHECK_ERROR_" + dtCurDate.ToString("yyyyMMdd") + ".txt").Close();

                        System.IO.StreamWriter file = new System.IO.StreamWriter(strLogFolderPath + @"\" + strGyomName + "_JUSHINCHECK_ERROR_" + dtCurDate.ToString("yyyyMMdd") + ".txt");
                        file.WriteLine(strBuildErrorLog.ToString());
                        file.Close();

                        //Attach the created file
                        mailMsg.Attachments.Add(new Attachment(strLogFolderPath + @"\" + strGyomName + "_JUSHINCHECK_ERROR_" + dtCurDate.ToString("yyyyMMdd") + ".txt"));
                    }
                    #endregion
                    //Start: メールボディーにエラーログ内容。
                    strBuildErrorLog.Clear();
                    strBuildErrorLog.Append("本メールは、MINIMDシステムからのお知らせです。<br /> <br />");
                    strBuildErrorLog.Append(strGyomName + "_" + dtCurDate.ToString("yyyyMMdd") + "の受信チェックでエラーが発生しました。<br />");
                    strBuildErrorLog.Append("エラーの内容とエラーデータが添付ファイルで送りいたします。<br /> <br />");
                    strBuildErrorLog.Append("ご確認お願い致します。<br /> <br />");
                    strBuildErrorLog.Append("以上です。<br />");
                    strBuildErrorLog.Append("宜しくお願い致します。<br />");
                    strBuildErrorLog.Append("<br /> <br />");
                    strBuildErrorLog.Append("❖ 受信エラーチェックステータス <br />");
                    #region KANSHI_PACKAGE_ERROR_STATUSテーブルからエラーのステータス
                    strBrQuery.Clear();
                    strBrQuery.Append("SELECT パッケージコード,データ日付,エラーチェックタイプ,行数,ステータス,登録日時 ");
                    strBrQuery.AppendLine(" FROM KANSHI_PACKAGE_ERROR_STATUS ");
                    strBrQuery.AppendLine(" WHERE パッケージコード='" + strPackageCode + "' AND データ日付='" + dtCurDate + "'; ");
                    DtErrorLog = _getDataTable(strBrQuery.ToString(), myConnection);
                    if (DtErrorLog.Rows.Count > 0)
                    {
                        for (int intI = 0; intI < DtErrorLog.Rows.Count; intI++)
                        {
                            strBuildErrorLog.Append(DtErrorLog.Rows[intI]["パッケージコード"] + " " + DtErrorLog.Rows[intI]["登録日時"] + " ");
                            strBuildErrorLog.Append(DtErrorLog.Rows[intI]["エラーチェックタイプ"] + " " + DtErrorLog.Rows[intI]["行数"] + " " + DtErrorLog.Rows[intI]["ステータス"] + "<br />");
                        }
                    }
                    DtErrorLog.Reset(); //Reset Whole package to Re-Use it.
                    #endregion
                    //End: メールボディーとエラーログ内容。
                    mailMsg.To.Add(strTo);
                    mailMsg.Body = strBuildErrorLog.ToString();

                    mailMsg.BodyEncoding = Encoding.UTF8;
                    mailMsg.Subject = "【MINI-MD】受信チェックエラー_" + Path.GetFileNameWithoutExtension(Dts.Variables["User::fileFullPath"].Value.ToString());
                    mailMsg.SubjectEncoding = Encoding.UTF8;
                    mailMsg.IsBodyHtml = true;
                    emailClient.Send(mailMsg);
                }
                DtErrorLog.Reset(); //Reset Whole package to Re-Use it.
                #endregion

                #endregion
                Dts.TaskResult = (int)ScriptResults.Success;
            }
            #region "CATCH/FINALLY"
            catch (Exception ex)
            {
                //システムエラーの場合。
                strBrQuery.Clear();
                strBrQuery.Append("INSERT INTO ");
                strBrQuery.Append("KANSHI_PACKAGE_ERROR([パッケージコード],[データ日付],[エラー日時],[ファイル名],[エラー内容],[行数],[エラーフラグ]) ");
                strBrQuery.Append("VALUES('" + strPackageCode + "','" + dtCurDate + "','" + Dts.Variables["sysDate"].Value.ToString() + "','" + strFilename + "','システムエラー: " + ex.Message.Replace("'","-") + "','" + intFileLineCount + "',1);");
                _connectionOpen(myConnection);  //Open only if it is open
                myCommand = new SqlCommand(strBrQuery.ToString(), myConnection);
                myCommand.ExecuteNonQuery();
                Dts.Variables["User::resultFlag"].Value = "NG";
                //Dts.Variables["User::boolConfigError"].Value = true;
                Dts.TaskResult = (int)ScriptResults.Success;
            }
            finally
            {
                _connectionClose(myConnection);
                strConnectionString = null;
                myCommand = null;
                myConnection = null;
                strFilename = null;
                strBrQuery = null;
                ObjSB = null;
                strQuery = null;
                DtErrorLog = null;
                strLogFolderPath = null;
                strBuildErrorLog = null;
                strPackageCode = null;
                strTo = null;
                mailFrom = null;
                mailMsg = null;
                strGyomName = null;
            }
            #endregion
        }
        #endregion

        #region Select Data From DB
        /// <summary>
        /// 作成人: イルファンマンスリー
        /// 作成日: 2016-04-20
        /// 説明: Select Data in Data table format from Db.
        /// </summary>
        public DataTable _getDataTable(string strQuery, SqlConnection myConnection)
        {
            DataTable objDT = new DataTable();
            StringBuilder strBrQuery = new StringBuilder();
            SqlCommand myCommand;
            DateTime dtCurDate = Convert.ToDateTime(Dts.Variables["User::currentDate"].Value);
            string strFilename = Path.GetFileName(Dts.Variables["User::fileFullPath"].Value.ToString()); //ファイル名だけ。
            int intFileLineCount = Convert.ToInt32(Dts.Variables["User::rowCount"].Value.ToString());   //ヴァリアブルからリターン行数。
            string strPackageCode = Dts.Variables["User::packageCode"].Value.ToString();    //ファイル号リターン。
            try
            {
                //ＤＢからリターンデータテーブル。
                _connectionOpen(myConnection);
                myCommand = new SqlCommand(strQuery, myConnection);
                myCommand.CommandType = CommandType.Text;
                SqlDataAdapter sqlSelectData = new SqlDataAdapter();
                sqlSelectData.SelectCommand = myCommand;
                sqlSelectData.Fill(objDT);
            }
            #region "CATCH/FINALLY"
            catch (Exception ex)
            {
                //システムエラーの場合。
                strBrQuery.Clear();
                strBrQuery.Append("INSERT INTO ");
                strBrQuery.Append("KANSHI_PACKAGE_ERROR([パッケージコード],[データ日付],[エラー日時],[ファイル名],[エラー内容],[行数],[エラーフラグ]) ");
                strBrQuery.Append("VALUES('" + strPackageCode + "','" + dtCurDate + "','" + Dts.Variables["User::sysDate"].Value.ToString() + "','" + strFilename + "','システムエラー: " + ex.Message.Replace("'","-") + "','" + intFileLineCount + "',1);");
                _connectionOpen(myConnection);
                myCommand = new SqlCommand(strBrQuery.ToString(), myConnection);
                myCommand.ExecuteNonQuery();
                Dts.Variables["User::resultFlag"].Value = "NG";
                Dts.Variables["User::boolConfigError"].Value = true;
                Dts.TaskResult = (int)ScriptResults.Success;
            }
            finally
            {
                myConnection = null;
                strBrQuery = null;
                myCommand = null;
                strFilename = null;
                strPackageCode = null;
            }
            #endregion
            return objDT;
        }
        #endregion

        #region Connection Open
        private void _connectionOpen(SqlConnection myConnection)
        {
            if (myConnection.State != ConnectionState.Open)
            {
                myConnection.Open();
            }
        }
        #endregion

        #region Connection Close
        private void _connectionClose(SqlConnection myConnection)
        {
            if (myConnection.State != ConnectionState.Closed)
            {
                myConnection.Close();
            }
        }
        #endregion

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion
	}
}]]></ProjectItem>
          <ProjectItem
            Name="ST_0bd102a7f68744b9a11177eb346244fa.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{de071a2c-d1c2-4a7e-84a1-badcdcf05aef}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_0bd102a7f68744b9a11177eb346244fa</RootNamespace>
    <AssemblyName>ST_0bd102a7f68744b9a11177eb346244fa</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>

  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>

  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
         <Generator>ResXFileCodeGenerator</Generator>
         <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
             <AutoGen>True</AutoGen>
         <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
         <Generator>SettingsSingleFileGenerator</Generator>
         <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
         <AutoGen>True</AutoGen>
         <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
         <SubType>Code</SubType>
    </Compile>
  </ItemGroup>

  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />

  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptTask"
                           HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}"
                           ApplicationType="usd"
                           Language="cs"
                           TemplatesPath=""
                           DebugInfoExeName="#HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\VisualStudio\10.0\InstallDir#\devenv.exe"
                           DebugInfoCommandLine=""
                           DebugInfoWorkingDir=""
                           IconImageList=""/>
        <Host Name="ScriptTask" GeneratedNamespace="$safeprojectname" IconIndex="">
        </Host>
        <ProjectClient>
            <HostIdentifier>SSIS_ST120</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>ST_0bd102a7f68744b9a11177eb346244fa</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>ST_0bd102a7f68744b9a11177eb346244fa</msb:DisplayName>
		<msb:ProjectId>{0D3F138D-02B1-4602-B019-667C0A0A633A}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_0bd102a7f68744b9a11177eb346244fa.csproj"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_0bd102a7f68744b9a11177eb346244fa")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_0bd102a7f68744b9a11177eb346244fa")]
[assembly: AssemblyCopyright("Copyright @  2016")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_0bd102a7f68744b9a11177eb346244fa.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_0bd102a7f68744b9a11177eb346244fa.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_0bd102a7f68744b9a11177eb346244fa.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_0bd102a7f68744b9a11177eb346244fa.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_0bd102a7f68744b9a11177eb346244fa.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_0bd102a7f68744b9a11177eb346244fa.dll">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
AAAAAJkAAAAzAAAAzAAAAEEBAAA6AAABAgAAAJkAAAB2AQAADwIAAA4AAAAAAAAAQgNvWAAAChcu
BgNvWQAACio+A29YAAAKLAYDb1oAAAoqHgIoWwAACioAAAAAAAAAtAAAAM7K774BAAAAkQAAAGxT
eXN0ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4w
LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkjU3lzdGVt
LlJlc291cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQQURQtAAAAEJTSkIB
AAEAAAAAAAwAAAB2NC4wLjMwMzE5AAAAAAUAbAAAAHwGAAAjfgAA6AYAABAKAAAjU3RyaW5ncwAA
AAD4EAAAWAgAACNVUwBQGQAAEAAAACNHVUlEAAAAYBkAAKwCAAAjQmxvYgAAAAAAAAACAAABVx2i
CQkDAAAA+iUzABYAAAEAAABDAAAABQAAAAYAAAAMAAAABQAAAFsAAAACAAAADwAAAAMAAAACAAAA
AwAAAAQAAAABAAAAAQAAAAUAAAABAAAAAQAAAAAACgABAAAAAAAGAMEAugAKAN0AyAAOAD0BFAEG
AFkBugAGAG8BXgEGAKABiwESACsCHwISAEsCNQIGANYCvAIGAAED7wIGABgD7wIGADUD7wIGAFQD
7wIGAG0D7wIGAIYD7wIGAKED7wIGALwD7wIGANUD7wIGAA4E7gMGAC4E7gMGAF8ETAQGAHwEugAG
AIEEugAGAKUE7wIKANEEuwQKAOoEuwQGAP8E7gMOACEFFAEOAEMFFAEWAJwFfAUWALQFfAUGANkF
ugAGAPAF5gUGAAEGugAGABEGugAGADEGJQYKAFcGRwYKAHYGawYKAIgGawYKAKsGRwYKAN8GRwYK
AOsGRwYSABgHHwISADMHHwISAFgHHwIGAG0HugAGAIUH5gUGAJYH5gUGAKIH5gUGALQH5gUGAMEH
5gUGAM4H5gUKAOMHRwYKAAgIRwYGADIIEwgKAEMIRwYGAGkIJQYGAOsIugAGAAEJugASAAcJNQIS
ACUJEgkSAEkJHwISAGUJNQISAIYJEgkGAJkJugASAKEJEgkSAK4JHwIAAAAAAQAAAAAAAQABAAAA
EAAyADwABQABAAEAAAEQAGsAPAAJAAMABQABABAAdAB/AA0ABAAIAAMBAACjAAAAEQAEAA0AEQB/
ARMAEQCsARcAEQD2ATkABgaIAlUAVoCQAlgAVoCYAlgAUCAAAAAAgxi8ARsAAQBYIAAAAACTCMIB
HwABAJEgAAAAAJMI1gEkAAEAmCAAAAAAkwjiASkAAQCgIAAAAACWCAYCPQACALMgAAAAAIYYvAEb
AAIApyAAAAAAkRgaBZcAAgC8IAAAAACGABoCGwACABAqAAAAAIYAWQJHAAIAcCwAAAAAgQBnAk8A
BACBLAAAAACBAHcCTwAFAJEsAAAAAIYYvAEbAAYAAAABAKACAAABAKYCAAACAK8CAAABAK8CAAAB
AK8CSQC8AWYAUQC8AWYAWQC8AWYAYQC8AWYAaQC8AWYAcQC8AWYAeQC8AWYAgQC8AWYAiQC8AWYA
kQC8AWYAmQC8AWsAoQC8ARsAqQC8ARsACQC8ARsAsQCTBHAAsQCuBHcAKQC8AXwAyQC8AYgA2QC8
ARsAEQC8ARsA4QC8ARsAGQBVBZsA6QCmBaAA8QC9BaUA+QDGBasACQDQBa8AQQC8AWYAAQHgBbMA
CQH1BbYAEQEJBrsAEQEaBsAAIQG8ARsAAQE/BscAOQC8ARsAKQG8AWYAKQFiBmsAMQG8Ac0AKQGb
BtMAKQG+BtoAKQHRBuEASQG8Ac0AUQG8ARsAUQH3BuYAIQEAB+0AIQEGB/MAIQENB/MAOQAqB/oA
YQFOBwABWQG9BQQBaQG9BQsBOQBgBxsAAQFmBxABcQF5BxYBeQGPBxoBGQHQBR8BAQFmByQBgQGP
BxoBgQGbByoBgQGtBy8BkQG7BxsAmQG8AWYAoQHZB2YAoQG7BxsAUQH4BzYBsQG8AWYADAA/CEUB
AQFmB0sBUQFZCFMBwQE/CGYAUQFgCGYAyQFyCFkBUQF7CF8BCQGMCLYAAQFmB2YBUQGoCGYAUQG0
CF8BUQHICOEAKQHXCGwB6QDcCGsA0QH1CK8A4QG8AXMB6QEvCQAB+QA/CXoB6QFVCcMB+QG8ARsA
+QF0CcoBAQKUCdEBEQK+CfABEQLICRsAEQK7BxsAGQC8ARsACAAUAFwACAAYAGEAKQCTAI4ALgAb
AGcCLgAjAGcCLgBjAI0CLgALAPYBLgATAD4CLgAzAD4CLgArAGcCLgA7AG0CLgBDAGcCLgBbAIQC
QwBrAGEASQCTAI4AYQCbAGEAgwCrAGEAgwB/AdcBAgABAAMAAwAAAG8BLwAAAO4BNAAAABICQgAC
AAIAAwACAAMABQABAAQABQACAAUABwA8AQSAAAABAAAA/Bj/fQAAAAAAAH8AAAAEAAAAAAAAAAAA
AAABALEAAAAAAAQAAAAAAAAAAAAAAAEAugAAAAAADAAAAAAAAAAAAAAACgD1AAAAAAAEAAAAAAAA
AAAAAAABAB8CAAAAAAwAAAAAAAAAAAAAAAoAXQUAAAAAAAAAAAEAAADNCQAABQAEAAAAAAAAPE1v
ZHVsZT4AU1RfMGJkMTAyYTdmNjg3NDRiOWExMTE3N2ViMzQ2MjQ0ZmEuZGxsAFJlc291cmNlcwBT
VF8wYmQxMDJhN2Y2ODc0NGI5YTExMTc3ZWIzNDYyNDRmYS5Qcm9wZXJ0aWVzAFNldHRpbmdzAFNj
cmlwdE1haW4AU1RfMGJkMTAyYTdmNjg3NDRiOWExMTE3N2ViMzQ2MjQ0ZmEAU2NyaXB0UmVzdWx0
cwBtc2NvcmxpYgBTeXN0ZW0AT2JqZWN0AFN5c3RlbS5Db25maWd1cmF0aW9uAEFwcGxpY2F0aW9u
U2V0dGluZ3NCYXNlAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuU2NyaXB0VGFzawBNaWNyb3NvZnQuU3Fs
U2VydmVyLkR0cy5UYXNrcy5TY3JpcHRUYXNrAFZTVEFSVFNjcmlwdE9iamVjdE1vZGVsQmFzZQBF
bnVtAFN5c3RlbS5SZXNvdXJjZXMAUmVzb3VyY2VNYW5hZ2VyAHJlc291cmNlTWFuAFN5c3RlbS5H
bG9iYWxpemF0aW9uAEN1bHR1cmVJbmZvAHJlc291cmNlQ3VsdHVyZQAuY3RvcgBnZXRfUmVzb3Vy
Y2VNYW5hZ2VyAGdldF9DdWx0dXJlAHNldF9DdWx0dXJlAEN1bHR1cmUAZGVmYXVsdEluc3RhbmNl
AGdldF9EZWZhdWx0AERlZmF1bHQATWFpbgBTeXN0ZW0uRGF0YQBEYXRhVGFibGUAU3lzdGVtLkRh
dGEuU3FsQ2xpZW50AFNxbENvbm5lY3Rpb24AX2dldERhdGFUYWJsZQBfY29ubmVjdGlvbk9wZW4A
X2Nvbm5lY3Rpb25DbG9zZQB2YWx1ZV9fAFN1Y2Nlc3MARmFpbHVyZQB2YWx1ZQBzdHJRdWVyeQBt
eUNvbm5lY3Rpb24AU3lzdGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBUYXJnZXRGcmFtZXdvcmtBdHRy
aWJ1dGUAU3lzdGVtLlJlZmxlY3Rpb24AQXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3NlbWJseURl
c2NyaXB0aW9uQXR0cmlidXRlAEFzc2VtYmx5Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJs
eUNvbXBhbnlBdHRyaWJ1dGUAQXNzZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29weXJp
Z2h0QXR0cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAEFzc2VtYmx5Q3VsdHVyZUF0
dHJpYnV0ZQBBc3NlbWJseVZlcnNpb25BdHRyaWJ1dGUAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJT
ZXJ2aWNlcwBDb21waWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmls
aXR5QXR0cmlidXRlAFN5c3RlbS5EaWFnbm9zdGljcwBEZWJ1Z2dlck5vblVzZXJDb2RlQXR0cmli
dXRlAFR5cGUAUnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUAQXNzZW1ibHkAZ2V0
X0Fzc2VtYmx5AFN5c3RlbS5Db21wb25lbnRNb2RlbABFZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUA
RWRpdG9yQnJvd3NhYmxlU3RhdGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUALmNjdG9yAFNT
SVNTY3JpcHRUYXNrRW50cnlQb2ludEF0dHJpYnV0ZQBTY3JpcHRPYmplY3RNb2RlbABnZXRfRHRz
AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuTWFuYWdlZERUUwBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5S
dW50aW1lAFZhcmlhYmxlcwBnZXRfVmFyaWFibGVzAFZhcmlhYmxlAGdldF9JdGVtAGdldF9WYWx1
ZQBUb1N0cmluZwBTdHJpbmcARW1wdHkAU3lzdGVtLklPAFBhdGgAR2V0RmlsZU5hbWUAQ29udmVy
dABUb0ludDMyAERhdGVUaW1lAFRvRGF0ZVRpbWUAU3lzdGVtLlRleHQAU3RyaW5nQnVpbGRlcgBS
ZXBsYWNlAFN5c3RlbS5OZXQuTWFpbABTbXRwQ2xpZW50AHNldF9Qb3J0AFN5c3RlbS5OZXQATmV0
d29ya0NyZWRlbnRpYWwASUNyZWRlbnRpYWxzQnlIb3N0AHNldF9DcmVkZW50aWFscwBTbXRwRGVs
aXZlcnlNZXRob2QAc2V0X0RlbGl2ZXJ5TWV0aG9kAHNldF9FbmFibGVTc2wATWFpbEFkZHJlc3MA
TWFpbE1lc3NhZ2UAc2V0X0Zyb20AQ2xlYXIAQXBwZW5kAEFwcGVuZExpbmUARGF0YVJvd0NvbGxl
Y3Rpb24AZ2V0X1Jvd3MASW50ZXJuYWxEYXRhQ29sbGVjdGlvbkJhc2UAZ2V0X0NvdW50AERhdGFS
b3cAUmVzZXQAQ29uY2F0AEVudmlyb25tZW50AGdldF9OZXdMaW5lAERpcmVjdG9yeQBFeGlzdHMA
RmlsZQBEZWxldGUARmlsZVN0cmVhbQBDcmVhdGUAU3RyZWFtAENsb3NlAFN0cmVhbVdyaXRlcgBU
ZXh0V3JpdGVyAFdyaXRlTGluZQBBdHRhY2htZW50Q29sbGVjdGlvbgBnZXRfQXR0YWNobWVudHMA
QXR0YWNobWVudABTeXN0ZW0uQ29sbGVjdGlvbnMuT2JqZWN0TW9kZWwAQ29sbGVjdGlvbmAxAEFk
ZABNYWlsQWRkcmVzc0NvbGxlY3Rpb24AZ2V0X1RvAHNldF9Cb2R5AEVuY29kaW5nAGdldF9VVEY4
AHNldF9Cb2R5RW5jb2RpbmcAR2V0RmlsZU5hbWVXaXRob3V0RXh0ZW5zaW9uAHNldF9TdWJqZWN0
AHNldF9TdWJqZWN0RW5jb2RpbmcAc2V0X0lzQm9keUh0bWwAU2VuZABzZXRfVGFza1Jlc3VsdABF
eGNlcHRpb24AZ2V0X01lc3NhZ2UASW50MzIAU3FsQ29tbWFuZABTeXN0ZW0uRGF0YS5Db21tb24A
RGJDb21tYW5kAEV4ZWN1dGVOb25RdWVyeQBzZXRfVmFsdWUAQ29tbWFuZFR5cGUAc2V0X0NvbW1h
bmRUeXBlAFNxbERhdGFBZGFwdGVyAHNldF9TZWxlY3RDb21tYW5kAERiRGF0YUFkYXB0ZXIARmls
bABCb29sZWFuAERiQ29ubmVjdGlvbgBDb25uZWN0aW9uU3RhdGUAZ2V0X1N0YXRlAE9wZW4AU1Rf
MGJkMTAyYTdmNjg3NDRiOWExMTE3N2ViMzQ2MjQ0ZmEuUHJvcGVydGllcy5SZXNvdXJjZXMucmVz
b3VyY2VzAABxUwBUAF8AMABiAGQAMQAwADIAYQA3AGYANgA4ADcANAA0AGIAOQBhADEAMQAxADcA
NwBlAGIAMwA0ADYAMgA0ADQAZgBhAC4AUAByAG8AcABlAHIAdABpAGUAcwAuAFIAZQBzAG8AdQBy
AGMAZQBzAAAhYwBvAG4AbgBlAGMAdABpAG8AbgBTAHQAcgBpAG4AZwAAJVUAcwBlAHIAOgA6AGYA
aQBsAGUARgB1AGwAbABQAGEAdABoAAAdVQBzAGUAcgA6ADoAcgBvAHcAQwBvAHUAbgB0AAAhVQBz
AGUAcgA6ADoAbQBhAGkAbABTAGUAcgB2AGUAcgAAIVUAcwBlAHIAOgA6AG0AYQBpAGwARgByAG8A
bQBJAGQAACVVAHMAZQByADoAOgBtAGEAaQBsAEYAcgBvAG0ATgBhAG0AZQAAI1UAcwBlAHIAOgA6
AHAAYQBjAGsAYQBnAGUAQwBvAGQAZQAAI1UAcwBlAHIAOgA6AGMAdQByAHIAZQBuAHQARABhAHQA
ZQAAIVUAcwBlAHIAOgA6AGYAaQBsAGUARgBvAGwAZABlAHIAABlyAGUAYwBlAGkAdgBlAFwAZABh
AHQAYQAAC0UAcgByAG8AcgAAHVUAcwBlAHIAOgA6AGYAaQBsAGUATgBhAG0AZQAAF3IAaQBnAGgA
dABvAG4AMAAxADIAMwAAT1MARQBMAEUAQwBUACAA+5ZQW+Ew/DDrMCAARgBSAE8ATQAgAFsASwBB
AE4AUwBIAEkAXwBNAEEASQBMAF8AQQBEAEQAUgBFAFMAUwBdAAFHVwBIAEUAUgBFACAA5jD8MLYw
sDDrMPww1zA9ACcARQBSAFIATwBSACcAIABBAE4ARAAgAEpSZJbVMOkwsDA9ACcAMAAnAAEL+5ZQ
W+Ew/DDrMAFRUwBFAEwARQBDAFQAIADRMMMwsTD8MLgwszD8MMkwLADHMPwwvzDlZdhOLADVMKEw
pDDrMA1ULACoMOkw/DCFUblbLAB7djKT5WVCZiAAIAABNyAARgBSAE8ATQAgAEsAQQBOAFMASABJ
AF8AUABBAEMASwBBAEcARQBfAEUAUgBSAE8AUgAgAAAjIABXAEgARQBSAEUAIADRMMMwsTD8MLgw
szD8MMkwPQAnAAEZJwBBAE4ARAAgAMcw/DC/MOVl2E49ACcAASknACAAQQBOAEQAIACoMOkw/DDV
MOkwsDAgAD0AIAAnADAAJwA7ACAAAQuoMOkw/DCFUblbAQMgAAAJe3Yyk+VlQmYBA1wAACdfAEoA
VQBTAEgASQBOAEMASABFAEMASwBfAEUAUgBSAE8AUgBfAAAReQB5AHkAeQBNAE0AZABkAAAJLgB0
AHgAdAAATyxn4TD8MOswbzABME0ASQBOAEkATQBEALcwuTDGMOAwSzCJMG4wSjDld4kwWzBnMFkw
AjA8AGIAcgAgAC8APgAgADwAYgByACAALwA+AAEDXwAAM24w11PhT8EwpzDDMK8wZzCoMOkw/DBM
MHp2H3VXMH4wVzBfMAIwPABiAHIAIAAvAD4AAVWoMOkw/DBuMIVRuVtoMKgw6TD8MMcw/DC/MEww
+23YTtUwoTCkMOswZzABkIowRDBfMFcwfjBZMAIwPABiAHIAIAAvAD4AIAA8AGIAcgAgAC8APgAB
MVQwuniNikowWJhEMPSBVzB+MFkwAjA8AGIAcgAgAC8APgAgADwAYgByACAALwA+AAEX5U4KTmcw
WTACMDwAYgByACAALwA+AAEjnFtXME8wSjBYmEQw9IFXMH4wWTACMDwAYgByACAALwA+AAEbPABi
AHIAIAAvAD4AIAA8AGIAcgAgAC8APgAAL1YnIADXU+FPqDDpMPwwwTCnMMMwrzC5MMYw/DC/MLkw
IAA8AGIAcgAgAC8APgABX1MARQBMAEUAQwBUACAA0TDDMLEw/DC4MLMw/DDJMCwAxzD8ML8w5WXY
TiwAqDDpMPwwwTCnMMMwrzC/MKQw1zAsAEyIcGUsALkwxjD8ML8wuTAsAHt2MpPlZUJmIAABRSAA
RgBSAE8ATQAgAEsAQQBOAFMASABJAF8AUABBAEMASwBBAEcARQBfAEUAUgBSAE8AUgBfAFMAVABB
AFQAVQBTACAAABsnACAAQQBOAEQAIADHMPwwvzDlZdhOPQAnAAEHJwA7ACAAARHRMMMwsTD8MLgw
szD8MMkwARWoMOkw/DDBMKcwwzCvML8wpDDXMAEFTIhwZQELuTDGMPwwvzC5MAENPABiAHIAIAAv
AD4AACcQME0ASQBOAEkALQBNAEQAETDXU+FPwTCnMMMwrzCoMOkw/DBfAAEZSQBOAFMARQBSAFQA
IABJAE4AVABPACAAAICfSwBBAE4AUwBIAEkAXwBQAEEAQwBLAEEARwBFAF8ARQBSAFIATwBSACgA
WwDRMMMwsTD8MLgwszD8MMkwXQAsAFsAxzD8ML8w5WXYTl0ALABbAKgw6TD8MOVlQmZdACwAWwDV
MKEwpDDrMA1UXQAsAFsAqDDpMPwwhVG5W10ALABbAEyIcGVdACwAWwCoMOkw/DDVMOkwsDBdACkA
IAABEVYAQQBMAFUARQBTACgAJwABBycALAAnAAEPcwB5AHMARABhAHQAZQAAGScALAAnALcwuTDG
MOAwqDDpMPwwOgAgAAEDJwABAy0AAQsnACwAMQApADsAASFVAHMAZQByADoAOgByAGUAcwB1AGwA
dABGAGwAYQBnAAAFTgBHAAAbVQBzAGUAcgA6ADoAcwB5AHMARABhAHQAZQAAK1UAcwBlAHIAOgA6
AGIAbwBvAGwAQwBvAG4AZgBpAGcARQByAHIAbwByAAAAADf6ZMKx0JpLrCE3kwWQhSwACLd6XFYZ
NOCJCImEXc2AgMyRAwYSFQMGEhkDIAABBAAAEhUEAAASGQUAAQESGQQIABIVBAgAEhkDBhIMBAAA
EgwECAASDAcgAhIdDhIhBSABARIhAgYIAwYRFAQAAAAABAEAAAAEIAEBDgQgAQEIBgABElkRXQQg
ABJhBiACAQ4SYQQHARIVBSABARFpCAEAAgAAAAAAAwAAAQQgABJ1BCAAEnkFIAESfRwDIAAcAyAA
DgIGDgQAAQ4OBAABCA4GAAERgI0cBSACDg4OBSACAQ4OBiABARKAnQYgAQERgKEEIAEBAgYgAQES
gKUFIAASgJEGIAESgJEOBSAAEoCtAyAACAYgARKAtQgEIAEcDgUAAQ4dHAMAAA4EAAECDgQgAQ4O
BQABDh0OBAABAQ4GAAESgMUOBSAAEoDVCBUSgN0BEoDZBSABARMABwAEDg4ODg4FIAASgOEFAAAS
gOUGIAEBEoDlBQACDg4OBiABARKAqQYgAgEOEiEEIAEBHEMHIg4SIQ4OCA4ODg4OEYCNEoCREoDx
Eh0SgJEOEoClEoCpEoCVCBKAzQgSgOkdHB0cHQ4dDh0OHQ4dDh0cHRwdHB0cBiABARGA+QYgAQES
gPEFIAEIEh0YBwoSHRKAkRKA8RGAjQ4IDhKA/RKA6R0cBSAAEYENRwEAGi5ORVRGcmFtZXdvcmss
VmVyc2lvbj12NC4wAQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRAuTkVUIEZyYW1ld29yayA0KAEA
I1NUXzBiZDEwMmE3ZjY4NzQ0YjlhMTExNzdlYjM0NjI0NGZhAAAFAQAAAAAWAQARQ29weXJpZ2h0
IEAgIDIwMTYAAAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwGMSQAAAAAA
AAAAAACuSQAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAoEkAAAAAAAAAAAAAAAAAAAAAAAAAAF9D
b3JEbGxNYWluAG1zY29yZWUuZGxsAAAAAAD/JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAEAAAABgA
AIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgAAABYYAAAsAMA
AAAAAAAAAAAAsAM0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAAAL0E7/4AAAEA
AAABAP99/BgAAAEA/338GD8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAAAQBWAGEAcgBG
AGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAAAAAAAACwBBAD
AAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAAOwCAAABADAAMAAwADAAMAA0AGIAMAAA
AHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABTAFQAXwAwAGIAZAAxADAA
MgBhADcAZgA2ADgANwA0ADQAYgA5AGEAMQAxADEANwA3AGUAYgAzADQANgAyADQANABmAGEAAABA
AA8AAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4ANgAzADkANgAuADMAMgAyADUA
NQAAAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAFQAXwAwAGIAZAAxADAAMgBh
ADcAZgA2ADgANwA0ADQAYgA5AGEAMQAxADEANwA3AGUAYgAzADQANgAyADQANABmAGEALgBkAGwA
bAAAAEgAEgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBwAHkAcgBpAGcAaAB0
ACAAQAAgACAAMgAwADEANgAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBtAGUA
AABTAFQAXwAwAGIAZAAxADAAMgBhADcAZgA2ADgANwA0ADQAYgA5AGEAMQAxADEANwA3AGUAYgAz
ADQANgAyADQANABmAGEALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAAAAAA
UwBUAF8AMABiAGQAMQAwADIAYQA3AGYANgA4ADcANAA0AGIAOQBhADEAMQAxADcANwBlAGIAMwA0
ADYAMgA0ADQAZgBhAAAARAAPAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAuADAA
LgA2ADMAOQA2AC4AMwAyADIANQA1AAAAAABIAA8AAQBBAHMAcwBlAG0AYgBsAHkAIABWAGUAcgBz
AGkAbwBuAAAAMQAuADAALgA2ADMAOQA2AC4AMwAyADIANQA1AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAADAAAAMA5AAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\セットファイル名"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:Description="Script Task"
      DTS:DTSID="{562C2358-5E58-40FC-818A-40BAD670FC23}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="セットファイル名"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_07f35f0445bf4abca832a59b743d21f2"
          VSTAMajorVersion="3"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadOnlyVariables="User::connectionString,User::currentDate,User::fileExtension,User::packageCode"
          ReadWriteVariables="User::boolConfigError,User::fileFolder,User::fileFullPath,User::fileName,User::resultFlag,User::rowCount,User::SELECT_CHECKS_Qry,User::sysDate">
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="ST_07f35f0445bf4abca832a59b743d21f2.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{5fce33ba-88a8-43f8-ac3e-53a87339f1cb}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_07f35f0445bf4abca832a59b743d21f2</RootNamespace>
    <AssemblyName>ST_07f35f0445bf4abca832a59b743d21f2</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>

  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>

  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
         <Generator>ResXFileCodeGenerator</Generator>
         <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
             <AutoGen>True</AutoGen>
         <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
         <Generator>SettingsSingleFileGenerator</Generator>
         <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
         <AutoGen>True</AutoGen>
         <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
         <SubType>Code</SubType>
    </Compile>
  </ItemGroup>

  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />

  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptTask"
                           HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}"
                           ApplicationType="usd"
                           Language="cs"
                           TemplatesPath=""
                           DebugInfoExeName="#HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\VisualStudio\10.0\InstallDir#\devenv.exe"
                           DebugInfoCommandLine=""
                           DebugInfoWorkingDir=""
                           IconImageList=""/>
        <Host Name="ScriptTask" GeneratedNamespace="$safeprojectname" IconIndex="">
        </Host>
        <ProjectClient>
            <HostIdentifier>SSIS_ST120</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using System.Data.SqlClient;
using System.Text;
#endregion

namespace ST_07f35f0445bf4abca832a59b743d21f2
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region "Main Method"
        /// <summary>
        /// 作成人: イルファンマンスリー
        /// 作成日: 2016-04-20
        /// 説明: This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            SqlConnection myConnection;
            SqlCommand myCommand;
            string strfileName = Dts.Variables["User::fileName"].Value.ToString();
            string strConnectionString = Dts.Variables["connectionString"].Value.ToString();
            DateTime dtCurDate = Convert.ToDateTime(Dts.Variables["User::currentDate"].Value);
            string strQuery;
            StringBuilder strBuildInsertQry = new StringBuilder();
            myConnection = new SqlConnection(strConnectionString);
            Dts.Variables["User::sysDate"].Value = DateTime.Now;    //To define the Package initiation time,
            try
            {
                //Dts.Variables["User::rowCount"].Value = Convert.ToInt64(File.ReadAllLines(strfilePath).Length);  //リータン全体ファイルの行数。
                strQuery = Dts.Variables["SELECT_CHECKS_Qry"].Value.ToString();
                Dts.Variables["SELECT_CHECKS_Qry"].Value = strQuery + "AND ファイル名 = '" + strfileName + "';";
                Dts.TaskResult = (int)ScriptResults.Success;
            }
            #region CATCH/FINALLY
            catch (Exception ex)
            {
                //システムエラーの場合。
                strBuildInsertQry.Append("INSERT INTO ");
                strBuildInsertQry.Append("KANSHI_PACKAGE_ERROR([パッケージコード],[データ日付],[エラー日時],[ファイル名],[行数],[エラー内容],[エラーフラグ]) ");
                strBuildInsertQry.Append("VALUES('" + Dts.Variables["User::packageCode"].Value + "','" + dtCurDate + "','" + Dts.Variables["User::sysDate"].Value.ToString() + "','" + strfileName + "','" + Dts.Variables["User::rowCount"].Value.ToString() + "','システムエラー: " + ex.Message.Replace("'", "-") + "',1);");
                if (myConnection.State == ConnectionState.Closed)
                {
                    myConnection.Open();
                }
                myCommand = new SqlCommand(strBuildInsertQry.ToString(), myConnection);
                myCommand.ExecuteNonQuery();
                myConnection.Close();
                Dts.Variables["User::resultFlag"].Value = "NG";
                Dts.Variables["User::boolConfigError"].Value = true;    //PACKAGE_ERROR_STATUSテーブルのシステムエラーフラグの更新。
                Dts.TaskResult = (int)ScriptResults.Success;
            }
            finally
            {
                strQuery = null;
                strBuildInsertQry = null;
                myConnection = null;
                myCommand = null;
                strfileName = null;
                strConnectionString = null;
            }
            #endregion
        }
        #endregion

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>ST_07f35f0445bf4abca832a59b743d21f2</msb:CodeName>
		<msb:DisplayName>ST_07f35f0445bf4abca832a59b743d21f2</msb:DisplayName>
		<msb:ProjectId>{B1C460C5-2841-4657-ABF2-1E1B6A24E076}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_07f35f0445bf4abca832a59b743d21f2.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_07f35f0445bf4abca832a59b743d21f2.Properties.Settings.get_Default():ST_07f35f0445bf4abca832a59b743d21f2.Properties.Sett" +
    "ings")]

namespace ST_07f35f0445bf4abca832a59b743d21f2.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_07f35f0445bf4abca832a59b743d21f2")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_07f35f0445bf4abca832a59b743d21f2")]
[assembly: AssemblyCopyright("Copyright @  2016")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_07f35f0445bf4abca832a59b743d21f2.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_07f35f0445bf4abca832a59b743d21f2.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_07f35f0445bf4abca832a59b743d21f2.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_07f35f0445bf4abca832a59b743d21f2.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_07f35f0445bf4abca832a59b743d21f2.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_07f35f0445bf4abca832a59b743d21f2.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAJPw4FcAAAAAAAAAAOAAAiELAQsAABYAAAAIAAAAAAAAzjQA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAHw0AABPAAAAAEAAAAgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAA1BQAAAAgAAAAFgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAAgEAAAAQAAAAAYAAAAYAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAHgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAACw
NAAAAAAAAEgAAAACAAUAQCQAADwQAAABAAAAAAAAAIgjAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKA4AAAoqEzACAC0AAAABAAARfgEAAAQtIHIBAABw0AIA
AAIoDwAACm8QAAAKcxEAAAoKBoABAAAEfgEAAAQqGn4CAAAEKh4CgAIAAAQqGn4DAAAEKi5zBgAA
BoADAAAEKh4CKBQAAAoqABswBgB+AgAAAgAAEQIoFgAACm8XAAAKcnMAAHBvGAAACm8ZAAAKbxoA
AAoMAigWAAAKbxcAAApykQAAcG8YAAAKbxkAAApvGgAACg0CKBYAAApvFwAACnKzAABwbxgAAApv
GQAACigbAAAKEwRzHAAAChMGCXMdAAAKCgIoFgAACm8XAAAKctcAAHBvGAAACigeAAAKjB8AAAFv
HwAACgIoFgAACm8XAAAKcvMAAHBvGAAACm8ZAAAKbxoAAAoTBQIoFgAACm8XAAAKcvMAAHBvGAAA
ChEFchcBAHAIcjMBAHAoIAAACm8fAAAKAigWAAAKFm8hAAAK3XsBAAATBxEGcjkBAHBvIgAACiYR
BnJTAQBwbyIAAAomEQYfDY0BAAABEwgRCBZy9AEAcKIRCBcCKBYAAApvFwAACnIGAgBwbxgAAApv
GQAACqIRCBhyKgIAcKIRCBkRBIwfAAABohEIGnIqAgBwohEIGwIoFgAACm8XAAAKctcAAHBvGAAA
Cm8ZAAAKbxoAAAqiEQgccioCAHCiEQgdCKIRCB5yKgIAcKIRCB8JAigWAAAKbxcAAApyMgIAcG8Y
AAAKbxkAAApvGgAACqIRCB8KclACAHCiEQgfCxEHbyMAAApyagIAcHJuAgBwbyQAAAqiEQgfDHJy
AgBwohEIKCUAAApvIgAACiYGbyYAAAotBgZvJwAAChEGbxoAAAoGcygAAAoLB28pAAAKJgZvKgAA
CgIoFgAACm8XAAAKcn4CAHBvGAAACnKgAgBwbx8AAAoCKBYAAApvFwAACnKmAgBwbxgAAAoXjCgA
AAFvHwAACgIoFgAAChZvIQAACt4A3g8UEwUUEwYUChQLFAwUDdwqAABBNAAAAAAAAJMAAABeAAAA
8QAAAHsBAAAjAAABAgAAAJMAAADbAQAAbgIAAA8AAAAAAAAAHgIoKwAACioAAAAAtAAAAM7K774B
AAAAkQAAAGxTeXN0ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lv
bj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUw
ODkjU3lzdGVtLlJlc291cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQQURQ
tAAAAEJTSkIBAAEAAAAAAAwAAAB2NC4wLjMwMzE5AAAAAAUAbAAAAHAEAAAjfgAA3AQAAMwGAAAj
U3RyaW5ncwAAAACoCwAA1AIAACNVUwB8DgAAEAAAACNHVUlEAAAAjA4AALABAAAjQmxvYgAAAAAA
AAACAAABVx2iAQkDAAAA+iUzABYAAAEAAAAoAAAABQAAAAYAAAAJAAAAAQAAACsAAAACAAAADwAA
AAIAAAACAAAAAwAAAAQAAAABAAAABQAAAAEAAAABAAAAAAAKAAEAAAAAAAYAwQC6AAoA3QDIAA4A
PQEUAQYAWQG6AAYAbwFeAQYAoAGLAQYAVwI9AgYAggJwAgYAmQJwAgYAtgJwAgYA1QJwAgYA7gJw
AgYABwNwAgYAIgNwAgYAPQNwAgYAVgNwAgYAjwNvAwYArwNvAwYA4APNAwYA/QO6AAYAAgS6AAYA
JgRwAgoAUgQ8BAoAawQ8BAYAgARvAw4AogQUAQ4AxAQUARIAHQX9BBIANQX9BAYAWgW6AAYAYgW6
AAYAggV2BRYAsgWcBQYA0gW6AAYA9gW6ABYAJwYUBhYANAaQBRYAUwacBRYAXgYUBgYAfga6AAAA
AAABAAAAAAABAAEAAAAQADIAPAAFAAEAAQAAARAAawA8AAkAAwAFAAEAEAB0AH8ADQAEAAgAAwEA
AKMAAAARAAQACgARAH8BEwARAKwBFwARAPYBOQAGBh8CRwBWgCcCSgBWgC8CSgBQIAAAAACDGLwB
GwABAFggAAAAAJMIwgEfAAEAkSAAAAAAkwjWASQAAQCYIAAAAACTCOIBKQABAKAgAAAAAJYIBgI9
AAIAsyAAAAAAhhi8ARsAAgCnIAAAAACRGJsEiQACALwgAAAAAIYAGgIbAAIAfCMAAAAAhhi8ARsA
AgAAAAEANwI5ALwBWABBALwBWABJALwBWABRALwBWABZALwBWABhALwBWABpALwBWABxALwBWAB5
ALwBWACBALwBWACJALwBXQCRALwBGwCZALwBGwAJALwBGwChABQEYgChAC8EaQApALwBbgC5ALwB
egDJALwBGwARALwBGwDRALwBGwAZANYEjQDZACcFkgDhAD4FlwDpAEcFnQAJAFEFoQDxAGsFpQAB
AbwBGwAJAbwBWAD5AMAFqwDpAMgFsAARAdkFtQDZAOAFXQABAe8FvQAZAQAGoQARAQwGxAARAdkF
ygAhAUQG0AAhAU4GGwAxAbwB1gA5AWgG3gAhAXgGGwAZALwBGwAIABQATgAIABgAUwApAJMAgAAu
ABsAaQEuACMAaQEuAGMAjwEuAAsA+AAuABMAQAEuADMAQAEuACsAaQEuADsAbwEuAEMAaQEuAFsA
hgFDAGsAUwBJAJMAgABhAJsAUwCDAKsAUwB1AOIAAgABAAMAAwAAAG8BLwAAAO4BNAAAABICQgAC
AAIAAwACAAMABQABAAQABQACAAUABwAEgAAAAQAAANsXkXkAAAAAAAB/AAAABAAAAAAAAAAAAAAA
AQCxAAAAAAAEAAAAAAAAAAAAAAABALoAAAAAAAwAAAAAAAAAAAAAAAoA9QAAAAAADAAAAAAAAAAA
AAAACgDeBAAAAAAEAAAAAAAAAAAAAAABAJAFAAAAAAAAAAABAAAAhgYAAAUABAAAAAAAADxNb2R1
bGU+AFNUXzA3ZjM1ZjA0NDViZjRhYmNhODMyYTU5Yjc0M2QyMWYyLmRsbABSZXNvdXJjZXMAU1Rf
MDdmMzVmMDQ0NWJmNGFiY2E4MzJhNTliNzQzZDIxZjIuUHJvcGVydGllcwBTZXR0aW5ncwBTY3Jp
cHRNYWluAFNUXzA3ZjM1ZjA0NDViZjRhYmNhODMyYTU5Yjc0M2QyMWYyAFNjcmlwdFJlc3VsdHMA
bXNjb3JsaWIAU3lzdGVtAE9iamVjdABTeXN0ZW0uQ29uZmlndXJhdGlvbgBBcHBsaWNhdGlvblNl
dHRpbmdzQmFzZQBNaWNyb3NvZnQuU3FsU2VydmVyLlNjcmlwdFRhc2sATWljcm9zb2Z0LlNxbFNl
cnZlci5EdHMuVGFza3MuU2NyaXB0VGFzawBWU1RBUlRTY3JpcHRPYmplY3RNb2RlbEJhc2UARW51
bQBTeXN0ZW0uUmVzb3VyY2VzAFJlc291cmNlTWFuYWdlcgByZXNvdXJjZU1hbgBTeXN0ZW0uR2xv
YmFsaXphdGlvbgBDdWx0dXJlSW5mbwByZXNvdXJjZUN1bHR1cmUALmN0b3IAZ2V0X1Jlc291cmNl
TWFuYWdlcgBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQBDdWx0dXJlAGRlZmF1bHRJbnN0YW5jZQBn
ZXRfRGVmYXVsdABEZWZhdWx0AE1haW4AdmFsdWVfXwBTdWNjZXNzAEZhaWx1cmUAdmFsdWUAU3lz
dGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUAU3lzdGVtLlJl
ZmxlY3Rpb24AQXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0cmli
dXRlAEFzc2VtYmx5Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1
dGUAQXNzZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmlidXRlAEFz
c2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAEFzc2VtYmx5Q3VsdHVyZUF0dHJpYnV0ZQBBc3NlbWJs
eVZlcnNpb25BdHRyaWJ1dGUAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBDb21waWxh
dGlvblJlbGF4YXRpb25zQXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAFN5
c3RlbS5EaWFnbm9zdGljcwBEZWJ1Z2dlck5vblVzZXJDb2RlQXR0cmlidXRlAFR5cGUAUnVudGlt
ZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUAQXNzZW1ibHkAZ2V0X0Fzc2VtYmx5AFN5c3Rl
bS5Db21wb25lbnRNb2RlbABFZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxl
U3RhdGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUALmNjdG9yAFNTSVNTY3JpcHRUYXNrRW50
cnlQb2ludEF0dHJpYnV0ZQBTY3JpcHRPYmplY3RNb2RlbABnZXRfRHRzAE1pY3Jvc29mdC5TcWxT
ZXJ2ZXIuTWFuYWdlZERUUwBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5SdW50aW1lAFZhcmlhYmxl
cwBnZXRfVmFyaWFibGVzAFZhcmlhYmxlAGdldF9JdGVtAGdldF9WYWx1ZQBUb1N0cmluZwBDb252
ZXJ0AERhdGVUaW1lAFRvRGF0ZVRpbWUAU3lzdGVtLlRleHQAU3RyaW5nQnVpbGRlcgBTeXN0ZW0u
RGF0YQBTeXN0ZW0uRGF0YS5TcWxDbGllbnQAU3FsQ29ubmVjdGlvbgBnZXRfTm93AHNldF9WYWx1
ZQBTdHJpbmcAQ29uY2F0AHNldF9UYXNrUmVzdWx0AEFwcGVuZABFeGNlcHRpb24AZ2V0X01lc3Nh
Z2UAUmVwbGFjZQBTeXN0ZW0uRGF0YS5Db21tb24ARGJDb25uZWN0aW9uAENvbm5lY3Rpb25TdGF0
ZQBnZXRfU3RhdGUAT3BlbgBTcWxDb21tYW5kAERiQ29tbWFuZABFeGVjdXRlTm9uUXVlcnkAQ2xv
c2UAQm9vbGVhbgBTVF8wN2YzNWYwNDQ1YmY0YWJjYTgzMmE1OWI3NDNkMjFmMi5Qcm9wZXJ0aWVz
LlJlc291cmNlcy5yZXNvdXJjZXMAAAAAAHFTAFQAXwAwADcAZgAzADUAZgAwADQANAA1AGIAZgA0
AGEAYgBjAGEAOAAzADIAYQA1ADkAYgA3ADQAMwBkADIAMQBmADIALgBQAHIAbwBwAGUAcgB0AGkA
ZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMAAB1VAHMAZQByADoAOgBmAGkAbABlAE4AYQBtAGUAACFj
AG8AbgBuAGUAYwB0AGkAbwBuAFMAdAByAGkAbgBnAAAjVQBzAGUAcgA6ADoAYwB1AHIAcgBlAG4A
dABEAGEAdABlAAAbVQBzAGUAcgA6ADoAcwB5AHMARABhAHQAZQAAI1MARQBMAEUAQwBUAF8AQwBI
AEUAQwBLAFMAXwBRAHIAeQAAG0EATgBEACAA1TChMKQw6zANVCAAPQAgACcAAQUnADsAARlJAE4A
UwBFAFIAVAAgAEkATgBUAE8AIAAAgJ9LAEEATgBTAEgASQBfAFAAQQBDAEsAQQBHAEUAXwBFAFIA
UgBPAFIAKABbANEwwzCxMPwwuDCzMPwwyTBdACwAWwDHMPwwvzDlZdhOXQAsAFsAqDDpMPww5WVC
Zl0ALABbANUwoTCkMOswDVRdACwAWwBMiHBlXQAsAFsAqDDpMPwwhVG5W10ALABbAKgw6TD8MNUw
6TCwMF0AKQAgAAERVgBBAEwAVQBFAFMAKAAnAAEjVQBzAGUAcgA6ADoAcABhAGMAawBhAGcAZQBD
AG8AZABlAAAHJwAsACcAAR1VAHMAZQByADoAOgByAG8AdwBDAG8AdQBuAHQAABknACwAJwC3MLkw
xjDgMKgw6TD8MDoAIAABAycAAQMtAAELJwAsADEAKQA7AAEhVQBzAGUAcgA6ADoAcgBlAHMAdQBs
AHQARgBsAGEAZwAABU4ARwAAK1UAcwBlAHIAOgA6AGIAbwBvAGwAQwBvAG4AZgBpAGcARQByAHIA
bwByAAAAAHutEgEgPe5IuIJMuaNaJDcACLd6XFYZNOCJCImEXc2AgMyRAwYSFQMGEhkDIAABBAAA
EhUEAAASGQUAAQESGQQIABIVBAgAEhkDBhIMBAAAEgwECAASDAIGCAMGERQEAAAAAAQBAAAABCAB
AQ4EIAEBCAYAARJREVUEIAASWQYgAgEOElkEBwESFQUgAQERYQgBAAIAAAAAAAMAAAEEIAASbQQg
ABJxBSABEnUcAyAAHAMgAA4FAAERfRwEAAARfQQgAQEcBwAEDg4ODg4GIAESgIEOBSACDg4OBQAB
Dh0cBSAAEYCVByACAQ4SgIUDIAAIFQcJEoCFEoCZDg4RfQ4SgIESgI0dHEcBABouTkVURnJhbWV3
b3JrLFZlcnNpb249djQuMAEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUQLk5FVCBGcmFtZXdvcmsg
NCgBACNTVF8wN2YzNWYwNDQ1YmY0YWJjYTgzMmE1OWI3NDNkMjFmMgAABQEAAAAAFgEAEUNvcHly
aWdodCBAICAyMDE2AAAIAQAIAAAAAAAeAQABAFQCFldyYXBOb25FeGNlcHRpb25UaHJvd3MBAACk
NAAAAAAAAAAAAAC+NAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAsDQAAAAAAAAAAAAAAABfQ29y
RGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABI
AAAAWEAAALADAAAAAAAAAAAAALADNAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAA
AAC9BO/+AAABAAAAAQCRedsXAAABAJF52xc/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAA
AAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4A
AAAAAAAAsAQQAwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAADsAgAAAQAwADAAMAAw
ADAANABiADAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBUAF8A
MAA3AGYAMwA1AGYAMAA0ADQANQBiAGYANABhAGIAYwBhADgAMwAyAGEANQA5AGIANwA0ADMAZAAy
ADEAZgAyAAAAQAAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADYAMQAwADcA
LgAzADEAMQAyADEAAAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBUAF8AMAA3
AGYAMwA1AGYAMAA0ADQANQBiAGYANABhAGIAYwBhADgAMwAyAGEANQA5AGIANwA0ADMAZAAyADEA
ZgAyAC4AZABsAGwAAABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8AcAB5
AHIAaQBnAGgAdAAgAEAAIAAgADIAMAAxADYAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwA
ZQBuAGEAbQBlAAAAUwBUAF8AMAA3AGYAMwA1AGYAMAA0ADQANQBiAGYANABhAGIAYwBhADgAMwAy
AGEANQA5AGIANwA0ADMAZAAyADEAZgAyAC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4A
YQBtAGUAAAAAAFMAVABfADAANwBmADMANQBmADAANAA0ADUAYgBmADQAYQBiAGMAYQA4ADMAMgBh
ADUAOQBiADcANAAzAGQAMgAxAGYAMgAAAEQADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8A
bgAAADEALgAwAC4ANgAxADAANwAuADMAMQAxADIAMQAAAAAASAAPAAEAQQBzAHMAZQBtAGIAbAB5
ACAAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4ANgAxADAANwAuADMAMQAxADIAMQAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAwAAADQNAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\データ値とデータ型チェック"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:Description="Script Task"
      DTS:DTSID="{3840E9F8-9396-4D95-8410-B6E8BB644BEA}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="データ値とデータ型チェック"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_126a9c8aff694753b46869226f5f18f5"
          VSTAMajorVersion="3"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadOnlyVariables="User::col_boolean_no,User::col_boolean_val,User::col_len,User::col_len_no,User::column_separator,User::connectionString,User::currentDate,User::fileFullPath,User::layout_col_no,User::layout_col_type,User::mandatory_field_no,User::maxLength,User::maxLengthCol,User::packageCode,User::rowCount,User::sysDate"
          ReadWriteVariables="User::boolConfigError,User::faultyRowNum,User::resultFlag">
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_c169d6058fea42c39cce29caa94d0b40")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_c169d6058fea42c39cce29caa94d0b40")]
[assembly: AssemblyCopyright("Copyright @  2014")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="ST_126a9c8aff694753b46869226f5f18f5.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{34D357B8-63DE-4148-81DC-FEFA1E05FFD8}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_c169d6058fea42c39cce29caa94d0b40</RootNamespace>
    <AssemblyName>ST_126a9c8aff694753b46869226f5f18f5</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="#HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\VisualStudio\10.0\InstallDir#\devenv.exe" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST120</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[

#region Namespaces
using System;
using System.Data;
using System.Data.SqlClient;
using System.Globalization;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
#endregion

namespace ST_c169d6058fea42c39cce29caa94d0b40
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region "Main Function"
        /// <summary>
        /// 作成人: イルファンマンスリー
        /// 作成日: 25/03/2016
        /// 説明: 関数は列の固定長とデータ型チェックと固定値チェックと日付チェックする。
        /// </summary>
		public void Main()
        {
            #region "Variable Declaration"
            string strConnectionString = Dts.Variables["connectionString"].Value.ToString();
            SqlConnection myConnection;
            string strFileFullPath = Dts.Variables["User::fileFullPath"].Value.ToString();
            string strFileName = Path.GetFileName(strFileFullPath); //ファイル名だけ。
            string strColumn_Separator = Dts.Variables["column_separator"].Value.ToString();
            string[] strArr_mand_cols = null;
            if (!string.IsNullOrEmpty(Dts.Variables["mandatory_field_no"].Value.ToString()))
            {
                strArr_mand_cols = Dts.Variables["mandatory_field_no"].Value.ToString().Trim().Split(',');
            }
            string[] strArrCol_no_len = null;
            if (!string.IsNullOrEmpty(Dts.Variables["col_len_no"].Value.ToString()))
            {
                strArrCol_no_len = Dts.Variables["col_len_no"].Value.ToString().Trim().Split(',');
            }
            string[] strArrCol_len = null;
            if (!string.IsNullOrEmpty(Dts.Variables["col_len"].Value.ToString()))
            {
                strArrCol_len = Dts.Variables["col_len"].Value.ToString().Trim().Split(',');
            }
            string[] strArrFixed_col_num = null;
            if (!string.IsNullOrEmpty(Dts.Variables["col_boolean_no"].Value.ToString()))
            {
                strArrFixed_col_num = Dts.Variables["col_boolean_no"].Value.ToString().Trim().Split(',');
            }
            string[] strArrFixed_col_val =null;
            if (!string.IsNullOrEmpty(Dts.Variables["col_boolean_val"].Value.ToString()))
            {
                strArrFixed_col_val = Dts.Variables["col_boolean_val"].Value.ToString().Trim().Split(',');
            }
            string[] strArrLayout_col_num =null;
            if (!string.IsNullOrEmpty(Dts.Variables["layout_col_no"].Value.ToString()))
            {
                strArrLayout_col_num = Dts.Variables["layout_col_no"].Value.ToString().Trim().Split(',');
            }
            string[] strArrLayout_col_type=null;
            if (!string.IsNullOrEmpty(Dts.Variables["layout_col_type"].Value.ToString()))
            {
                strArrLayout_col_type = Dts.Variables["layout_col_type"].Value.ToString().Trim().Split(',');
            }
            string[] strArrMax_Len_col = null;
            if (!string.IsNullOrEmpty(Dts.Variables["maxLengthCol"].Value.ToString()))
            {
                strArrMax_Len_col = Dts.Variables["maxLengthCol"].Value.ToString().Trim().Split(',');
            }
            string[] strArrMax_Len = null;
            if (!string.IsNullOrEmpty(Dts.Variables["maxLength"].Value.ToString()))
            {
                strArrMax_Len = Dts.Variables["maxLength"].Value.ToString().Trim().Split(',');
            }
            string strPackageCode = Dts.Variables["User::packageCode"].Value.ToString();
            Int64 intFileLineCount = Convert.ToInt64(Dts.Variables["User::rowCount"].Value.ToString());
            string strFaultyRowsNum = string.Empty; //To Store Faulty/Error occured rows in it.
            bool boolMandatoryCheck = true; //For ERROR_CHECK Status Update
            bool boolFixedLengthCheck = true;   //For ERROR_CHECK Status Update
            bool boolMaxLengthCheck = true;     //For ERROR_CHECK Status Update
            bool boolFixedValueCheck = true;    //For ERROR_CHECK Status Update
            bool boolDataTypeCheck = true;  //For ERROR_CHECK Status Update
            #endregion
            myConnection = new SqlConnection(strConnectionString);
            #region "TRY"
            try
            {
                _connectionOpen(myConnection);
                CultureInfo cultInfoProvider = CultureInfo.InvariantCulture;    //日付のフォーマットチェックなら。
                if (Dts.Variables["User::boolConfigError"].Value.ToString().ToLower() == "false")
                {
                    if (Dts.Variables["User::resultFlag"].Value.ToString() == "OK")
                    {
                        //IF FILe_FORMAT, EXISTANCE and EXTENSION is correct then only this OK will be return.
                        string strLine = string.Empty;
                        StreamReader strReadFile = new StreamReader(strFileFullPath, Encoding.Default);
                        long longRowCount = 0;
                        while ((strLine = strReadFile.ReadLine()) != null)
                        {
                            longRowCount = longRowCount + 1;
                            string[] strArrRow = strLine.Split(Convert.ToChar(strColumn_Separator)); //Each Field SPLIT
                            #region MANDATORY FIELD CHECK
                            if (strArr_mand_cols!=null && strArr_mand_cols.Length != 0)
                            {
                                //string[] strArr_mand_cols = strMandatory_col.Split(',');
                                for (int intM = 0; intM < strArr_mand_cols.Length; intM++)
                                {
                                    int intCol_num = Convert.ToInt32(strArr_mand_cols[intM]);
                                    if (string.IsNullOrEmpty(strArrRow[intCol_num - 1]))
                                    {
                                        //If Defined Column value is been found as NULL/EMPTY
                                        //string strErrorMsg = "必要フィールドエラー。 行:" + longRowCount + ", 列:" + intCol_num + "";
                                        string strErrorMsg = strLine + strColumn_Separator + "列:" + intCol_num + strColumn_Separator + "「必須項目」チェックでエラーが発生しました。";
                                        _errorMsgEntry(strPackageCode, strFileName, strErrorMsg, intFileLineCount, 0, myConnection);   //ERROR Table entry.
                                        strErrorMsg = null;
                                        Dts.Variables["User::resultFlag"].Value = "NG";
                                        boolMandatoryCheck = false; //ERROR Check status as NG
                                        strFaultyRowsNum = strFaultyRowsNum + longRowCount + ",";   //Get Faulty Columns
                                    }
                                }
                            }
                            #endregion

                            #region FIXED COLUMN LENGTH CHECK
                            if (strArrCol_no_len != null && strArrCol_len != null && strArrCol_no_len.Length != 0 && strArrCol_len.Length != 0)
                            {
                                //string[] strArrCol_no_len = strCol_len_no.Split(',');
                                //string[] strArrCol_len = strCol_len.Split(',');
                                if (strArrCol_no_len.Length == strArrCol_len.Length)    //Check Whether CONFIG table UPDATEd or not.
                                {
                                    //CHECK LENGTH
                                    for (int intM = 0; intM < strArrCol_len.Length; intM++)
                                    {
                                        int intCol_num = Convert.ToInt32(strArrCol_no_len[intM]);
                                        if (!string.IsNullOrEmpty(strArrRow[intCol_num - 1].ToString()))
                                        {
                                            if (strArrRow[intCol_num - 1].Length != Convert.ToInt32(strArrCol_len[intM]))
                                            {
                                                //COLUMN Length is not matached. As Defined in Column Table.
                                                //string strErrorMsg = "固定長エラー. 行:" + longRowCount + ", 列:" + intCol_num + "";
                                                string strErrorMsg = strLine + strColumn_Separator + "列:" + intCol_num + strColumn_Separator + "「固定長」チェックでエラーが発生しました。";
                                                _errorMsgEntry(strPackageCode, strFileName, strErrorMsg, intFileLineCount, 0, myConnection); //ERROR Table entry.
                                                strErrorMsg = null;
                                                Dts.Variables["User::resultFlag"].Value = "NG";
                                                boolFixedLengthCheck = false;   //ERROR Check status as NG
                                                strFaultyRowsNum = strFaultyRowsNum + longRowCount + ",";   //Get Faulty Columns
                                            }
                                        }
                                    }
                                }
                                else
                                {
                                    //When Number of List columns and it's length list is not matched.
                                    //Improper Config Table Values set.
                                    string strErrorMsg = "システムエラー：CONFIGに固定長チェックでエラーが発生しました。";
                                    _errorMsgEntry(strPackageCode, strFileName, strErrorMsg, intFileLineCount, 0, myConnection);   //ERROR Table entry.
                                    strErrorMsg = null;
                                    Dts.Variables["User::resultFlag"].Value = "NG";
                                    Dts.Variables["User::boolConfigError"].Value = true;
                                }
                            }
                            #endregion

                            #region MAX LIMIT COLUMN LENGTH CHECK
                            if (strArrMax_Len_col != null && strArrMax_Len != null && strArrMax_Len_col.Length != 0 && strArrMax_Len.Length != 0)
                            {
                                if (strArrMax_Len_col.Length == strArrMax_Len.Length)    //Check Whether CONFIG table UPDATEd or not.
                                {
                                    //CHECK LENGTH
                                    for (int intM = 0; intM < strArrMax_Len.Length; intM++)
                                    {
                                        int intCol_num = Convert.ToInt32(strArrMax_Len_col[intM]);
                                        if (!string.IsNullOrEmpty(strArrRow[intCol_num - 1].ToString()))
                                        {
                                            if (strArrRow[intCol_num - 1].Length > Convert.ToInt32(strArrMax_Len[intM]))
                                            {
                                                //COLUMN Length is not matached. As Defined in Column Table.
                                                //string strErrorMsg = "固定長エラー. 行:" + longRowCount + ", 列:" + intCol_num + "";
                                                string strErrorMsg = strLine + strColumn_Separator + "列:" + intCol_num + strColumn_Separator + "マックス桁数チェックエラー。";
                                                _errorMsgEntry(strPackageCode, strFileName, strErrorMsg, intFileLineCount, 0, myConnection); //ERROR Table entry.
                                                strErrorMsg = null;
                                                Dts.Variables["User::resultFlag"].Value = "NG";
                                                boolMaxLengthCheck = false;   //ERROR Check status as NG
                                                strFaultyRowsNum = strFaultyRowsNum + longRowCount + ",";   //Get Faulty Columns
                                            }
                                        }
                                    }
                                }
                                else
                                {
                                    //When Number of List columns and it's length list is not matched.
                                    //Improper Config Table Values set.
                                    string strErrorMsg = "システムエラー：CONFIGに最大桁数チェックでエラーが発生しました。";
                                    _errorMsgEntry(strPackageCode, strFileName, strErrorMsg, intFileLineCount, 0, myConnection);   //ERROR Table entry.
                                    strErrorMsg = null;
                                    Dts.Variables["User::resultFlag"].Value = "NG";
                                    Dts.Variables["User::boolConfigError"].Value = true;
                                }
                            }
                            #endregion

                            #region FIXED VALUE / BOOLEAN CHECK
                            if (strArrFixed_col_num != null && strArrFixed_col_val!=null && strArrFixed_col_num.Length != 0 && strArrFixed_col_val.Length != 0)
                            {
                                if (strArrFixed_col_num.Length == strArrFixed_col_val.Length)
                                {
                                    //ディフォルト値チェック
                                    for (int intM = 0; intM < strArrFixed_col_num.Length; intM++)
                                    {
                                        int intCol_num = Convert.ToInt32(strArrFixed_col_num[intM].Trim()); //列号
                                        string strTempFlag = string.Empty;

                                        string[] strValues = strArrFixed_col_val[intM].ToString().Trim().Split('|');
                                        //if (strArrRow[intCol_num - 1].ToString() != strArrFixed_col_val[intJ].ToString())
                                        foreach (string val in strValues)
                                        {
                                            if (val.Contains(strArrRow[intCol_num - 1].ToString()))
                                            {
                                                strTempFlag = "OK"; //全体、値チェックのフラグ。
                                            }
                                        }
                                        strValues = null;

                                        if (string.IsNullOrEmpty(strTempFlag.Trim()))
                                        {
                                            //ディフォルト値エラー発生する場合
                                            //string strErrorMsg = "ディフォルト値エラー。行:" + longRowCount + ", 列:" + intCol_num + "";
                                            string strErrorMsg = strLine + strColumn_Separator + "列:" + intCol_num + strColumn_Separator + "「ディフォルト値」チェックでエラーが発生しました。";
                                            _errorMsgEntry(strPackageCode, strFileName, strErrorMsg, intFileLineCount, 0, myConnection); //ERROR Table entry
                                            strErrorMsg = null;
                                            Dts.Variables["User::resultFlag"].Value = "NG";
                                            boolFixedValueCheck = false;    //NGの場合エラーチェックステータス。
                                            strFaultyRowsNum = strFaultyRowsNum + longRowCount + ",";   //Get Faulty Columns
                                        }
                                    }
                                }
                                else
                                {
                                    //When Number of List columns and it's VALUE list is not matched.
                                    //CONFIGエラー。
                                    string strErrorMsg = "システムエラー：CONFIGにディフォルト値チェックでエラーが発生しました。";
                                    _errorMsgEntry(strPackageCode, strFileName, strErrorMsg, intFileLineCount, 0, myConnection); //ERROR table entry
                                    strErrorMsg = null;
                                    Dts.Variables["User::resultFlag"].Value = "NG";
                                    Dts.Variables["User::boolConfigError"].Value = true;
                                }
                            }
                            #endregion

                            #region LAYOUT / TYPE CHECK
                            if (strArrLayout_col_num!=null && strArrLayout_col_type!=null && strArrLayout_col_num.Length != 0 && strArrLayout_col_type.Length != 0)
                            {
                                //string[] strArrLayout_col_num = strLayout_col_no.Split(',');
                                //string[] strArrLayout_col_type = strLayout_col_type.Split(',');
                                if (strArrLayout_col_num.Length == strArrLayout_col_type.Length)
                                {
                                    for (int intM = 0; intM < strArrLayout_col_num.Length; intM++)
                                    {
                                        int intCol_num = Convert.ToInt32(strArrLayout_col_num[intM]);
                                        #region "FLOAT/DECIMAL CHECK"
                                        if (strArrLayout_col_type[intM].ToLower() == "float" || strArrLayout_col_type[intM].ToLower() == "decimal")
                                        {
                                            if (!string.IsNullOrEmpty(strArrRow[intCol_num - 1].ToString()))
                                            {
                                                decimal value;
                                                bool canConvert = decimal.TryParse(strArrRow[intCol_num - 1], out value);
                                                if (canConvert == false)
                                                {
                                                    //If Given value is not Integer type convertable.
                                                    //string strErrorMsg = "データ型エラー. 行:" + longRowCount + ", 列:" + intCol_num + "";
                                                    string strErrorMsg = strLine + strColumn_Separator + "列:" + intCol_num + strColumn_Separator + "データの正式にエラーが発生しました。";
                                                    _errorMsgEntry(strPackageCode, strFileName, strErrorMsg, intFileLineCount, 0, myConnection);   //ERROR table entry call
                                                    strErrorMsg = null;
                                                    Dts.Variables["User::resultFlag"].Value = "NG";
                                                    boolDataTypeCheck = false;  //ERROR Check status as NG
                                                    strFaultyRowsNum = strFaultyRowsNum + longRowCount + ",";   //Get Faulty Columns
                                                }
                                            }
                                        }
                                        #endregion
                                        #region "INT/NUMBER CHECK"
                                        else if (strArrLayout_col_type[intM].ToLower() == "int" || strArrLayout_col_type[intM].ToLower() == "number" || strArrLayout_col_type[intM].ToLower() == "bigint")
                                        {
                                            if (!string.IsNullOrEmpty(strArrRow[intCol_num - 1].ToString()))
                                            {
                                                long value;
                                                bool canConvert = long.TryParse(strArrRow[intCol_num - 1], out value);
                                                if (canConvert == false)
                                                {
                                                    //string strErrorMsg = "データ型エラー. 行:" + longRowCount + ", 列:" + intCol_num + "";
                                                    string strErrorMsg = strLine + strColumn_Separator + "列:" + intCol_num + strColumn_Separator + "データ型エラー。";
                                                    _errorMsgEntry(strPackageCode, strFileName, strErrorMsg, intFileLineCount, 0, myConnection);   //ERROR Table Entry call
                                                    strErrorMsg = null;
                                                    Dts.Variables["User::resultFlag"].Value = "NG";
                                                    boolDataTypeCheck = false;  //ERROR Check status as NG
                                                    strFaultyRowsNum = strFaultyRowsNum + longRowCount + ",";   //Get Faulty Columns
                                                }
                                            }
                                        }
                                        #endregion
                                        #region "STRING CHECK"
                                        else if (strArrLayout_col_type[intM].ToLower() == "string")
                                        {
                                            if (!string.IsNullOrEmpty(strArrRow[intCol_num - 1].ToString()))
                                            {
                                                Regex regNoCharNoSpec = new Regex(@"[0-9~`!@#$%^&*()+=|\\{}':;.,<>/?[\]""_-]");
                                                string value = strArrRow[intCol_num - 1];
                                                if (regNoCharNoSpec.IsMatch(value))
                                                {
                                                    //string strErrorMsg = "データ型エラー. 行:" + longRowCount + ", 列:" + intCol_num + "";
                                                    string strErrorMsg = strLine + strColumn_Separator + "列:" + intCol_num + strColumn_Separator + "データ型エラー。";
                                                    _errorMsgEntry(strPackageCode, strFileName, strErrorMsg, intFileLineCount, 0, myConnection);   //ERROR Table entry call
                                                    strErrorMsg = null;
                                                    Dts.Variables["User::resultFlag"].Value = "NG";
                                                    boolDataTypeCheck = false;  //ERROR Check status as NG
                                                    strFaultyRowsNum = strFaultyRowsNum + longRowCount + ",";   //Get Faulty Columns
                                                }
                                                else
                                                {
                                                    //Check for 2 byte Data as well for String Type.
                                                    byte[] byteAscii = Encoding.ASCII.GetBytes(strArrRow[intCol_num - 1].ToString());  //Convert in ASCII byte of string
                                                    byte[] byteUtf8 = Encoding.UTF8.GetBytes(strArrRow[intCol_num - 1].ToString()); //Convert in UTF8 byte of string
                                                    int intAscii = byteAscii.Length;    //Get length of ASCII string
                                                    int intUtf = byteUtf8.Length;   //Get length of UTF8 string
                                                    if (intAscii != intUtf) //Check both the byte of length
                                                    {
                                                        //string strErrorMsg = "データ型エラー. 行:" + longRowCount + ",列:" + intCol_num + "";
                                                        string strErrorMsg = strLine + strColumn_Separator + "列:" + intCol_num + strColumn_Separator + "データ型エラー。";
                                                        _errorMsgEntry(strPackageCode, strFileName, strErrorMsg, intFileLineCount, 0, myConnection);   //ERROR Table entry call
                                                        strErrorMsg = null;
                                                        Dts.Variables["User::resultFlag"].Value = "NG";
                                                        boolDataTypeCheck = false;  //ERROR Check status as NG
                                                        strFaultyRowsNum = strFaultyRowsNum + longRowCount + ",";   //Get Faulty Columns
                                                    }
                                                }
                                            }
                                        }
                                        #endregion
                                        #region "VARCHAR CHECK"
                                        else if (strArrLayout_col_type[intM].ToLower() == "varchar")
                                        {
                                            //2 byte Data only not allowed. so chekc for it.
                                            if (!string.IsNullOrEmpty(strArrRow[intCol_num - 1].ToString()))
                                            {
                                                //Check FOR 2 byte size charecter in string.
                                                byte[] byteAscii = Encoding.ASCII.GetBytes(strArrRow[intCol_num - 1].ToString());  //Convert in ASCII byte of string
                                                byte[] byteUtf8 = Encoding.UTF8.GetBytes(strArrRow[intCol_num - 1].ToString()); //Convert in UTF8 byte of string
                                                int intAscii = byteAscii.Length;    //Get length of ASCII string
                                                int intUtf = byteUtf8.Length;   //Get length of UTF8 string
                                                if (intAscii != intUtf) //Check both the byte of length
                                                {
                                                    //string strErrorMsg = "データ型エラー. 行:" + longRowCount + ",列:" + intCol_num + "";
                                                    string strErrorMsg = strLine + strColumn_Separator + "列:" + intCol_num + strColumn_Separator + "データ型エラー。";
                                                    _errorMsgEntry(strPackageCode, strFileName, strErrorMsg, intFileLineCount, 0, myConnection);   //ERROR Msg entry Call
                                                    strErrorMsg = null;
                                                    boolDataTypeCheck = false;  //ERROR Check status as NG
                                                    Dts.Variables["User::resultFlag"].Value = "NG";
                                                    strFaultyRowsNum = strFaultyRowsNum + longRowCount + ",";   //Get Faulty Columns
                                                }
                                            }
                                        }
                                        #endregion
                                        #region "NVARCHAR CHECK"
                                        else if (strArrLayout_col_type[intM].ToLower() == "nvarchar")
                                        {
                                            //Nothing to do with this when NVRCHAR type data needs to check
                                        }
                                        #endregion
                                        #region "DATE CHECK"
                                        //このためにチェック:  yyyyMM, MMyyyy, yyyy & other Valid formats
                                        else if (strArrLayout_col_type[intM].ToLower() != string.Empty)
                                        {
                                            if (!string.IsNullOrEmpty(strArrRow[intCol_num - 1].ToString()))
                                            {
                                                #region "yyyyMM" check
                                                //When only 年度 & 月度 given in the string.
                                                if (strArrLayout_col_type[intM].ToLower() == "yyyymm")
                                                {
                                                    if (strArrRow[intCol_num - 1].Length == 6)
                                                    {
                                                        string strDateFull = strArrRow[intCol_num - 1] + "01"; //Append 01 as Day to Check Whole day as a year.
                                                        DateTime dtValue;
                                                        //Convert Date into yyyy/MM/dd format
                                                        string strDate = strDateFull.Substring(0, 4) + "/" + strDateFull.Substring(4, 2) + "/" + strDateFull.Substring(6, 2);
                                                        bool canConvert = DateTime.TryParse(strDate, out dtValue);
                                                        if (canConvert == false)
                                                        {
                                                            //string strErrorMsg = "データ日付型エラー. 行:" + longRowCount + ", 列:" + intCol_num + "";
                                                            string strErrorMsg = strLine + strColumn_Separator + "列:" + intCol_num + strColumn_Separator + "データ日付の正式でエラーが発生しました。";
                                                            _errorMsgEntry(strPackageCode, strFileName, strErrorMsg, intFileLineCount, 0, myConnection);
                                                            strErrorMsg = null;
                                                            Dts.Variables["User::resultFlag"].Value = "NG";
                                                            boolDataTypeCheck = false;  //NG時エラーステータス。
                                                            strFaultyRowsNum = strFaultyRowsNum + longRowCount + ",";   //Get Faulty Columns
                                                        }
                                                    }
                                                    else
                                                    {
                                                        //string strErrorMsg = "データ日付型エラー. 行:" + longRowCount + ", 列:" + intCol_num + "";
                                                        string strErrorMsg = strLine + strColumn_Separator + "列:" + intCol_num + strColumn_Separator + "データ日付の正式でエラーが発生しました。";
                                                        _errorMsgEntry(strPackageCode, strFileName, strErrorMsg, intFileLineCount, 0, myConnection);
                                                        strErrorMsg = null;
                                                        Dts.Variables["User::resultFlag"].Value = "NG";
                                                        boolDataTypeCheck = false;  //NG時エラーステータス。
                                                        strFaultyRowsNum = strFaultyRowsNum + longRowCount + ",";   //Get Faulty Columns
                                                    }
                                                }
                                                #endregion
                                                #region "MMyyyy" check
                                                //When only 月度 & 年度 given in the string.
                                                else if (strArrLayout_col_type[intM].ToLower() == "mmyyyy")
                                                {
                                                    if (strArrRow[intCol_num - 1].Length == 6)
                                                    {
                                                        string strDateFull = "01" + strArrRow[intCol_num - 1]; //Append 01 as Day to Check Whole day as a year.
                                                        DateTime dtValue;
                                                        //Convert Date into yyyy/MM/dd format
                                                        //ddmmYYYY
                                                        string strDate = strDateFull.Substring(4, 4) + "/" + strDateFull.Substring(2, 2) + "/" + strDateFull.Substring(0, 2);
                                                        bool canConvert = DateTime.TryParse(strDate, out dtValue);
                                                        if (canConvert == false)
                                                        {
                                                            //string strErrorMsg = "データ日付型エラー. 行:" + longRowCount + ", 列:" + intCol_num + "";
                                                            string strErrorMsg = strLine + strColumn_Separator + "列:" + intCol_num + strColumn_Separator + "データ日付の正式でエラーが発生しました。";
                                                            _errorMsgEntry(strPackageCode, strFileName, strErrorMsg, intFileLineCount, 0, myConnection);  //ERRORテーブルで更新。
                                                            strErrorMsg = null;
                                                            Dts.Variables["User::resultFlag"].Value = "NG";
                                                            boolDataTypeCheck = false;  //NG時エラーステータス。
                                                            strFaultyRowsNum = strFaultyRowsNum + longRowCount + ",";   //Get Faulty Columns
                                                        }
                                                    }
                                                    else
                                                    {
                                                        //string strErrorMsg = "データ日付型エラー. 行:" + longRowCount + ", 列:" + intCol_num + "";
                                                        string strErrorMsg = strLine + strColumn_Separator + "列:" + intCol_num + strColumn_Separator + "データ日付の正式でエラーが発生しました。";
                                                        _errorMsgEntry(strPackageCode, strFileName, strErrorMsg, intFileLineCount, 0, myConnection);   //ERRORテーブルで更新。
                                                        strErrorMsg = null;
                                                        Dts.Variables["User::resultFlag"].Value = "NG";
                                                        boolDataTypeCheck = false;  //NG時エラーステータス。
                                                        strFaultyRowsNum = strFaultyRowsNum + longRowCount + ",";   //Get Faulty Columns
                                                    }
                                                }
                                                #endregion
                                                #region "yyyy" check
                                                else if (strArrLayout_col_type[intM].ToLower() == "yyyy")
                                                {
                                                    if (strArrRow[intCol_num - 1].Length == 4)
                                                    {
                                                        int value;
                                                        bool canConvert = int.TryParse(strArrRow[intCol_num - 1], out value);
                                                        if (canConvert == true)
                                                        {
                                                            if (Convert.ToInt32(strArrRow[intCol_num - 1]) < 1900)
                                                            {
                                                                //string strErrorMsg = "データ日付型エラー. 行:" + longRowCount + ", 列:" + intCol_num + "";
                                                                string strErrorMsg = strLine + strColumn_Separator + "列:" + intCol_num + strColumn_Separator + "データ日付の正式でエラーが発生しました。";
                                                                _errorMsgEntry(strPackageCode, strFileName, strErrorMsg, intFileLineCount, 0, myConnection);   //ERRORテーブルで更新。
                                                                strErrorMsg = null;
                                                                Dts.Variables["User::resultFlag"].Value = "NG";
                                                                boolDataTypeCheck = false;  //NG時エラーステータス。
                                                                strFaultyRowsNum = strFaultyRowsNum + longRowCount + ",";   //Get Faulty Columns
                                                            }
                                                        }
                                                        else
                                                        {
                                                            //string strErrorMsg = "データ日付型エラー. 行:" + longRowCount + ", 列:" + intCol_num + "";
                                                            string strErrorMsg = strLine + strColumn_Separator + "列:" + intCol_num + strColumn_Separator + "データ日付の正式でエラーが発生しました。";
                                                            _errorMsgEntry(strPackageCode, strFileName, strErrorMsg, intFileLineCount, 0, myConnection);   //ERRORテーブルで更新。
                                                            strErrorMsg = null;
                                                            Dts.Variables["User::resultFlag"].Value = "NG";
                                                            boolDataTypeCheck = false;  //NG時エラーステータス。
                                                            strFaultyRowsNum = strFaultyRowsNum + longRowCount + ",";   //Get Faulty Columns
                                                        }
                                                    }
                                                    else
                                                    {
                                                        //string strErrorMsg = "データ型エラー. 行:" + longRowCount + ", 列:" + intCol_num + "";
                                                        string strErrorMsg = strLine + strColumn_Separator + "列:" + intCol_num + strColumn_Separator + "データ日付の正式でエラーが発生しました。";
                                                        _errorMsgEntry(strPackageCode, strFileName, strErrorMsg, intFileLineCount, 0, myConnection);   //ERRORテーブルで更新。
                                                        strErrorMsg = null;
                                                        Dts.Variables["User::resultFlag"].Value = "NG";
                                                        boolDataTypeCheck = false;  //ERROR Check status as NG
                                                        strFaultyRowsNum = strFaultyRowsNum + longRowCount + ",";   //Get Faulty Columns
                                                    }
                                                }
                                                #endregion
                                                #region "Other date formats" check
                                                else
                                                {
                                                    //全体タイプの日付チェックをする。
                                                    DateTime dtResult;
                                                    string strFormat = strArrLayout_col_type[intM].ToString();  //日付フォーマット
                                                    string strDateString = strArrRow[intCol_num - 1].ToString();    //日付フィールド値
                                                    try
                                                    {
                                                        dtResult = DateTime.ParseExact(strDateString, strFormat, cultInfoProvider); //日付フォーマットと有効な日付に変換する。
                                                    }
                                                    catch (FormatException)
                                                    {
                                                        //フォーマットと日付に変換時でエラー発生する。
                                                        //string strErrorMsg = "データ日付型エラー. 行:" + longRowCount + ", 列:" + intCol_num + "";
                                                        string strErrorMsg = strLine + strColumn_Separator + "列:" + intCol_num + strColumn_Separator + "データ日付の正式でエラーが発生しました。";
                                                        _errorMsgEntry(strPackageCode, strFileName, strErrorMsg, intFileLineCount, 0, myConnection);   //ERROテーブルで更新。
                                                        strErrorMsg = null;
                                                        Dts.Variables["User::resultFlag"].Value = "NG";
                                                        boolDataTypeCheck = false;  //NG時エラーステータス。
                                                        strFaultyRowsNum = strFaultyRowsNum + longRowCount + ",";   //Get Faulty Columns
                                                    }
                                                    finally
                                                    {
                                                        strFormat = null;
                                                        strDateString = null;
                                                    }
                                                }
                                                #endregion
                                            }
                                        }
                                        #endregion
                                        else
                                        {
                                            //If any other entry found in CONFIG Table,の場合エラーを発生する.
                                            string strErrorMsg = "システムエラー：ＣＯＮＦＩＧで日付の設定を間違えました。";
                                            _errorMsgEntry(strPackageCode, strFileName, strErrorMsg, intFileLineCount, 1, myConnection);   //ERRORテーブルで更新。
                                            strErrorMsg = null;
                                            Dts.Variables["User::resultFlag"].Value = "NG";
                                            Dts.Variables["User::boolConfigError"].Value = true;
                                        }
                                    }
                                }
                                else
                                {
                                    //When LAYOUT CHECK Columns are Improper set.
                                    string strErrorMsg = "システムエラー：ＣＯＮＦＩＧでデータ型の設定を間違えました。";
                                    _errorMsgEntry(strPackageCode, strFileName, strErrorMsg, intFileLineCount, 1, myConnection); //ERRORテーブルで更新。
                                    strErrorMsg = null;
                                    Dts.Variables["User::resultFlag"].Value = "NG";
                                    Dts.Variables["User::boolConfigError"].Value = true;
                                }
                            }
                            #endregion
                        }
                        strReadFile.Close();    //Close REad&Write mode of file.
                        Dts.TaskResult = (int)ScriptResults.Success;
                        Dts.Variables["User::faultyRowNum"].Value = strFaultyRowsNum;   //Set Faulty Columns number in Variable to use in other objects.
                        _ErrorStatus(boolMandatoryCheck, boolFixedLengthCheck, boolFixedValueCheck, boolDataTypeCheck, boolMaxLengthCheck, myConnection); //Updte various types error checks in Db Table.
                    }
                }
            }
            #endregion

            #region Catch/Finally
            catch (Exception ex)
            {
                _errorMsgEntry(strPackageCode, strFileName, "システムエラー:" + ex.Message.Replace("'", "-"), intFileLineCount, 1, myConnection);    //ERROR table entry call
                Dts.Variables["User::boolConfigError"].Value = true;
                Dts.Variables["User::resultFlag"].Value = "NG";
                Dts.TaskResult = (int)ScriptResults.Success;
            }
            finally
            {
                _connectionClose(myConnection);
                strFileFullPath = null;
                strColumn_Separator = null;
                strArrCol_no_len = null;
                strArrCol_len = null;
                strArrFixed_col_val = null;
                strArrFixed_col_num = null;
                strArr_mand_cols = null;
                strArrLayout_col_type = null;
                strArrLayout_col_num = null;
                strArrMax_Len_col = null;
                strArrMax_Len = null;
                strFileName = null;
                strConnectionString = null;
                strFaultyRowsNum = null;
            }
            #endregion
        }
        #endregion

        #region "Error Message entry in ERROR_TABLE"
        /// <summary>
        /// 作成人: イルファンマンスリー
        /// 作成日: 2016-05-27
        /// 説明: PACKAGE_ERRORテーブルにエラーメセッジインサートする。
        /// </summary>
        protected void _errorMsgEntry(string package_code,string strFile, string strErrorMsg, Int64 intLineCount, int intErrorFlag, SqlConnection myConnection)
        {
            StringBuilder strBuildInsertQry = new StringBuilder();
            DateTime dtCurDate = Convert.ToDateTime(Dts.Variables["User::currentDate"].Value);
            SqlCommand myCommand;
            try
            {
                strBuildInsertQry.Append("INSERT INTO ");
                strBuildInsertQry.Append("KANSHI_PACKAGE_ERROR([パッケージコード],[データ日付],[エラー日時],[ファイル名],[エラー内容],[行数],[エラーフラグ]) ");
                strBuildInsertQry.Append("VALUES('" + package_code + "','" + dtCurDate + "','" + Dts.Variables["User::sysDate"].Value.ToString() + "','" + strFile + "','" + strErrorMsg + "'," + intLineCount + "," + intErrorFlag + ");");
                _connectionOpen(myConnection);
                myCommand = new SqlCommand(strBuildInsertQry.ToString(), myConnection);
                myCommand.ExecuteNonQuery();
            }
            #region "CATCH/FINALLY"
            catch (Exception ex)
            {
                strBuildInsertQry.Append("INSERT INTO ");
                strBuildInsertQry.Append("KANSHI_PACKAGE_ERROR([パッケージコード],[データ日付],[エラー日時],[ファイル名],[エラー内容],[行数],[エラーフラグ]) ");
                strBuildInsertQry.Append("VALUES('" + Dts.Variables["User::packageCode"].Value + "','" + dtCurDate + "','" + Dts.Variables["User::sysDate"].Value.ToString() + "','" + strFile + "','システムエラー:" + ex.Message.Replace("'", "-") + "'," + intLineCount + ",1);");
                _connectionOpen(myConnection);  //Only open if it is close
                myCommand = new SqlCommand(strBuildInsertQry.ToString(), myConnection);
                myCommand.ExecuteNonQuery();
                Dts.Variables["User::resultFlag"].Value = "NG";
                Dts.Variables["User::boolConfigError"].Value = true;
                Dts.TaskResult = (int)ScriptResults.Success;
            }
            finally
            {
                strBuildInsertQry = null;
                myCommand = null;
                myConnection = null;
                package_code = null;
            }
            #endregion
        }
        #endregion

        #region "ERROR Check insert status"
        /// <summary>
        /// 作成人: イルファンマンスリー
        /// 作成日: 2016-06-02
        /// 説明: To Insert four types of ERROR checks status in KANSHI_PACKAGE_ERROR_STATUS Table
        /// 1) 必要項目チェック。
        /// 2) 固定長チェック。
        /// 3) 固定値チェック。
        /// 4) データ型チェック。
        /// </summary>
        protected void _ErrorStatus(bool boolMandatory, bool boolFixedLength, bool boolFixedValue, bool boolDataType, bool boolMaxLength, SqlConnection myConnection)
        {
            string strFileName = Path.GetFileName(Dts.Variables["User::fileFullPath"].Value.ToString());
            DateTime dtCurDate = Convert.ToDateTime(Dts.Variables["User::currentDate"].Value);
            StringBuilder strBuildInsertQry = new StringBuilder();
            SqlCommand myCommand = new SqlCommand();
            try
            {
                _connectionOpen(myConnection);  //Open connection only if it is closed.
                strBuildInsertQry.Clear();
                #region 必要フィールドエラー NG
                if (boolMandatory == false)
                {
                    //File Existance check is wrong
                    strBuildInsertQry.Append("INSERT INTO ");
                    strBuildInsertQry.Append("KANSHI_PACKAGE_ERROR_STATUS([パッケージコード],[データ日付],[エラー日時],[エラーチェックタイプ],[ステータス],[行数]) ");
                    strBuildInsertQry.Append("VALUES('" + Dts.Variables["User::packageCode"].Value + "','" + dtCurDate + "','"+ Dts.Variables["User::sysDate"].Value.ToString() + "','必要フィールドエラー','NG','" + Dts.Variables["User::rowCount"].Value.ToString() + "');");
                }
                else
                {
                    //File Existance check is okay
                    strBuildInsertQry.Append("INSERT INTO ");
                    strBuildInsertQry.Append("KANSHI_PACKAGE_ERROR_STATUS([パッケージコード],[データ日付],[エラー日時],[エラーチェックタイプ],[ステータス],[行数]) ");
                    strBuildInsertQry.Append("VALUES('" + Dts.Variables["User::packageCode"].Value + "','" + dtCurDate + "','" + Dts.Variables["User::sysDate"].Value.ToString() + "','必要フィールドエラー','OK','" + Dts.Variables["User::rowCount"].Value.ToString() + "');");
                }
                #endregion
                #region 固定長エラー NG
                if (boolFixedLength == false)
                {
                    //File format is wrong
                    strBuildInsertQry.Append("INSERT INTO ");
                    strBuildInsertQry.Append("KANSHI_PACKAGE_ERROR_STATUS([パッケージコード],[データ日付],[エラー日時],[エラーチェックタイプ],[ステータス],[行数]) ");
                    strBuildInsertQry.Append("VALUES('" + Dts.Variables["User::packageCode"].Value + "','" + dtCurDate + "','" + Dts.Variables["User::sysDate"].Value.ToString() + "','固定長チェックエラー','NG','" + Dts.Variables["User::rowCount"].Value.ToString() + "');");
                }
                else
                {
                    //File format is okay
                    strBuildInsertQry.Append("INSERT INTO ");
                    strBuildInsertQry.Append("KANSHI_PACKAGE_ERROR_STATUS([パッケージコード],[データ日付],[エラー日時],[エラーチェックタイプ],[ステータス],[行数]) ");
                    strBuildInsertQry.Append("VALUES('" + Dts.Variables["User::packageCode"].Value + "','" + dtCurDate + "','" + Dts.Variables["User::sysDate"].Value.ToString() + "','固定長チェックエラー','OK','" + Dts.Variables["User::rowCount"].Value.ToString() + "');");
                }
                #endregion
                #region ディフォルト値エラー NG
                if (boolFixedValue == false)
                {
                    //File empty now allowed
                    strBuildInsertQry.Append("INSERT INTO ");
                    strBuildInsertQry.Append("KANSHI_PACKAGE_ERROR_STATUS([パッケージコード],[データ日付],[エラー日時],[エラーチェックタイプ],[ステータス],[行数]) ");
                    strBuildInsertQry.Append("VALUES('" + Dts.Variables["User::packageCode"].Value + "','" + dtCurDate + "','" + Dts.Variables["User::sysDate"].Value.ToString() + "','ディフォルト値エラー','NG','" + Dts.Variables["User::rowCount"].Value.ToString() + "');");
                }
                else
                {
                    //File empty is okay
                    strBuildInsertQry.Append("INSERT INTO ");
                    strBuildInsertQry.Append("KANSHI_PACKAGE_ERROR_STATUS([パッケージコード],[データ日付],[エラー日時],[エラーチェックタイプ],[ステータス],[行数]) ");
                    strBuildInsertQry.Append("VALUES('" + Dts.Variables["User::packageCode"].Value + "','" + dtCurDate + "','" + Dts.Variables["sysDate"].Value.ToString() + "','ディフォルト値エラー','OK','" + Dts.Variables["User::rowCount"].Value.ToString() + "');");
                }
                #endregion
                #region データ型エラー NG
                if (boolDataType == false)
                {
                    //File empty now allowed
                    strBuildInsertQry.Append("INSERT INTO ");
                    strBuildInsertQry.Append("KANSHI_PACKAGE_ERROR_STATUS([パッケージコード],[データ日付],[エラー日時],[エラーチェックタイプ],[ステータス],[行数]) ");
                    strBuildInsertQry.Append("VALUES('" + Dts.Variables["User::packageCode"].Value + "','" + dtCurDate + "','" + Dts.Variables["sysDate"].Value.ToString() + "','データ型エラー','NG','" + Dts.Variables["User::rowCount"].Value.ToString() + "');");
                }
                else
                {
                    //File empty is okay
                    strBuildInsertQry.Append("INSERT INTO ");
                    strBuildInsertQry.Append("KANSHI_PACKAGE_ERROR_STATUS([パッケージコード],[データ日付],[エラー日時],[エラーチェックタイプ],[ステータス],[行数]) ");
                    strBuildInsertQry.Append("VALUES('" + Dts.Variables["User::packageCode"].Value + "','" + dtCurDate + "','" + Dts.Variables["sysDate"].Value.ToString() + "','データ型エラー','OK','" + Dts.Variables["User::rowCount"].Value.ToString() + "');");
                }
                #endregion
                #region 最大長エラー NG
                if (boolMaxLength == false)
                {
                    //File empty now allowed
                    strBuildInsertQry.Append("INSERT INTO ");
                    strBuildInsertQry.Append("KANSHI_PACKAGE_ERROR_STATUS([パッケージコード],[データ日付],[エラー日時],[エラーチェックタイプ],[ステータス],[行数]) ");
                    strBuildInsertQry.Append("VALUES('" + Dts.Variables["User::packageCode"].Value + "','" + dtCurDate + "','" + Dts.Variables["sysDate"].Value.ToString() + "','マックス桁数チェックエラー','NG','" + Dts.Variables["User::rowCount"].Value.ToString() + "');");
                }
                else
                {
                    //File empty is okay
                    strBuildInsertQry.Append("INSERT INTO ");
                    strBuildInsertQry.Append("KANSHI_PACKAGE_ERROR_STATUS([パッケージコード],[データ日付],[エラー日時],[エラーチェックタイプ],[ステータス],[行数]) ");
                    strBuildInsertQry.Append("VALUES('" + Dts.Variables["User::packageCode"].Value + "','" + dtCurDate + "','" + Dts.Variables["sysDate"].Value.ToString() + "','マックス桁数チェックエラー','OK','" + Dts.Variables["User::rowCount"].Value.ToString() + "');");
                }
                #endregion
                myCommand = new SqlCommand(strBuildInsertQry.ToString(), myConnection);
                myCommand.ExecuteNonQuery();
            }
            #region "CATCH/FINALLY"
            catch (Exception ex)
            {
                strBuildInsertQry.Clear();
                strBuildInsertQry.Append("INSERT INTO ");
                strBuildInsertQry.Append("KANSHI_PACKAGE_ERROR([パッケージコード],[データ日付],[エラー日時],[ファイル名],[エラー内容],[行数],[エラーフラグ]) ");
                strBuildInsertQry.Append("VALUES('" + Dts.Variables["User::packageCode"].Value + "','" + dtCurDate + "','" + Dts.Variables["User::sysDate"].Value.ToString() + "','" + strFileName + "','システムエラー:" + ex.Message.Replace("'", "-") + "','" + Dts.Variables["User::rowCount"].Value.ToString() + "',1);");
                _connectionOpen(myConnection);
                myCommand = new SqlCommand(strBuildInsertQry.ToString(), myConnection);
                myCommand.ExecuteNonQuery();
                Dts.Variables["User::resultFlag"].Value = "NG";
                Dts.Variables["User::boolConfigError"].Value = true;
                Dts.TaskResult = (int)ScriptResults.Success;
            }
            finally
            {
                strFileName = null;
                strBuildInsertQry = null;
                myConnection = null;
                myCommand = null;
            }
            #endregion
        }
        #endregion

        #region "Connection Open"
        private void _connectionOpen(SqlConnection myConnection)
        {
            if (myConnection.State != ConnectionState.Open)
            {
                myConnection.Open();
            }
        }
        #endregion

        #region "Connection Close"
        private void _connectionClose(SqlConnection myConnection)
        {
            if (myConnection.State != ConnectionState.Closed)
            {
                myConnection.Close();
            }
        }
        #endregion

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>ST_c169d6058fea42c39cce29caa94d0b40</msb:CodeName>
		<msb:DisplayName>ST_c169d6058fea42c39cce29caa94d0b40</msb:DisplayName>
		<msb:ProjectId>{9E91315A-1DEE-4262-B7F8-A7981A23313C}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_126a9c8aff694753b46869226f5f18f5.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_c169d6058fea42c39cce29caa94d0b40.Properties.Settings.get_Default():ST_c169d6058fea42c39cce29caa94d0b40.Properties.Sett" +
    "ings")]

namespace ST_c169d6058fea42c39cce29caa94d0b40.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_c169d6058fea42c39cce29caa94d0b40.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_c169d6058fea42c39cce29caa94d0b40.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_c169d6058fea42c39cce29caa94d0b40.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_c169d6058fea42c39cce29caa94d0b40.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_c169d6058fea42c39cce29caa94d0b40.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_126a9c8aff694753b46869226f5f18f5.dll">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
AHBvKgAACgIoFgAACm8XAAAKchMCAHBvGAAACheMJwAAAW8qAAAKAigWAAAKFm8+AAAK3gDeChQK
FAwUEAYUDdwqAABBNAAAAAAAAFEAAABGCAAAlwgAAHIBAAAtAAABAgAAAFEAAAC6CQAACwoAAAoA
AAAAAAAAQgNvSAAAChcuBgNvSQAACio+A29IAAAKLAYDb0oAAAoqHgIoSwAACioAAAAAAAAAtAAA
AM7K774BAAAAkQAAAGxTeXN0ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2NvcmxpYiwg
VmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2
MTkzNGUwODkjU3lzdGVtLlJlc291cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQ
QURQQURQtAAAAEJTSkIBAAEAAAAAAAwAAAB2NC4wLjMwMzE5AAAAAAUAbAAAAAAGAAAjfgAAbAYA
ACAJAAAjU3RyaW5ncwAAAACMDwAA3AkAACNVUwBoGQAAEAAAACNHVUlEAAAAeBkAAPACAAAjQmxv
YgAAAAAAAAACAAABVx2iAQkDAAAA+iUzABYAAAEAAAAzAAAABQAAAAYAAAANAAAADwAAAEsAAAAC
AAAADwAAAAQAAAACAAAAAwAAAAQAAAABAAAABQAAAAEAAAABAAAAAAAKAAEAAAAAAAYAwQC6AAoA
3QDIAA4APQEUAQYAWQG6AAYAbwFeAQYAoAGLARIAQQIrAgYAVAM6AwYAfwNtAwYAlgNtAwYAswNt
AwYA0gNtAwYA6wNtAwYABARtAwYAHwRtAwYAOgRtAwYAUwRtAwYAjARsBAYArARsBAYAAQXuBAYA
HgW6AAYAIwW6AAYARwVtAwoAcwVdBQoAjAVdBQYAoQVsBA4AwwUUAQ4A5QUUARYAPgYeBhYAVgYe
BgYAhQZ7BgYAlga6AAYAsAa6AAYAuwa6AAYABgf6BgYADwd7BgYAKwe6AAYAQge6AAYAUwe6AAYA
ZAe6AAoAlAd1BwYA1ge6AAYA3we6AAYA+gd7BgYAIwi6AAYAQQi6AAYAUQj6BhIAcQgrAhIAjwh8
CBIArwh8CBIAvAgfAgAAAAABAAAAAAABAAEAAAAQADIAPAAFAAEAAQAAARAAawA8AAkAAwAFAAEA
EAB0AH8ADQAEAAgAAwEAAKMAAAARAAQADgARAH8BEwARAKwBFwARAPYBOQAGBowCYwBWgJQCZgBW
gJwCZgBQIAAAAACDGLwBGwABAFggAAAAAJMIwgEfAAEAkSAAAAAAkwjWASQAAQCYIAAAAACTCOIB
KQABAKAgAAAAAJYIBgI9AAIAsyAAAAAAhhi8ARsAAgCnIAAAAACRGLwFpQACALwgAAAAAIYAGgIb
AAIAmDgAAAAAhABPAkcAAgBQOwAAAACEAF4CUgAIAKhFAAAAAIEAawJdAA4AuUUAAAAAgQB7Al0A
DwDJRQAAAACGGLwBGwAQAAAAAQCkAgAAAQCqAgAAAgC3AgAAAwC/AgAABADLAgAABQDYAgAABgDl
AgAAAQDyAgAAAgAAAwAAAwAQAwAABAAfAwAABQAsAwAABgDlAgAAAQDlAgAAAQDlAkEAvAF0AEkA
vAF0AFEAvAF0AFkAvAF0AGEAvAF0AGkAvAF0AHEAvAF0AHkAvAF0AIEAvAF0AIkAvAF0AJEAvAF5
AJkAvAEbAKEAvAEbAAkAvAEbAKkANQV+AKkAUAWFACkAvAGKAMEAvAGWANEAvAEbABEAvAEbANkA
vAEbABkA9wWpAOEASAauAOkAXwazAPEAaAa5AAkAcga9APkAigbBAAEBnQbGAAEBqwa9AAEBtQbL
ABEBwwbSAAEBywbXADkAvAF0ADEA0QYkAAEB5ga9AAEB7gbaABkBBgLgACEBvAHmABEBHAfuABEB
IwfzAAEBMQf4APEAOAf+AAEBMQcDAQEBSAcKAQEBWwcOAUEBbAcTATEBbAccAUkBvAF0AEkBmgcO
ARkBogfgABkBrAcjARkBtQfgAAEBvgfaAAEBMQcpAQEBzAcvAQEBMQc1AVEBbAc7ASkBbAdEAVEB
7wdLAWEBBQi9AGEBDggbAOEAFAh5AGkBLQi9AAEBOQhWAXkBvAEbABEBXwjfAXkBagjmAYEBvAHt
AYkBmQgKAYEBvAEbAHkBqQgHApEBzAgzApEB1ggbAJEBDggbABkAvAEbAAgAFABqAAgAGABvACkA
kwCcAC4AGwCqAi4AIwCqAi4AYwDQAi4ACwA5Ai4AEwCBAi4AMwCBAi4AKwCqAi4AOwCwAi4AQwCq
Ai4AWwDHAkMAawBvAEkAkwCcAGEAmwBvAIMAqwBvAJEAXAH0AQ0CAgABAAMAAwAAAG8BLwAAAO4B
NAAAABICQgACAAIAAwACAAMABQABAAQABQACAAUABwAEgAAAAQAAAO4YWYcAAAAAAADKBAAABAAA
AAAAAAAAAAAAAQCxAAAAAAAEAAAAAAAAAAAAAAABALoAAAAAAAwAAAAAAAAAAAAAAAoA9QAAAAAA
BAAAAAAAAAAAAAAAAQAfAgAAAAAMAAAAAAAAAAAAAAAKAP8FAAAAAAAAAAABAAAA2wgAAAUABAAA
AAA8TW9kdWxlPgBTVF8xMjZhOWM4YWZmNjk0NzUzYjQ2ODY5MjI2ZjVmMThmNS5kbGwAUmVzb3Vy
Y2VzAFNUX2MxNjlkNjA1OGZlYTQyYzM5Y2NlMjljYWE5NGQwYjQwLlByb3BlcnRpZXMAU2V0dGlu
Z3MAU2NyaXB0TWFpbgBTVF9jMTY5ZDYwNThmZWE0MmMzOWNjZTI5Y2FhOTRkMGI0MABTY3JpcHRS
ZXN1bHRzAG1zY29ybGliAFN5c3RlbQBPYmplY3QAU3lzdGVtLkNvbmZpZ3VyYXRpb24AQXBwbGlj
YXRpb25TZXR0aW5nc0Jhc2UATWljcm9zb2Z0LlNxbFNlcnZlci5TY3JpcHRUYXNrAE1pY3Jvc29m
dC5TcWxTZXJ2ZXIuRHRzLlRhc2tzLlNjcmlwdFRhc2sAVlNUQVJUU2NyaXB0T2JqZWN0TW9kZWxC
YXNlAEVudW0AU3lzdGVtLlJlc291cmNlcwBSZXNvdXJjZU1hbmFnZXIAcmVzb3VyY2VNYW4AU3lz
dGVtLkdsb2JhbGl6YXRpb24AQ3VsdHVyZUluZm8AcmVzb3VyY2VDdWx0dXJlAC5jdG9yAGdldF9S
ZXNvdXJjZU1hbmFnZXIAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAQ3VsdHVyZQBkZWZhdWx0SW5z
dGFuY2UAZ2V0X0RlZmF1bHQARGVmYXVsdABNYWluAFN5c3RlbS5EYXRhAFN5c3RlbS5EYXRhLlNx
bENsaWVudABTcWxDb25uZWN0aW9uAF9lcnJvck1zZ0VudHJ5AF9FcnJvclN0YXR1cwBfY29ubmVj
dGlvbk9wZW4AX2Nvbm5lY3Rpb25DbG9zZQB2YWx1ZV9fAFN1Y2Nlc3MARmFpbHVyZQB2YWx1ZQBw
YWNrYWdlX2NvZGUAc3RyRmlsZQBzdHJFcnJvck1zZwBpbnRMaW5lQ291bnQAaW50RXJyb3JGbGFn
AG15Q29ubmVjdGlvbgBib29sTWFuZGF0b3J5AGJvb2xGaXhlZExlbmd0aABib29sRml4ZWRWYWx1
ZQBib29sRGF0YVR5cGUAYm9vbE1heExlbmd0aABTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nAFRh
cmdldEZyYW1ld29ya0F0dHJpYnV0ZQBTeXN0ZW0uUmVmbGVjdGlvbgBBc3NlbWJseVRpdGxlQXR0
cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUAQXNzZW1ibHlDb25maWd1cmF0aW9u
QXR0cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRyaWJ1
dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1dGUA
QXNzZW1ibHlDdWx0dXJlQXR0cmlidXRlAEFzc2VtYmx5VmVyc2lvbkF0dHJpYnV0ZQBTeXN0ZW0u
UnVudGltZS5Db21waWxlclNlcnZpY2VzAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1dGUA
UnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAU1RfMTI2YTljOGFmZjY5NDc1M2I0Njg2OTIy
NmY1ZjE4ZjUAU3lzdGVtLkRpYWdub3N0aWNzAERlYnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUA
VHlwZQBSdW50aW1lVHlwZUhhbmRsZQBHZXRUeXBlRnJvbUhhbmRsZQBBc3NlbWJseQBnZXRfQXNz
ZW1ibHkAU3lzdGVtLkNvbXBvbmVudE1vZGVsAEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBFZGl0
b3JCcm93c2FibGVTdGF0ZQBDb21waWxlckdlbmVyYXRlZEF0dHJpYnV0ZQAuY2N0b3IAU1NJU1Nj
cmlwdFRhc2tFbnRyeVBvaW50QXR0cmlidXRlAFNjcmlwdE9iamVjdE1vZGVsAGdldF9EdHMATWlj
cm9zb2Z0LlNxbFNlcnZlci5NYW5hZ2VkRFRTAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlJ1bnRp
bWUAVmFyaWFibGVzAGdldF9WYXJpYWJsZXMAVmFyaWFibGUAZ2V0X0l0ZW0AZ2V0X1ZhbHVlAFRv
U3RyaW5nAFN5c3RlbS5JTwBQYXRoAEdldEZpbGVOYW1lAFN0cmluZwBJc051bGxPckVtcHR5AFRy
aW0AQ2hhcgBTcGxpdABDb252ZXJ0AFRvSW50NjQARW1wdHkAZ2V0X0ludmFyaWFudEN1bHR1cmUA
VG9Mb3dlcgBvcF9FcXVhbGl0eQBTeXN0ZW0uVGV4dABFbmNvZGluZwBTdHJlYW1SZWFkZXIAVG9D
aGFyAFRvSW50MzIASW50MzIAQ29uY2F0AHNldF9WYWx1ZQBJbnQ2NABnZXRfTGVuZ3RoAEJvb2xl
YW4AQ29udGFpbnMARGVjaW1hbABUcnlQYXJzZQBTeXN0ZW0uVGV4dC5SZWd1bGFyRXhwcmVzc2lv
bnMAUmVnZXgASXNNYXRjaABnZXRfQVNDSUkAR2V0Qnl0ZXMAZ2V0X1VURjgAb3BfSW5lcXVhbGl0
eQBTdWJzdHJpbmcARGF0ZVRpbWUASUZvcm1hdFByb3ZpZGVyAFBhcnNlRXhhY3QAVGV4dFJlYWRl
cgBSZWFkTGluZQBDbG9zZQBzZXRfVGFza1Jlc3VsdABFeGNlcHRpb24AZ2V0X01lc3NhZ2UAUmVw
bGFjZQBGb3JtYXRFeGNlcHRpb24AU3RyaW5nQnVpbGRlcgBUb0RhdGVUaW1lAEFwcGVuZABTcWxD
b21tYW5kAFN5c3RlbS5EYXRhLkNvbW1vbgBEYkNvbW1hbmQARXhlY3V0ZU5vblF1ZXJ5AENsZWFy
AERiQ29ubmVjdGlvbgBDb25uZWN0aW9uU3RhdGUAZ2V0X1N0YXRlAE9wZW4AU1RfYzE2OWQ2MDU4
ZmVhNDJjMzljY2UyOWNhYTk0ZDBiNDAuUHJvcGVydGllcy5SZXNvdXJjZXMucmVzb3VyY2VzAAAA
AHFTAFQAXwBjADEANgA5AGQANgAwADUAOABmAGUAYQA0ADIAYwAzADkAYwBjAGUAMgA5AGMAYQBh
ADkANABkADAAYgA0ADAALgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMA
ACFjAG8AbgBuAGUAYwB0AGkAbwBuAFMAdAByAGkAbgBnAAAlVQBzAGUAcgA6ADoAZgBpAGwAZQBG
AHUAbABsAFAAYQB0AGgAACFjAG8AbAB1AG0AbgBfAHMAZQBwAGEAcgBhAHQAbwByAAAlbQBhAG4A
ZABhAHQAbwByAHkAXwBmAGkAZQBsAGQAXwBuAG8AABVjAG8AbABfAGwAZQBuAF8AbgBvAAAPYwBv
AGwAXwBsAGUAbgAAHWMAbwBsAF8AYgBvAG8AbABlAGEAbgBfAG4AbwAAH2MAbwBsAF8AYgBvAG8A
bABlAGEAbgBfAHYAYQBsAAAbbABhAHkAbwB1AHQAXwBjAG8AbABfAG4AbwAAH2wAYQB5AG8AdQB0
AF8AYwBvAGwAXwB0AHkAcABlAAAZbQBhAHgATABlAG4AZwB0AGgAQwBvAGwAABNtAGEAeABMAGUA
bgBnAHQAaAAAI1UAcwBlAHIAOgA6AHAAYQBjAGsAYQBnAGUAQwBvAGQAZQAAHVUAcwBlAHIAOgA6
AHIAbwB3AEMAbwB1AG4AdAAAK1UAcwBlAHIAOgA6AGIAbwBvAGwAQwBvAG4AZgBpAGcARQByAHIA
bwByAAALZgBhAGwAcwBlAAAhVQBzAGUAcgA6ADoAcgBlAHMAdQBsAHQARgBsAGEAZwAABU8ASwAA
BRdSOgABLQwwxV8ImAWY7nYNMMEwpzDDMK8wZzCoMOkw/DBMMHp2H3VXMH4wVzBfMAIwAQVOAEcA
AAMsAAArDDD6Vppbd5UNMMEwpzDDMK8wZzCoMOkw/DBMMHp2H3VXMH4wVzBfMAIwAUW3MLkwxjDg
MKgw6TD8MBr/QwBPAE4ARgBJAEcAazD6Vppbd5XBMKcwwzCvMGcwqDDpMPwwTDB6dh91VzB+MFcw
XzACMAEd3jDDMK8wuTBBaHBlwTCnMMMwrzCoMOkw/DACMAFHtzC5MMYw4DCoMOkw/DAa/0MATwBO
AEYASQBHAGswAGcnWUFocGXBMKcwwzCvMGcwqDDpMPwwTDB6dh91VzB+MFcwXzACMAEzDDDHMKMw
1TCpMOswyDAkUA0wwTCnMMMwrzBnMKgw6TD8MEwwenYfdVcwfjBXMF8wAjABTbcwuTDGMOAwqDDp
MPwwGv9DAE8ATgBGAEkARwBrMMcwozDVMKkw6zDIMCRQwTCnMMMwrzBnMKgw6TD8MEwwenYfdVcw
fjBXMF8wAjABC2YAbABvAGEAdAAAD2QAZQBjAGkAbQBhAGwAACXHMPwwvzBuMGNrD19rMKgw6TD8
MEwwenYfdVcwfjBXMF8wAjABB2kAbgB0AAANbgB1AG0AYgBlAHIAAA1iAGkAZwBpAG4AdAAAEccw
/DC/MItXqDDpMPwwAjABDXMAdAByAGkAbgBnAABPWwAwAC0AOQB+AGAAIQBAACMAJAAlAF4AJgAq
ACgAKQArAD0AfABcAFwAewB9ACcAOgA7AC4ALAA8AD4ALwA/AFsAXABdACIAXwAtAF0AAQ92AGEA
cgBjAGgAYQByAAARbgB2AGEAcgBjAGgAYQByAAANeQB5AHkAeQBtAG0AAAUwADEAAAMvAAApxzD8
ML8w5WXYTm4wY2sPX2cwqDDpMPwwTDB6dh91VzB+MFcwXzACMAENbQBtAHkAeQB5AHkAAAl5AHkA
eQB5AAA5tzC5MMYw4DCoMOkw/DAa/yP/L/8u/yb/Kf8n/2cw5WXYTm4wLYqaW5Iwk5VVkEgwfjBX
MF8wAjABPbcwuTDGMOAwqDDpMPwwGv8j/y//Lv8m/yn/J/9nMMcw/DC/MItXbjAtippbkjCTlVWQ
SDB+MFcwXzACMAElVQBzAGUAcgA6ADoAZgBhAHUAbAB0AHkAUgBvAHcATgB1AG0AABG3MLkwxjDg
MKgw6TD8MDoAAQMnAAEDLQABI1UAcwBlAHIAOgA6AGMAdQByAHIAZQBuAHQARABhAHQAZQAAGUkA
TgBTAEUAUgBUACAASQBOAFQATwAgAACAn0sAQQBOAFMASABJAF8AUABBAEMASwBBAEcARQBfAEUA
UgBSAE8AUgAoAFsA0TDDMLEw/DC4MLMw/DDJMF0ALABbAMcw/DC/MOVl2E5dACwAWwCoMOkw/DDl
ZUJmXQAsAFsA1TChMKQw6zANVF0ALABbAKgw6TD8MIVRuVtdACwAWwBMiHBlXQAsAFsAqDDpMPww
1TDpMLAwXQApACAAARFWAEEATABVAEUAUwAoACcAAQcnACwAJwABG1UAcwBlAHIAOgA6AHMAeQBz
AEQAYQB0AGUAAAUnACwAAQUpADsAABcnACwAJwC3MLkwxjDgMKgw6TD8MDoAAQksADEAKQA7AACA
pUsAQQBOAFMASABJAF8AUABBAEMASwBBAEcARQBfAEUAUgBSAE8AUgBfAFMAVABBAFQAVQBTACgA
WwDRMMMwsTD8MLgwszD8MMkwXQAsAFsAxzD8ML8w5WXYTl0ALABbAKgw6TD8MOVlQmZdACwAWwCo
MOkw/DDBMKcwwzCvML8wpDDXMF0ALABbALkwxjD8ML8wuTBdACwAWwBMiHBlXQApACAAASsnACwA
JwDFX4GJ1TCjMPww6zDJMKgw6TD8MCcALAAnAE4ARwAnACwAJwABBycAKQA7AAErJwAsACcAxV+B
idUwozD8MOswyTCoMOkw/DAnACwAJwBPAEsAJwAsACcAASsnACwAJwD6Vppbd5XBMKcwwzCvMKgw
6TD8MCcALAAnAE4ARwAnACwAJwABKycALAAnAPpWmlt3lcEwpzDDMK8wqDDpMPwwJwAsACcATwBL
ACcALAAnAAErJwAsACcAxzCjMNUwqTDrMMgwJFCoMOkw/DAnACwAJwBOAEcAJwAsACcAAQ9zAHkA
cwBEAGEAdABlAAArJwAsACcAxzCjMNUwqTDrMMgwJFCoMOkw/DAnACwAJwBPAEsAJwAsACcAASUn
ACwAJwDHMPwwvzCLV6gw6TD8MCcALAAnAE4ARwAnACwAJwABJScALAAnAMcw/DC/MItXqDDpMPww
JwAsACcATwBLACcALAAnAAExJwAsACcA3jDDMK8wuTBBaHBlwTCnMMMwrzCoMOkw/DAnACwAJwBO
AEcAJwAsACcAATEnACwAJwDeMMMwrzC5MEFocGXBMKcwwzCvMKgw6TD8MCcALAAnAE8ASwAnACwA
JwABCycALAAxACkAOwABAH1xvVaY3TxEvxzxzNn/D3QACLd6XFYZNOCJCImEXc2AgMyRAwYSFQMG
EhkDIAABBAAAEhUEAAASGQUAAQESGQQIABIVBAgAEhkDBhIMBAAAEgwECAASDAogBgEODg4KCBId
CiAGAQICAgICEh0FIAEBEh0CBggDBhEUBAAAAAAEAQAAAAQgAQEOBCABAQgGAAESVRFZBCAAEl0G
IAIBDhJdBAcBEhUFIAEBEWUIAQACAAAAAAADAAABBCAAEnEEIAASdQUgARJ5HAMgABwDIAAOBAAB
Dg4EAAECDgYgAR0OHQMEAAEKDgIGDgUAAgIODgUAABKAjQcgAgEOEoCNBAABAw4EAAEIDgUAAQ4d
HAQgAQEcBgADDhwcHAMgAAgEIAECDggAAgIOEBGAoQYAAgIOEAoFIAEdBQ4FAAIODg4FIAIOCAgF
AAEOHQ4IAAICDhARgKkGAAICDhAICgADEYCpDg4SgK0FIAIODg6AgQdeDhIdDg4OHQ4dDh0OHQ4d
Dh0OHQ4dDh0ODgoOAgICAgISGQ4SgJEKHQ4ICA4ICA4OCAgODggIDh0ODg4OCAgRgKECDgoCDhKA
pQ4OHQUdBQgIDh0FHQUICA4OEYCpDgIODg4RgKkOAg4OCAIODg4ODg4ODhKAtR0DHRwdDggdDgYA
ARGAqRwGIAESgL0OBiACAQ4SHRIHBhKAvRGAqRKAwRKAtR0cHRwFIAASgL0lBxAOEYCpEoC9EoDB
EoC1HRwdHB0cHRwdHB0cHRwdHB0cHRwdHAUgABGAzUcBABouTkVURnJhbWV3b3JrLFZlcnNpb249
djQuMAEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUQLk5FVCBGcmFtZXdvcmsgNCgBACNTVF9jMTY5
ZDYwNThmZWE0MmMzOWNjZTI5Y2FhOTRkMGI0MAAABQEAAAAAFgEAEUNvcHlyaWdodCBAICAyMDE0
AAAIAQAIAAAAAAAeAQABAFQCFldyYXBOb25FeGNlcHRpb25UaHJvd3MBACBjAAAAAAAAAAAAAD5j
AAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwYwAAAAAAAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBt
c2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAQAAAAGAAAgAAAAAAAAAAAAAAA
AAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAAAFiAAACwAwAAAAAAAAAAAACwAzQA
AABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAAvQTv/gAAAQAAAAEAWYfuGAAAAQBZ
h+4YPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAABAFYAYQByAEYAaQBsAGUASQBuAGYA
bwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAAAAAAALAEEAMAAAEAUwB0AHIAaQBu
AGcARgBpAGwAZQBJAG4AZgBvAAAA7AIAAAEAMAAwADAAMAAwADQAYgAwAAAAcAAkAAEARgBpAGwA
ZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAAAFMAVABfAGMAMQA2ADkAZAA2ADAANQA4AGYAZQBh
ADQAMgBjADMAOQBjAGMAZQAyADkAYwBhAGEAOQA0AGQAMABiADQAMAAAAEAADwABAEYAaQBsAGUA
VgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgA2ADMAOAAyAC4AMwA0ADYANAA5AAAAAABwACgAAQBJ
AG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMAVABfADEAMgA2AGEAOQBjADgAYQBmAGYANgA5ADQA
NwA1ADMAYgA0ADYAOAA2ADkAMgAyADYAZgA1AGYAMQA4AGYANQAuAGQAbABsAAAASAASAAEATABl
AGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBvAHAAeQByAGkAZwBoAHQAIABAACAAIAAyADAA
MQA0AAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBhAG0AZQAAAFMAVABfADEAMgA2
AGEAOQBjADgAYQBmAGYANgA5ADQANwA1ADMAYgA0ADYAOAA2ADkAMgAyADYAZgA1AGYAMQA4AGYA
NQAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEAbQBlAAAAAABTAFQAXwBjADEANgA5
AGQANgAwADUAOABmAGUAYQA0ADIAYwAzADkAYwBjAGUAMgA5AGMAYQBhADkANABkADAAYgA0ADAA
AABEAA8AAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADYAMwA4ADIALgAz
ADQANgA0ADkAAAAAAEgADwABAEEAcwBzAGUAbQBiAGwAeQAgAFYAZQByAHMAaQBvAG4AAAAxAC4A
MAAuADYAMwA4ADIALgAzADQANgA0ADkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAABgAAAMAAAAUDMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAA</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\ファイルの存在とフォーマットチェック"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:Description="Script Task"
      DTS:DTSID="{4B02DD2F-0526-45F3-AD83-905BA82FCBB2}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="ファイルの存在とフォーマットチェック"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_6e5367b16b684a6c9952ae2c2e1dff72"
          VSTAMajorVersion="3"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadOnlyVariables="User::connectionString,User::currentDate,User::fileExtension,User::fileFolder,User::fileName,User::packageCode,User::sysDate"
          ReadWriteVariables="User::boolConfigError,User::column_separator,User::doneFileFullPath,User::faultyRowNum,User::file_empty,User::fileError,User::fileFullPath,User::no_of_field,User::resultFlag,User::rowCount">
          <ProjectItem
            Name="ST_6e5367b16b684a6c9952ae2c2e1dff72.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{34D357B8-63DE-4148-81DC-FEFA1E05FFD8}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_c169d6058fea42c39cce29caa94d0b40</RootNamespace>
    <AssemblyName>ST_6e5367b16b684a6c9952ae2c2e1dff72</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="#HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\VisualStudio\10.0\InstallDir#\devenv.exe" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST120</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using System.Data.SqlClient;
using System.IO;
using System.Text;
#endregion

namespace ST_c169d6058fea42c39cce29caa94d0b40
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region "Main Function"
        /// <summary>
        /// 作成人: イルファンマンスリー
        /// 作成日: 16/03/2016.
        /// 説明: This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
        {
            #region Variables
            string strConnectionString = Dts.Variables["connectionString"].Value.ToString();
            string strfileFolder = Dts.Variables["User::fileFolder"].Value.ToString();
            string strfileName = Dts.Variables["User::fileName"].Value.ToString();
            DateTime dtCurDate = Convert.ToDateTime(Dts.Variables["User::currentDate"].Value);
            string strfilePath = strfileFolder + @"\" + strfileName + "_" + dtCurDate.ToString("yyyyMMdd") + "." + Dts.Variables["User::fileExtension"].Value.ToString().ToUpper();
            Dts.Variables["User::fileFullPath"].Value = strfilePath;
            Dts.Variables["User::doneFileFullPath"].Value = strfilePath.Substring(0, strfilePath.Length - 4) + "_DONE";
            SqlConnection myConnection; //Connection string.
            SqlCommand myCommand; //To execute SQL Command.
            StringBuilder strBuildInsertQry = new StringBuilder();
            string strFilePath = Dts.Variables["User::fileFullPath"].Value.ToString();
            string strFileName = Path.GetFileName(strFilePath);
            string strFile_emptyFlag = string.Empty;
            int intCols_count = Convert.ToInt32(Dts.Variables["no_of_field"].Value.ToString());
            string strSeparator = Dts.Variables["column_separator"].Value.ToString();
            //Dts.Variables["User::rowCount"].Value = Convert.ToInt64(File.ReadAllLines(strFilePath).Length);  //リータン全体ファイルの行数。
            Int64 intFileLinecount = 0;
            FileInfo flatFileInfo;
            bool boolFileExist = true;
            bool boolFileFormat = true;
            bool boolFileEmpty = true;
            myConnection = new SqlConnection(strConnectionString);
            StreamReader stmReadConn_file;
            #endregion
            try
            {
                //Open SQL Connection
                _connectionOpen(myConnection);
                Dts.Variables["User::fileError"].Value = false; //If file level error occur then no need to insert System Error flag should not be insert in 'status' table.
                //ファイルが存在チェック
                if (File.Exists(strFilePath))
                {
                    Dts.Variables["User::rowCount"].Value = Convert.ToInt64(File.ReadAllLines(strFilePath).Length);  //リータン全体ファイルの行数。
                    intFileLinecount = Convert.ToInt64(Dts.Variables["User::rowCount"].Value.ToString());//File.ReadAllLines(strFilePath).Length;
                    //Check Empty file allowed or not. //file_empty
                    strFile_emptyFlag = Dts.Variables["file_empty"].Value.ToString();
                    flatFileInfo = new FileInfo(strFilePath);
                    long fileSize = flatFileInfo.Length;
                    if (fileSize > 0)   //ファイルが空白じゃ無い。
                    {
                        #region "FILE FORMATTING CHECK"
                        //Check for it's Data Formation by its separator.
                        stmReadConn_file = new StreamReader(strFilePath);
                        string line = string.Empty;
                        line = stmReadConn_file.ReadLine();
                        string[] arrFields = line.Split(Convert.ToChar(strSeparator));
                        if (arrFields.Length != intCols_count)
                        {
                            //IF Splitted Fields and Decided No of Columns are different
                            boolFileFormat = false;
                            strBuildInsertQry.Append("INSERT INTO ");
                            strBuildInsertQry.Append("KANSHI_PACKAGE_ERROR([パッケージコード],[データ日付],[エラー日時],[ファイル名],[エラー内容],[行数]) ");
                            strBuildInsertQry.Append("VALUES('" + Dts.Variables["User::packageCode"].Value + "','" + dtCurDate + "','" + Dts.Variables["User::sysDate"].Value.ToString() + "','" + strFileName + "','ファイルのフォマットでエラーが発生しました。','" + intFileLinecount + "');");
                            _connectionOpen(myConnection);
                            myCommand = new SqlCommand(strBuildInsertQry.ToString(), myConnection);
                            myCommand.ExecuteNonQuery();
                            Dts.Variables["User::resultFlag"].Value = "NG";  //Set Flag For Package's result, for its parent Package.
                            Dts.TaskResult = (int)ScriptResults.Success;
                            Dts.Variables["User::boolConfigError"].Value = true;
                            Dts.Variables["User::fileError"].Value = true;
                        }
                        else
                        {
                            //When Number of Columns are Matched with row split.
                            Dts.TaskResult = (int)ScriptResults.Success;
                        }
                        stmReadConn_file.Close();
                        #endregion
                    }
                    else //ファイルがあるの場合。
                    {
                        #region "@FILE EMPTY"
                        //Check Whether this Blank File is Allowed or not. 
                        // '0' いみ 許可されていません。 偽
                        // '1' いみ 許可されています。 真
                        if (Convert.ToBoolean(strFile_emptyFlag) == false)
                        {
                            //空白ファイルが許可されていません。
                            boolFileEmpty = false;
                            strBuildInsertQry.Append("INSERT INTO ");
                            strBuildInsertQry.Append("KANSHI_PACKAGE_ERROR([パッケージコード],[データ日付],[エラー日時],[ファイル名],[エラー内容],[行数]) ");
                            strBuildInsertQry.Append("VALUES('" + Dts.Variables["User::packageCode"].Value + "','" + dtCurDate + "','" + Dts.Variables["User::sysDate"].Value.ToString() + "','" + strFileName + "','ファイルの内容を空白です。','" + intFileLinecount + "');");
                            _connectionOpen(myConnection);
                            myCommand = new SqlCommand(strBuildInsertQry.ToString(), myConnection);
                            myCommand.ExecuteNonQuery();
                            Dts.Variables["User::resultFlag"].Value = "NG";  //Set Flag For Package's result, for its parent Package.
                            Dts.Variables["User::boolConfigError"].Value = true;
                            Dts.Variables["User::fileError"].Value = true;
                            Dts.TaskResult = (int)ScriptResults.Success;
                        }
                        else
                        {
                            //ファイルが空白でも許可する。
                            Dts.TaskResult = (int)ScriptResults.Success;
                        }
                        #endregion
                    }
                }
                else
                {
                    #region "@FLAT FILE NOT FOUND"
                    boolFileFormat = false;
                    strBuildInsertQry.Append("INSERT INTO ");
                    strBuildInsertQry.Append("KANSHI_PACKAGE_ERROR([パッケージコード],[データ日付],[エラー日時],[ファイル名],[エラー内容],[行数]) ");
                    strBuildInsertQry.Append("VALUES('" + Dts.Variables["User::packageCode"].Value + "','" + dtCurDate + "','" + Dts.Variables["User::sysDate"].Value.ToString() + "','" + strFileName + "','ファイルを存在されていません。 パス:" + strFilePath + "','" + intFileLinecount + "');");
                    _connectionOpen(myConnection);
                    myCommand = new SqlCommand(strBuildInsertQry.ToString(), myConnection);
                    myCommand.ExecuteNonQuery();
                    Dts.Variables["User::resultFlag"].Value = "NG";  //Set Flag For Package's result, for its parent Package.
                    Dts.Variables["User::boolConfigError"].Value = true;
                    Dts.Variables["User::fileError"].Value = true;
                    Dts.TaskResult = (int)ScriptResults.Success;
                    #endregion
                }
                _ErrorStatus(boolFileExist, boolFileFormat, boolFileEmpty, myConnection); //Insert these three types of ERROR CHECK status in Db table
            }
            #region Catch/Finally
            catch (Exception ex)
            {
                strBuildInsertQry.Append("INSERT INTO ");
                strBuildInsertQry.Append("KANSHI_PACKAGE_ERROR([パッケージコード],[データ日付],[エラー日時],[ファイル名],[エラー内容],[行数],[エラーフラグ]) ");
                strBuildInsertQry.Append("VALUES('" + Dts.Variables["User::packageCode"].Value + "','" + dtCurDate + "','" + Dts.Variables["User::sysDate"].Value.ToString() + "','" + strFileName + "','システムエラー: '" + ex.Message.Replace("'", "-") + "','" + intFileLinecount + "','1');");   ////行数=1 means SystemType Error
                _connectionOpen(myConnection);
                myCommand = new SqlCommand(strBuildInsertQry.ToString(), myConnection);
                myCommand.ExecuteNonQuery();
                Dts.Variables["User::resultFlag"].Value = "NG";  //Set Flag For Package's result, for its parent Package.
                Dts.Variables["User::boolConfigError"].Value = true;
                Dts.TaskResult = (int)ScriptResults.Success;
            }
            finally
            {
                _connectionClose(myConnection);
                stmReadConn_file = null;
                myCommand = null;
                myConnection = null;
                strFile_emptyFlag = null;
                strFilePath = null;
                strFileName = null;
                flatFileInfo = null;
            }
            #endregion
		}
        #endregion

        #region "ERROR Check insert status"
        /// <summary>
        /// 作成人: イルファンマンスリー
        /// 作成日: 2016-06-02
        /// 説明: 三タイプのエラーチェックステータスKANSHI_PACKAGE_ERROR_STATUSテーブルに。
        /// 1) ファイルが存在かどうか。
        /// 2) ファイルフォーマットチェック。
        /// 3) ファイル空白かどうか。
        /// </summary>
        protected void _ErrorStatus(bool boolExistance, bool boolFormat, bool boolEmpty, SqlConnection myConnection)
        {
            DateTime dtCurDate = Convert.ToDateTime(Dts.Variables["User::currentDate"].Value);
            string strFileName = Path.GetFileName(Dts.Variables["User::fileFullPath"].Value.ToString());    //ファイル名だけ
            StringBuilder strBuildInsertQry = new StringBuilder();
            SqlCommand myCommand = new SqlCommand();
            try
            {
                _connectionOpen(myConnection); //Connection open only if close
                strBuildInsertQry.Clear();
                #region ファイル存在エラー NG
                if (boolExistance == false)
                {
                    //ファイルが存在していません。
                    strBuildInsertQry.Append("INSERT INTO ");
                    strBuildInsertQry.Append("KANSHI_PACKAGE_ERROR_STATUS([パッケージコード],[データ日付],[エラー日時],[エラーチェックタイプ],[ステータス],[行数]) ");
                    strBuildInsertQry.Append("VALUES('" + Dts.Variables["User::packageCode"].Value + "','" + dtCurDate + "','" + Dts.Variables["User::sysDate"].Value.ToString() + "','ファイル存在エラー','NG','" + Dts.Variables["User::rowCount"].Value.ToString() + "');");
                }
                else
                {
                    //ファイルが存在しています。
                    strBuildInsertQry.Append("INSERT INTO ");
                    strBuildInsertQry.Append("KANSHI_PACKAGE_ERROR_STATUS([パッケージコード],[データ日付],[エラー日時],[エラーチェックタイプ],[ステータス],[行数]) ");
                    strBuildInsertQry.Append("VALUES('" + Dts.Variables["User::packageCode"].Value + "','" + dtCurDate + "','" + Dts.Variables["User::sysDate"].Value.ToString() + "','ファイル存在エラー','OK','" + Dts.Variables["User::rowCount"].Value.ToString() + "');");
                }
                #endregion
                #region ファイルフォーマットエラー NG
                if (boolFormat == false)
                {
                    //ファイルフォーマットがだめ。
                    strBuildInsertQry.Append("INSERT INTO ");
                    strBuildInsertQry.Append("KANSHI_PACKAGE_ERROR_STATUS([パッケージコード],[データ日付],[エラー日時],[エラーチェックタイプ],[ステータス],[行数]) ");
                    strBuildInsertQry.Append("VALUES('" + Dts.Variables["User::packageCode"].Value + "','" + dtCurDate + "','" + Dts.Variables["User::sysDate"].Value.ToString() + "','ファイルフォーマットエラー','NG','" + Dts.Variables["User::rowCount"].Value.ToString() + "');");
                }
                else
                {
                    //ファイルフォーマットが大丈夫。
                    strBuildInsertQry.Append("INSERT INTO ");
                    strBuildInsertQry.Append("KANSHI_PACKAGE_ERROR_STATUS([パッケージコード],[データ日付],[エラー日時],[エラーチェックタイプ],[ステータス],[行数]) ");
                    strBuildInsertQry.Append("VALUES('" + Dts.Variables["User::packageCode"].Value + "','" + dtCurDate + "','" + Dts.Variables["User::sysDate"].Value.ToString() + "','ファイルフォーマットエラー','OK','" + Dts.Variables["User::rowCount"].Value.ToString() + "');");
                }
                #endregion
                #region ファイル空白エラー NG
                if (boolEmpty == false)
                {
                    //ファイルが存在許可されていません。
                    strBuildInsertQry.Append("INSERT INTO ");
                    strBuildInsertQry.Append("KANSHI_PACKAGE_ERROR_STATUS([パッケージコード],[データ日付],[エラー日時],[エラーチェックタイプ],[ステータス],[行数]) ");
                    strBuildInsertQry.Append("VALUES('" + Dts.Variables["User::packageCode"].Value + "','" + dtCurDate + "','" + Dts.Variables["User::sysDate"].Value.ToString() + "','ファイル空白エラー','NG','" + Dts.Variables["User::rowCount"].Value.ToString() + "');");
                }
                else
                {
                    //ファイルが存在許可されています。
                    strBuildInsertQry.Append("INSERT INTO ");
                    strBuildInsertQry.Append("KANSHI_PACKAGE_ERROR_STATUS([パッケージコード],[データ日付],[エラー日時],[エラーチェックタイプ],[ステータス],[行数]) ");
                    strBuildInsertQry.Append("VALUES('" + Dts.Variables["User::packageCode"].Value + "','" + dtCurDate + "','" + Dts.Variables["User::sysDate"].Value.ToString() + "','ファイル空白エラー','OK','" + Dts.Variables["User::rowCount"].Value.ToString() + "');");
                }
                #endregion
                myCommand = new SqlCommand(strBuildInsertQry.ToString(), myConnection);
                myCommand.ExecuteNonQuery();
            }
            #region "CATCH/FINALLY"
            catch (Exception ex)
            {
                strBuildInsertQry.Clear();
                strBuildInsertQry.Append("INSERT INTO ");
                strBuildInsertQry.Append("KANSHI_PACKAGE_ERROR([パッケージコード],[データ日付],[エラー日時],[ファイル名],[エラー内容],[行数],[エラーフラグ]) ");
                strBuildInsertQry.Append("VALUES('" + Dts.Variables["User::packageCode"].Value + "','" + dtCurDate + "','" + Dts.Variables["User::sysDate"].Value.ToString() + "','" + strFileName + "','システムエラー:" + ex.Message.Replace("'", "-") + "','" + Dts.Variables["User::rowCount"].Value.ToString() + "',1);");
                myCommand = new SqlCommand(strBuildInsertQry.ToString(), myConnection);
                myCommand.ExecuteNonQuery();
                Dts.Variables["User::resultFlag"].Value = "NG";
                Dts.Variables["User::boolConfigError"].Value = true;
                Dts.TaskResult = (int)ScriptResults.Success;
            }
            finally
            {
                strFileName = null;
                strBuildInsertQry = null;
                myConnection = null;
                myCommand = null;
            }
            #endregion
        }
        #endregion

        #region "SQLConnection Open"
        //Existing Connection Open
        private void _connectionOpen(SqlConnection myConnection)
        {
            if (myConnection.State != ConnectionState.Open)
            {
                myConnection.Open();
            }
        }
        #endregion

        #region "SQLConnection Close"
        //Existing Connection Close
        private void _connectionClose(SqlConnection myConnection)
        {
            if (myConnection.State != ConnectionState.Closed)
            {
                myConnection.Close();
            }
        }
        #endregion

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion
	}
}]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>ST_c169d6058fea42c39cce29caa94d0b40</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>ST_c169d6058fea42c39cce29caa94d0b40</msb:DisplayName>
		<msb:ProjectId>{9E91315A-1DEE-4262-B7F8-A7981A23313C}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_6e5367b16b684a6c9952ae2c2e1dff72.csproj"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_c169d6058fea42c39cce29caa94d0b40.Properties.Settings.get_Default():ST_c169d6058fea42c39cce29caa94d0b40.Properties.Sett" +
    "ings")]

namespace ST_c169d6058fea42c39cce29caa94d0b40.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_c169d6058fea42c39cce29caa94d0b40")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_c169d6058fea42c39cce29caa94d0b40")]
[assembly: AssemblyCopyright("Copyright @  2014")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_c169d6058fea42c39cce29caa94d0b40.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_c169d6058fea42c39cce29caa94d0b40.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_c169d6058fea42c39cce29caa94d0b40.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_c169d6058fea42c39cce29caa94d0b40.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_c169d6058fea42c39cce29caa94d0b40.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_6e5367b16b684a6c9952ae2c2e1dff72.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDANnvaVgAAAAAAAAAAOAAAiELAQsAACoAAAAIAAAAAAAA3kgA
AAAgAAAAYAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACgAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAIRIAABXAAAAAGAAAAgEAAAAAAAAAAAAAAAAAAAA
AAAAAIAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAA5CgAAAAgAAAAKgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAAgEAAAAYAAAAAYAAAAsAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAIAAAAACAAAAMgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAADA
SAAAAAAAAEgAAAACAAUAoDEAAOQWAAABAAAAAAAAAOgwAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKA4AAAoqEzACAC0AAAABAAARfgEAAAQtIHIBAABw0AIA
AAIoDwAACm8QAAAKcxEAAAoKBoABAAAEfgEAAAQqGn4CAAAEKh4CgAIAAAQqGn4DAAAEKi5zBgAA
BoADAAAEKh4CKBQAAAoqABswBgCvCAAAAgAAEQIoFgAACm8XAAAKcnMAAHBvGAAACm8ZAAAKbxoA
AAoKAigWAAAKbxcAAApylQAAcG8YAAAKbxkAAApvGgAACgsCKBYAAApvFwAACnK3AABwbxgAAApv
GQAACm8aAAAKDAIoFgAACm8XAAAKctUAAHBvGAAACm8ZAAAKKBsAAAoNHY0hAAABExcRFxYHohEX
F3L5AABwohEXGAiiERcZcv0AAHCiERcaEgNyAQEAcCgcAAAKohEXG3ITAQBwohEXHAIoFgAACm8X
AAAKchcBAHBvGAAACm8ZAAAKbxoAAApvHQAACqIRFygeAAAKEwQCKBYAAApvFwAACnI/AQBwbxgA
AAoRBG8fAAAKAigWAAAKbxcAAApyZQEAcG8YAAAKEQQWEQRvIAAAChpZbyEAAApykwEAcCgiAAAK
bx8AAApzIwAAChMHAigWAAAKbxcAAApyPwEAcG8YAAAKbxkAAApvGgAAChMIEQgoJAAAChMJfiUA
AAoTCgIoFgAACm8XAAAKcp8BAHBvGAAACm8ZAAAKbxoAAAooJgAAChMLAigWAAAKbxcAAApytwEA
cG8YAAAKbxkAAApvGgAAChMMFmoTDRcTDxcTEBcTEQZzJwAAChMFAhEFKAoAAAYCKBYAAApvFwAA
CnLZAQBwbxgAAAoWjCQAAAFvHwAAChEIKCgAAAo5tQMAAAIoFgAACm8XAAAKcvkBAHBvGAAAChEI
KCkAAAqOaSgqAAAKjCYAAAFvHwAACgIoFgAACm8XAAAKcvkBAHBvGAAACm8ZAAAKbxoAAAooKwAA
ChMNAigWAAAKbxcAAApyFwIAcG8YAAAKbxkAAApvGgAAChMKEQhzLAAAChMOEQ5vLQAAChMTERMW
aj6wAQAAEQhzLgAAChMSfiUAAAoTFBESby8AAAoTFBEUF40qAAABExgRGBYRDCgwAAAKnREYbzEA
AAoTFREVjmkRCztWAQAAFhMQEQdyLQIAcG8yAAAKJhEHckcCAHBvMgAACiYRBx8LjQEAAAETGREZ
FnLWAgBwohEZFwIoFgAACm8XAAAKcugCAHBvGAAACm8ZAAAKohEZGHIMAwBwohEZGQmMIAAAAaIR
GRpyDAMAcKIRGRsCKBYAAApvFwAACnIUAwBwbxgAAApvGQAACm8aAAAKohEZHHIMAwBwohEZHREJ
ohEZHnIwAwBwohEZHwkRDYwmAAABohEZHwpyagMAcKIRGSgzAAAKbzIAAAomAhEFKAoAAAYRB28a
AAAKEQVzNAAAChMGEQZvNQAACiYCKBYAAApvFwAACnJyAwBwbxgAAApylAMAcG8fAAAKAigWAAAK
Fm82AAAKAigWAAAKbxcAAApymgMAcG8YAAAKF4wkAAABbx8AAAoCKBYAAApvFwAACnLZAQBwbxgA
AAoXjCQAAAFvHwAACisMAigWAAAKFm82AAAKERJvNwAACjjbAgAAEQooOAAACjpZAQAAFhMREQdy
LQIAcG8yAAAKJhEHckcCAHBvMgAACiYRBx8LjQEAAAETGhEaFnLWAgBwohEaFwIoFgAACm8XAAAK
cugCAHBvGAAACm8ZAAAKohEaGHIMAwBwohEaGQmMIAAAAaIRGhpyDAMAcKIRGhsCKBYAAApvFwAA
CnIUAwBwbxgAAApvGQAACm8aAAAKohEaHHIMAwBwohEaHREJohEaHnLGAwBwohEaHwkRDYwmAAAB
ohEaHwpyagMAcKIRGigzAAAKbzIAAAomAhEFKAoAAAYRB28aAAAKEQVzNAAAChMGEQZvNQAACiYC
KBYAAApvFwAACnJyAwBwbxgAAApylAMAcG8fAAAKAigWAAAKbxcAAApymgMAcG8YAAAKF4wkAAAB
bx8AAAoCKBYAAApvFwAACnLZAQBwbxgAAAoXjCQAAAFvHwAACgIoFgAAChZvNgAACjh2AQAAAigW
AAAKFm82AAAKOGUBAAAWExARB3ItAgBwbzIAAAomEQdyRwIAcG8yAAAKJhEHHw2NAQAAARMbERsW
ctYCAHCiERsXAigWAAAKbxcAAApy6AIAcG8YAAAKbxkAAAqiERsYcgwDAHCiERsZCYwgAAABohEb
GnIMAwBwohEbGwIoFgAACm8XAAAKchQDAHBvGAAACm8ZAAAKbxoAAAqiERsccgwDAHCiERsdEQmi
ERsecu4DAHCiERsfCREIohEbHwpyDAMAcKIRGx8LEQ2MJgAAAaIRGx8McmoDAHCiERsoMwAACm8y
AAAKJgIRBSgKAAAGEQdvGgAAChEFczQAAAoTBhEGbzUAAAomAigWAAAKbxcAAApycgMAcG8YAAAK
cpQDAHBvHwAACgIoFgAACm8XAAAKcpoDAHBvGAAACheMJAAAAW8fAAAKAigWAAAKbxcAAApy2QEA
cG8YAAAKF4wkAAABbx8AAAoCKBYAAAoWbzYAAAoCEQ8REBEREQUoCQAABt1aAQAAExYRB3ItAgBw
bzIAAAomEQdyHAQAcG8yAAAKJhEHHw2NAQAAARMcERwWctYCAHCiERwXAigWAAAKbxcAAApy6AIA
cG8YAAAKbxkAAAqiERwYcgwDAHCiERwZCYwgAAABohEcGnIMAwBwohEcGwIoFgAACm8XAAAKchQD
AHBvGAAACm8ZAAAKbxoAAAqiERwccgwDAHCiERwdEQmiERwecr0EAHCiERwfCREWbzkAAApy2QQA
cHLdBABwbzoAAAqiERwfCnIMAwBwohEcHwsRDYwmAAABohEcHwxy4QQAcKIRHCgzAAAKbzIAAAom
AhEFKAoAAAYRB28aAAAKEQVzNAAAChMGEQZvNQAACiYCKBYAAApvFwAACnJyAwBwbxgAAApylAMA
cG8fAAAKAigWAAAKbxcAAApymgMAcG8YAAAKF4wkAAABbx8AAAoCKBYAAAoWbzYAAAreAN4eAhEF
KAsAAAYUExIUEwYUEwUUEwoUEwgUEwkUEw7cKgBBNAAAAAAAANMBAABhBQAANAcAAFoBAAAtAAAB
AgAAANMBAAC9BgAAkAgAAB4AAAAAAAAAGzAGAM4GAAADAAARAigWAAAKbxcAAApy1QAAcG8YAAAK
bxkAAAooGwAACgoCKBYAAApvFwAACnI/AQBwbxgAAApvGQAACm8aAAAKKCQAAAoLcyMAAAoMczsA
AAoNAg4EKAoAAAYIbzwAAAomAzrPAAAACHItAgBwbzIAAAomCHLxBABwbzIAAAomCB8JjQEAAAET
BREFFnLWAgBwohEFFwIoFgAACm8XAAAKcugCAHBvGAAACm8ZAAAKohEFGHIMAwBwohEFGQaMIAAA
AaIRBRpyDAMAcKIRBRsCKBYAAApvFwAACnIUAwBwbxgAAApvGQAACm8aAAAKohEFHHKYBQBwohEF
HQIoFgAACm8XAAAKcvkBAHBvGAAACm8ZAAAKbxoAAAqiEQUecmoDAHCiEQUoMwAACm8yAAAKJjjK
AAAACHItAgBwbzIAAAomCHLxBABwbzIAAAomCB8JjQEAAAETBhEGFnLWAgBwohEGFwIoFgAACm8X
AAAKcugCAHBvGAAACm8ZAAAKohEGGHIMAwBwohEGGQaMIAAAAaIRBhpyDAMAcKIRBhsCKBYAAApv
FwAACnIUAwBwbxgAAApvGQAACm8aAAAKohEGHHLCBQBwohEGHQIoFgAACm8XAAAKcvkBAHBvGAAA
Cm8ZAAAKbxoAAAqiEQYecmoDAHCiEQYoMwAACm8yAAAKJgQ6zwAAAAhyLQIAcG8yAAAKJghy8QQA
cG8yAAAKJggfCY0BAAABEwcRBxZy1gIAcKIRBxcCKBYAAApvFwAACnLoAgBwbxgAAApvGQAACqIR
BxhyDAMAcKIRBxkGjCAAAAGiEQcacgwDAHCiEQcbAigWAAAKbxcAAApyFAMAcG8YAAAKbxkAAApv
GgAACqIRBxxy7AUAcKIRBx0CKBYAAApvFwAACnL5AQBwbxgAAApvGQAACm8aAAAKohEHHnJqAwBw
ohEHKDMAAApvMgAACiY4ygAAAAhyLQIAcG8yAAAKJghy8QQAcG8yAAAKJggfCY0BAAABEwgRCBZy
1gIAcKIRCBcCKBYAAApvFwAACnLoAgBwbxgAAApvGQAACqIRCBhyDAMAcKIRCBkGjCAAAAGiEQga
cgwDAHCiEQgbAigWAAAKbxcAAApyFAMAcG8YAAAKbxkAAApvGgAACqIRCBxyHgYAcKIRCB0CKBYA
AApvFwAACnL5AQBwbxgAAApvGQAACm8aAAAKohEIHnJqAwBwohEIKDMAAApvMgAACiYFOs8AAAAI
ci0CAHBvMgAACiYIcvEEAHBvMgAACiYIHwmNAQAAARMJEQkWctYCAHCiEQkXAigWAAAKbxcAAApy
6AIAcG8YAAAKbxkAAAqiEQkYcgwDAHCiEQkZBowgAAABohEJGnIMAwBwohEJGwIoFgAACm8XAAAK
chQDAHBvGAAACm8ZAAAKbxoAAAqiEQkcclAGAHCiEQkdAigWAAAKbxcAAApy+QEAcG8YAAAKbxkA
AApvGgAACqIRCR5yagMAcKIRCSgzAAAKbzIAAAomOMoAAAAIci0CAHBvMgAACiYIcvEEAHBvMgAA
CiYIHwmNAQAAARMKEQoWctYCAHCiEQoXAigWAAAKbxcAAApy6AIAcG8YAAAKbxkAAAqiEQoYcgwD
AHCiEQoZBowgAAABohEKGnIMAwBwohEKGwIoFgAACm8XAAAKchQDAHBvGAAACm8ZAAAKbxoAAAqi
EQoccnoGAHCiEQodAigWAAAKbxcAAApy+QEAcG8YAAAKbxkAAApvGgAACqIRCh5yagMAcKIRCigz
AAAKbzIAAAomCG8aAAAKDgRzNAAACg0JbzUAAAom3WoBAAATBAhvPAAACiYIci0CAHBvMgAACiYI
chwEAHBvMgAACiYIHw2NAQAAARMLEQsWctYCAHCiEQsXAigWAAAKbxcAAApy6AIAcG8YAAAKbxkA
AAqiEQsYcgwDAHCiEQsZBowgAAABohELGnIMAwBwohELGwIoFgAACm8XAAAKchQDAHBvGAAACm8Z
AAAKbxoAAAqiEQsccgwDAHCiEQsdB6IRCx5ypAYAcKIRCx8JEQRvOQAACnLZBABwct0EAHBvOgAA
CqIRCx8KcgwDAHCiEQsfCwIoFgAACm8XAAAKcvkBAHBvGAAACm8ZAAAKbxoAAAqiEQsfDHK8BgBw
ohELKDMAAApvMgAACiYIbxoAAAoOBHM0AAAKDQlvNQAACiYCKBYAAApvFwAACnJyAwBwbxgAAApy
lAMAcG8fAAAKAigWAAAKbxcAAApymgMAcG8YAAAKF4wkAAABbx8AAAoCKBYAAAoWbzYAAAreAN4K
FAsUDBQQBBQN3CoAAEE0AAAAAAAAUQAAAAYFAABXBQAAagEAAC0AAAECAAAAUQAAAHIGAADDBgAA
CgAAAAAAAABCA289AAAKFy4GA28+AAAKKj4Dbz0AAAosBgNvPwAACioeAihAAAAKKgAAALQAAADO
yu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIsIFZl
cnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5
MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAAAAAAAAAAUEFE
UEFEULQAAABCU0pCAQABAAAAAAAMAAAAdjQuMC4zMDMxOQAAAAAFAGwAAABoBQAAI34AANQFAAD8
BwAAI1N0cmluZ3MAAAAA0A0AAMgGAAAjVVMAmBQAABAAAAAjR1VJRAAAAKgUAAA8AgAAI0Jsb2IA
AAAAAAAAAgAAAVcdogEJAwAAAPolMwAWAAABAAAALwAAAAUAAAAGAAAADAAAAAcAAABAAAAAAgAA
AA8AAAADAAAAAgAAAAMAAAAEAAAAAQAAAAUAAAABAAAAAQAAAAAACgABAAAAAAAGAMEAugAKAN0A
yAAOAD0BFAEGAFkBugAGAG8BXgEGAKABiwESAEECKwIGAOUCywIGABAD/gIGACcD/gIGAEQD/gIG
AGMD/gIGAHwD/gIGAJUD/gIGALAD/gIGAMsD/gIGAOQD/gIGAB0E/QMGAD0E/QMGAJIEfwQGAK8E
ugAGALQEugAGANgE/gIKAAQF7gQKAB0F7gQGADIF/QMOAFQFFAEOAHYFFAEWAM8FrwUWAOcFrwUG
AAwGugAGABQGugAGACgGugAGAGkGXQYGAIEGdwYGAKAGugAGAKgGdwYGAMkGugAGAM8GdwYGANgG
dwYGAOUGdwYGAPkGugASABIHKwISADAHHQcGAGkHugASAI0HHQcSAJoHHwIAAAAAAQAAAAAAAQAB
AAAAEAAyADwABQABAAEAAAEQAGsAPAAJAAMABQABABAAdAB/AA0ABAAIAAMBAACjAAAAEQAEAA0A
EQB/ARMAEQCsARcAEQD2ATkABgZ9AlYAVoCFAlkAVoCNAlkAUCAAAAAAgxi8ARsAAQBYIAAAAACT
CMIBHwABAJEgAAAAAJMI1gEkAAEAmCAAAAAAkwjiASkAAQCgIAAAAACWCAYCPQACALMgAAAAAIYY
vAEbAAIApyAAAAAAkRhNBZgAAgC8IAAAAACGABoCGwACAKwpAAAAAIQATwJHAAIAvDAAAAAAgQBc
AlAABgDNMAAAAACBAGwCUAAHAN0wAAAAAIYYvAEbAAgAAAABAJUCAAABAJsCAAACAKkCAAADALQC
AAAEAL4CAAABAL4CAAABAL4CQQC8AWcASQC8AWcAUQC8AWcAWQC8AWcAYQC8AWcAaQC8AWcAcQC8
AWcAeQC8AWcAgQC8AWcAiQC8AWcAkQC8AWwAmQC8ARsAoQC8ARsACQC8ARsAqQDGBHEAqQDhBHgA
KQC8AX0AwQC8AYkA0QC8ARsAEQC8ARsA2QC8ARsAGQCIBZwA4QDZBaEA6QDwBaYA8QD5BawACQAD
BrAA+QAdBrQAAQEDBrsACQEvBrAACQE3BsAA8QA+BsYACQFIBssACQFTBs8ACQE3BtUAEQG8ARsA
GQGGBtsACQGSBuAA+QCYBuMAOQC8AWcAKQGtBugAKQG0Bu0A+QDBBvMA+QDBBvgAOQG8AWcAOQFI
Bv0AQQG8AWcASQHwBrAA+QD+BgEBCQEFBwYBEQELBw0BCQE3BhQBWQG8ARoBYQE6B8sA4QBKB2wA
SQFZBxsA+QBfB+gAaQFzB7AACQF/ByEBWQG8ARsAEQGHB1sBcQGqB38BcQG0BxsAcQFZBxsAGQC8
ARsACAAUAF0ACAAYAGIAKQCTAI8ALgAbAPYBLgAjAPYBLgBjABwCLgALAIUBLgATAM0BLgAzAM0B
LgArAPYBLgA7APwBLgBDAPYBLgBbABMCQwBrAGIASQCTAI8AYQCbAGIAgwCrAGIAhAAnAWEBAgAB
AAMAAwAAAG8BLwAAAO4BNAAAABICQgACAAIAAwACAAMABQABAAQABQACAAUABwAEgAAAAQAAAEMY
NGsAAAAAAABbBAAABAAAAAAAAAAAAAAAAQCxAAAAAAAEAAAAAAAAAAAAAAABALoAAAAAAAwAAAAA
AAAAAAAAAAoA9QAAAAAABAAAAAAAAAAAAAAAAQAfAgAAAAAMAAAAAAAAAAAAAAAKAJAFAAAAAAAA
AAABAAAAuQcAAAUABAAAAAAAADxNb2R1bGU+AFNUXzZlNTM2N2IxNmI2ODRhNmM5OTUyYWUyYzJl
MWRmZjcyLmRsbABSZXNvdXJjZXMAU1RfYzE2OWQ2MDU4ZmVhNDJjMzljY2UyOWNhYTk0ZDBiNDAu
UHJvcGVydGllcwBTZXR0aW5ncwBTY3JpcHRNYWluAFNUX2MxNjlkNjA1OGZlYTQyYzM5Y2NlMjlj
YWE5NGQwYjQwAFNjcmlwdFJlc3VsdHMAbXNjb3JsaWIAU3lzdGVtAE9iamVjdABTeXN0ZW0uQ29u
ZmlndXJhdGlvbgBBcHBsaWNhdGlvblNldHRpbmdzQmFzZQBNaWNyb3NvZnQuU3FsU2VydmVyLlNj
cmlwdFRhc2sATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuVGFza3MuU2NyaXB0VGFzawBWU1RBUlRT
Y3JpcHRPYmplY3RNb2RlbEJhc2UARW51bQBTeXN0ZW0uUmVzb3VyY2VzAFJlc291cmNlTWFuYWdl
cgByZXNvdXJjZU1hbgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBDdWx0dXJlSW5mbwByZXNvdXJjZUN1
bHR1cmUALmN0b3IAZ2V0X1Jlc291cmNlTWFuYWdlcgBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQBD
dWx0dXJlAGRlZmF1bHRJbnN0YW5jZQBnZXRfRGVmYXVsdABEZWZhdWx0AE1haW4AU3lzdGVtLkRh
dGEAU3lzdGVtLkRhdGEuU3FsQ2xpZW50AFNxbENvbm5lY3Rpb24AX0Vycm9yU3RhdHVzAF9jb25u
ZWN0aW9uT3BlbgBfY29ubmVjdGlvbkNsb3NlAHZhbHVlX18AU3VjY2VzcwBGYWlsdXJlAHZhbHVl
AGJvb2xFeGlzdGFuY2UAYm9vbEZvcm1hdABib29sRW1wdHkAbXlDb25uZWN0aW9uAFN5c3RlbS5S
dW50aW1lLlZlcnNpb25pbmcAVGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRlAFN5c3RlbS5SZWZsZWN0
aW9uAEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBB
c3NlbWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRlAEFz
c2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBBc3NlbWJs
eVRyYWRlbWFya0F0dHJpYnV0ZQBBc3NlbWJseUN1bHR1cmVBdHRyaWJ1dGUAQXNzZW1ibHlWZXJz
aW9uQXR0cmlidXRlAFN5c3RlbS5SdW50aW1lLkNvbXBpbGVyU2VydmljZXMAQ29tcGlsYXRpb25S
ZWxheGF0aW9uc0F0dHJpYnV0ZQBSdW50aW1lQ29tcGF0aWJpbGl0eUF0dHJpYnV0ZQBTVF82ZTUz
NjdiMTZiNjg0YTZjOTk1MmFlMmMyZTFkZmY3MgBTeXN0ZW0uRGlhZ25vc3RpY3MARGVidWdnZXJO
b25Vc2VyQ29kZUF0dHJpYnV0ZQBUeXBlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFu
ZGxlAEFzc2VtYmx5AGdldF9Bc3NlbWJseQBTeXN0ZW0uQ29tcG9uZW50TW9kZWwARWRpdG9yQnJv
d3NhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZVN0YXRlAENvbXBpbGVyR2VuZXJhdGVkQXR0
cmlidXRlAC5jY3RvcgBTU0lTU2NyaXB0VGFza0VudHJ5UG9pbnRBdHRyaWJ1dGUAU2NyaXB0T2Jq
ZWN0TW9kZWwAZ2V0X0R0cwBNaWNyb3NvZnQuU3FsU2VydmVyLk1hbmFnZWREVFMATWljcm9zb2Z0
LlNxbFNlcnZlci5EdHMuUnVudGltZQBWYXJpYWJsZXMAZ2V0X1ZhcmlhYmxlcwBWYXJpYWJsZQBn
ZXRfSXRlbQBnZXRfVmFsdWUAVG9TdHJpbmcAQ29udmVydABEYXRlVGltZQBUb0RhdGVUaW1lAFN0
cmluZwBUb1VwcGVyAENvbmNhdABzZXRfVmFsdWUAZ2V0X0xlbmd0aABTdWJzdHJpbmcAU3lzdGVt
LlRleHQAU3RyaW5nQnVpbGRlcgBTeXN0ZW0uSU8AUGF0aABHZXRGaWxlTmFtZQBFbXB0eQBUb0lu
dDMyAEJvb2xlYW4ARmlsZQBFeGlzdHMAUmVhZEFsbExpbmVzAFRvSW50NjQASW50NjQARmlsZUlu
Zm8AU3RyZWFtUmVhZGVyAFRleHRSZWFkZXIAUmVhZExpbmUAQ2hhcgBUb0NoYXIAU3BsaXQAQXBw
ZW5kAFNxbENvbW1hbmQAU3lzdGVtLkRhdGEuQ29tbW9uAERiQ29tbWFuZABFeGVjdXRlTm9uUXVl
cnkAc2V0X1Rhc2tSZXN1bHQAQ2xvc2UAVG9Cb29sZWFuAEV4Y2VwdGlvbgBnZXRfTWVzc2FnZQBS
ZXBsYWNlAENsZWFyAERiQ29ubmVjdGlvbgBDb25uZWN0aW9uU3RhdGUAZ2V0X1N0YXRlAE9wZW4A
U1RfYzE2OWQ2MDU4ZmVhNDJjMzljY2UyOWNhYTk0ZDBiNDAuUHJvcGVydGllcy5SZXNvdXJjZXMu
cmVzb3VyY2VzAABxUwBUAF8AYwAxADYAOQBkADYAMAA1ADgAZgBlAGEANAAyAGMAMwA5AGMAYwBl
ADIAOQBjAGEAYQA5ADQAZAAwAGIANAAwAC4AUAByAG8AcABlAHIAdABpAGUAcwAuAFIAZQBzAG8A
dQByAGMAZQBzAAAhYwBvAG4AbgBlAGMAdABpAG8AbgBTAHQAcgBpAG4AZwAAIVUAcwBlAHIAOgA6
AGYAaQBsAGUARgBvAGwAZABlAHIAAB1VAHMAZQByADoAOgBmAGkAbABlAE4AYQBtAGUAACNVAHMA
ZQByADoAOgBjAHUAcgByAGUAbgB0AEQAYQB0AGUAAANcAAADXwAAEXkAeQB5AHkATQBNAGQAZAAA
Ay4AACdVAHMAZQByADoAOgBmAGkAbABlAEUAeAB0AGUAbgBzAGkAbwBuAAAlVQBzAGUAcgA6ADoA
ZgBpAGwAZQBGAHUAbABsAFAAYQB0AGgAAC1VAHMAZQByADoAOgBkAG8AbgBlAEYAaQBsAGUARgB1
AGwAbABQAGEAdABoAAALXwBEAE8ATgBFAAAXbgBvAF8AbwBmAF8AZgBpAGUAbABkAAAhYwBvAGwA
dQBtAG4AXwBzAGUAcABhAHIAYQB0AG8AcgAAH1UAcwBlAHIAOgA6AGYAaQBsAGUARQByAHIAbwBy
AAAdVQBzAGUAcgA6ADoAcgBvAHcAQwBvAHUAbgB0AAAVZgBpAGwAZQBfAGUAbQBwAHQAeQAAGUkA
TgBTAEUAUgBUACAASQBOAFQATwAgAACAjUsAQQBOAFMASABJAF8AUABBAEMASwBBAEcARQBfAEUA
UgBSAE8AUgAoAFsA0TDDMLEw/DC4MLMw/DDJMF0ALABbAMcw/DC/MOVl2E5dACwAWwCoMOkw/DDl
ZUJmXQAsAFsA1TChMKQw6zANVF0ALABbAKgw6TD8MIVRuVtdACwAWwBMiHBlXQApACAAARFWAEEA
TABVAEUAUwAoACcAASNVAHMAZQByADoAOgBwAGEAYwBrAGEAZwBlAEMAbwBkAGUAAAcnACwAJwAB
G1UAcwBlAHIAOgA6AHMAeQBzAEQAYQB0AGUAADknACwAJwDVMKEwpDDrMG4w1TCpMN4wwzDIMGcw
qDDpMPwwTDB6dh91VzB+MFcwXzACMCcALAAnAAEHJwApADsAASFVAHMAZQByADoAOgByAGUAcwB1
AGwAdABGAGwAYQBnAAAFTgBHAAArVQBzAGUAcgA6ADoAYgBvAG8AbABDAG8AbgBmAGkAZwBFAHIA
cgBvAHIAACcnACwAJwDVMKEwpDDrMG4whVG5W5Iwenp9dmcwWTACMCcALAAnAAEtJwAsACcA1TCh
MKQw6zCSMFhbKFdVMIwwZjBEMH4wWzCTMAIwIADRMLkwOgABgJ9LAEEATgBTAEgASQBfAFAAQQBD
AEsAQQBHAEUAXwBFAFIAUgBPAFIAKABbANEwwzCxMPwwuDCzMPwwyTBdACwAWwDHMPwwvzDlZdhO
XQAsAFsAqDDpMPww5WVCZl0ALABbANUwoTCkMOswDVRdACwAWwCoMOkw/DCFUblbXQAsAFsATIhw
ZV0ALABbAKgw6TD8MNUw6TCwMF0AKQAgAAEbJwAsACcAtzC5MMYw4DCoMOkw/DA6ACAAJwABAycA
AQMtAAEPJwAsACcAMQAnACkAOwABgKVLAEEATgBTAEgASQBfAFAAQQBDAEsAQQBHAEUAXwBFAFIA
UgBPAFIAXwBTAFQAQQBUAFUAUwAoAFsA0TDDMLEw/DC4MLMw/DDJMF0ALABbAMcw/DC/MOVl2E5d
ACwAWwCoMOkw/DDlZUJmXQAsAFsAqDDpMPwwwTCnMMMwrzC/MKQw1zBdACwAWwC5MMYw/DC/MLkw
XQAsAFsATIhwZV0AKQAgAAEpJwAsACcA1TChMKQw6zBYWyhXqDDpMPwwJwAsACcATgBHACcALAAn
AAEpJwAsACcA1TChMKQw6zBYWyhXqDDpMPwwJwAsACcATwBLACcALAAnAAExJwAsACcA1TChMKQw
6zDVMKkw/DDeMMMwyDCoMOkw/DAnACwAJwBOAEcAJwAsACcAATEnACwAJwDVMKEwpDDrMNUwqTD8
MN4wwzDIMKgw6TD8MCcALAAnAE8ASwAnACwAJwABKScALAAnANUwoTCkMOswenp9dqgw6TD8MCcA
LAAnAE4ARwAnACwAJwABKScALAAnANUwoTCkMOswenp9dqgw6TD8MCcALAAnAE8ASwAnACwAJwAB
FycALAAnALcwuTDGMOAwqDDpMPwwOgABCycALAAxACkAOwAB+Ty2wOIPBEmrEZ5kNRSDawAIt3pc
Vhk04IkIiYRdzYCAzJEDBhIVAwYSGQMgAAEEAAASFQQAABIZBQABARIZBAgAEhUECAASGQMGEgwE
AAASDAQIABIMCCAEAQICAhIdBSABARIdAgYIAwYRFAQAAAAABAEAAAAEIAEBDgQgAQEIBgABElUR
WQQgABJdBiACAQ4SXQQHARIVBSABARFlCAEAAgAAAAAAAwAAAQQgABJxBCAAEnUFIAESeRwDIAAc
AyAADgYAARGAgRwEIAEODgUAAQ4dDgQgAQEcAyAACAUgAg4ICAUAAg4ODgQAAQ4OAgYOBAABCA4E
AAECDgUAAR0ODgQAAQoIBAABCg4DIAAKBAABAw4GIAEdDh0DBiABEoCJDgUAAQ4dHAYgAgEOEh0F
IAIODg4zBx0ODg4RgIEOEh0SgK0SgIkODg4IDgoSgJ0CAgISgKEKDh0OEoC1HQ4dAx0cHRwdHB0c
BSAAEoCJHQcMEYCBDhKAiRKArRKAtR0cHRwdHB0cHRwdHB0cBSAAEYC9RwEAGi5ORVRGcmFtZXdv
cmssVmVyc2lvbj12NC4wAQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRAuTkVUIEZyYW1ld29yayA0
KAEAI1NUX2MxNjlkNjA1OGZlYTQyYzM5Y2NlMjljYWE5NGQwYjQwAAAFAQAAAAAWAQARQ29weXJp
Z2h0IEAgIDIwMTQAAAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEArEgA
AAAAAAAAAAAAzkgAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMBIAAAAAAAAAAAAAAAAAAAAAAAA
AABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAEAAAABgA
AIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgAAABYYAAAsAMA
AAAAAAAAAAAAsAM0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAAAL0E7/4AAAEA
AAABADRrQxgAAAEANGtDGD8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAAAQBWAGEAcgBG
AGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAAAAAAAACwBBAD
AAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAAOwCAAABADAAMAAwADAAMAA0AGIAMAAA
AHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABTAFQAXwBjADEANgA5AGQA
NgAwADUAOABmAGUAYQA0ADIAYwAzADkAYwBjAGUAMgA5AGMAYQBhADkANABkADAAYgA0ADAAAABA
AA8AAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4ANgAyADEAMQAuADIANwA0ADQA
NAAAAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAFQAXwA2AGUANQAzADYANwBi
ADEANgBiADYAOAA0AGEANgBjADkAOQA1ADIAYQBlADIAYwAyAGUAMQBkAGYAZgA3ADIALgBkAGwA
bAAAAEgAEgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBwAHkAcgBpAGcAaAB0
ACAAQAAgACAAMgAwADEANAAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBtAGUA
AABTAFQAXwA2AGUANQAzADYANwBiADEANgBiADYAOAA0AGEANgBjADkAOQA1ADIAYQBlADIAYwAy
AGUAMQBkAGYAZgA3ADIALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAAAAAA
UwBUAF8AYwAxADYAOQBkADYAMAA1ADgAZgBlAGEANAAyAGMAMwA5AGMAYwBlADIAOQBjAGEAYQA5
ADQAZAAwAGIANAAwAAAARAAPAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAuADAA
LgA2ADIAMQAxAC4AMgA3ADQANAA0AAAAAABIAA8AAQBBAHMAcwBlAG0AYgBsAHkAIABWAGUAcgBz
AGkAbwBuAAAAMQAuADAALgA2ADIAMQAxAC4AMgA3ADQANAA0AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAADAAAAOA4AAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\ファイルバックアップする"
      DTS:CreationName="Microsoft.FileSystemTask"
      DTS:Description="File System Task"
      DTS:DTSID="{601C7A8E-C042-41B9-9FC8-769FF022AC27}"
      DTS:ExecutableType="Microsoft.FileSystemTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="ファイルバックアップする"
      DTS:TaskContact="File System Task;Microsoft Corporation; SQL Server 2014; © 2014 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:ObjectData>
        <FileSystemData
          TaskOperationType="MoveFile"
          TaskOverwriteDestFile="True"
          TaskSourcePath="User::fileFullPath"
          TaskIsSourceVariable="True"
          TaskDestinationPath="User::backupFolder"
          TaskIsDestinationVariable="True" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\リータンフラグ"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:Description="Script Task"
      DTS:DTSID="{2543DB4A-FD6F-4628-82F6-3B17349E88E3}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="リータンフラグ"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_92e4c0fead9d40ae913e4aaf6b65410d"
          VSTAMajorVersion="3"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadOnlyVariables="User::boolConfigError,User::currentDate,User::fileError,User::fileFullPath,User::packageCode,User::rowCount,User::sysDate"
          ReadWriteVariables="User::connectionString,User::resultFlag">
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_92e4c0fead9d40ae913e4aaf6b65410d.Properties.Settings.get_Default():ST_92e4c0fead9d40ae913e4aaf6b65410d.Properties.Sett" +
    "ings")]

namespace ST_92e4c0fead9d40ae913e4aaf6b65410d.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[#region Namespaces
using System;
using System.Data;
using System.Data.SqlClient;
using System.IO;
using System.Text;
#endregion

namespace ST_92e4c0fead9d40ae913e4aaf6b65410d
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region "Main Function"
        /// <summary>
        /// 作成人: イルファンマンスリー
        /// 作成日: 2016-04-20
        /// 説明: ペアレントパッケージに意思決定する。
        /// </summary>
		public void Main()
		{
            string strConnectionString = Dts.Variables["User::connectionString"].Value.ToString();
            string strFileName = Path.GetFileName(Dts.Variables["User::fileFullPath"].Value.ToString());
            DateTime dtCurDate = Convert.ToDateTime(Dts.Variables["User::currentDate"].Value);
            StringBuilder strBuildInsertQry = new StringBuilder();
            SqlCommand myCommand = new SqlCommand();
            SqlConnection myConnection;
            myConnection = new SqlConnection(strConnectionString);
            try
            {
                _connectionOpen(myConnection);
                //KANSHI_PACKAGE_ERROR_STATUSテーブルにインサート。
                #region "システムエラーフラグ更新"
                //User::fileError: This variable is to check, if File Level error is been occured then no need to insert its status as system error.
                if (Dts.Variables["User::boolConfigError"].Value.ToString().ToLower() == "true" && Convert.ToBoolean(Dts.Variables["User::fileError"].Value) == false)
                {
                    strBuildInsertQry.Clear();
                    strBuildInsertQry.Append("INSERT INTO ");
                    strBuildInsertQry.Append("KANSHI_PACKAGE_ERROR_STATUS([パッケージコード],[データ日付],[エラー日時],[エラーチェックタイプ],[ステータス],[行数]) ");
                    strBuildInsertQry.Append("VALUES('" + Dts.Variables["User::packageCode"].Value + "','" + dtCurDate + "','" + Dts.Variables["sysDate"].Value + "','システムエラー','NG','" + Dts.Variables["User::rowCount"].Value.ToString() + "');");
                    myCommand = new SqlCommand(strBuildInsertQry.ToString(), myConnection);
                    myCommand.ExecuteNonQuery();
                }
                #endregion
                //ペアレントパッケージに依存フラグリターンNG/OK
                if (Dts.Variables["User::boolConfigError"].Value.ToString().ToUpper() == "FALSE")
                {
                    //全体パッケジにエラーが発生無い。
                    Dts.TaskResult = (int)ScriptResults.Success;
                }
                else if (Dts.Variables["User::boolConfigError"].Value.ToString().ToUpper() == "TRUE")
                {
                    //どこでもシステムエラーが発生した場合。
                    Dts.TaskResult = (int)ScriptResults.Failure;
                }
                else
                {
                    Dts.TaskResult = (int)ScriptResults.Failure;
                }

            }
            #region "CATCH/FINALLY"
            catch (Exception ex)
            {
                //システムエラー更新。
                strBuildInsertQry.Clear();
                strBuildInsertQry.Append("INSERT INTO ");
                strBuildInsertQry.Append("KANSHI_PACKAGE_ERROR([パッケージコード],[データ日付],[エラー日時],[ファイル名],[エラー内容],[行数],[エラーフラグ]) ");
                strBuildInsertQry.Append("VALUES('" + Dts.Variables["User::packageCode"].Value + "','" + dtCurDate + "','" + Dts.Variables["sysDate"].Value.ToString() + "','" + strFileName + "','システムエラー:" + ex.Message.Replace("'", "-") + "','" + Dts.Variables["User::rowCount"].Value.ToString() + "',1);");
                _connectionOpen(myConnection);
                myCommand = new SqlCommand(strBuildInsertQry.ToString(), myConnection);
                myCommand.ExecuteNonQuery();
                Dts.TaskResult = (int)ScriptResults.Failure;
            }
            finally
            {
                _connectionClose(myConnection);
                strConnectionString = null;
                strFileName = null;
                strBuildInsertQry = null;
                myCommand = null;
                myConnection = null;
            }
            #endregion
        }
        #endregion

        #region "Connection Open"
        private void _connectionOpen(SqlConnection myConnection)
        {
            if (myConnection.State != ConnectionState.Open)
            {
                myConnection.Open();
            }
        }
        #endregion

        #region "Connection Close"
        private void _connectionClose(SqlConnection myConnection)
        {
            if (myConnection.State != ConnectionState.Closed)
            {
                myConnection.Close();
            }
        }
        #endregion

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
          <ProjectItem
            Name="ST_92e4c0fead9d40ae913e4aaf6b65410d.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{3de7d8ee-106f-44b8-9238-4437cf294185}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_92e4c0fead9d40ae913e4aaf6b65410d</RootNamespace>
    <AssemblyName>ST_92e4c0fead9d40ae913e4aaf6b65410d</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>

  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>

  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
         <Generator>ResXFileCodeGenerator</Generator>
         <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
             <AutoGen>True</AutoGen>
         <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
         <Generator>SettingsSingleFileGenerator</Generator>
         <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
         <AutoGen>True</AutoGen>
         <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
         <SubType>Code</SubType>
    </Compile>
  </ItemGroup>

  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />

  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptTask"
                           HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}"
                           ApplicationType="usd"
                           Language="cs"
                           TemplatesPath=""
                           DebugInfoExeName="#HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\VisualStudio\10.0\InstallDir#\devenv.exe"
                           DebugInfoCommandLine=""
                           DebugInfoWorkingDir=""
                           IconImageList=""/>
        <Host Name="ScriptTask" GeneratedNamespace="$safeprojectname" IconIndex="">
        </Host>
        <ProjectClient>
            <HostIdentifier>SSIS_ST120</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>ST_92e4c0fead9d40ae913e4aaf6b65410d</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>ST_92e4c0fead9d40ae913e4aaf6b65410d</msb:DisplayName>
		<msb:ProjectId>{AE636AFC-C8B8-4B24-BFD2-25D86B9167E2}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_92e4c0fead9d40ae913e4aaf6b65410d.csproj"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_92e4c0fead9d40ae913e4aaf6b65410d")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_92e4c0fead9d40ae913e4aaf6b65410d")]
[assembly: AssemblyCopyright("Copyright @  2016")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_92e4c0fead9d40ae913e4aaf6b65410d.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_92e4c0fead9d40ae913e4aaf6b65410d.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_92e4c0fead9d40ae913e4aaf6b65410d.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_92e4c0fead9d40ae913e4aaf6b65410d.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_92e4c0fead9d40ae913e4aaf6b65410d.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_92e4c0fead9d40ae913e4aaf6b65410d.dll">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
YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkjU3lzdGVtLlJlc291cmNlcy5SdW50aW1lUmVz
b3VyY2VTZXQCAAAAAAAAAAAAAABQQURQQURQtAAAAEJTSkIBAAEAAAAAAAwAAAB2NC4wLjMwMzE5
AAAAAAUAbAAAALAEAAAjfgAAHAUAACQHAAAjU3RyaW5ncwAAAABADAAAgAMAACNVUwDADwAAEAAA
ACNHVUlEAAAA0A8AALwBAAAjQmxvYgAAAAAAAAACAAABVx2iAQkDAAAA+iUzABYAAAEAAAAoAAAA
BQAAAAYAAAALAAAAAwAAAC8AAAACAAAADwAAAAIAAAACAAAAAwAAAAQAAAABAAAABQAAAAEAAAAB
AAAAAAAKAAEAAAAAAAYAwQC6AAoA3QDIAA4APQEUAQYAWQG6AAYAbwFeAQYAoAGLARIAQQIrAgYA
tQKbAgYA4ALOAgYA9wLOAgYAFAPOAgYAMwPOAgYATAPOAgYAZQPOAgYAgAPOAgYAmwPOAgYAtAPO
AgYA7QPNAwYADQTNAwYAPgQrBAYAWwS6AAYAYAS6AAYAhATOAgoAsASaBAoAyQSaBAYA3gTNAw4A
AAUUAQ4AIgUUARYAewVbBRYAkwVbBQYAwgW4BQYA0wW6AAYA2wW6AAYA+wXvBRIACQYrAgYAFAa6
ABIAYAZNBgYAkQa6ABIArwZNBhIAvAYfAgAAAAABAAAAAAABAAEAAAAQADIAPAAFAAEAAQAAARAA
awA8AAkAAwAFAAEAEAB0AH8ADQAEAAgAAwEAAKMAAAARAAQADAARAH8BEwARAKwBFwARAPYBOQAG
BnACTQBWgHgCUABWgIACUABQIAAAAACDGLwBGwABAFggAAAAAJMIwgEfAAEAkSAAAAAAkwjWASQA
AQCYIAAAAACTCOIBKQABAKAgAAAAAJYIBgI9AAIAsyAAAAAAhhi8ARsAAgCnIAAAAACRGPkEjwAC
ALwgAAAAAIYAGgIbAAIAlCQAAAAAgQBPAkcAAgClJAAAAACBAF8CRwADALUkAAAAAIYYvAEbAAQA
AAABAIgCAAABAI4CAAABAI4CQQC8AV4ASQC8AV4AUQC8AV4AWQC8AV4AYQC8AV4AaQC8AV4AcQC8
AV4AeQC8AV4AgQC8AV4AiQC8AV4AkQC8AWMAmQC8ARsAoQC8ARsACQC8ARsAqQByBGgAqQCNBG8A
KQC8AXQAwQC8AYAA0QC8ARsAEQC8ARsA2QC8ARsAGQA0BZMA4QCFBZgA6QCcBZ0A8QClBaMACQCv
BacA+QDHBasAAQHkBbAAEQG8ARsAGQG8ARsAOQC8AV4AIQEbBqcAIQEjBrcAAQEvBr0AEQE5BsIA
EQE/BsgAIQFGBs8AGQG8AdUAKQFqBtwAIQF6BqcA4QCCBmMAMQGbBqcAIQGnBuAAOQHMBv0AOQHW
BhsAOQHbBhsAGQC8ARsACAAUAFQACAAYAFkAKQCTAIYALgAbAHQBLgAjAHQBLgBjAJoBLgALAAMB
LgATAEsBLgAzAEsBLgArAHQBLgA7AHoBLgBDAHQBLgBbAJEBQwBrAFkASQCTAIYAYQCbAFkAgwCr
AFkAewDmAAIAAQADAAMAAABvAS8AAADuATQAAAASAkIAAgACAAMAAgADAAUAAQAEAAUAAgAFAAcA
BIAAAAEAAADcFwlFAAAAAAAAfwAAAAQAAAAAAAAAAAAAAAEAsQAAAAAABAAAAAAAAAAAAAAAAQC6
AAAAAAAMAAAAAAAAAAAAAAAKAPUAAAAAAAQAAAAAAAAAAAAAAAEAHwIAAAAADAAAAAAAAAAAAAAA
CgA8BQAAAAAAAAAAAQAAAOEGAAAFAAQAAAAAAAA8TW9kdWxlPgBTVF85MmU0YzBmZWFkOWQ0MGFl
OTEzZTRhYWY2YjY1NDEwZC5kbGwAUmVzb3VyY2VzAFNUXzkyZTRjMGZlYWQ5ZDQwYWU5MTNlNGFh
ZjZiNjU0MTBkLlByb3BlcnRpZXMAU2V0dGluZ3MAU2NyaXB0TWFpbgBTVF85MmU0YzBmZWFkOWQ0
MGFlOTEzZTRhYWY2YjY1NDEwZABTY3JpcHRSZXN1bHRzAG1zY29ybGliAFN5c3RlbQBPYmplY3QA
U3lzdGVtLkNvbmZpZ3VyYXRpb24AQXBwbGljYXRpb25TZXR0aW5nc0Jhc2UATWljcm9zb2Z0LlNx
bFNlcnZlci5TY3JpcHRUYXNrAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlRhc2tzLlNjcmlwdFRh
c2sAVlNUQVJUU2NyaXB0T2JqZWN0TW9kZWxCYXNlAEVudW0AU3lzdGVtLlJlc291cmNlcwBSZXNv
dXJjZU1hbmFnZXIAcmVzb3VyY2VNYW4AU3lzdGVtLkdsb2JhbGl6YXRpb24AQ3VsdHVyZUluZm8A
cmVzb3VyY2VDdWx0dXJlAC5jdG9yAGdldF9SZXNvdXJjZU1hbmFnZXIAZ2V0X0N1bHR1cmUAc2V0
X0N1bHR1cmUAQ3VsdHVyZQBkZWZhdWx0SW5zdGFuY2UAZ2V0X0RlZmF1bHQARGVmYXVsdABNYWlu
AFN5c3RlbS5EYXRhAFN5c3RlbS5EYXRhLlNxbENsaWVudABTcWxDb25uZWN0aW9uAF9jb25uZWN0
aW9uT3BlbgBfY29ubmVjdGlvbkNsb3NlAHZhbHVlX18AU3VjY2VzcwBGYWlsdXJlAHZhbHVlAG15
Q29ubmVjdGlvbgBTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nAFRhcmdldEZyYW1ld29ya0F0dHJp
YnV0ZQBTeXN0ZW0uUmVmbGVjdGlvbgBBc3NlbWJseVRpdGxlQXR0cmlidXRlAEFzc2VtYmx5RGVz
Y3JpcHRpb25BdHRyaWJ1dGUAQXNzZW1ibHlDb25maWd1cmF0aW9uQXR0cmlidXRlAEFzc2VtYmx5
Q29tcGFueUF0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRyaWJ1dGUAQXNzZW1ibHlDb3B5cmln
aHRBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1dGUAQXNzZW1ibHlDdWx0dXJlQXR0
cmlidXRlAEFzc2VtYmx5VmVyc2lvbkF0dHJpYnV0ZQBTeXN0ZW0uUnVudGltZS5Db21waWxlclNl
cnZpY2VzAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1dGUAUnVudGltZUNvbXBhdGliaWxp
dHlBdHRyaWJ1dGUAU3lzdGVtLkRpYWdub3N0aWNzAERlYnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1
dGUAVHlwZQBSdW50aW1lVHlwZUhhbmRsZQBHZXRUeXBlRnJvbUhhbmRsZQBBc3NlbWJseQBnZXRf
QXNzZW1ibHkAU3lzdGVtLkNvbXBvbmVudE1vZGVsAEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBF
ZGl0b3JCcm93c2FibGVTdGF0ZQBDb21waWxlckdlbmVyYXRlZEF0dHJpYnV0ZQAuY2N0b3IAU1NJ
U1NjcmlwdFRhc2tFbnRyeVBvaW50QXR0cmlidXRlAFNjcmlwdE9iamVjdE1vZGVsAGdldF9EdHMA
TWljcm9zb2Z0LlNxbFNlcnZlci5NYW5hZ2VkRFRTAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlJ1
bnRpbWUAVmFyaWFibGVzAGdldF9WYXJpYWJsZXMAVmFyaWFibGUAZ2V0X0l0ZW0AZ2V0X1ZhbHVl
AFRvU3RyaW5nAFN5c3RlbS5JTwBQYXRoAEdldEZpbGVOYW1lAENvbnZlcnQARGF0ZVRpbWUAVG9E
YXRlVGltZQBTeXN0ZW0uVGV4dABTdHJpbmdCdWlsZGVyAFNxbENvbW1hbmQAU3RyaW5nAFRvTG93
ZXIAb3BfRXF1YWxpdHkAVG9Cb29sZWFuAENsZWFyAEFwcGVuZABDb25jYXQAU3lzdGVtLkRhdGEu
Q29tbW9uAERiQ29tbWFuZABFeGVjdXRlTm9uUXVlcnkAVG9VcHBlcgBzZXRfVGFza1Jlc3VsdABF
eGNlcHRpb24AZ2V0X01lc3NhZ2UAUmVwbGFjZQBEYkNvbm5lY3Rpb24AQ29ubmVjdGlvblN0YXRl
AGdldF9TdGF0ZQBPcGVuAENsb3NlAFNUXzkyZTRjMGZlYWQ5ZDQwYWU5MTNlNGFhZjZiNjU0MTBk
LlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwAAcVMAVABfADkAMgBlADQAYwAwAGYAZQBh
AGQAOQBkADQAMABhAGUAOQAxADMAZQA0AGEAYQBmADYAYgA2ADUANAAxADAAZAAuAFAAcgBvAHAA
ZQByAHQAaQBlAHMALgBSAGUAcwBvAHUAcgBjAGUAcwAALVUAcwBlAHIAOgA6AGMAbwBuAG4AZQBj
AHQAaQBvAG4AUwB0AHIAaQBuAGcAACVVAHMAZQByADoAOgBmAGkAbABlAEYAdQBsAGwAUABhAHQA
aAAAI1UAcwBlAHIAOgA6AGMAdQByAHIAZQBuAHQARABhAHQAZQAAK1UAcwBlAHIAOgA6AGIAbwBv
AGwAQwBvAG4AZgBpAGcARQByAHIAbwByAAAJdAByAHUAZQAAH1UAcwBlAHIAOgA6AGYAaQBsAGUA
RQByAHIAbwByAAAZSQBOAFMARQBSAFQAIABJAE4AVABPACAAAIClSwBBAE4AUwBIAEkAXwBQAEEA
QwBLAEEARwBFAF8ARQBSAFIATwBSAF8AUwBUAEEAVABVAFMAKABbANEwwzCxMPwwuDCzMPwwyTBd
ACwAWwDHMPwwvzDlZdhOXQAsAFsAqDDpMPww5WVCZl0ALABbAKgw6TD8MMEwpzDDMK8wvzCkMNcw
XQAsAFsAuTDGMPwwvzC5MF0ALABbAEyIcGVdACkAIAABEVYAQQBMAFUARQBTACgAJwABI1UAcwBl
AHIAOgA6AHAAYQBjAGsAYQBnAGUAQwBvAGQAZQAABycALAAnAAEPcwB5AHMARABhAHQAZQAAJScA
LAAnALcwuTDGMOAwqDDpMPwwJwAsACcATgBHACcALAAnAAEdVQBzAGUAcgA6ADoAcgBvAHcAQwBv
AHUAbgB0AAAHJwApADsAAQtGAEEATABTAEUAAAlUAFIAVQBFAACAn0sAQQBOAFMASABJAF8AUABB
AEMASwBBAEcARQBfAEUAUgBSAE8AUgAoAFsA0TDDMLEw/DC4MLMw/DDJMF0ALABbAMcw/DC/MOVl
2E5dACwAWwCoMOkw/DDlZUJmXQAsAFsA1TChMKQw6zANVF0ALABbAKgw6TD8MIVRuVtdACwAWwBM
iHBlXQAsAFsAqDDpMPww1TDpMLAwXQApACAAARcnACwAJwC3MLkwxjDgMKgw6TD8MDoAAQMnAAED
LQABCycALAAxACkAOwABACdOh1n5G+JCgKgym9yW9TgACLd6XFYZNOCJCImEXc2AgMyRAwYSFQMG
EhkDIAABBAAAEhUEAAASGQUAAQESGQQIABIVBAgAEhkDBhIMBAAAEgwECAASDAUgAQESHQIGCAMG
ERQEAAAAAAQBAAAABCABAQ4EIAEBCAYAARJVEVkEIAASXQYgAgEOEl0EBwESFQUgAQERZQgBAAIA
AAAAAAMAAAEEIAAScQQgABJ1BSABEnkcAyAAHAMgAA4EAAEODgYAARGAhRwFAAICDg4EAAECHAUg
ABKAiQYgARKAiQ4FAAEOHRwGIAIBDhIdAyAACAUgAg4ODhYHCQ4OEYCFEoCJEoCNEh0SgJkdHB0c
BSAAEYChRwEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC4wAQBUDhRGcmFtZXdvcmtEaXNwbGF5
TmFtZRAuTkVUIEZyYW1ld29yayA0KAEAI1NUXzkyZTRjMGZlYWQ5ZDQwYWU5MTNlNGFhZjZiNjU0
MTBkAAAFAQAAAAAWAQARQ29weXJpZ2h0IEAgIDIwMTYAAAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5v
bkV4Y2VwdGlvblRocm93cwEAAAAsNwAAAAAAAAAAAABONwAAACAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAQDcAAAAAAAAAAAAAAAAAAAAAAAAAAF9Db3JEbGxNYWluAG1zY29yZWUuZGxsAAAAAAD/JQAg
ABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAEAEAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgA
AABYQAAAsAMAAAAAAAAAAAAAsAM0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAA
AL0E7/4AAAEAAAABAAlF3BcAAAEACUXcFz8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAA
AQBWAGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAA
AAAAAACwBBADAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAAOwCAAABADAAMAAwADAA
MAA0AGIAMAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABTAFQAXwA5
ADIAZQA0AGMAMABmAGUAYQBkADkAZAA0ADAAYQBlADkAMQAzAGUANABhAGEAZgA2AGIANgA1ADQA
MQAwAGQAAABAAA8AAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4ANgAxADAAOAAu
ADEANwA2ADcAMwAAAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAFQAXwA5ADIA
ZQA0AGMAMABmAGUAYQBkADkAZAA0ADAAYQBlADkAMQAzAGUANABhAGEAZgA2AGIANgA1ADQAMQAw
AGQALgBkAGwAbAAAAEgAEgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBwAHkA
cgBpAGcAaAB0ACAAQAAgACAAMgAwADEANgAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABl
AG4AYQBtAGUAAABTAFQAXwA5ADIAZQA0AGMAMABmAGUAYQBkADkAZAA0ADAAYQBlADkAMQAzAGUA
NABhAGEAZgA2AGIANgA1ADQAMQAwAGQALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBh
AG0AZQAAAAAAUwBUAF8AOQAyAGUANABjADAAZgBlAGEAZAA5AGQANAAwAGEAZQA5ADEAMwBlADQA
YQBhAGYANgBiADYANQA0ADEAMABkAAAARAAPAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBu
AAAAMQAuADAALgA2ADEAMAA4AC4AMQA3ADYANwAzAAAAAABIAA8AAQBBAHMAcwBlAG0AYgBsAHkA
IABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgA2ADEAMAA4AC4AMQA3ADYANwAzAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAADAAAAGA3AAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\補正チェックを取得"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Select query will get all required checks from Table"
      DTS:DTSID="{9F43CCB0-A808-4829-A39C-F77F444345E6}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="補正チェックを取得"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2014; © 2014 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{27A057BB-1D5A-4866-99EC-AF12636DBD88}"
          SQLTask:SqlStmtSourceType="Variable"
          SQLTask:SqlStatementSource="User::SELECT_CHECKS_Qry"
          SQLTask:CodePage="932"
          SQLTask:ResultType="ResultSetType_SingleRow" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:ResultBinding
            SQLTask:ResultName="区切タイプ"
            SQLTask:DtsVariableName="User::column_separator" />
          <SQLTask:ResultBinding
            SQLTask:ResultName="フィールド数"
            SQLTask:DtsVariableName="User::no_of_field" />
          <SQLTask:ResultBinding
            SQLTask:ResultName="必要項目号"
            SQLTask:DtsVariableName="User::mandatory_field_no" />
          <SQLTask:ResultBinding
            SQLTask:ResultName="プライマリキー号"
            SQLTask:DtsVariableName="User::pk_col_no" />
          <SQLTask:ResultBinding
            SQLTask:ResultName="固定長チェック号"
            SQLTask:DtsVariableName="User::col_len_no" />
          <SQLTask:ResultBinding
            SQLTask:ResultName="固定長"
            SQLTask:DtsVariableName="User::col_len" />
          <SQLTask:ResultBinding
            SQLTask:ResultName="ディフォルトチェック号"
            SQLTask:DtsVariableName="User::col_boolean_no" />
          <SQLTask:ResultBinding
            SQLTask:ResultName="ディフォルト値"
            SQLTask:DtsVariableName="User::col_boolean_val" />
          <SQLTask:ResultBinding
            SQLTask:ResultName="データ型チェック号"
            SQLTask:DtsVariableName="User::layout_col_no" />
          <SQLTask:ResultBinding
            SQLTask:ResultName="データ有無チェック"
            SQLTask:DtsVariableName="User::file_empty" />
          <SQLTask:ResultBinding
            SQLTask:ResultName="エクステンション"
            SQLTask:DtsVariableName="User::fileExtension" />
          <SQLTask:ResultBinding
            SQLTask:ResultName="データ型"
            SQLTask:DtsVariableName="User::layout_col_type" />
          <SQLTask:ResultBinding
            SQLTask:ResultName="マックス桁数号"
            SQLTask:DtsVariableName="User::maxLengthCol" />
          <SQLTask:ResultBinding
            SQLTask:ResultName="マックス桁数"
            SQLTask:DtsVariableName="User::maxLength" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\重複チェック"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:Description="Script Task"
      DTS:DTSID="{36FBB097-715C-4CBA-BB68-C59CE7AD5759}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="重複チェック"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_13afa295a1b04053a83bc5e43ab9d196"
          VSTAMajorVersion="3"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadOnlyVariables="User::column_separator,User::connectionString,User::currentDate,User::fileExtension,User::fileFullPath,User::fileName,User::no_of_field,User::packageCode,User::rowCount,User::sysDate"
          ReadWriteVariables="User::boolConfigError,User::faultyRowNum,User::pk_col_no,User::resultFlag">
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="ST_13afa295a1b04053a83bc5e43ab9d196.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{fd1d9db6-c717-457b-af85-6339ba1bf349}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_13afa295a1b04053a83bc5e43ab9d196</RootNamespace>
    <AssemblyName>ST_13afa295a1b04053a83bc5e43ab9d196</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>

  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>

  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
         <Generator>ResXFileCodeGenerator</Generator>
         <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
             <AutoGen>True</AutoGen>
         <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
         <Generator>SettingsSingleFileGenerator</Generator>
         <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
         <AutoGen>True</AutoGen>
         <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
         <SubType>Code</SubType>
    </Compile>
  </ItemGroup>

  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />

  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptTask"
                           HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}"
                           ApplicationType="usd"
                           Language="cs"
                           TemplatesPath=""
                           DebugInfoExeName="#HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\VisualStudio\10.0\InstallDir#\devenv.exe"
                           DebugInfoCommandLine=""
                           DebugInfoWorkingDir=""
                           IconImageList=""/>
        <Host Name="ScriptTask" GeneratedNamespace="$safeprojectname" IconIndex="">
        </Host>
        <ProjectClient>
            <HostIdentifier>SSIS_ST120</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[
#region Namespaces
using System;
using System.Collections.Generic;
using System.Data;
using System.Data.SqlClient;
using System.IO;
using System.Linq;
using System.Text;
#endregion

namespace ST_13afa295a1b04053a83bc5e43ab9d196
{
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region "Main Function"
        /// <summary>
        /// 作成人: イルファンマンスリー
        /// 作成日: 2016-04-20
        /// 説明: This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
        {
            #region Variable
            string strConnectionString = Dts.Variables["connectionString"].Value.ToString();
            string strFullPath = Dts.Variables["User::fileFullPath"].Value.ToString();    //全体ファイル名とパス。
            string strOnlyName = Dts.Variables["User::fileName"].Value.ToString();    //ファイル名。
            string strFileName = Path.GetFileName(strFullPath); //ファイル名だけ。
            string strSeparator = Dts.Variables["column_separator"].Value.ToString();   //行の区切りタイプ。
            string strNum_of_field = Dts.Variables["no_of_field"].Value.ToString(); //列号。
            string strPk_col_num = string.Empty;
            Int64 intFileLineCount = Convert.ToInt64(Dts.Variables["User::rowCount"].Value.ToString());
            DateTime dtCurDate = Convert.ToDateTime(Dts.Variables["User::currentDate"].Value);
            SqlConnection myConnection;
            SqlCommand myCommand;
            myConnection = new SqlConnection(strConnectionString);
            StringBuilder strBuildInsertQry = new StringBuilder();
            DataTable dtFlatFile;   //Use to Get FLAT file direct into this DataTable, without any filteration.
            DataTable dtFilterdPK;  //Use to Get Data into, After PK is filtered from the Exists data.
            bool boolPkError = true;
            StringBuilder strBldTemp = new StringBuilder();
            #endregion
            try
            {
                _connectionOpen(myConnection);  //Open SQL Connection
                if (Dts.Variables["User::boolConfigError"].Value.ToString().ToLower() == "false")
                {
                    
                    strPk_col_num = Dts.Variables["pk_col_no"].Value.ToString();
                    string[] strArrPk_col_num = strPk_col_num.Split(',');
                    dtFlatFile = new DataTable();
                    //フラットファイルからデータテーブルの作成。
                    dtFlatFile = _getDataTableFromCsv(strFullPath, Convert.ToChar(strSeparator), Convert.ToInt32(strNum_of_field), myConnection);
                    if (!string.IsNullOrEmpty(Dts.Variables["pk_col_no"].Value.ToString()))
                    {
                        //Create New DataTable with same Number of Columns as Required
                        dtFilterdPK = new DataTable();
                        for (int intI = 1; intI <= Convert.ToInt32(strNum_of_field); intI++)
                        {
                            dtFilterdPK.Columns.Add("Column " + intI);
                        }
                        //Set Primary Key in New DataTable
                        DataColumn[] keyColumn = new DataColumn[30];
                        for (int intJ = 0; intJ < strArrPk_col_num.Length; intJ++)
                        {
                            keyColumn[intJ] = dtFilterdPK.Columns["Column " + strArrPk_col_num[intJ] + ""];
                        }
                        dtFilterdPK.PrimaryKey = keyColumn;  //データテーブルにプライマリーキー列セット。
                        foreach (DataRow dr in dtFlatFile.Rows)
                        {
                            try
                            {
                                //Insert into Another DataTable object, which has P.K set, so while inserting if PK
                                //violation is occur then it will be handle in CATCH block.
                                dtFilterdPK.Rows.Add(dr.ItemArray);
                            }
                            catch (Exception ex)
                            {
                                strBldTemp.Clear();
                                for (int intI = 0; intI < dr.Table.Columns.Count; intI++)
                                {
                                    strBldTemp.AppendFormat("{0}    ", dr.ItemArray[intI].ToString());
                                }
                                string ErrMsg = ex.Message.Replace("'", "-");
                                strBuildInsertQry.Clear();
                                strBuildInsertQry.Append("INSERT INTO ");
                                strBuildInsertQry.Append("KANSHI_PACKAGE_ERROR([パッケージコード],[データ日付],[エラー日時],[ファイル名],[エラー内容],[行数]) ");
                                strBuildInsertQry.Append("VALUES('" + Dts.Variables["User::packageCode"].Value.ToString() + "','" + dtCurDate + "','" + Dts.Variables["User::sysDate"].Value.ToString() + "','" + strFileName + "','" + strBldTemp.ToString() + strSeparator + "データを重複されています。エラー:" + ErrMsg + "','" + intFileLineCount + "');");
                                myCommand = new SqlCommand(strBuildInsertQry.ToString(), myConnection);
                                myCommand.ExecuteNonQuery();
                                boolPkError = false;
                                Dts.Variables["User::resultFlag"].Value = "NG";
                                Dts.TaskResult = (int)ScriptResults.Success;
                                continue;
                            }
                        }
                        //Import Filtered Data table into Db "_TEMP" table
                        _importDataTableBulk(dtFilterdPK, strOnlyName + "_TEMP", myConnection); //Import function, in Actual Table.
                    }
                    else
                    {
                        //When Table does not have PRIMARY KEY and we no need to check any constraints regarding 重複エラー
                        _importDataTableBulk(dtFlatFile, strOnlyName + "_TEMP", myConnection); //Import function, in Actual Table.
                    }
                    _errorStatus(boolPkError, myConnection);  //KANSHI_PACKAGE_ERROR_STATUSテーブルにフラグ更新。
                }
            }
            #region "CATCH/FINALLY"
            catch (Exception ex)
            {
                strBuildInsertQry.Clear();
                strBuildInsertQry.Append("INSERT INTO ");
                strBuildInsertQry.Append("KANSHI_PACKAGE_ERROR([パッケージコード],[データ日付],[エラー日時],[ファイル名],[エラー内容],[行数],[エラーフラグ]) ");
                strBuildInsertQry.Append("VALUES('" + Dts.Variables["User::packageCode"].Value + "','" + dtCurDate + "','" + Dts.Variables["sysDate"].Value.ToString() + "','" + strFileName + "','システムエラー: " + ex.Message.Replace("'", "-") + "','" + intFileLineCount + "',1);");
                _connectionOpen(myConnection);  //Open only if it is close.
                myCommand = new SqlCommand(strBuildInsertQry.ToString(), myConnection);
                myCommand.ExecuteNonQuery();
                Dts.Variables["User::resultFlag"].Value = "NG";
                Dts.Variables["User::boolConfigError"].Value = true;
                Dts.TaskResult = (int)ScriptResults.Failure;
            }
            finally
            {
                _connectionClose(myConnection);
                strFullPath = null;
                strPk_col_num = null;
                myConnection = null;
                myCommand = null;
                dtFlatFile = null;
                strOnlyName = null;
                strBldTemp = null;
            }
            #endregion
		}
        #endregion

        #region "Get DataTable From Csv"
        /// <summary>
        /// 作成人: イルファンマンスリー
        /// 作成日: 2016-04-23
        /// 説明: フラットファイルからデータテーブルの作成。
        /// </summary>
        protected DataTable _getDataTableFromCsv(string path, char charSeparator, int intNum_of_field, SqlConnection myConnection)
        {
            DataTable dt = new DataTable(); //To return Flat file data to Parent method.
            string strFullPath = Dts.Variables["User::fileFullPath"].Value.ToString();
            string strPackageCode = Dts.Variables["User::packageCode"].Value.ToString();
            DateTime dtCurDate = Convert.ToDateTime(Dts.Variables["User::currentDate"].Value);
            string strFileName = Path.GetFileName(strFullPath);
            string strFaultyRowsNum = Dts.Variables["User::faultyRowNum"].Value.ToString(); //To Store Faulty/Error occured rows in it.
            SqlCommand myCommand;
            Int64 intFileLineCount = Convert.ToInt64(Dts.Variables["User::rowCount"].Value.ToString());
            string[] rows;
            StringBuilder strBuildInsertQry;
            StreamReader sr;
            try
            {
                #region CASE "NoFaultyColumns Found"
                if (string.IsNullOrEmpty(strFaultyRowsNum))
                {
                    using (sr = new StreamReader(path, Encoding.Default))
                    {
                        for (int intI = 1; intI <= intNum_of_field; intI++)
                        {
                            dt.Columns.Add("Column " + intI);   //データテーブルに列名セット。
                        }
                        while (!sr.EndOfStream) //全体ファイルまで読む。
                        {
                            rows = sr.ReadLine().Split(charSeparator);
                            dt.Rows.Add(rows);  //データテーブルにインサート。
                            rows = null;    //リセット
                        }
                        sr.Close(); //Close Read&Write mode of file
                    }
                }
                #endregion
                #region CASE "FaultyColumnsFound"
                //the faulty rows return from the other checks, will be neglate in this portion.
                else
                {
                    string[] strArrFaultyCols = strFaultyRowsNum.TrimEnd(',').Split(',');   //Get All the columns in StringTypeArray.
                    Int64[] intArrColumns = Array.ConvertAll(strArrFaultyCols, Int64.Parse).Distinct().ToArray();   //Get Whole Array into LONG type and Dictinct values only.
                    List<Int64> ListArrColumns = intArrColumns.Cast<Int64>().ToList();  //Get Array into List
                    using (sr = new StreamReader(path, Encoding.Default))
                    {
                        for (int intI = 1; intI <= intNum_of_field; intI++)
                        {
                            dt.Columns.Add("Column " + intI);   //データテーブルに列名セット。
                        }
                        long lngRowsCount = 0;  //To count Row numbers
                        while (!sr.EndOfStream) //全体ファイルまで読む。
                        {
                            lngRowsCount = lngRowsCount + 1;    //Get Row number
                            rows = sr.ReadLine().Split(charSeparator);
                            if (!ListArrColumns.Contains(lngRowsCount)) //If Faulty Column number exists then Skip it.
                            {
                                dt.Rows.Add(rows);  //データテーブルにインサート。
                            }
                            rows = null;    //リセット
                        }
                        sr.Close(); //Close Read&Write mode of file
                    }
                    strArrFaultyCols = null;
                }
                #endregion
            }
            #region "CATCH/FINALLY"
            catch (Exception ex)
            {
                //システムエラーが発生したの場合。
                strBuildInsertQry = new StringBuilder();
                strBuildInsertQry.Append("INSERT INTO ");
                strBuildInsertQry.Append("KANSHI_PACKAGE_ERROR([パッケージコード],[データ日付],[エラー日時],[ファイル名],[エラー内容],[行数],[エラーフラグ]) ");
                strBuildInsertQry.Append("VALUES('" + strPackageCode + "','" + dtCurDate + "','" + Dts.Variables["User::sysDate"].Value.ToString() + "','" + strFileName + "','システムエラー: " + ex.Message.Replace("'", "-") + "','" + intFileLineCount + "',1);");
                _connectionOpen(myConnection);  //Open only if it is close.
                myCommand = new SqlCommand(strBuildInsertQry.ToString(), myConnection);
                myCommand.ExecuteNonQuery();
                Dts.Variables["User::resultFlag"].Value = "NG"; //パッケジが何か問題があるの記号
                Dts.Variables["User::boolConfigError"].Value = true;    //システムエラー発生したの記号。
                Dts.TaskResult = (int)ScriptResults.Failure;
            }
            finally 
            {
                sr = null;
                strPackageCode = null;
                strFullPath = null;
                strFileName = null;
                myConnection = null;
                myCommand = null;
                rows = null;
                strBuildInsertQry = null;
                strFaultyRowsNum = null;
            }
            #endregion
            return dt;
        }
        #endregion

        #region "ERROR Check insert status"
        /// <summary>
        /// 作成人: イルファンマンスリー
        /// 作成日: 2016-06-02
        /// 説明: To Insert type of ERROR checks status in KANSHI_PACKAGE_ERROR_STATUS Table
        /// 1) 重複エラーチェック。
        /// </summary>
        protected void _errorStatus(bool boolPkCheck, SqlConnection myConnection)
        {
            string strFileName = Path.GetFileName(Dts.Variables["User::fileFullPath"].Value.ToString());
            DateTime dtCurDate = Convert.ToDateTime(Dts.Variables["User::currentDate"].Value);
            StringBuilder strBuildInsertQry = new StringBuilder();
            SqlCommand myCommand = new SqlCommand();
            try
            {
                _connectionOpen(myConnection);  //Open only if it is close
                strBuildInsertQry.Clear();
                #region 重複エラー NG
                if (boolPkCheck == false)
                {
                    //重複エラーが発生しました。
                    strBuildInsertQry.Append("INSERT INTO ");
                    strBuildInsertQry.Append("KANSHI_PACKAGE_ERROR_STATUS([パッケージコード],[データ日付],[エラー日時],[エラーチェックタイプ],[ステータス],[行数]) ");
                    strBuildInsertQry.Append("VALUES('" + Dts.Variables["User::packageCode"].Value + "','" + dtCurDate + "','" + Dts.Variables["sysDate"].Value.ToString() + "','重複エラー','NG','" + Dts.Variables["User::rowCount"].Value.ToString() + "');");
                }
                else
                {
                    //重複エラーが無いの場合。
                    strBuildInsertQry.Append("INSERT INTO ");
                    strBuildInsertQry.Append("KANSHI_PACKAGE_ERROR_STATUS([パッケージコード],[データ日付],[エラー日時],[エラーチェックタイプ],[ステータス],[行数]) ");
                    strBuildInsertQry.Append("VALUES('" + Dts.Variables["User::packageCode"].Value + "','" + dtCurDate + "','" + Dts.Variables["sysDate"].Value.ToString() + "','重複エラー','OK','" + Dts.Variables["User::rowCount"].Value.ToString() + "');");
                }
                #endregion
                myCommand = new SqlCommand(strBuildInsertQry.ToString(), myConnection);
                myCommand.ExecuteNonQuery();
            }
            #region "CATCH/FINALLY"
            catch (Exception ex)
            {
                //システムエラー発生したの場合。
                strBuildInsertQry.Clear();
                strBuildInsertQry.Append("INSERT INTO ");
                strBuildInsertQry.Append("KANSHI_PACKAGE_ERROR([パッケージコード],[データ日付],[エラー日時],[ファイル名],[エラー内容],[行数],[エラーフラグ]) ");
                strBuildInsertQry.Append("VALUES('" + Dts.Variables["User::packageCode"].Value + "','" + dtCurDate + "','" + Dts.Variables["User::sysDate"].Value.ToString() + "','" + strFileName + "','システムエラー:" + ex.Message.Replace("'", "-") + "','" + Dts.Variables["User::rowCount"].Value.ToString() + "',1);");
                _connectionOpen(myConnection);  //Open only if it is close
                myCommand = new SqlCommand(strBuildInsertQry.ToString(), myConnection);
                myCommand.ExecuteNonQuery();
                Dts.Variables["User::resultFlag"].Value = "NG";
                Dts.Variables["User::boolConfigError"].Value = true;
                Dts.TaskResult = (int)ScriptResults.Failure;
            }
            finally
            {
                //全体Variables リセット。
                strFileName = null;
                strBuildInsertQry = null;
                myConnection = null;
                myCommand = null;
            }
            #endregion
        }
        #endregion

        #region "Import DataTable Bulk"
        /// <summary>
        /// 作成者: Irfan Mansuri
        /// 説明: Function WILL Truncate the appropriate TEMP Table from Actual DB & Insert New Data.
        /// 作成日付: 2016-04-23
        /// </summary>
        protected void _importDataTableBulk(DataTable dtToBeImport, string strTableName, SqlConnection myConnection)
        {
            StringBuilder strBuildInsertQry = new StringBuilder();
            string strPackageCode = Dts.Variables["User::packageCode"].Value.ToString();
            DateTime dtCurDate = Convert.ToDateTime(Dts.Variables["User::currentDate"].Value);
            Int64 intFileLineCount = Convert.ToInt64(Dts.Variables["User::rowCount"].Value.ToString());
            string strFileName = strTableName.Remove(strTableName.Length - 5) + "_" + dtCurDate.ToString("yyyyMMdd") + "." + Dts.Variables["User::fileExtension"].Value.ToString();  //Get File Name from Table Name because both has same name as defined, except last 5 chars as "_TEMP";
            SqlCommand myCommand;
            try
            {
                _connectionOpen(myConnection);  //Open only if it is close.
                #region Truncate TEMP Table
                strBuildInsertQry.Clear();
                strBuildInsertQry.Append("TRUNCATE TABLE " + strTableName + ";");
                myCommand = new SqlCommand(strBuildInsertQry.ToString(), myConnection);
                myCommand.ExecuteNonQuery();
                #endregion

                #region Bulk Import the Data
                using (SqlBulkCopy bulkCopy = new SqlBulkCopy(myConnection))
                {
                    bulkCopy.DestinationTableName = strTableName;   //Assign table name
                    bulkCopy.BulkCopyTimeout = 600; //Time out in seconds.
                    bulkCopy.WriteToServer(dtToBeImport);   //Write into Actual table.
                }
                #endregion
            }
            #region "CATCH/FINALLY"
            catch (Exception ex)
            {
                strBuildInsertQry.Clear();
                strBuildInsertQry.Append("INSERT INTO ");
                strBuildInsertQry.Append("KANSHI_PACKAGE_ERROR([パッケージコード],[データ日付],[エラー日時],[ファイル名],[エラー内容],[行数],[エラーフラグ]) ");
                strBuildInsertQry.Append("VALUES('" + strPackageCode + "','" + dtCurDate + "','" + Dts.Variables["sysDate"].Value.ToString() + "','" + strFileName + "','システムエラー: " + ex.Message.Replace("'", "-") + "','" + intFileLineCount + "',1);");
                _connectionOpen(myConnection);
                myCommand = new SqlCommand(strBuildInsertQry.ToString(), myConnection);
                myCommand.ExecuteNonQuery();
                Dts.Variables["User::resultFlag"].Value = "NG"; //パッケジが何か問題があるの記号
                Dts.Variables["User::boolConfigError"].Value = true;    //システムエラー発生したの記号。
                Dts.TaskResult = (int)ScriptResults.Success;
            }
            finally
            {
                strBuildInsertQry = null;
                myCommand = null;
                myConnection = null;
                strTableName = null;
                dtToBeImport = null;
                strPackageCode = null;
                strFileName = null;
            }
            #endregion
        }
        #endregion

        #region "Connection Open"
        private void _connectionOpen(SqlConnection myConnection)
        {
            if (myConnection.State != ConnectionState.Open)
            {
                myConnection.Open();
            }
        }
        #endregion

        #region "Connection Close"
        private void _connectionClose(SqlConnection myConnection)
        {
            if (myConnection.State != ConnectionState.Closed)
            {
                myConnection.Close();
            }
        }
        #endregion

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion
	}
}]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>ST_13afa295a1b04053a83bc5e43ab9d196</msb:CodeName>
		<msb:DisplayName>ST_13afa295a1b04053a83bc5e43ab9d196</msb:DisplayName>
		<msb:ProjectId>{8A8E1F64-188A-4891-B43F-65CFDE1A5A2A}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_13afa295a1b04053a83bc5e43ab9d196.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_13afa295a1b04053a83bc5e43ab9d196.Properties.Settings.get_Default():ST_13afa295a1b04053a83bc5e43ab9d196.Properties.Sett" +
    "ings")]

namespace ST_13afa295a1b04053a83bc5e43ab9d196.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_13afa295a1b04053a83bc5e43ab9d196")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_13afa295a1b04053a83bc5e43ab9d196")]
[assembly: AssemblyCopyright("Copyright @  2016")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_13afa295a1b04053a83bc5e43ab9d196.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_13afa295a1b04053a83bc5e43ab9d196.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_13afa295a1b04053a83bc5e43ab9d196.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_13afa295a1b04053a83bc5e43ab9d196.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_13afa295a1b04053a83bc5e43ab9d196.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_13afa295a1b04053a83bc5e43ab9d196.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAKk+I1kAAAAAAAAAAOAAAiELAQsAADAAAAAGAAAAAAAA/k0A
AAAgAAAAYAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACgAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAALBNAABLAAAAAGAAAAAEAAAAAAAAAAAAAAAAAAAA
AAAAAIAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAABC4AAAAgAAAAMAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAAAEAAAAYAAAAAQAAAAyAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAIAAAAACAAAANgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAADg
TQAAAAAAAEgAAAACAAUAGDMAAJgaAAABAAAAAAAAAGAyAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKA4AAAoqEzACAC0AAAABAAARfgEAAAQtIHIBAABw0AIA
AAIoDwAACm8QAAAKcxEAAAoKBoABAAAEfgEAAAQqGn4CAAAEKh4CgAIAAAQqGn4DAAAEKi5zBgAA
BoADAAAEKh4CKBQAAAoqABswBgAOBgAAAgAAEQIoFgAACm8XAAAKcnMAAHBvGAAACm8ZAAAKbxoA
AAoKAigWAAAKbxcAAApylQAAcG8YAAAKbxkAAApvGgAACgsCKBYAAApvFwAACnK7AABwbxgAAApv
GQAACm8aAAAKDAcoGwAACg0CKBYAAApvFwAACnLZAABwbxgAAApvGQAACm8aAAAKEwQCKBYAAApv
FwAACnL7AABwbxgAAApvGQAACm8aAAAKEwV+HAAAChMGAigWAAAKbxcAAApyEwEAcG8YAAAKbxkA
AApvGgAACigdAAAKEwcCKBYAAApvFwAACnIxAQBwbxgAAApvGQAACigeAAAKEwgGcx8AAAoTCXMg
AAAKEwsXEw5zIAAAChMPAhEJKAwAAAYCKBYAAApvFwAACnJVAQBwbxgAAApvGQAACm8aAAAKbyEA
AApygQEAcCgiAAAKOT0DAAACKBYAAApvFwAACnKNAQBwbxgAAApvGQAACm8aAAAKEwYRBheNJQAA
ARMZERkWHyydERlvIwAAChMQcyQAAAoTDAIHEQQoJQAAChEFKCYAAAoRCSgJAAAGEwwCKBYAAApv
FwAACnKNAQBwbxgAAApvGQAACm8aAAAKKCcAAAo6mwIAAHMkAAAKEw0XExErJBENbygAAApyoQEA
cBERjCcAAAEoKQAACm8qAAAKJhERF1gTEREREQUoJgAACjHRHx6NKAAAARMSFhMTKyYREhETEQ1v
KAAACnKhAQBwERARE5ooKwAACm8sAAAKohETF1gTExETERCOaTLSEQ0REm8tAAAKEQxvLgAACm8v
AAAKExo4zgEAABEabzAAAAp0LAAAARMUEQ1vLgAAChEUbzEAAApvMgAACibdpwEAABMVEQ9vMwAA
CiYWExYrIhEPcrEBAHARFG8xAAAKERaabxoAAApvNAAACiYRFhdYExYRFhEUbzUAAApvKAAACm82
AAAKMskRFW83AAAKcsEBAHByxQEAcG84AAAKExcRC28zAAAKJhELcskBAHBvOQAACiYRC3LjAQBw
bzkAAAomEQsfEI0BAAABExsRGxZycgIAcKIRGxcCKBYAAApvFwAACnKEAgBwbxgAAApvGQAACm8a
AAAKohEbGHKoAgBwohEbGREIjCMAAAGiERsacqgCAHCiERsbAigWAAAKbxcAAApysAIAcG8YAAAK
bxkAAApvGgAACqIRGxxyqAIAcKIRGx0JohEbHnKoAgBwohEbHwkRD28aAAAKohEbHwoRBKIRGx8L
cswCAHCiERsfDBEXohEbHw1yqAIAcKIRGx8OEQeMLgAAAaIRGx8PcvACAHCiERsoOgAACm85AAAK
JhELbxoAAAoRCXM7AAAKEwoRCm88AAAKJhYTDgIoFgAACm8XAAAKcvgCAHBvGAAACnIaAwBwbz0A
AAoCKBYAAAoWbz4AAAreABEabz8AAAo6Jv7//94VERp1MQAAARMcERwsBxEcb0AAAArcAhENCHIg
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
ciwFAHCiEQgYEgJyMAUAcChSAAAKohEIGXJCBQBwohEIGgIoFgAACm8XAAAKckYFAHBvGAAACm8Z
AAAKbxoAAAqiEQgoUwAAChMEAgUoDAAABgZvMwAACiYGcm4FAHAEco4FAHAoVAAACm85AAAKJgZv
GgAACgVzOwAAChMFEQVvPAAACiYFc1UAAAoTBhEGBG9WAAAKEQYgWAIAAG9XAAAKEQYDb1gAAAre
DBEGLAcRBm9AAAAK3N1BAQAAEwcGbzMAAAomBnLJAQBwbzkAAAomBnIsAwBwbzkAAAomBh8NjQEA
AAETCREJFnJyAgBwohEJFweiEQkYcqgCAHCiEQkZCIwjAAABohEJGnKoAgBwohEJGwIoFgAACm8X
AAAKcs0DAHBvGAAACm8ZAAAKbxoAAAqiEQkccqgCAHCiEQkdEQSiEQkect0DAHCiEQkfCREHbzcA
AApywQEAcHLFAQBwbzgAAAqiEQkfCnKoAgBwohEJHwsJjC4AAAGiEQkfDHL3AwBwohEJKDoAAApv
OQAACiYCBSgMAAAGBm8aAAAKBXM7AAAKEwURBW88AAAKJgIoFgAACm8XAAAKcvgCAHBvGAAACnIa
AwBwbz0AAAoCKBYAAApvFwAACnJVAQBwbxgAAAoXjDIAAAFvPQAACgIoFgAAChZvPgAACt4A3hQU
ChQTBRQQAxQQAhQQARQLFBME3CoAAABBTAAAAgAAABYBAAAeAAAANAEAAAwAAAAAAAAAAAAAANMA
AAByAAAARQEAAEEBAAAtAAABAgAAANMAAAC1AQAAiAIAABQAAAAAAAAAQgNvWQAAChcuBgNvWgAA
Cio+A29ZAAAKLAYDb1sAAAoqHgIoXAAACioAAAC0AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5SZXNv
dXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9
bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2Vz
LlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAAQlNKQgEAAQAAAAAADAAA
AHY0LjAuMzAzMTkAAAAABQBsAAAA3AYAACN+AABIBwAAOAoAACNTdHJpbmdzAAAAAIARAACUBQAA
I1VTABQXAAAQAAAAI0dVSUQAAAAkFwAAdAMAACNCbG9iAAAAAAAAAAIAAAFXHaIJCQsAAAD6JTMA
FgAAAQAAAD4AAAAFAAAABgAAAA4AAAAMAAAAXAAAAAIAAAAPAAAABQAAAAIAAAADAAAABAAAAAIA
AAABAAAABgAAAAEAAAABAAAABQAAAAAACgABAAAAAAAGAMEAugAKAN0AyAAOAD0BFAEGAFkBugAG
AG8BXgEGAKABiwESACsCHwISAEsCNQIGAD8DJQMGAGoDWAMGAIEDWAMGAJ4DWAMGAL0DWAMGANYD
WAMGAO8DWAMGAAoEWAMGACUEWAMGAD4EWAMGAHcEVwQGAJcEVwQGAMgEtQQGAOUEugAGAOoEugAG
AA4FWAMKADoFJAUKAFMFJAUGAGgFVwQOAIoFFAEOAKwFFAEWAAUG5QUWAB0G5QUGAEwGQgYGAF0G
ugAGAGoGugAGAHoGugAGAJoGjgYGALwGugASAOQGHwIGAAUHugASABIHHwISADAHHwISAEsHHwIG
AHkHZgcSAJ8HHwIGANwHugAGAAEIugASAAcINQISACUIEggGAGEIugAGAHUIugAGAH0IjgYGAIYI
QgYGAJMIQgYGAMsIugAGANcIugAaAAAJ9AgGACYJCwkGAEUJZgcGAFYJCwkSAH8JNQISAMYJEggS
ANMJHwIAAAAAAQAAAAAAAQABAAAAEAAyADwABQABAAEAAAEQAGsAPAAJAAMABQABABAAdAB/AA0A
BAAIAAMBAACjAAAAEQAEAA8AEQB/ARMAEQCsARcAEQD2ATkABgaxAmcAVoC5AmoAVoDBAmoAUCAA
AAAAgxi8ARsAAQBYIAAAAACTCMIBHwABAJEgAAAAAJMI1gEkAAEAmCAAAAAAkwjiASkAAQCgIAAA
AACWCAYCPQACALMgAAAAAIYYvAEbAAIApyAAAAAAkRiDBakAAgC8IAAAAACGABoCGwACADwnAAAA
AIQAWQJHAAIAaCsAAAAAhABuAlEABgA8LwAAAACEAHsCWAAIADQyAAAAAIEAkAJhAAsARTIAAAAA
gQCgAmEADABVMgAAAACGGLwBGwANAAAAAQDJAgAAAQDPAgAAAgDUAgAAAwDiAgAABADyAgAAAQD/
AgAAAgDyAgAAAQALAwAAAgAYAwAAAwDyAgAAAQDyAgAAAQDyAkkAvAF4AFEAvAF4AFkAvAF4AGEA
vAF4AGkAvAF4AHEAvAF4AHkAvAF4AIEAvAF4AIkAvAF4AJEAvAF4AJkAvAF9AKEAvAEbAKkAvAEb
AAkAvAEbALEA/ASCALEAFwWJACkAvAGOAMkAvAGaANkAvAEbABEAvAEbAOEAvAEbABkAvgWtAOkA
DwayAPEAJga3APkALwa9AAkAOQbBAAEBUQbFAAkBZAbKABEBcgbNABEBgwbSAEEAvAF4ACEBvAEb
AAkBqAbBAAkBsAbZAAkBwQbfADkAvAEbABEBxwbmABEBzgbrAAkB1gbwADkA+Qb1AAkBCwf7ADEB
HQcBAQkBCwcIATEBJgYBATkAIQcOATkAQgcWAVEBhQccAVkBkwe9AGEBpwciAUkBHQcnASEBtQcv
ASEBuwc1AWEByAc9AVEB0gdCAWkB5gfBAAkB8gdGASEB+gdMAQkBCwdTAXkBvAFZAYEBLwhCAfkA
PwhgAekASQh9AFkBWAhlAYkBbQgbAJkBBgKmAaEBvAGsAakBngjBAKEBpwhlAakBtwgbAAkBvQi0
AXEBxQjNAAwAvAHCAbkB3QjIAcEBNAngAcEBPQn2AcEBUQkEAsEBXQkSAhQAZAkrAnkBvAEbAAkB
bQlCAQkBeAl/AhkBOQaEAgkBCweJAgkBCwePAuEBvAFhAOEBiwl4AOEBpAl9AOEBuAmWAukB4wm1
AukB7QkbAOkBtwgbABkAvAEbAAgAFABuAAgAGABzACkAkwCgAC4AGwAsAy4AIwAsAy4AYwBSAy4A
CwC7Ai4AEwADAy4AMwADAy4AKwAsAy4AOwAyAy4AQwAsAy4AWwBJA0MAawBzAEkAkwCgAGEAmwBz
AIMAqwBzAJUAaQExAmkCnAICAAEAAwADAAAAbwEvAAAA7gE0AAAAEgJCAAIAAgADAAIAAwAFAAEA
BAAFAAIABQAHALoBJAIEgAAAAQAAANAY3CAAAAAAAAB/AAAABAAAAAAAAAAAAAAAAQCxAAAAAAAE
AAAAAAAAAAAAAAABALoAAAAAAAwAAAAAAAAAAAAAAAoA9QAAAAAABAAAAAAAAAAAAAAAAQAfAgAA
AAAMAAAAAAAAAAAAAAAKAMYFAAAAAAQAAAAAAAAAAAAAAAEA6AgAAAAAAAAAAAEAAADyCQAABQAE
AJMA2wGVAPIBlwDyAZkA8gGbAPIBAAAAAAA8TW9kdWxlPgBTVF8xM2FmYTI5NWExYjA0MDUzYTgz
YmM1ZTQzYWI5ZDE5Ni5kbGwAUmVzb3VyY2VzAFNUXzEzYWZhMjk1YTFiMDQwNTNhODNiYzVlNDNh
YjlkMTk2LlByb3BlcnRpZXMAU2V0dGluZ3MAU2NyaXB0TWFpbgBTVF8xM2FmYTI5NWExYjA0MDUz
YTgzYmM1ZTQzYWI5ZDE5NgBTY3JpcHRSZXN1bHRzAG1zY29ybGliAFN5c3RlbQBPYmplY3QAU3lz
dGVtLkNvbmZpZ3VyYXRpb24AQXBwbGljYXRpb25TZXR0aW5nc0Jhc2UATWljcm9zb2Z0LlNxbFNl
cnZlci5TY3JpcHRUYXNrAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlRhc2tzLlNjcmlwdFRhc2sA
VlNUQVJUU2NyaXB0T2JqZWN0TW9kZWxCYXNlAEVudW0AU3lzdGVtLlJlc291cmNlcwBSZXNvdXJj
ZU1hbmFnZXIAcmVzb3VyY2VNYW4AU3lzdGVtLkdsb2JhbGl6YXRpb24AQ3VsdHVyZUluZm8AcmVz
b3VyY2VDdWx0dXJlAC5jdG9yAGdldF9SZXNvdXJjZU1hbmFnZXIAZ2V0X0N1bHR1cmUAc2V0X0N1
bHR1cmUAQ3VsdHVyZQBkZWZhdWx0SW5zdGFuY2UAZ2V0X0RlZmF1bHQARGVmYXVsdABNYWluAFN5
c3RlbS5EYXRhAERhdGFUYWJsZQBTeXN0ZW0uRGF0YS5TcWxDbGllbnQAU3FsQ29ubmVjdGlvbgBf
Z2V0RGF0YVRhYmxlRnJvbUNzdgBfZXJyb3JTdGF0dXMAX2ltcG9ydERhdGFUYWJsZUJ1bGsAX2Nv
bm5lY3Rpb25PcGVuAF9jb25uZWN0aW9uQ2xvc2UAdmFsdWVfXwBTdWNjZXNzAEZhaWx1cmUAdmFs
dWUAcGF0aABjaGFyU2VwYXJhdG9yAGludE51bV9vZl9maWVsZABteUNvbm5lY3Rpb24AYm9vbFBr
Q2hlY2sAZHRUb0JlSW1wb3J0AHN0clRhYmxlTmFtZQBTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5n
AFRhcmdldEZyYW1ld29ya0F0dHJpYnV0ZQBTeXN0ZW0uUmVmbGVjdGlvbgBBc3NlbWJseVRpdGxl
QXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUAQXNzZW1ibHlDb25maWd1cmF0
aW9uQXR0cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRy
aWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1
dGUAQXNzZW1ibHlDdWx0dXJlQXR0cmlidXRlAEFzc2VtYmx5VmVyc2lvbkF0dHJpYnV0ZQBTeXN0
ZW0uUnVudGltZS5Db21waWxlclNlcnZpY2VzAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1
dGUAUnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAU3lzdGVtLkRpYWdub3N0aWNzAERlYnVn
Z2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUAVHlwZQBSdW50aW1lVHlwZUhhbmRsZQBHZXRUeXBlRnJv
bUhhbmRsZQBBc3NlbWJseQBnZXRfQXNzZW1ibHkAU3lzdGVtLkNvbXBvbmVudE1vZGVsAEVkaXRv
ckJyb3dzYWJsZUF0dHJpYnV0ZQBFZGl0b3JCcm93c2FibGVTdGF0ZQBDb21waWxlckdlbmVyYXRl
ZEF0dHJpYnV0ZQAuY2N0b3IAU1NJU1NjcmlwdFRhc2tFbnRyeVBvaW50QXR0cmlidXRlAFNjcmlw
dE9iamVjdE1vZGVsAGdldF9EdHMATWljcm9zb2Z0LlNxbFNlcnZlci5NYW5hZ2VkRFRTAE1pY3Jv
c29mdC5TcWxTZXJ2ZXIuRHRzLlJ1bnRpbWUAVmFyaWFibGVzAGdldF9WYXJpYWJsZXMAVmFyaWFi
bGUAZ2V0X0l0ZW0AZ2V0X1ZhbHVlAFRvU3RyaW5nAFN5c3RlbS5JTwBQYXRoAEdldEZpbGVOYW1l
AFN0cmluZwBFbXB0eQBDb252ZXJ0AFRvSW50NjQARGF0ZVRpbWUAVG9EYXRlVGltZQBTeXN0ZW0u
VGV4dABTdHJpbmdCdWlsZGVyAFRvTG93ZXIAb3BfRXF1YWxpdHkAQ2hhcgBTcGxpdABUb0NoYXIA
VG9JbnQzMgBJc051bGxPckVtcHR5AERhdGFDb2x1bW5Db2xsZWN0aW9uAGdldF9Db2x1bW5zAElu
dDMyAENvbmNhdABEYXRhQ29sdW1uAEFkZABzZXRfUHJpbWFyeUtleQBEYXRhUm93Q29sbGVjdGlv
bgBnZXRfUm93cwBJbnRlcm5hbERhdGFDb2xsZWN0aW9uQmFzZQBTeXN0ZW0uQ29sbGVjdGlvbnMA
SUVudW1lcmF0b3IAR2V0RW51bWVyYXRvcgBnZXRfQ3VycmVudABEYXRhUm93AGdldF9JdGVtQXJy
YXkAQ2xlYXIAQXBwZW5kRm9ybWF0AGdldF9UYWJsZQBnZXRfQ291bnQARXhjZXB0aW9uAGdldF9N
ZXNzYWdlAFJlcGxhY2UAQXBwZW5kAEludDY0AFNxbENvbW1hbmQAU3lzdGVtLkRhdGEuQ29tbW9u
AERiQ29tbWFuZABFeGVjdXRlTm9uUXVlcnkAc2V0X1ZhbHVlAHNldF9UYXNrUmVzdWx0AE1vdmVO
ZXh0AElEaXNwb3NhYmxlAERpc3Bvc2UAQm9vbGVhbgBFbmNvZGluZwBTdHJlYW1SZWFkZXIAVGV4
dFJlYWRlcgBSZWFkTGluZQBnZXRfRW5kT2ZTdHJlYW0AQ2xvc2UAVHJpbUVuZABQYXJzZQBDb252
ZXJ0ZXJgMgBBcnJheQBDb252ZXJ0QWxsAFN5c3RlbS5Db3JlAFN5c3RlbS5MaW5xAEVudW1lcmFi
bGUAU3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMASUVudW1lcmFibGVgMQBEaXN0aW5jdABUb0Fy
cmF5AElFbnVtZXJhYmxlAENhc3QATGlzdGAxAFRvTGlzdABDb250YWlucwBnZXRfTGVuZ3RoAFJl
bW92ZQBTcWxCdWxrQ29weQBzZXRfRGVzdGluYXRpb25UYWJsZU5hbWUAc2V0X0J1bGtDb3B5VGlt
ZW91dABXcml0ZVRvU2VydmVyAERiQ29ubmVjdGlvbgBDb25uZWN0aW9uU3RhdGUAZ2V0X1N0YXRl
AE9wZW4AU1RfMTNhZmEyOTVhMWIwNDA1M2E4M2JjNWU0M2FiOWQxOTYuUHJvcGVydGllcy5SZXNv
dXJjZXMucmVzb3VyY2VzAAAAAABxUwBUAF8AMQAzAGEAZgBhADIAOQA1AGEAMQBiADAANAAwADUA
MwBhADgAMwBiAGMANQBlADQAMwBhAGIAOQBkADEAOQA2AC4AUAByAG8AcABlAHIAdABpAGUAcwAu
AFIAZQBzAG8AdQByAGMAZQBzAAAhYwBvAG4AbgBlAGMAdABpAG8AbgBTAHQAcgBpAG4AZwAAJVUA
cwBlAHIAOgA6AGYAaQBsAGUARgB1AGwAbABQAGEAdABoAAAdVQBzAGUAcgA6ADoAZgBpAGwAZQBO
AGEAbQBlAAAhYwBvAGwAdQBtAG4AXwBzAGUAcABhAHIAYQB0AG8AcgAAF24AbwBfAG8AZgBfAGYA
aQBlAGwAZAAAHVUAcwBlAHIAOgA6AHIAbwB3AEMAbwB1AG4AdAAAI1UAcwBlAHIAOgA6AGMAdQBy
AHIAZQBuAHQARABhAHQAZQAAK1UAcwBlAHIAOgA6AGIAbwBvAGwAQwBvAG4AZgBpAGcARQByAHIA
bwByAAALZgBhAGwAcwBlAAATcABrAF8AYwBvAGwAXwBuAG8AAA9DAG8AbAB1AG0AbgAgAAAPewAw
AH0AIAAgACAAIAAAAycAAQMtAAEZSQBOAFMARQBSAFQAIABJAE4AVABPACAAAICNSwBBAE4AUwBI
AEkAXwBQAEEAQwBLAEEARwBFAF8ARQBSAFIATwBSACgAWwDRMMMwsTD8MLgwszD8MMkwXQAsAFsA
xzD8ML8w5WXYTl0ALABbAKgw6TD8MOVlQmZdACwAWwDVMKEwpDDrMA1UXQAsAFsAqDDpMPwwhVG5
W10ALABbAEyIcGVdACkAIAABEVYAQQBMAFUARQBTACgAJwABI1UAcwBlAHIAOgA6AHAAYQBjAGsA
YQBnAGUAQwBvAGQAZQAABycALAAnAAEbVQBzAGUAcgA6ADoAcwB5AHMARABhAHQAZQAAI8cw/DC/
MJIwzZEHiVUwjDBmMEQwfjBZMAIwqDDpMPwwOgABBycAKQA7AAEhVQBzAGUAcgA6ADoAcgBlAHMA
dQBsAHQARgBsAGEAZwAABU4ARwAAC18AVABFAE0AUAAAgJ9LAEEATgBTAEgASQBfAFAAQQBDAEsA
QQBHAEUAXwBFAFIAUgBPAFIAKABbANEwwzCxMPwwuDCzMPwwyTBdACwAWwDHMPwwvzDlZdhOXQAs
AFsAqDDpMPww5WVCZl0ALABbANUwoTCkMOswDVRdACwAWwCoMOkw/DCFUblbXQAsAFsATIhwZV0A
LABbAKgw6TD8MNUw6TCwMF0AKQAgAAEPcwB5AHMARABhAHQAZQAAGScALAAnALcwuTDGMOAwqDDp
MPwwOgAgAAELJwAsADEAKQA7AAElVQBzAGUAcgA6ADoAZgBhAHUAbAB0AHkAUgBvAHcATgB1AG0A
AIClSwBBAE4AUwBIAEkAXwBQAEEAQwBLAEEARwBFAF8ARQBSAFIATwBSAF8AUwBUAEEAVABVAFMA
KABbANEwwzCxMPwwuDCzMPwwyTBdACwAWwDHMPwwvzDlZdhOXQAsAFsAqDDpMPww5WVCZl0ALABb
AKgw6TD8MMEwpzDDMK8wvzCkMNcwXQAsAFsAuTDGMPwwvzC5MF0ALABbAEyIcGVdACkAIAABIScA
LAAnAM2RB4moMOkw/DAnACwAJwBOAEcAJwAsACcAASEnACwAJwDNkQeJqDDpMPwwJwAsACcATwBL
ACcALAAnAAEXJwAsACcAtzC5MMYw4DCoMOkw/DA6AAEDXwAAEXkAeQB5AHkATQBNAGQAZAAAAy4A
ACdVAHMAZQByADoAOgBmAGkAbABlAEUAeAB0AGUAbgBzAGkAbwBuAAAfVABSAFUATgBDAEEAVABF
ACAAVABBAEIATABFACAAAAM7AAAAALpsSxD66/JCjP3qxhj/7JMACLd6XFYZNOCJCImEXc2AgMyR
AwYSFQMGEhkDIAABBAAAEhUEAAASGQUAAQESGQQIABIVBAgAEhkDBhIMBAAAEgwECAASDAkgBBId
DgMIEiEGIAIBAhIhCCADARIdDhIhBSABARIhAgYIAwYRFAQAAAAABAEAAAAEIAEBDgQgAQEIBgAB
ElkRXQQgABJhBiACAQ4SYQQHARIVBSABARFpCAEAAgAAAAAAAwAAAQQgABJ1BCAAEnkFIAESfRwD
IAAcAyAADgQAAQ4OAgYOBAABCg4GAAERgI0cBQACAg4OBiABHQ4dAwQAAQMOBAABCA4EAAECDgUg
ABKAmQUAAg4cHAYgARKAoQ4FAAIODg4HIAEBHRKAoQUgABKApQUgABKArQQgAB0cByABEoCxHRwF
IAASgJEHIAISgJEOHAQgABIdAyAACAUgAg4ODgYgARKAkQ4FAAEOHRwGIAIBDhIhBCABARwDIAAC
PAceDg4ODg4ODgoRgI0SIRKAvRKAkRIdEh0CEoCRHQ4IHRKAoQgSgLESgLUIDhKAtR0DEoCtHRwS
gMUdHAUAABKAzQcgAgEOEoDNBSABDh0DBxUSgNkCDgoFIAIBHBgSEAICHR4BHR4AFRKA2QIeAB4B
BAoCDgoREAEBFRKA5QEeABUSgOUBHgADCgEKDRABAR0eABUSgOUBHgANEAEBFRKA5QEeABKA6REQ
AQEVEoDtAR4AFRKA5QEeAAYVEoDtAQoFIAECEwA3BxkSHQ4OEYCNDg4SgL0KHQ4SgJESgNEIHQ4d
ChUSgO0BCggKEoC1EoDRHQMdAx0DEoDRHQMdHBUHCA4RgI0SgJESgL0SgLUdHB0cHRwEIAEOCAQg
AQ4OBQABDh0OBgADDg4ODgUgAQESHRgHChKAkQ4RgI0KDhKAvRKA8RKAtR0OHRwFIAARgPlHAQAa
Lk5FVEZyYW1ld29yayxWZXJzaW9uPXY0LjABAFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1lEC5ORVQg
RnJhbWV3b3JrIDQoAQAjU1RfMTNhZmEyOTVhMWIwNDA1M2E4M2JjNWU0M2FiOWQxOTYAAAUBAAAA
ABYBABFDb3B5cmlnaHQgQCAgMjAxNgAACAEACAAAAAAAHgEAAQBUAhZXcmFwTm9uRXhjZXB0aW9u
VGhyb3dzAQAAANhNAAAAAAAAAAAAAO5NAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAADgTQAAAAAA
AAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAEAAAABgAAIAA
AAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgAAABYYAAApAMAAAAA
AAAAAAAApAM0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAAAL0E7/4AAAEAAAAB
ANwg0BgAAAEA3CDQGD8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAAAQBWAGEAcgBGAGkA
bABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAAAAAAAACwBAQDAAAB
AFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAAOACAAABADAAMAAwADAAMAA0AGIAMAAAAHAA
JAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABTAFQAXwAxADMAYQBmAGEAMgA5
ADUAYQAxAGIAMAA0ADAANQAzAGEAOAAzAGIAYwA1AGUANAAzAGEAYgA5AGQAMQA5ADYAAAA8AA4A
AQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4ANgAzADUAMgAuADgANAAxADIAAABw
ACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMAVABfADEAMwBhAGYAYQAyADkANQBhADEA
YgAwADQAMAA1ADMAYQA4ADMAYgBjADUAZQA0ADMAYQBiADkAZAAxADkANgAuAGQAbABsAAAASAAS
AAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBvAHAAeQByAGkAZwBoAHQAIABAACAA
IAAyADAAMQA2AAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBhAG0AZQAAAFMAVABf
ADEAMwBhAGYAYQAyADkANQBhADEAYgAwADQAMAA1ADMAYQA4ADMAYgBjADUAZQA0ADMAYQBiADkA
ZAAxADkANgAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEAbQBlAAAAAABTAFQAXwAx
ADMAYQBmAGEAMgA5ADUAYQAxAGIAMAA0ADAANQAzAGEAOAAzAGIAYwA1AGUANAAzAGEAYgA5AGQA
MQA5ADYAAABAAA4AAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADYAMwA1
ADIALgA4ADQAMQAyAAAARAAOAAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBlAHIAcwBpAG8AbgAAADEA
LgAwAC4ANgAzADUAMgAuADgANAAxADIAAAAAAAAAAEAAAAwAAAAAPgAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{58771167-CDE2-40AA-9BB2-41B989AF251B}"
      DTS:Expression="@[User::resultFlag] == &quot;OK&quot;"
      DTS:From="Package\ファイルの存在とフォーマットチェック"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\データ値とデータ型チェック" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 1]"
      DTS:CreationName=""
      DTS:DTSID="{604CF2EE-18C6-4596-AF45-EDC30221E90A}"
      DTS:From="Package\セットファイル名"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 1"
      DTS:To="Package\補正チェックを取得" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 2]"
      DTS:CreationName=""
      DTS:DTSID="{ABC557C5-C8A9-4552-AEBB-FC1B4E5DFF73}"
      DTS:From="Package\補正チェックを取得"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 2"
      DTS:To="Package\ファイルの存在とフォーマットチェック" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 3]"
      DTS:CreationName=""
      DTS:DTSID="{5EE6F190-EAF8-46C8-A65D-F837F8CCB31A}"
      DTS:From="Package\データ値とデータ型チェック"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 3"
      DTS:To="Package\重複チェック" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 4]"
      DTS:CreationName=""
      DTS:DTSID="{567312D9-4291-4839-9CA7-AF0560E12643}"
      DTS:From="Package\重複チェック"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 4"
      DTS:To="Package\エラーチェックの報告書メール" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 5]"
      DTS:CreationName=""
      DTS:DTSID="{24AD8836-20FD-4F09-99B7-42A9539E9158}"
      DTS:From="Package\リータンフラグ"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 5"
      DTS:To="Package\ファイルバックアップする" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 6]"
      DTS:CreationName=""
      DTS:DTSID="{9AAE81EE-AB14-4D09-9D7A-5FB03FB10EC7}"
      DTS:From="Package\ファイルバックアップする"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 6"
      DTS:To="Package\DONEファイルバックアップする" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 7]"
      DTS:CreationName=""
      DTS:DTSID="{63EC6245-BB71-4D67-83E8-0388C724117E}"
      DTS:From="Package\エラーチェックの報告書メール"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 7"
      DTS:To="Package\リータンフラグ" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="sql12">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="32" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="200,42"
          Id="Package\DONEファイルバックアップする"
          TopLeft="769.333333333333,510" />
        <NodeLayout
          Size="204,42"
          Id="Package\エラーチェックの報告書メール"
          TopLeft="531,336" />
        <NodeLayout
          Size="151,42"
          Id="Package\セットファイル名"
          TopLeft="75,58" />
        <NodeLayout
          Size="221,42"
          Id="Package\データ値とデータ型チェック"
          TopLeft="270.25,247" />
        <NodeLayout
          Size="221,42"
          Id="Package\ファイルの存在とフォーマットチェック"
          TopLeft="269.25,147" />
        <NodeLayout
          Size="200,42"
          Id="Package\ファイルバックアップする"
          TopLeft="769.333333333333,424" />
        <NodeLayout
          Size="200,42"
          Id="Package\リータンフラグ"
          TopLeft="769.333333333333,332" />
        <NodeLayout
          Size="221,42"
          Id="Package\重複チェック"
          TopLeft="270.25,340" />
        <NodeLayout
          Size="221,42"
          Id="Package\補正チェックを取得"
          TopLeft="270.25,58" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="380.25,189">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,58"
              Start="0,0"
              End="0,50.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,50.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 1]"
          TopLeft="226,79">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="44.25,0"
              Start="0,0"
              End="36.75,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="36.75,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 2]"
          TopLeft="380.25,100">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,47"
              Start="0,0"
              End="0,39.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,39.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 3]"
          TopLeft="380.75,289">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-35.5,51"
              Start="0,0"
              End="-35.5,43.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,26.3800539083558" />
                  <mssgle:CubicBezierSegment
                    Point1="0,26.3800539083558"
                    Point2="0,30.3800539083558"
                    Point3="-4,30.3800539083558" />
                  <mssgle:LineSegment
                    End="-31.5,30.3800539083558" />
                  <mssgle:CubicBezierSegment
                    Point1="-31.5,30.3800539083558"
                    Point2="-35.5,30.3800539083558"
                    Point3="-35.5,34.3800539083558" />
                  <mssgle:LineSegment
                    End="-35.5,43.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 4]"
          TopLeft="491.25,359">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="39.75,0"
              Start="0,0"
              End="32.25,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="32.25,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 5]"
          TopLeft="869.333333333333,374">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,50"
              Start="0,0"
              End="0,42.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,42.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 6]"
          TopLeft="869.333333333333,466">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,44"
              Start="0,0"
              End="0,36.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,36.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 7]"
          TopLeft="735,355">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="34.333333333333,0"
              Start="0,0"
              End="26.833333333333,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="26.833333333333,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <AnnotationLayout
          Text="チェックのためクエリの作成"
          ParentId="Package"
          FontInfo="{assembly:Null}"
          Size="159,39"
          Id="4a4a2895-448e-4895-8fee-599eb7e485e3"
          TopLeft="76,26" />
        <AnnotationLayout
          Text="Db テーブルからチェックを取得"
          ParentId="Package"
          FontInfo="{assembly:Null}"
          Size="190,39"
          Id="81683c2d-3df1-42c6-b0cd-1c8179ccbf26"
          TopLeft="291,30" />
        <AnnotationLayout
          Text="フラットファイルのフォーマットチェック"
          ParentId="Package"
          FontInfo="{assembly:Null}"
          Size="199,39"
          Id="4b8a9464-0ea7-4dac-b1cd-a55b880f076b"
          TopLeft="284,118" />
        <AnnotationLayout
          Text="データ型とデータ値チェック"
          ParentId="Package"
          FontInfo="{assembly:Null}"
          Size="158,39"
          Id="70cbcea1-f440-42f7-b777-ef8c304ace67"
          TopLeft="303,214" />
        <AnnotationLayout
          Text="プライマリーキーチェック"
          ParentId="Package"
          FontInfo="{assembly:Null}"
          Size="138,39"
          Id="a40c9f94-7522-4395-b6a2-77fcf79ad5a7"
          TopLeft="310,307" />
        <AnnotationLayout
          Text="エラーログの仕様書メールする"
          ParentId="Package"
          FontInfo="{assembly:Null}"
          Size="177,39"
          Id="f1e5e3b9-328f-45ae-9e0d-06f6eb58d85c"
          TopLeft="545,302" />
        <AnnotationLayout
          Text="エラーが発生したかどうか。&#xA;ペアレントパッケージに返信。"
          ParentId="Package"
          FontInfo="{assembly:Null}"
          Size="166,54"
          Id="3f97b37f-f278-45e5-a337-533d8a209192"
          TopLeft="792,288" />
        <AnnotationLayout
          Text="フラットファイル、バックアップフォルダに移動"
          ParentId="Package"
          FontInfo="{assembly:Null}"
          Size="242,39"
          Id="90042eb7-3dfa-4e85-8904-0453fa102433"
          TopLeft="747,392" />
        <AnnotationLayout
          Text="DONEファイル、バックアップフォルダに移動"
          ParentId="Package"
          FontInfo="{assembly:Null}"
          Size="233,39"
          Id="e5474223-fb62-428b-9f8f-b14f1c5b1682"
          TopLeft="756,476" />
      </GraphLayout>
    </LayoutInfo>
  </Package>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>