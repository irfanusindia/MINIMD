<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="7/15/2016 10:30:01 AM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="UNIAD021"
  DTS:CreatorName="UNIAD021\IRFAN"
  DTS:DTSID="{9F9B536B-6931-4C85-9410-FA2B36847C8A}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="12.0.4100.1"
  DTS:LocaleID="16393"
  DTS:ObjectName="999_GYOUMU_CHECK"
  DTS:PackageType="5"
  DTS:VersionBuild="612"
  DTS:VersionGUID="{4256D0E9-8809-4BF5-B179-02EF46875725}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Logging.txt]"
      DTS:CreationName="FILE"
      DTS:DTSID="{D7FE4D35-054B-4E9E-AFDE-59A122A8F2FD}"
      DTS:ObjectName="Logging.txt">
      <DTS:PropertyExpression
        DTS:Name="ConnectionString">@[User::autoLoggerPath] +"\\"+ @[System::PackageName]  +"_"+ ((DT_WSTR,4)YEAR(DATEADD("Day",0,GETDATE()))  + (DT_WSTR,2)MONTH(DATEADD("Day",0,GETDATE())) +  (DT_WSTR,2)DAY(DATEADD("Day",0,GETDATE())))</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:FileUsageType="1"
          DTS:ConnectionString="D:\public\dailyLog\999_GYOUMU_CHECK_2017718" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:LogProviders>
    <DTS:LogProvider
      DTS:ConfigString="Logging.txt"
      DTS:CreationName="Microsoft.LogProviderTextFile"
      DTS:Description="イベントのログ エントリを CSV ファイルに書き込みます"
      DTS:DTSID="{FB2AC8D0-864D-48CD-8EB6-26A26B77385C}"
      DTS:ObjectName="テキスト ファイルの SSIS ログ プロバイダー">
      <DTS:ObjectData>
        <InnerObject />
      </DTS:ObjectData>
    </DTS:LogProvider>
  </DTS:LogProviders>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{0691BDA5-F11B-4013-8E5F-A29957DB324A}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="autoLoggerPath">
      <DTS:VariableValue
        DTS:DataType="8">D:\public\dailyLog</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{4BD407A9-4E74-4AC7-B075-596313FFE58A}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="checkType"
      DTS:RaiseChangedEvent="True">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{1EBA5578-FE48-4ACA-8D91-A8BD14DC4DCA}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="connectionString">
      <DTS:VariableValue
        DTS:DataType="8">Persist Security Info=False;User ID=sa;Initial Catalog=mini_md_db;Password=Minimd@0123;Data Source=10.130.105.16,1435</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{0CD1182F-6B4C-427B-BC4E-E0C9405DDD95}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="currentDate">
      <DTS:VariableValue
        DTS:DataType="7">6/5/2017</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{FFA51691-B162-4A3B-8B66-569A238CCA94}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="LogFilePath">
      <DTS:VariableValue
        DTS:DataType="8">D:\public\Error</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{B089033B-5A5B-44D5-AC31-1086F458CBC4}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="mailFromId">
      <DTS:VariableValue
        DTS:DataType="8">minimd.ro@gmail.com</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{A166D6CF-3B11-4CEC-8092-D1F412347BC2}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="mailFromName">
      <DTS:VariableValue
        DTS:DataType="8">MINIMD</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{E9108D00-3466-4965-A86E-4AB3C5356048}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="mailServer">
      <DTS:VariableValue
        DTS:DataType="8">smtp.gmail.com</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{D0D40888-32AE-48C3-BA54-663C88F76753}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="packageCode">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{7D38879C-FFC5-487C-8664-EBEC5096E2C1}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="GETDATE()"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="sysDate">
      <DTS:VariableValue
        DTS:DataType="7">7/18/2017 4:07:54 PM</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:LoggingOptions
    DTS:FilterKind="0"
    DTS:LoggingMode="1">
    <DTS:Property
      DTS:DataType="8"
      DTS:Name="EventFilter">4,7,OnError,13,OnInformation,12,OnTaskFailed,22,OnVariableValueChanged</DTS:Property>
    <DTS:Property
      DTS:EventName="OnError"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnInformation"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnTaskFailed"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnVariableValueChanged"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:SelectedLogProviders>
      <DTS:SelectedLogProvider
        DTS:InstanceID="{FB2AC8D0-864D-48CD-8EB6-26A26B77385C}" />
    </DTS:SelectedLogProviders>
  </DTS:LoggingOptions>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\レジ精算"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:Description="Script Task"
      DTS:DTSID="{4FE1AE52-017F-4FB1-ABE2-E9D380431EDA}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="レジ精算"
      DTS:ThreadHint="6">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_7c8204385a4e4eddb050c97718e83d34"
          VSTAMajorVersion="3"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadOnlyVariables="User::checkType,User::connectionString,User::currentDate,User::packageCode,User::sysDate">
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_ce3ffc09050545a588750b50f21c1788.Properties.Settings.get_Default():ST_ce3ffc09050545a588750b50f21c1788.Properties.Sett" +
    "ings")]

namespace ST_ce3ffc09050545a588750b50f21c1788.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="ST_7c8204385a4e4eddb050c97718e83d34.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?><Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003"><PropertyGroup><ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids><Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration><Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform><ProductVersion>8.0.30703</ProductVersion><SchemaVersion>2.0</SchemaVersion><ProjectGuid>{6f1cd3ad-124c-410c-a3da-0ed5e3468b82}</ProjectGuid><OutputType>Library</OutputType><AppDesignerFolder>Properties</AppDesignerFolder><RootNamespace>ST_ce3ffc09050545a588750b50f21c1788</RootNamespace><AssemblyName>ST_7c8204385a4e4eddb050c97718e83d34</AssemblyName><TargetFrameworkVersion>v4.0</TargetFrameworkVersion><FileAlignment>512</FileAlignment><ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Debug' "><DebugSymbols>true</DebugSymbols><DebugType>full</DebugType><Optimize>false</Optimize><OutputPath>.\bin\Debug\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>DEBUG;TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Release' "><DebugSymbols>false</DebugSymbols><Optimize>true</Optimize><OutputPath>.\bin\Release\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><ItemGroup><Reference Include="System" /><Reference Include="System.Data" /><Reference Include="System.Windows.Forms" /><Reference Include="System.Xml" /><Reference Include="Microsoft.SqlServer.ManagedDTS, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.ScriptTask, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /></ItemGroup><ItemGroup><AppDesigner Include="Properties\" /><Compile Include="Properties\AssemblyInfo.cs"><SubType>Code</SubType></Compile><EmbeddedResource Include="Properties\Resources.resx"><Generator>ResXFileCodeGenerator</Generator><LastGenOutput>Resources.Designer.cs</LastGenOutput></EmbeddedResource><Compile Include="Properties\Resources.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Resources.resx</DependentUpon></Compile><None Include="Properties\Settings.settings"><Generator>SettingsSingleFileGenerator</Generator><LastGenOutput>Settings.Designer.cs</LastGenOutput></None><Compile Include="Properties\Settings.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Settings.settings</DependentUpon></Compile><Compile Include="ScriptMain.cs"><SubType>Code</SubType></Compile></ItemGroup><!-- Include the build rules for a C# project.--><Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" /><ProjectExtensions><VisualStudio><FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}"><ProjectProperties HostName="ScriptTask" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="#HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\VisualStudio\10.0\InstallDir#\devenv.exe" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" /><Host Name="ScriptTask" GeneratedNamespace="$safeprojectname" IconIndex=""></Host><ProjectClient><HostIdentifier>SSIS_ST120</HostIdentifier></ProjectClient></FlavorProperties></VisualStudio></ProjectExtensions></Project>]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[
#region Namespaces
using System;
using System.Data;
using System.Data.SqlClient;
using System.Text;
#endregion

namespace ST_ce3ffc09050545a588750b50f21c1788
{
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
    {
        #region "Main Method"
        /// <summary>
        /// 作成者：イルファン　マンスリー
        /// 説明：レジ精算の業務データチェックする。
        /// 作成日：2017年03月20日
        /// </summary>
        public void Main()
		{
            string strConnection = Dts.Variables["User::connectionString"].Value.ToString();
            SqlConnection myConnection = new SqlConnection(strConnection);
            StringBuilder strERRQuery = new StringBuilder();
            DataTable dtFaultyTemp;
            try
            { 
                dtFaultyTemp = new DataTable();
                _connectionOpen(myConnection);
                
                #region "Check for 更新日"
                //Get All The Records of Temp TABLE, with New Column DEL_RECORD as Flag.
                //Faulty Records will have DEL_RECORD as 'TRUE'
                strERRQuery.Clear();
                strERRQuery.Append(" SELECT *, ");
                strERRQuery.Append(" CASE WHEN CONVERT(DATE,更新日) != CONVERT(DATE,GETDATE()) THEN 'TRUE' ELSE 'FALSE' END AS DEL_RECORD ");
                strERRQuery.Append(" FROM T_DAY_TEN_REGI_SEISAN_TEMP ");
                dtFaultyTemp.Reset();
                dtFaultyTemp = _getDataTable(strERRQuery.ToString(), myConnection);
                if (dtFaultyTemp.Rows.Count > 0)
                {
                    _replaceData(dtFaultyTemp, myConnection, "更新日を間違えました。");   //Replace & Remove Data in Actual Db Table
                }
                #endregion

                Dts.TaskResult = (int)ScriptResults.Success;
            }
            #region Catch/Finally
            catch (Exception ex)
            {
                strERRQuery.Clear();
                strERRQuery.Append("INSERT INTO KANSHI_PACKAGE_ERROR ");
                strERRQuery.Append(" (パッケージコード,データ日付,エラー日時,エラー内容,エラーフラグ) ");
                strERRQuery.Append(" VALUES('G" + Dts.Variables["User::packageCode"].Value.ToString() + "','" + Dts.Variables["User::currentDate"].Value.ToString() + "','" + Dts.Variables["User::sysDate"].Value.ToString() + "','システムエラー:" + ex.Message.ToString().Replace("'", "-") + "','3');");
                _updateInsert(strERRQuery.ToString(), myConnection);
                Dts.TaskResult = (int)ScriptResults.Success;
            }
            finally 
            {
                _connectionClose(myConnection);
                dtFaultyTemp = null;
                strERRQuery = null;
                myConnection = null;
            }
            #endregion
		}
        #endregion

        #region "replace Data"
        //Data Replacement in Actual DB After Test
        private void _replaceData(DataTable dtFaultyTemp, SqlConnection myConnection, string strErrorMsg)
        {
            StringBuilder strERRQuery = new StringBuilder();
            StringBuilder strBuildRow = new StringBuilder();
            DataRow drTemp;
            string strPackageCode = string.Empty;
            int intErrorCount = 0;  //To Count Errors in the DataTable, to avoid its extra TRUNCATION and BULK.
            try
            {
                _connectionOpen(myConnection);
                strPackageCode = Dts.Variables["User::packageCode"].Value.ToString();
                intErrorCount = 0;
                int countRows = dtFaultyTemp.Rows.Count;
                for (int intI = 0; intI < countRows; intI++)
                {
                    #region Report Faulty Records
                    if (dtFaultyTemp.Rows[intI]["DEL_RECORD"].ToString().ToUpper() == "TRUE")
                    {
                        intErrorCount = intErrorCount + 1;
                        //'TRUE' means Faulty SKU Record
                        drTemp = dtFaultyTemp.Rows[intI];
                        strBuildRow.Clear();
                        for (int intJ = 0; intJ < drTemp.Table.Columns.Count-1; intJ++)
                        {
                            strBuildRow.AppendFormat("{0} ", drTemp.ItemArray[intJ]);
                        }
                        strERRQuery.Clear();
                        strERRQuery.Append("INSERT INTO KANSHI_PACKAGE_ERROR ");
                        strERRQuery.Append(" (パッケージコード,データ日付,エラー日時,エラー内容,エラーフラグ) ");
                        strERRQuery.Append(" VALUES('G" + strPackageCode + "','" + Dts.Variables["User::currentDate"].Value.ToString() + "','" + Dts.Variables["User::sysDate"].Value.ToString() + "','" + strBuildRow.ToString() + "。" + strErrorMsg + "','3');");
                        _updateInsert(strERRQuery.ToString(), myConnection);
                        countRows = countRows - 1;
                        intI = intI - 1;
                        dtFaultyTemp.Rows.Remove(drTemp);   //Remove Faulty Records from DataTable Object.
                        dtFaultyTemp.AcceptChanges();    //Commit DataTable Changes.
                    }
                    #endregion
                }
                dtFaultyTemp.Columns.Remove("DEL_RECORD");
                if (intErrorCount > 0)
                {
                    #region "TRUNCATE TEMP Table"
                    //TRUNCATE TEMP Table, to be import New Correct Records
                    strERRQuery.Clear();
                    strERRQuery.Append(" TRUNCATE TABLE " + Dts.Variables["User::checkType"].Value.ToString() + "_TEMP");
                    _updateInsert(strERRQuery.ToString(), myConnection);
                    #endregion
                    #region "Bulk Update Records"
                    //正しいデータテーブルからインポートするためいに。
                    using (SqlBulkCopy bulkCopy = new SqlBulkCopy(myConnection))
                    {
                        bulkCopy.DestinationTableName = Dts.Variables["User::checkType"].Value.ToString() + "_TEMP";   //Assign table name
                        _connectionOpen(myConnection);
                        bulkCopy.BulkCopyTimeout = 600; //Default Timeut 30 Change to 600. in seconds
                        bulkCopy.WriteToServer(dtFaultyTemp);   //Write into Actual table.
                    }
                    #endregion
                }
            }
            #region Catch/Finally
            catch (Exception ex) 
            {
                throw ex;
            }
            finally
            {
                strPackageCode = null;
                strERRQuery = null;
                dtFaultyTemp = null;
                strBuildRow = null;
                strErrorMsg = null;
                drTemp = null;
            }
            #endregion
        }
        #endregion

        #region "Get DataTable"
        //Created On: 08-08-2016
        //Description: Aim to Return DataTable from the Query.
        public DataTable _getDataTable(string strQuery, SqlConnection myConnection)
        {
            StringBuilder strERRQuery = new StringBuilder();
            DataTable objDT = new DataTable();
            SqlCommand myCommand;
            SqlDataAdapter sqlSelectData;
            try
            {
                _connectionOpen(myConnection);
                myCommand = new SqlCommand(strQuery, myConnection);
                myCommand.CommandType = CommandType.Text;
                sqlSelectData = new SqlDataAdapter();
                sqlSelectData.SelectCommand = myCommand;
                myCommand.CommandTimeout = 600; //Increases Query execution timeout.
                sqlSelectData.Fill(objDT);
            }
            #region CATCH/FINALLY
            catch (Exception ex)
            {
                throw ex;
            }
            finally
            {
                strQuery = null;
                myCommand = null;
                sqlSelectData = null;
                strERRQuery = null;
            }
            #endregion
            return objDT;
        }
        #endregion

        #region "Update/Insert Query in Db"
        protected void _updateInsert(string strQuery, SqlConnection myConnection)
        {
            StringBuilder strERRQuery = new StringBuilder();
            SqlCommand myCommand;
            try
            {
                myCommand = new SqlCommand(strQuery, myConnection);
                _connectionOpen(myConnection);
                myCommand.ExecuteNonQuery();
            }
            #region CATCH/FINALLY
            catch (Exception ex)
            {
                throw ex;
            }
            finally
            {
                strERRQuery = null;
                myConnection = null;
                myCommand = null;
            }
            #endregion
        }
        #endregion

        #region Connection Open
        private void _connectionOpen(SqlConnection myConnection)
        {
            try
            {
                if (myConnection.State != ConnectionState.Open)
                {
                    myConnection.Open();
                }
            }
            catch (Exception ex)
            {
                throw ex;
            }
        }
        #endregion

        #region Connection Close
        private void _connectionClose(SqlConnection myConnection)
        {
            try
            {
                if (myConnection.State != ConnectionState.Closed)
                {
                    myConnection.Close();
                }
            }
            catch (Exception ex)
            {
                throw ex;
            }
        }
        #endregion

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>ST_ce3ffc09050545a588750b50f21c1788</msb:CodeName>
		<msb:DisplayName>ST_ce3ffc09050545a588750b50f21c1788</msb:DisplayName>
		<msb:ProjectId>{EE24C7D7-5D12-4340-B8D9-E41721313B68}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_7c8204385a4e4eddb050c97718e83d34.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_ce3ffc09050545a588750b50f21c1788")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_ce3ffc09050545a588750b50f21c1788")]
[assembly: AssemblyCopyright("Copyright @  2016")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_ce3ffc09050545a588750b50f21c1788.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_ce3ffc09050545a588750b50f21c1788.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_ce3ffc09050545a588750b50f21c1788.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_ce3ffc09050545a588750b50f21c1788.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_ce3ffc09050545a588750b50f21c1788.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_7c8204385a4e4eddb050c97718e83d34.dll">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
GQAACm8aAAAKcpADAHAoNQAACm82AAAKAgQoDAAABhEIIFgCAABvNwAAChEIA284AAAK3gwRCCwH
EQhvOQAACtzeBRMJEQl63g8UDRQKFBABFAsUEAMUDNwqAABBTAAAAgAAAEACAABNAAAAjQIAAAwA
AAAAAAAAAAAAABUAAACGAgAAmwIAAAUAAAAkAAABAgAAABUAAACNAgAAogIAAA8AAAAAAAAAGzAC
AFMAAAAEAAARcxwAAAomcx0AAAoKAgQoDAAABgMEczoAAAoLBxdvOwAACnM8AAAKDAgHbz0AAAoH
IFgCAABvPgAACggGbz8AAAom3gMNCXreCBQQARQLFAzcBioAARwAAAAADAA4RAADJAAAAQIADAA9
SQAIAAAAABswAgAqAAAABQAAEXMcAAAKJgMEczoAAAoKAgQoDAAABgZvQAAACibeAwsHet4GFBAC
FArcKgAAARwAAAAABgAYHgADJAAAAQIABgAdIwAGAAAAABswAgAVAAAABgAAEQNvQQAAChcuBgNv
QgAACt4DCgZ6KgAAAAEQAAAAAAAAEREAAyQAAAEbMAEAFAAAAAYAABEDb0EAAAosBgNvQwAACt4D
CgZ6KgEQAAAAAAAAEBAAAyQAAAEeAihEAAAKKgAAAAC0AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5S
ZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1
cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3Vy
Y2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAAQlNKQgEAAQAAAAAA
DAAAAHY0LjAuMzAzMTkAAAAABQBsAAAAtAUAACN+AAAgBgAAxAgAACNTdHJpbmdzAAAAAOQOAACc
AwAAI1VTAIASAAAQAAAAI0dVSUQAAACQEgAARAIAACNCbG9iAAAAAAAAAAIAAAFXHaIBCQMAAAD6
JTMAFgAAAQAAAC8AAAAFAAAABgAAAA4AAAAKAAAARAAAAAIAAAAPAAAABgAAAAIAAAADAAAABAAA
AAEAAAAFAAAAAQAAAAEAAAAAAAoAAQAAAAAABgDBALoACgDdAMgADgA9ARQBBgBZAboABgBvAV4B
BgCgAYsBEgArAh8CEgBLAjUCBgAKA/ACBgA1AyMDBgBMAyMDBgBpAyMDBgCIAyMDBgChAyMDBgC6
AyMDBgDVAyMDBgDwAyMDBgAJBCMDBgBCBCIEBgBiBCIEBgC3BKQEBgDUBLoABgDZBLoABgD9BCMD
CgApBRMFCgBCBRMFBgBXBSIEDgB5BRQBDgCbBRQBFgD0BdQFFgAMBtQFBgA9BjEGEgBeBh8CEgB5
Bh8CBgCtBroABgC0BroAEgDfBh8CEgAgBx8CEgBWBzUCBgCdB7oAEgCxBzUCEgDPB7wHEgDZBx8C
EgD1BzUCEgApCLwHEgBMCLwHEgBZCB8CAAAAAAEAAAAAAAEAAQAAABAAMgA8AAUAAQABAAABEABr
ADwACQADAAUAAQAQAHQAfwANAAQACAADAQAAowAAABEABAAPABEAfwETABEArAEXABEA9gE5AAYG
owJlAFaAqwJoAFaAswJoAFAgAAAAAIMYvAEbAAEAWCAAAAAAkwjCAR8AAQCRIAAAAACTCNYBJAAB
AJggAAAAAJMI4gEpAAEAoCAAAAAAlggGAj0AAgCzIAAAAACGGLwBGwACAKcgAAAAAJEYcgWnAAIA
vCAAAAAAhgAaAhsAAgC8IgAAAACBAFkCRwACAMglAAAAAIYAZgJQAAUARCYAAAAAhAB0AlgABwCY
JgAAAACBAIICXwAJAMwmAAAAAIEAkgJfAAoA/CYAAAAAhhi8ARsACwAAAAEAuwIAAAEAwQIAAAIA
zgIAAAMA2wIAAAEA5wIAAAIAzgIAAAEA5wIAAAIAzgIAAAEAzgIAAAEAzgJJALwBdgBRALwBdgBZ
ALwBdgBhALwBdgBpALwBdgBxALwBdgB5ALwBdgCBALwBdgCJALwBdgCRALwBdgCZALwBewChALwB
GwCpALwBGwAJALwBGwCxAOsEgACxAAYFhwApALwBjADJALwBmADZALwBGwARALwBGwDhALwBGwAZ
AK0FqwDpAP4FsADxABUGtQD5AB4GuwAJACgGvwBBALwBdgABAbwBGwA5ALwBGwABAUsGwwABAVEG
yQA5AFgGGwA5AHAG0AARAZQG1gDpAJ4GewAhAb4GvwAZAcoG2gAZAdIG4AAZAdkG9gAJARUG+QAp
ARUGAAEZAecGvwAZAe8GBQEpAfsGCwEBAQkHEAEpARYHGAE5ADUHHQEJAUEHIwE5AEgHGwAxAUEH
dgAZAdIGKgE5AbwBXwAZAdIGMQE5AWIHdgA5AXsHewA5AY8HNwFBAakHGwBJAbwBWABRAeUHVgFh
AbwBGwBhAQQIXQFRARYIewBpATcIZAFRATwI1gBxAWkIgQFxAXMIGwBxAXgIGwAZALwBGwAIABQA
bAAIABgAcQApAJMAngAuABsA/gEuACMA/gEuAGMAJAIuAAsAjQEuABMA1QEuADMA1QEuACsA/gEu
ADsABAIuAEMA/gEuAFsAGwJDAGsAcQBJAJMAngBhAJsAcQCDAKsAcQCTAOYAPQFqAXgBhwECAAEA
AwADAAAAbwEvAAAA7gE0AAAAEgJCAAIAAgADAAIAAwAFAAEABAAFAAIABQAHAASAAAABAAAAkBjX
ZgAAAAAAAIAEAAAEAAAAAAAAAAAAAAABALEAAAAAAAQAAAAAAAAAAAAAAAEAugAAAAAADAAAAAAA
AAAAAAAACgD1AAAAAAAEAAAAAAAAAAAAAAABAB8CAAAAAAwAAAAAAAAAAAAAAAoAtQUAAAAAAAAA
AAEAAAB+CAAABQAEAAAAAAAAPE1vZHVsZT4AU1RfN2M4MjA0Mzg1YTRlNGVkZGIwNTBjOTc3MThl
ODNkMzQuZGxsAFJlc291cmNlcwBTVF9jZTNmZmMwOTA1MDU0NWE1ODg3NTBiNTBmMjFjMTc4OC5Q
cm9wZXJ0aWVzAFNldHRpbmdzAFNjcmlwdE1haW4AU1RfY2UzZmZjMDkwNTA1NDVhNTg4NzUwYjUw
ZjIxYzE3ODgAU2NyaXB0UmVzdWx0cwBtc2NvcmxpYgBTeXN0ZW0AT2JqZWN0AFN5c3RlbS5Db25m
aWd1cmF0aW9uAEFwcGxpY2F0aW9uU2V0dGluZ3NCYXNlAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuU2Ny
aXB0VGFzawBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5UYXNrcy5TY3JpcHRUYXNrAFZTVEFSVFNj
cmlwdE9iamVjdE1vZGVsQmFzZQBFbnVtAFN5c3RlbS5SZXNvdXJjZXMAUmVzb3VyY2VNYW5hZ2Vy
AHJlc291cmNlTWFuAFN5c3RlbS5HbG9iYWxpemF0aW9uAEN1bHR1cmVJbmZvAHJlc291cmNlQ3Vs
dHVyZQAuY3RvcgBnZXRfUmVzb3VyY2VNYW5hZ2VyAGdldF9DdWx0dXJlAHNldF9DdWx0dXJlAEN1
bHR1cmUAZGVmYXVsdEluc3RhbmNlAGdldF9EZWZhdWx0AERlZmF1bHQATWFpbgBTeXN0ZW0uRGF0
YQBEYXRhVGFibGUAU3lzdGVtLkRhdGEuU3FsQ2xpZW50AFNxbENvbm5lY3Rpb24AX3JlcGxhY2VE
YXRhAF9nZXREYXRhVGFibGUAX3VwZGF0ZUluc2VydABfY29ubmVjdGlvbk9wZW4AX2Nvbm5lY3Rp
b25DbG9zZQB2YWx1ZV9fAFN1Y2Nlc3MARmFpbHVyZQB2YWx1ZQBkdEZhdWx0eVRlbXAAbXlDb25u
ZWN0aW9uAHN0ckVycm9yTXNnAHN0clF1ZXJ5AFN5c3RlbS5SdW50aW1lLlZlcnNpb25pbmcAVGFy
Z2V0RnJhbWV3b3JrQXR0cmlidXRlAFN5c3RlbS5SZWZsZWN0aW9uAEFzc2VtYmx5VGl0bGVBdHRy
aWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25B
dHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0
ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFya0F0dHJpYnV0ZQBB
c3NlbWJseUN1bHR1cmVBdHRyaWJ1dGUAQXNzZW1ibHlWZXJzaW9uQXR0cmlidXRlAFN5c3RlbS5S
dW50aW1lLkNvbXBpbGVyU2VydmljZXMAQ29tcGlsYXRpb25SZWxheGF0aW9uc0F0dHJpYnV0ZQBS
dW50aW1lQ29tcGF0aWJpbGl0eUF0dHJpYnV0ZQBTVF83YzgyMDQzODVhNGU0ZWRkYjA1MGM5Nzcx
OGU4M2QzNABTeXN0ZW0uRGlhZ25vc3RpY3MARGVidWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBU
eXBlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAEFzc2VtYmx5AGdldF9Bc3Nl
bWJseQBTeXN0ZW0uQ29tcG9uZW50TW9kZWwARWRpdG9yQnJvd3NhYmxlQXR0cmlidXRlAEVkaXRv
ckJyb3dzYWJsZVN0YXRlAENvbXBpbGVyR2VuZXJhdGVkQXR0cmlidXRlAC5jY3RvcgBTU0lTU2Ny
aXB0VGFza0VudHJ5UG9pbnRBdHRyaWJ1dGUAU2NyaXB0T2JqZWN0TW9kZWwAZ2V0X0R0cwBNaWNy
b3NvZnQuU3FsU2VydmVyLk1hbmFnZWREVFMATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUnVudGlt
ZQBWYXJpYWJsZXMAZ2V0X1ZhcmlhYmxlcwBWYXJpYWJsZQBnZXRfSXRlbQBnZXRfVmFsdWUAVG9T
dHJpbmcAU3lzdGVtLlRleHQAU3RyaW5nQnVpbGRlcgBDbGVhcgBBcHBlbmQAUmVzZXQARGF0YVJv
d0NvbGxlY3Rpb24AZ2V0X1Jvd3MASW50ZXJuYWxEYXRhQ29sbGVjdGlvbkJhc2UAZ2V0X0NvdW50
AHNldF9UYXNrUmVzdWx0AFN0cmluZwBFeGNlcHRpb24AZ2V0X01lc3NhZ2UAUmVwbGFjZQBDb25j
YXQARW1wdHkARGF0YVJvdwBUb1VwcGVyAG9wX0VxdWFsaXR5AGdldF9JdGVtQXJyYXkAQXBwZW5k
Rm9ybWF0AGdldF9UYWJsZQBEYXRhQ29sdW1uQ29sbGVjdGlvbgBnZXRfQ29sdW1ucwBSZW1vdmUA
QWNjZXB0Q2hhbmdlcwBTcWxCdWxrQ29weQBzZXRfRGVzdGluYXRpb25UYWJsZU5hbWUAc2V0X0J1
bGtDb3B5VGltZW91dABXcml0ZVRvU2VydmVyAElEaXNwb3NhYmxlAERpc3Bvc2UAU3FsQ29tbWFu
ZABTeXN0ZW0uRGF0YS5Db21tb24ARGJDb21tYW5kAENvbW1hbmRUeXBlAHNldF9Db21tYW5kVHlw
ZQBTcWxEYXRhQWRhcHRlcgBzZXRfU2VsZWN0Q29tbWFuZABzZXRfQ29tbWFuZFRpbWVvdXQARGJE
YXRhQWRhcHRlcgBGaWxsAEV4ZWN1dGVOb25RdWVyeQBEYkNvbm5lY3Rpb24AQ29ubmVjdGlvblN0
YXRlAGdldF9TdGF0ZQBPcGVuAENsb3NlAFNUX2NlM2ZmYzA5MDUwNTQ1YTU4ODc1MGI1MGYyMWMx
Nzg4LlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwAAAAAAcVMAVABfAGMAZQAzAGYAZgBj
ADAAOQAwADUAMAA1ADQANQBhADUAOAA4ADcANQAwAGIANQAwAGYAMgAxAGMAMQA3ADgAOAAuAFAA
cgBvAHAAZQByAHQAaQBlAHMALgBSAGUAcwBvAHUAcgBjAGUAcwAALVUAcwBlAHIAOgA6AGMAbwBu
AG4AZQBjAHQAaQBvAG4AUwB0AHIAaQBuAGcAABcgAFMARQBMAEUAQwBUACAAKgAsACAAAIDHIABD
AEEAUwBFACAAVwBIAEUATgAgAEMATwBOAFYARQBSAFQAKABEAEEAVABFACwA9GawZeVlKQAgACEA
PQAgAEMATwBOAFYARQBSAFQAKABEAEEAVABFACwARwBFAFQARABBAFQARQAoACkAKQAgAFQASABF
AE4AIAAnAFQAUgBVAEUAJwAgAEUATABTAEUAIAAnAEYAQQBMAFMARQAnACAARQBOAEQAIABBAFMA
IABEAEUATABfAFIARQBDAE8AUgBEACAAAUMgAEYAUgBPAE0AIABUAF8ARABBAFkAXwBUAEUATgBf
AFIARQBHAEkAXwBTAEUASQBTAEEATgBfAFQARQBNAFAAIAAAF/RmsGXlZZIwk5VVkEgwfjBXMF8w
AjABQ0kATgBTAEUAUgBUACAASQBOAFQATwAgAEsAQQBOAFMASABJAF8AUABBAEMASwBBAEcARQBf
AEUAUgBSAE8AUgAgAABLIAAoANEwwzCxMPwwuDCzMPwwyTAsAMcw/DC/MOVl2E4sAKgw6TD8MOVl
QmYsAKgw6TD8MIVRuVssAKgw6TD8MNUw6TCwMCkAIAABFSAAVgBBAEwAVQBFAFMAKAAnAEcAASNV
AHMAZQByADoAOgBwAGEAYwBrAGEAZwBlAEMAbwBkAGUAAAcnACwAJwABI1UAcwBlAHIAOgA6AGMA
dQByAHIAZQBuAHQARABhAHQAZQAAG1UAcwBlAHIAOgA6AHMAeQBzAEQAYQB0AGUAABcnACwAJwC3
MLkwxjDgMKgw6TD8MDoAAQMnAAEDLQABDycALAAnADMAJwApADsAARVEAEUATABfAFIARQBDAE8A
UgBEAAAJVABSAFUARQAACXsAMAB9ACAAAAMCMAEhIABUAFIAVQBOAEMAQQBUAEUAIABUAEEAQgBM
AEUAIAAAH1UAcwBlAHIAOgA6AGMAaABlAGMAawBUAHkAcABlAAALXwBUAEUATQBQAAB5yB7P63oa
Taep7bjl3EBfAAi3elxWGTTgiQiJhF3NgIDMkQMGEhUDBhIZAyAAAQQAABIVBAAAEhkFAAEBEhkE
CAASFQQIABIZAwYSDAQAABIMBAgAEgwIIAMBEh0SIQ4HIAISHQ4SIQYgAgEOEiEFIAEBEiECBggD
BhEUBAAAAAAEAQAAAAQgAQEOBCABAQgGAAESWRFdBCAAEmEGIAIBDhJhBAcBEhUFIAEBEWkIAQAC
AAAAAAADAAABBCAAEnUEIAASeQUgARJ9HAMgABwDIAAOBSAAEoCBBiABEoCBDgUgABKAhQMgAAgF
IAIODg4FAAEOHQ4PBwYOEiESgIESHRKAkR0OAgYOBiABEoCVCAQgARwOBQACAg4OBCAAHRwHIAIS
gIEOHAQgABIdBSAAEoCZBiABARKAlQYAAw4ODg4FAAIODg4FIAEBEh0YBwsSgIESgIESgJUOCAgI
CBKAnRKAkR0OBiABARGArQYgAQESgKUFIAEIEh0NBwQSHRKApRKAsRKAkQgHAhKApRKAkQUgABGA
vQUHARKAkUcBABouTkVURnJhbWV3b3JrLFZlcnNpb249djQuMAEAVA4URnJhbWV3b3JrRGlzcGxh
eU5hbWUQLk5FVCBGcmFtZXdvcmsgNCgBACNTVF9jZTNmZmMwOTA1MDU0NWE1ODg3NTBiNTBmMjFj
MTc4OAAABQEAAAAAFgEAEUNvcHlyaWdodCBAICAyMDE2AAAIAQAIAAAAAAAeAQABAFQCFldyYXBO
b25FeGNlcHRpb25UaHJvd3MBALw8AAAAAAAAAAAAAN48AAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAA
AADQPAAAAAAAAAAAAAAAAAAAAAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAA
EAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEA
EAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgAAABY
QAAAsAMAAAAAAAAAAAAAsAM0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAAAL0E
7/4AAAEAAAABANdmkBgAAAEA12aQGD8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAAAQBW
AGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAAAAAA
AACwBBADAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAAOwCAAABADAAMAAwADAAMAA0
AGIAMAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABTAFQAXwBjAGUA
MwBmAGYAYwAwADkAMAA1ADAANQA0ADUAYQA1ADgAOAA3ADUAMABiADUAMABmADIAMQBjADEANwA4
ADgAAABAAA8AAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4ANgAyADgAOAAuADIA
NgAzADIANwAAAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAFQAXwA3AGMAOAAy
ADAANAAzADgANQBhADQAZQA0AGUAZABkAGIAMAA1ADAAYwA5ADcANwAxADgAZQA4ADMAZAAzADQA
LgBkAGwAbAAAAEgAEgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBwAHkAcgBp
AGcAaAB0ACAAQAAgACAAMgAwADEANgAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4A
YQBtAGUAAABTAFQAXwA3AGMAOAAyADAANAAzADgANQBhADQAZQA0AGUAZABkAGIAMAA1ADAAYwA5
ADcANwAxADgAZQA4ADMAZAAzADQALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0A
ZQAAAAAAUwBUAF8AYwBlADMAZgBmAGMAMAA5ADAANQAwADUANAA1AGEANQA4ADgANwA1ADAAYgA1
ADAAZgAyADEAYwAxADcAOAA4AAAARAAPAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAA
MQAuADAALgA2ADIAOAA4AC4AMgA2ADMAMgA3AAAAAABIAA8AAQBBAHMAcwBlAG0AYgBsAHkAIABW
AGUAcgBzAGkAbwBuAAAAMQAuADAALgA2ADIAOAA4AC4AMgA2ADMAMgA3AAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAADAAAAPA8AAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\仕入実績"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:Description="Script Task"
      DTS:DTSID="{A7D23D28-6E36-467D-ADA6-A674BB221065}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="仕入実績"
      DTS:ThreadHint="3">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_ce3ffc09050545a588750b50f21c1788"
          VSTAMajorVersion="3"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadOnlyVariables="User::checkType,User::connectionString,User::currentDate,User::packageCode,User::sysDate">
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_ce3ffc09050545a588750b50f21c1788.Properties.Settings.get_Default():ST_ce3ffc09050545a588750b50f21c1788.Properties.Sett" +
    "ings")]

namespace ST_ce3ffc09050545a588750b50f21c1788.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="ST_ce3ffc09050545a588750b50f21c1788.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{6f1cd3ad-124c-410c-a3da-0ed5e3468b82}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_ce3ffc09050545a588750b50f21c1788</RootNamespace>
    <AssemblyName>ST_ce3ffc09050545a588750b50f21c1788</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>

  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>

  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
         <Generator>ResXFileCodeGenerator</Generator>
         <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
             <AutoGen>True</AutoGen>
         <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
         <Generator>SettingsSingleFileGenerator</Generator>
         <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
         <AutoGen>True</AutoGen>
         <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
         <SubType>Code</SubType>
    </Compile>
  </ItemGroup>

  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />

  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptTask"
                           HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}"
                           ApplicationType="usd"
                           Language="cs"
                           TemplatesPath=""
                           DebugInfoExeName="#HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\VisualStudio\10.0\InstallDir#\devenv.exe"
                           DebugInfoCommandLine=""
                           DebugInfoWorkingDir=""
                           IconImageList=""/>
        <Host Name="ScriptTask" GeneratedNamespace="$safeprojectname" IconIndex="">
        </Host>
        <ProjectClient>
            <HostIdentifier>SSIS_ST120</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[
#region Namespaces
using System;
using System.Data;
using System.Data.SqlClient;
using System.Text;
#endregion

namespace ST_ce3ffc09050545a588750b50f21c1788
{
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
    {
        #region "Main Method"
        /// <summary>
        /// 作成者：イルファン　マンスリー
        /// 説明：仕入実績の業務データチェックする。
        /// 作成日：２０１６年０８月０８日
        /// </summary>
        public void Main()
		{
            string strConnection = Dts.Variables["User::connectionString"].Value.ToString();
            SqlConnection myConnection = new SqlConnection(strConnection);
            StringBuilder strERRQuery = new StringBuilder();
            DataTable dtFaultyTemp;
            try
            { 
                dtFaultyTemp = new DataTable();
                _connectionOpen(myConnection);
                #region "Check for 伝票頭一桁 Check"
                //Get All The Records of Temp TABLE, with New Column DEL_RECORD as Flag.
                //Faulty Records will have DEL_RECORD as 'TRUE'
                strERRQuery.Clear();
                strERRQuery.Append("SELECT JISSEKI.*, ");
                strERRQuery.Append(" CASE WHEN SUBSTRING(JISSEKI.仕入伝票番号,1,1) != KANJO.伝票頭一桁  ");
                strERRQuery.Append(" OR KANJO.伝票頭一桁 IS NULL ");
                strERRQuery.Append(" THEN 'TRUE' ");
                strERRQuery.Append(" ELSE 'FALSE' ");
                strERRQuery.Append(" END AS DEL_RECORD ");
                strERRQuery.Append(" FROM T_DAY_SKU_SIIRE_JISSEKI_TEMP AS JISSEKI ");
                strERRQuery.Append(" LEFT JOIN M_KANJOU_CODE AS KANJO ");
                strERRQuery.Append(" ON JISSEKI.勘定コード = KANJO.勘定コード");
                dtFaultyTemp.Reset();
                dtFaultyTemp = _getDataTable(strERRQuery.ToString(), myConnection);
                if (dtFaultyTemp.Rows.Count > 0)
                {
                    _replaceData(dtFaultyTemp, myConnection, "仕入実績伝票の先頭桁を間違えました。");   //Replace & Remove Data in Actual Db Table
                }
                #endregion

                #region "Check for 仕入伝票番号,仕入伝票明細番号(PK) Check"
                strERRQuery.Clear();
                strERRQuery.Append(" SELECT TEMP.*, ");
                strERRQuery.Append(" CASE WHEN TEMP.仕入伝票番号 = MAIN.仕入伝票番号 ");
                strERRQuery.Append(" AND TEMP.仕入伝票明細番号 = MAIN.仕入伝票明細番号 ");
                strERRQuery.Append(" THEN 'TRUE' ELSE 'FALSE' ");
                strERRQuery.Append(" END AS DEL_RECORD ");
                strERRQuery.Append(" FROM T_DAY_SKU_SIIRE_JISSEKI_TEMP AS TEMP ");
                strERRQuery.Append(" LEFT JOIN T_DAY_SKU_SIIRE_JISSEKI AS MAIN ");
                strERRQuery.Append(" ON TEMP.仕入伝票番号 = MAIN.仕入伝票番号 ");
                strERRQuery.Append(" AND TEMP.仕入伝票明細番号 = MAIN.仕入伝票明細番号; ");
                dtFaultyTemp.Reset();
                dtFaultyTemp = _getDataTable(strERRQuery.ToString(), myConnection);
                if (dtFaultyTemp.Rows.Count > 0)
                {
                    _replaceData(dtFaultyTemp, myConnection, "仕入伝票番号・仕入伝票明細番号が既に取込済みです");   //Replace & Remove Data in Actual Db Table
                }
                #endregion

                #region "Check for 訂正元購買伝票番号 Check"
                //Get All The Records of Temp TABLE, with New Column DEL_RECORD as Flag.
                //Faulty Records will have DEL_RECORD as 'TRUE'
                strERRQuery.Clear();
                strERRQuery.Append(" SELECT *, CASE ");
                strERRQuery.Append(" WHEN 勘定コード IN ('961','962','963','964') ");
                strERRQuery.Append(" THEN CASE WHEN LEN(訂正元購買伝票番号) = 10 THEN 'FALSE' ELSE 'TRUE' END ");
                strERRQuery.Append(" ELSE 'FALSE'  END AS DEL_RECORD ");
                strERRQuery.Append(" FROM T_DAY_SKU_SIIRE_JISSEKI_TEMP");
                dtFaultyTemp.Reset();
                dtFaultyTemp = _getDataTable(strERRQuery.ToString(), myConnection);
                if (dtFaultyTemp.Rows.Count > 0)
                {
                    _replaceData(dtFaultyTemp, myConnection, "訂正元購買伝票番号チェックでエラーが発生しました");   //Replace & Remove Data in Actual Db Table
                }
                #endregion

                #region "Check for 締日 Check"
                //Get All The Records of Temp TABLE, with New Column DEL_RECORD as Flag.
                //Faulty Records will have DEL_RECORD as 'TRUE'
                strERRQuery.Clear();
                strERRQuery.Append(" SELECT *, CASE ");
                strERRQuery.Append(" WHEN CAST(CONVERT(VARCHAR(10),仕入日付,121) AS DATE) <= (SELECT MAX(月度終了日) FROM M_DENPYOU_SIME_MASTER WHERE 月度締日 IS NOT NULL) ");
                strERRQuery.Append(" THEN 'TRUE' ");
                strERRQuery.Append(" ELSE 'FALSE' ");
                strERRQuery.Append(" END AS DEL_RECORD ");
                strERRQuery.Append(" FROM T_DAY_SKU_SIIRE_JISSEKI_TEMP; ");
                dtFaultyTemp.Reset();
                dtFaultyTemp = _getDataTable(strERRQuery.ToString(), myConnection);
                if (dtFaultyTemp.Rows.Count > 0)
                {
                    _replaceData(dtFaultyTemp, myConnection, "月度締めました。締め日前の仕入実績日があります");   //Replace & Remove Data in Actual Db Table
                }
                #endregion

                #region "Check for 棚卸確定日 Check"
                //Get All The Records of Temp TABLE, with New Column DEL_RECORD as Flag.
                //Faulty Records will have DEL_RECORD as 'TRUE'
                strERRQuery.Clear();
                strERRQuery.Append(" SELECT TEMP.*, ");
                strERRQuery.Append(" CASE ");
                strERRQuery.Append(" WHEN TEMP.仕入日付 < TANA.棚卸日付 ");
                strERRQuery.Append(" THEN 'TRUE' ");
                strERRQuery.Append(" ELSE 'FALSE' ");
                strERRQuery.Append(" END AS DEL_RECORD ");
                strERRQuery.Append(" FROM T_DAY_SKU_SIIRE_JISSEKI_TEMP AS TEMP ");
                strERRQuery.Append(" LEFT JOIN (SELECT DISTINCT 店舗コード,MAX(棚卸日付) AS 棚卸日付 FROM M_TANAOROSHI_MASTER WHERE 棚卸確定日 != '1900-01-01' GROUP BY 店舗コード) TANA ");
                strERRQuery.Append(" ON TEMP.仕入サイト = TANA.店舗コード ");
                dtFaultyTemp.Reset();
                dtFaultyTemp = _getDataTable(strERRQuery.ToString(), myConnection);
                if (dtFaultyTemp.Rows.Count > 0)
                {
                    _replaceData(dtFaultyTemp, myConnection, "棚卸確定日前の仕入実績日があります");   //Replace & Remove Data in Actual Db Table
                }
                #endregion

                #region "Check for 仕入条件 & 勘定コード Check"
                //Get All The Records of Temp TABLE, with New Column DEL_RECORD as Flag.
                //Faulty Records will have DEL_RECORD as 'TRUE'
                strERRQuery.Clear();
                strERRQuery.Append(" SELECT SIIRE.*, ");
                strERRQuery.Append(" CASE WHEN (SIIRE.勘定コード IN ('173','174') AND DATEADD(D,1,SIIRE.仕入日付) != JOKEN.有効開始日) ");
                strERRQuery.Append(" OR (SIIRE.勘定コード NOT IN ('173','174') AND JOKEN.仕入条件 != SIIRE.買取受託) THEN 'TRUE' ");
                strERRQuery.Append(" ELSE 'FALSE' END AS DEL_RECORD ");
                strERRQuery.Append(" FROM T_DAY_SKU_SIIRE_JISSEKI_TEMP AS SIIRE ");
                strERRQuery.Append(" LEFT JOIN ( SELECT MST.ＳＫＵコード AS ＳＫＵコード, ");
                strERRQuery.Append(" JR.有効開始日,JR.有効終了日,JR.仕入条件 ");
                strERRQuery.Append(" FROM M_SHIIRE_JOUKEN_RIREKI JR LEFT JOIN M_SHOUHIN_DATA MST ");
                strERRQuery.Append(" ON JR.商品コード = MST.商品コード ) AS JOKEN ON JOKEN.ＳＫＵコード = SIIRE.ＳＫＵコード ");
                strERRQuery.Append(" AND ( SIIRE.勘定コード IN ('173','174') AND DATEADD(D,1,SIIRE.仕入日付) BETWEEN JOKEN.有効開始日 AND JOKEN.有効終了日) ");
                strERRQuery.Append(" AND(SIIRE.勘定コード IN ('173','174') AND SIIRE.仕入日付 = JOKEN.有効終了日) ");
                strERRQuery.Append(" AND(SIIRE.勘定コード NOT IN ('173','174') AND SIIRE.仕入日付 BETWEEN JOKEN.有効開始日 AND JOKEN.有効終了日);");
                dtFaultyTemp.Reset();
                dtFaultyTemp = _getDataTable(strERRQuery.ToString(), myConnection);
                if (dtFaultyTemp.Rows.Count > 0)
                {
                    _replaceData(dtFaultyTemp, myConnection, "仕入実績日と有効開始日の組み合わせを間違えました。");   //Replace & Remove Data in Actual Db Table
                }
                #endregion

                #region "Check for F.K（仕入先コード、ＳＫＵコード、店舗コード） Check"
                //Get All The Records of Temp TABLE, with New Column DEL_RECORD as Flag.
                //Faulty Records will have DEL_RECORD as 'TRUE'
                strERRQuery.Clear();
                strERRQuery.Append(" SELECT SIIRE.*, CASE ");
                strERRQuery.Append(" WHEN TENPO.店舗コード IS NULL OR ");
                strERRQuery.Append(" SHOHIN.ＳＫＵコード IS NULL OR ");
                strERRQuery.Append(" SIIRESAKI.仕入先コード IS NULL ");
                strERRQuery.Append(" THEN 'TRUE' ELSE 'FALSE' ");
                strERRQuery.Append(" END AS DEL_RECORD ");
                strERRQuery.Append(" FROM T_DAY_SKU_SIIRE_JISSEKI_TEMP AS SIIRE ");
                strERRQuery.Append(" LEFT JOIN M_TENPO_MASTER AS TENPO ");
                strERRQuery.Append(" ON SIIRE.仕入サイト = TENPO.店舗コード ");
                strERRQuery.Append(" LEFT JOIN M_SHOUHIN_DATA AS SHOHIN ");
                strERRQuery.Append(" ON SIIRE.ＳＫＵコード = SHOHIN.ＳＫＵコード ");
                strERRQuery.Append(" LEFT JOIN M_SIIRESAKI_MASTER AS SIIRESAKI ");
                strERRQuery.Append(" ON SIIRE.仕入先コード = SIIRESAKI.仕入先コード;");
                dtFaultyTemp.Reset();
                dtFaultyTemp = _getDataTable(strERRQuery.ToString(), myConnection);
                if (dtFaultyTemp.Rows.Count > 0)
                {
                    _replaceData(dtFaultyTemp, myConnection, "仕入先コード、ＳＫＵコードまたは店舗コードはマスタに存在されていません。");   //Replace & Remove Data in Actual Db Table
                }
                #endregion

                #region "発生日 Should be exact as Y-Day"
                //Get All The Records of Temp TABLE, with New Column DEL_RECORD as Flag.
                //Faulty Records will have DEL_RECORD as 'TRUE'
                strERRQuery.Clear();
                strERRQuery.Append(" SELECT *, CASE");
                strERRQuery.Append(" WHEN CONVERT(VARCHAR(8),発生日付,112) != CONVERT(VARCHAR(8),DATEADD(DAY,-1,GETDATE()),112)　");
                strERRQuery.Append(" THEN 'TRUE' ELSE 'FALSE'　");
                strERRQuery.Append(" END AS DEL_RECORD　");
                strERRQuery.Append(" FROM T_DAY_SKU_SIIRE_JISSEKI_TEMP; ");
                dtFaultyTemp.Reset();
                dtFaultyTemp = _getDataTable(strERRQuery.ToString(), myConnection);
                if (dtFaultyTemp.Rows.Count > 0)
                {
                    _replaceData(dtFaultyTemp, myConnection, "発生日を間違えました。");   //Replace & Remove Data in Actual Db Table
                }
                #endregion

                #region "伝票日付 Should not be bigger than Y-Day"
                //Get All The Records of Temp TABLE, with New Column DEL_RECORD as Flag.
                //Faulty Records will have DEL_RECORD as 'TRUE'
                strERRQuery.Clear();
                strERRQuery.Append(" SELECT *,CASE ");
                strERRQuery.Append(" WHEN CONVERT(DATE,仕入日付) > CONVERT(DATE,DATEADD(DAY,-1,GETDATE())) ");
                strERRQuery.Append(" THEN 'TRUE' ELSE 'FALSE' END AS DEL_RECORD ");
                strERRQuery.Append(" FROM T_DAY_SKU_SIIRE_JISSEKI_TEMP; ");
                dtFaultyTemp.Reset();
                dtFaultyTemp = _getDataTable(strERRQuery.ToString(), myConnection);
                if (dtFaultyTemp.Rows.Count > 0)
                {
                    _replaceData(dtFaultyTemp, myConnection, "データに将来の仕入伝票日が存在されています。");   //Replace & Remove Data in Actual Db Table
                }
                #endregion
                
            }
            #region Catch/Finally
            catch (Exception ex)
            {
                strERRQuery.Clear();
                strERRQuery.Append("INSERT INTO KANSHI_PACKAGE_ERROR ");
                strERRQuery.Append(" (パッケージコード,データ日付,エラー日時,エラー内容,エラーフラグ) ");
                strERRQuery.Append(" VALUES('G" + Dts.Variables["User::packageCode"].Value.ToString() + "','" + Dts.Variables["User::currentDate"].Value.ToString() + "','" + Dts.Variables["User::sysDate"].Value.ToString() + "','システムエラー:" + ex.Message.ToString().Replace("'", "-") + "','3');");
                _updateInsert(strERRQuery.ToString(), myConnection);
                Dts.TaskResult = (int)ScriptResults.Success;
            }
            finally 
            {
                _connectionClose(myConnection);
                dtFaultyTemp = null;
                strERRQuery = null;
                myConnection = null; 
                Dts.TaskResult = (int)ScriptResults.Success;
            }
            #endregion
		}
        #endregion

        #region "replace Data"
        //Data Replacement in Actual DB After Test
        private void _replaceData(DataTable dtFaultyTemp, SqlConnection myConnection, String errMsg)
        {
            StringBuilder strERRQuery = new StringBuilder();
            StringBuilder strBuildRow = new StringBuilder();
            string strPackageCode = string.Empty;
            DataRow drTemp;
            int intErrorCount = 0;  //To Count Errors in the DataTable, to avoid its extra TRUNCATION and BULK.
            try
            {
                _connectionOpen(myConnection);
                strPackageCode = Dts.Variables["User::packageCode"].Value.ToString();
                intErrorCount = 0;
                int countRows = dtFaultyTemp.Rows.Count;
                for (int intI = 0; intI < countRows; intI++)
                {
                    #region Report Faulty Records
                    if (dtFaultyTemp.Rows[intI]["DEL_RECORD"].ToString().ToUpper() == "TRUE")
                    {
                        intErrorCount = intErrorCount + 1;
                        //'TRUE' means Faulty SKU Record
                        drTemp = dtFaultyTemp.Rows[intI];
                        strBuildRow.Clear();
                        for (int intJ = 0; intJ < drTemp.Table.Columns.Count-1; intJ++)
                        {
                            strBuildRow.AppendFormat("{0} ", drTemp.ItemArray[intJ]);
                        }
                        strERRQuery.Clear();
                        strERRQuery.Append("INSERT INTO KANSHI_PACKAGE_ERROR ");
                        strERRQuery.Append(" (パッケージコード,データ日付,エラー日時,エラー内容,エラーフラグ) ");
                        strERRQuery.Append(" VALUES('G" + strPackageCode + "','" + Dts.Variables["User::currentDate"].Value.ToString() + "','" + Dts.Variables["User::sysDate"].Value.ToString() + "','" + strBuildRow.ToString() + "。" + errMsg + "。','3');");
                        _updateInsert(strERRQuery.ToString(), myConnection);
                        countRows = countRows - 1;
                        intI = intI - 1;
                        dtFaultyTemp.Rows.Remove(drTemp);   //Remove Faulty Records from DataTable Object.
                        dtFaultyTemp.AcceptChanges();    //Commit DataTable Changes.
                    }
                    #endregion
                }
                dtFaultyTemp.Columns.Remove("DEL_RECORD");
                if (intErrorCount > 0)
                {
                    #region "TRUNCATE TEMP Table"
                    //TRUNCATE TEMP Table, to be import New Correct Records
                    strERRQuery.Clear();
                    strERRQuery.Append(" TRUNCATE TABLE " + Dts.Variables["User::checkType"].Value.ToString() + "_TEMP");
                    _updateInsert(strERRQuery.ToString(), myConnection);
                    #endregion
                    #region "Bulk Update Records"
                    //正しいデータテーブルからインポートするためいに。
                    using (SqlBulkCopy bulkCopy = new SqlBulkCopy(myConnection))
                    {
                        bulkCopy.DestinationTableName = Dts.Variables["User::checkType"].Value.ToString() + "_TEMP";   //Assign table name
                        _connectionOpen(myConnection);
                        bulkCopy.BulkCopyTimeout = 600; //Default Timeut 30 Change to 600. in seconds
                        bulkCopy.WriteToServer(dtFaultyTemp);   //Write into Actual table.
                    }
                    #endregion
                }
            }
            #region Catch/Finally
            catch (Exception ex) 
            {
                throw ex;
            }
            finally
            {
                strERRQuery = null;
                dtFaultyTemp = null;
                strBuildRow = null;
                drTemp = null;
            }
            #endregion
        }
        #endregion

        #region "Get DataTable"
        //Created On: 08-08-2016
        //Description: Aim to Return DataTable from the Query.
        public DataTable _getDataTable(string strQuery, SqlConnection myConnection)
        {
            StringBuilder strERRQuery = new StringBuilder();
            DataTable objDT = new DataTable();
            SqlCommand myCommand;
            SqlDataAdapter sqlSelectData;
            string strPackageCode = string.Empty;
            try
            {
                _connectionOpen(myConnection);
                strPackageCode = Dts.Variables["User::packageCode"].Value.ToString();
                myCommand = new SqlCommand(strQuery, myConnection);
                myCommand.CommandType = CommandType.Text;
                sqlSelectData = new SqlDataAdapter();
                sqlSelectData.SelectCommand = myCommand;
                myCommand.CommandTimeout = 600; //Increases Query execution timeout.
                sqlSelectData.Fill(objDT);
            }
            #region CATCH/FINALLY
            catch (Exception ex)
            {
                throw ex;
            }
            finally
            {
                strQuery = null;
                myCommand = null;
                sqlSelectData = null;
                strERRQuery = null;
            }
            #endregion
            return objDT;
        }
        #endregion

        #region "Update/Insert Query in Db"
        protected void _updateInsert(string strQuery, SqlConnection myConnection)
        {
            StringBuilder strERRQuery = new StringBuilder();
            SqlCommand myCommand;
            try
            {
                _connectionOpen(myConnection);
                myCommand = new SqlCommand(strQuery, myConnection);
                myCommand.ExecuteNonQuery();
            }
            #region CATCH/FINALLY
            catch (Exception ex)
            {
                throw ex;
            }
            finally
            {
                strERRQuery = null;
                myConnection = null;
                myCommand = null;
            }
            #endregion
        }
        #endregion

        #region Connection Open
        private void _connectionOpen(SqlConnection myConnection)
        {
            try
            {
                if (myConnection.State != ConnectionState.Open)
                {
                    myConnection.Open();
                }
            }
            catch (Exception ex)
            {
                throw ex;
            }
        }
        #endregion

        #region Connection Close
        private void _connectionClose(SqlConnection myConnection)
        {
            try
            {
                if (myConnection.State != ConnectionState.Closed)
                {
                    myConnection.Close();
                }
            }
            catch (Exception ex)
            {
                throw ex;
            }
        }
        #endregion

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>ST_ce3ffc09050545a588750b50f21c1788</msb:CodeName>
		<msb:DisplayName>ST_ce3ffc09050545a588750b50f21c1788</msb:DisplayName>
		<msb:ProjectId>{EE24C7D7-5D12-4340-B8D9-E41721313B68}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_ce3ffc09050545a588750b50f21c1788.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_ce3ffc09050545a588750b50f21c1788")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_ce3ffc09050545a588750b50f21c1788")]
[assembly: AssemblyCopyright("Copyright @  2016")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_ce3ffc09050545a588750b50f21c1788.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_ce3ffc09050545a588750b50f21c1788.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_ce3ffc09050545a588750b50f21c1788.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_ce3ffc09050545a588750b50f21c1788.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_ce3ffc09050545a588750b50f21c1788.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_ce3ffc09050545a588750b50f21c1788.dll">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
Y2VSZWFkZXIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVi
bGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNv
dXJjZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAAQlNKQgEAAQAAAAAADAAAAHY0LjAuMzAzMTkA
AAAABQBsAAAAtAUAACN+AAAgBgAAmAgAACNTdHJpbmdzAAAAALgOAAD8FgAAI1VTALQlAAAQAAAA
I0dVSUQAAADEJQAARAIAACNCbG9iAAAAAAAAAAIAAAFXHaIBCQMAAAD6JTMAFgAAAQAAAC8AAAAF
AAAABgAAAA4AAAAKAAAARAAAAAIAAAAPAAAABgAAAAIAAAADAAAABAAAAAEAAAAFAAAAAQAAAAEA
AAAAAAoAAQAAAAAABgDBALoACgDdAMgADgA9ARQBBgBZAboABgBvAV4BBgCgAYsBEgArAh8CEgBL
AjUCBgAFA+sCBgAwAx4DBgBHAx4DBgBkAx4DBgCDAx4DBgCcAx4DBgC1Ax4DBgDQAx4DBgDrAx4D
BgAEBB4DBgA9BB0EBgBdBB0EBgCOBHsEBgCrBLoABgCwBLoABgDUBB4DCgAABeoECgAZBeoEBgAu
BR0EDgBQBRQBDgByBRQBFgDLBasFFgDjBasFBgAUBggGEgA1Bh8CEgBQBh8CBgB1BroABgB8BroA
EgC2Bh8CEgD3Bh8CEgAtBzUCBgB0B7oAEgCIBzUCEgCmB5MHEgCwBx8CEgDMBzUCEgAACJMHEgAj
CJMHEgAwCB8CAAAAAAEAAAAAAAEAAQAAABAAMgA8AAUAAQABAAABEABrADwACQADAAUAAQAQAHQA
fwANAAQACAADAQAAowAAABEABAAPABEAfwETABEArAEXABEA9gE5AAYGowJlAFaAqwJoAFaAswJo
AFAgAAAAAIMYvAEbAAEAWCAAAAAAkwjCAR8AAQCRIAAAAACTCNYBJAABAJggAAAAAJMI4gEpAAEA
oCAAAAAAlggGAj0AAgCzIAAAAACGGLwBGwACAKcgAAAAAJEYSQWnAAIAvCAAAAAAhgAaAhsAAgCo
JwAAAACBAFkCRwACALAqAAAAAIYAZgJQAAUAVCsAAAAAhAB0AlgABwCoKwAAAACBAIICXwAJANwr
AAAAAIEAkgJfAAoADCwAAAAAhhi8ARsACwAAAAEAuwIAAAEAwQIAAAIAzgIAAAMA2wIAAAEA4gIA
AAIAzgIAAAEA4gIAAAIAzgIAAAEAzgIAAAEAzgJJALwBdgBRALwBdgBZALwBdgBhALwBdgBpALwB
dgBxALwBdgB5ALwBdgCBALwBdgCJALwBdgCRALwBdgCZALwBewChALwBGwCpALwBGwAJALwBGwCx
AMIEgACxAN0EhwApALwBjADJALwBmADZALwBGwARALwBGwDhALwBGwAZAIQFqwDpANUFsADxAOwF
tQD5APUFuwAJAP8FvwBBALwBdgABAbwBGwA5ALwBGwABASIGwwABASgGyQA5AC8GGwA5AEcG0AAR
AWsG1gAhAYYGvwAZAZIG2gAZAZoG4ADpAKEGewAZAbAG9gAJAewF+QApAewFAAEZAb4GvwAZAcYG
BQEpAdIGCwEBAeAGEAEpAe0GGAE5AAwHHQEJARgHIwE5AB8HGwAxARgHdgAZAZoGKgE5AbwBXwAZ
AZoGMQE5ATkHdgA5AVIHewA5AWYHNwFBAYAHGwBJAbwBWABRAbwHVgFhAbwBGwBhAdsHXQFRAe0H
ewBpAQ4IZAFRARMI1gBxAUAIgQFxAUoIGwBxAU8IGwAZALwBGwAIABQAbAAIABgAcQApAJMAngAu
ABsA/gEuACMA/gEuAGMAJAIuAAsAjQEuABMA1QEuADMA1QEuACsA/gEuADsABAIuAEMA/gEuAFsA
GwJDAGsAcQBJAJMAngBhAJsAcQCDAKsAcQCTAOYAPQFqAXgBhwECAAEAAwADAAAAbwEvAAAA7gE0
AAAAEgJCAAIAAgADAAIAAwAFAAEABAAFAAIABQAHAASAAAABAAAAYRgPdAAAAAAAAH8AAAAEAAAA
AAAAAAAAAAABALEAAAAAAAQAAAAAAAAAAAAAAAEAugAAAAAADAAAAAAAAAAAAAAACgD1AAAAAAAE
AAAAAAAAAAAAAAABAB8CAAAAAAwAAAAAAAAAAAAAAAoAjAUAAAAAAAAAAAEAAABVCAAABQAEAAAA
AAAAPE1vZHVsZT4AU1RfY2UzZmZjMDkwNTA1NDVhNTg4NzUwYjUwZjIxYzE3ODguZGxsAFJlc291
cmNlcwBTVF9jZTNmZmMwOTA1MDU0NWE1ODg3NTBiNTBmMjFjMTc4OC5Qcm9wZXJ0aWVzAFNldHRp
bmdzAFNjcmlwdE1haW4AU1RfY2UzZmZjMDkwNTA1NDVhNTg4NzUwYjUwZjIxYzE3ODgAU2NyaXB0
UmVzdWx0cwBtc2NvcmxpYgBTeXN0ZW0AT2JqZWN0AFN5c3RlbS5Db25maWd1cmF0aW9uAEFwcGxp
Y2F0aW9uU2V0dGluZ3NCYXNlAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuU2NyaXB0VGFzawBNaWNyb3Nv
ZnQuU3FsU2VydmVyLkR0cy5UYXNrcy5TY3JpcHRUYXNrAFZTVEFSVFNjcmlwdE9iamVjdE1vZGVs
QmFzZQBFbnVtAFN5c3RlbS5SZXNvdXJjZXMAUmVzb3VyY2VNYW5hZ2VyAHJlc291cmNlTWFuAFN5
c3RlbS5HbG9iYWxpemF0aW9uAEN1bHR1cmVJbmZvAHJlc291cmNlQ3VsdHVyZQAuY3RvcgBnZXRf
UmVzb3VyY2VNYW5hZ2VyAGdldF9DdWx0dXJlAHNldF9DdWx0dXJlAEN1bHR1cmUAZGVmYXVsdElu
c3RhbmNlAGdldF9EZWZhdWx0AERlZmF1bHQATWFpbgBTeXN0ZW0uRGF0YQBEYXRhVGFibGUAU3lz
dGVtLkRhdGEuU3FsQ2xpZW50AFNxbENvbm5lY3Rpb24AX3JlcGxhY2VEYXRhAF9nZXREYXRhVGFi
bGUAX3VwZGF0ZUluc2VydABfY29ubmVjdGlvbk9wZW4AX2Nvbm5lY3Rpb25DbG9zZQB2YWx1ZV9f
AFN1Y2Nlc3MARmFpbHVyZQB2YWx1ZQBkdEZhdWx0eVRlbXAAbXlDb25uZWN0aW9uAGVyck1zZwBz
dHJRdWVyeQBTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nAFRhcmdldEZyYW1ld29ya0F0dHJpYnV0
ZQBTeXN0ZW0uUmVmbGVjdGlvbgBBc3NlbWJseVRpdGxlQXR0cmlidXRlAEFzc2VtYmx5RGVzY3Jp
cHRpb25BdHRyaWJ1dGUAQXNzZW1ibHlDb25maWd1cmF0aW9uQXR0cmlidXRlAEFzc2VtYmx5Q29t
cGFueUF0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRyaWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRB
dHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1dGUAQXNzZW1ibHlDdWx0dXJlQXR0cmli
dXRlAEFzc2VtYmx5VmVyc2lvbkF0dHJpYnV0ZQBTeXN0ZW0uUnVudGltZS5Db21waWxlclNlcnZp
Y2VzAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1dGUAUnVudGltZUNvbXBhdGliaWxpdHlB
dHRyaWJ1dGUAU3lzdGVtLkRpYWdub3N0aWNzAERlYnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUA
VHlwZQBSdW50aW1lVHlwZUhhbmRsZQBHZXRUeXBlRnJvbUhhbmRsZQBBc3NlbWJseQBnZXRfQXNz
ZW1ibHkAU3lzdGVtLkNvbXBvbmVudE1vZGVsAEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBFZGl0
b3JCcm93c2FibGVTdGF0ZQBDb21waWxlckdlbmVyYXRlZEF0dHJpYnV0ZQAuY2N0b3IAU1NJU1Nj
cmlwdFRhc2tFbnRyeVBvaW50QXR0cmlidXRlAFNjcmlwdE9iamVjdE1vZGVsAGdldF9EdHMATWlj
cm9zb2Z0LlNxbFNlcnZlci5NYW5hZ2VkRFRTAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlJ1bnRp
bWUAVmFyaWFibGVzAGdldF9WYXJpYWJsZXMAVmFyaWFibGUAZ2V0X0l0ZW0AZ2V0X1ZhbHVlAFRv
U3RyaW5nAFN5c3RlbS5UZXh0AFN0cmluZ0J1aWxkZXIAQ2xlYXIAQXBwZW5kAFJlc2V0AERhdGFS
b3dDb2xsZWN0aW9uAGdldF9Sb3dzAEludGVybmFsRGF0YUNvbGxlY3Rpb25CYXNlAGdldF9Db3Vu
dABTdHJpbmcARXhjZXB0aW9uAGdldF9NZXNzYWdlAFJlcGxhY2UAQ29uY2F0AHNldF9UYXNrUmVz
dWx0AEVtcHR5AERhdGFSb3cAVG9VcHBlcgBvcF9FcXVhbGl0eQBnZXRfSXRlbUFycmF5AEFwcGVu
ZEZvcm1hdABnZXRfVGFibGUARGF0YUNvbHVtbkNvbGxlY3Rpb24AZ2V0X0NvbHVtbnMAUmVtb3Zl
AEFjY2VwdENoYW5nZXMAU3FsQnVsa0NvcHkAc2V0X0Rlc3RpbmF0aW9uVGFibGVOYW1lAHNldF9C
dWxrQ29weVRpbWVvdXQAV3JpdGVUb1NlcnZlcgBJRGlzcG9zYWJsZQBEaXNwb3NlAFNxbENvbW1h
bmQAU3lzdGVtLkRhdGEuQ29tbW9uAERiQ29tbWFuZABDb21tYW5kVHlwZQBzZXRfQ29tbWFuZFR5
cGUAU3FsRGF0YUFkYXB0ZXIAc2V0X1NlbGVjdENvbW1hbmQAc2V0X0NvbW1hbmRUaW1lb3V0AERi
RGF0YUFkYXB0ZXIARmlsbABFeGVjdXRlTm9uUXVlcnkARGJDb25uZWN0aW9uAENvbm5lY3Rpb25T
dGF0ZQBnZXRfU3RhdGUAT3BlbgBDbG9zZQBTVF9jZTNmZmMwOTA1MDU0NWE1ODg3NTBiNTBmMjFj
MTc4OC5Qcm9wZXJ0aWVzLlJlc291cmNlcy5yZXNvdXJjZXMAAHFTAFQAXwBjAGUAMwBmAGYAYwAw
ADkAMAA1ADAANQA0ADUAYQA1ADgAOAA3ADUAMABiADUAMABmADIAMQBjADEANwA4ADgALgBQAHIA
bwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMAAC1VAHMAZQByADoAOgBjAG8AbgBu
AGUAYwB0AGkAbwBuAFMAdAByAGkAbgBnAAAlUwBFAEwARQBDAFQAIABKAEkAUwBTAEUASwBJAC4A
KgAsACAAAHMgAEMAQQBTAEUAIABXAEgARQBOACAAUwBVAEIAUwBUAFIASQBOAEcAKABKAEkAUwBT
AEUASwBJAC4A1U5lUR1PaHlqdfdTLAAxACwAMQApACAAIQA9ACAASwBBAE4ASgBPAC4AHU9oeS2Y
AE5BaCAAIAABMSAATwBSACAASwBBAE4ASgBPAC4AHU9oeS2YAE5BaCAASQBTACAATgBVAEwATAAg
AAEbIABUAEgARQBOACAAJwBUAFIAVQBFACcAIAABHSAARQBMAFMARQAgACcARgBBAEwAUwBFACcA
IAABJyAARQBOAEQAIABBAFMAIABEAEUATABfAFIARQBDAE8AUgBEACAAAF0gAEYAUgBPAE0AIABU
AF8ARABBAFkAXwBTAEsAVQBfAFMASQBJAFIARQBfAEoASQBTAFMARQBLAEkAXwBUAEUATQBQACAA
QQBTACAASgBJAFMAUwBFAEsASQAgAABFIABMAEUARgBUACAASgBPAEkATgAgAE0AXwBLAEEATgBK
AE8AVQBfAEMATwBEAEUAIABBAFMAIABLAEEATgBKAE8AIAAAPyAATwBOACAASgBJAFMAUwBFAEsA
SQAuANhSmluzMPwwyTAgAD0AIABLAEEATgBKAE8ALgDYUppbszD8MMkwASXVTmVRn1s+fh1PaHlu
MEhRLZhBaJIwk5VVkEgwfjBXMF8wAjABISAAUwBFAEwARQBDAFQAIABUAEUATQBQAC4AKgAsACAA
AEsgAEMAQQBTAEUAIABXAEgARQBOACAAVABFAE0AUAAuANVOZVEdT2h5anX3UyAAPQAgAE0AQQBJ
AE4ALgDVTmVRHU9oeWp191MgAAFHIABBAE4ARAAgAFQARQBNAFAALgDVTmVRHU9oeQ5mMH1qdfdT
IAA9ACAATQBBAEkATgAuANVOZVEdT2h5DmYwfWp191MgAAE1IABUAEgARQBOACAAJwBUAFIAVQBF
ACcAIABFAEwAUwBFACAAJwBGAEEATABTAEUAJwAgAAFXIABGAFIATwBNACAAVABfAEQAQQBZAF8A
UwBLAFUAXwBTAEkASQBSAEUAXwBKAEkAUwBTAEUASwBJAF8AVABFAE0AUAAgAEEAUwAgAFQARQBN
AFAAIAAAVyAATABFAEYAVAAgAEoATwBJAE4AIABUAF8ARABBAFkAXwBTAEsAVQBfAFMASQBJAFIA
RQBfAEoASQBTAFMARQBLAEkAIABBAFMAIABNAEEASQBOACAAAD0gAE8ATgAgAFQARQBNAFAALgDV
TmVRHU9oeWp191MgAD0AIABNAEEASQBOAC4A1U5lUR1PaHlqdfdTIAABSSAAQQBOAEQAIABUAEUA
TQBQAC4A1U5lUR1PaHkOZjB9anX3UyAAPQAgAE0AQQBJAE4ALgDVTmVRHU9oeQ5mMH1qdfdTOwAg
AAEx1U5lUR1PaHlqdfdT+zDVTmVRHU9oeQ5mMH1qdfdTTDDiZWsw1lO8jwhufzBnMFkwASEgAFMA
RQBMAEUAQwBUACAAKgAsACAAQwBBAFMARQAgAABTIABXAEgARQBOACAA2FKaW7Mw/DDJMCAASQBO
ACAAKAAnADkANgAxACcALAAnADkANgAyACcALAAnADkANgAzACcALAAnADkANgA0ACcAKQAgAAGA
gyAAVABIAEUATgAgAEMAQQBTAEUAIABXAEgARQBOACAATABFAE4AKAACimNrQ1H8jLeMHU9oeWp1
91MpACAAPQAgADEAMAAgAFQASABFAE4AIAAnAEYAQQBMAFMARQAnACAARQBMAFMARQAgACcAVABS
AFUARQAnACAARQBOAEQAIAABQyAARQBMAFMARQAgACcARgBBAEwAUwBFACcAIAAgAEUATgBEACAA
QQBTACAARABFAEwAXwBSAEUAQwBPAFIARAAgAAFFIABGAFIATwBNACAAVABfAEQAQQBZAF8AUwBL
AFUAXwBTAEkASQBSAEUAXwBKAEkAUwBTAEUASwBJAF8AVABFAE0AUAAAMQKKY2tDUfyMt4wdT2h5
anX3U8EwpzDDMK8wZzCoMOkw/DBMMHp2H3VXMH4wVzBfMAGA9yAAVwBIAEUATgAgAEMAQQBTAFQA
KABDAE8ATgBWAEUAUgBUACgAVgBBAFIAQwBIAEEAUgAoADEAMAApACwA1U5lUeVl2E4sADEAMgAx
ACkAIABBAFMAIABEAEEAVABFACkAIAA8AD0AIAAoAFMARQBMAEUAQwBUACAATQBBAFgAKAAIZ6Ze
Qn2GTuVlKQAgAEYAUgBPAE0AIABNAF8ARABFAE4AUABZAE8AVQBfAFMASQBNAEUAXwBNAEEAUwBU
AEUAUgAgAFcASABFAFIARQAgAAhnpl7gfeVlIABJAFMAIABOAE8AVAAgAE4AVQBMAEwAKQAgAAFJ
IABGAFIATwBNACAAVABfAEQAQQBZAF8AUwBLAFUAXwBTAEkASQBSAEUAXwBKAEkAUwBTAEUASwBJ
AF8AVABFAE0AUAA7ACAAAC8IZ6Ze4H2BMH4wVzBfMAIw4H2BMOVlTVJuMNVOZVGfWz5+5WVMMEIw
ijB+MFkwAQ0gAEMAQQBTAEUAIAAAOSAAVwBIAEUATgAgAFQARQBNAFAALgDVTmVR5WXYTiAAPAAg
AFQAQQBOAEEALgDaaHhT5WXYTiAAAYD9IABMAEUARgBUACAASgBPAEkATgAgACgAUwBFAEwARQBD
AFQAIABEAEkAUwBUAEkATgBDAFQAIACXXheCszD8MMkwLABNAEEAWAAoANpoeFPlZdhOKQAgAEEA
UwAgANpoeFPlZdhOIABGAFIATwBNACAATQBfAFQAQQBOAEEATwBSAE8AUwBIAEkAXwBNAEEAUwBU
AEUAUgAgAFcASABFAFIARQAgANpoeFO6eJpb5WUgACEAPQAgACcAMQA5ADAAMAAtADAAMQAtADAA
MQAnACAARwBSAE8AVQBQACAAQgBZACAAl14XgrMw/DDJMCkAIABUAEEATgBBACAAATkgAE8ATgAg
AFQARQBNAFAALgDVTmVRtTCkMMgwIAA9ACAAVABBAE4AQQAuAJdeF4KzMPwwyTAgAAEj2mh4U7p4
mlvlZU1SbjDVTmVRn1s+fuVlTDBCMIowfjBZMAEjIABTAEUATABFAEMAVAAgAFMASQBJAFIARQAu
ACoALAAgAACAqyAAQwBBAFMARQAgAFcASABFAE4AIAAoAFMASQBJAFIARQAuANhSmluzMPwwyTAg
AEkATgAgACgAJwAxADcAMwAnACwAJwAxADcANAAnACkAIABBAE4ARAAgAEQAQQBUAEUAQQBEAEQA
KABEACwAMQAsAFMASQBJAFIARQAuANVOZVHlZdhOKQAgACEAPQAgAEoATwBLAEUATgAuAAlnuVKL
lctZ5WUpACAAAYChIABPAFIAIAAoAFMASQBJAFIARQAuANhSmluzMPwwyTAgAE4ATwBUACAASQBO
ACAAKAAnADEANwAzACcALAAnADEANwA0ACcAKQAgAEEATgBEACAASgBPAEsARQBOAC4A1U5lUWFn
9k4gACEAPQAgAFMASQBJAFIARQAuALeM1lPXUxeKKQAgAFQASABFAE4AIAAnAFQAUgBVAEUAJwAg
AAFBIABFAEwAUwBFACAAJwBGAEEATABTAEUAJwAgAEUATgBEACAAQQBTACAARABFAEwAXwBSAEUA
QwBPAFIARAAgAAFZIABGAFIATwBNACAAVABfAEQAQQBZAF8AUwBLAFUAXwBTAEkASQBSAEUAXwBK
AEkAUwBTAEUASwBJAF8AVABFAE0AUAAgAEEAUwAgAFMASQBJAFIARQAgAABVIABMAEUARgBUACAA
SgBPAEkATgAgACgAIABTAEUATABFAEMAVAAgAE0AUwBUAC4AM/8r/zX/szD8MMkwIABBAFMAIAAz
/yv/Nf+zMPwwyTAsACAAATcgAEoAUgAuAAlnuVKLlctZ5WUsAEoAUgAuAAlnuVJCfYZO5WUsAEoA
UgAuANVOZVFhZ/ZOIAABeyAARgBSAE8ATQAgAE0AXwBTAEgASQBJAFIARQBfAEoATwBVAEsARQBO
AF8AUgBJAFIARQBLAEkAIABKAFIAIABMAEUARgBUACAASgBPAEkATgAgAE0AXwBTAEgATwBVAEgA
SQBOAF8ARABBAFQAQQAgAE0AUwBUACAAAICHIABPAE4AIABKAFIALgBGVcFUszD8MMkwIAA9ACAA
TQBTAFQALgBGVcFUszD8MMkwIAApACAAQQBTACAASgBPAEsARQBOACAATwBOACAASgBPAEsARQBO
AC4AM/8r/zX/szD8MMkwIAA9ACAAUwBJAEkAUgBFAC4AM/8r/zX/szD8MMkwIAABgMsgAEEATgBE
ACAAKAAgAFMASQBJAFIARQAuANhSmluzMPwwyTAgAEkATgAgACgAJwAxADcAMwAnACwAJwAxADcA
NAAnACkAIABBAE4ARAAgAEQAQQBUAEUAQQBEAEQAKABEACwAMQAsAFMASQBJAFIARQAuANVOZVHl
ZdhOKQAgAEIARQBUAFcARQBFAE4AIABKAE8ASwBFAE4ALgAJZ7lSi5XLWeVlIABBAE4ARAAgAEoA
TwBLAEUATgAuAAlnuVJCfYZO5WUpACAAAYCBIABBAE4ARAAoAFMASQBJAFIARQAuANhSmluzMPww
yTAgAEkATgAgACgAJwAxADcAMwAnACwAJwAxADcANAAnACkAIABBAE4ARAAgAFMASQBJAFIARQAu
ANVOZVHlZdhOIAA9ACAASgBPAEsARQBOAC4ACWe5UkJ9hk7lZSkAIAABgLUgAEEATgBEACgAUwBJ
AEkAUgBFAC4A2FKaW7Mw/DDJMCAATgBPAFQAIABJAE4AIAAoACcAMQA3ADMAJwAsACcAMQA3ADQA
JwApACAAQQBOAEQAIABTAEkASQBSAEUALgDVTmVR5WXYTiAAQgBFAFQAVwBFAEUATgAgAEoATwBL
AEUATgAuAAlnuVKLlctZ5WUgAEEATgBEACAASgBPAEsARQBOAC4ACWe5UkJ9hk7lZSkAOwABM9VO
ZVGfWz5+5WVoMAlnuVKLlctZ5WVuMER9fzAIVI8wWzCSMJOVVZBIMH4wVzBfMAIwAS0gAFMARQBM
AEUAQwBUACAAUwBJAEkAUgBFAC4AKgAsACAAQwBBAFMARQAgAAA7IABXAEgARQBOACAAVABFAE4A
UABPAC4Al14XgrMw/DDJMCAASQBTACAATgBVAEwATAAgAE8AUgAgAAE1IABTAEgATwBIAEkATgAu
ADP/K/81/7Mw/DDJMCAASQBTACAATgBVAEwATAAgAE8AUgAgAAE1IABTAEkASQBSAEUAUwBBAEsA
SQAuANVOZVFIUbMw/DDJMCAASQBTACAATgBVAEwATAAgAAFHIABMAEUARgBUACAASgBPAEkATgAg
AE0AXwBUAEUATgBQAE8AXwBNAEEAUwBUAEUAUgAgAEEAUwAgAFQARQBOAFAATwAgAAA9IABPAE4A
IABTAEkASQBSAEUALgDVTmVRtTCkMMgwIAA9ACAAVABFAE4AUABPAC4Al14XgrMw/DDJMCAAAUkg
AEwARQBGAFQAIABKAE8ASQBOACAATQBfAFMASABPAFUASABJAE4AXwBEAEEAVABBACAAQQBTACAA
UwBIAE8ASABJAE4AIAAAQyAATwBOACAAUwBJAEkAUgBFAC4AM/8r/zX/szD8MMkwIAA9ACAAUwBI
AE8ASABJAE4ALgAz/yv/Nf+zMPwwyTAgAAFXIABMAEUARgBUACAASgBPAEkATgAgAE0AXwBTAEkA
SQBSAEUAUwBBAEsASQBfAE0AQQBTAFQARQBSACAAQQBTACAAUwBJAEkAUgBFAFMAQQBLAEkAIAAA
SSAATwBOACAAUwBJAEkAUgBFAC4A1U5lUUhRszD8MMkwIAA9ACAAUwBJAEkAUgBFAFMAQQBLAEkA
LgDVTmVRSFGzMPwwyTA7AAFJ1U5lUUhRszD8MMkwATAz/yv/Nf+zMPwwyTB+MF8wbzCXXheCszD8
MMkwbzDeMLkwvzBrMFhbKFdVMIwwZjBEMH4wWzCTMAIwAR8gAFMARQBMAEUAQwBUACAAKgAsACAA
QwBBAFMARQAAgLEgAFcASABFAE4AIABDAE8ATgBWAEUAUgBUACgAVgBBAFIAQwBIAEEAUgAoADgA
KQAsAHp2H3XlZdhOLAAxADEAMgApACAAIQA9ACAAQwBPAE4AVgBFAFIAVAAoAFYAQQBSAEMASABB
AFIAKAA4ACkALABEAEEAVABFAEEARABEACgARABBAFkALAAtADEALABHAEUAVABEAEEAVABFACgA
KQApACwAMQAxADIAKQAAMAE1IABUAEgARQBOACAAJwBUAFIAVQBFACcAIABFAEwAUwBFACAAJwBG
AEEATABTAEUAJwAAMAEnIABFAE4ARAAgAEEAUwAgAEQARQBMAF8AUgBFAEMATwBSAEQAADABF3p2
H3XlZZIwk5VVkEgwfjBXMF8wAjABHyAAUwBFAEwARQBDAFQAIAAqACwAQwBBAFMARQAgAACAhyAA
VwBIAEUATgAgAEMATwBOAFYARQBSAFQAKABEAEEAVABFACwA1U5lUeVl2E4pACAAPgAgAEMATwBO
AFYARQBSAFQAKABEAEEAVABFACwARABBAFQARQBBAEQARAAoAEQAQQBZACwALQAxACwARwBFAFQA
RABBAFQARQAoACkAKQApACAAAVkgAFQASABFAE4AIAAnAFQAUgBVAEUAJwAgAEUATABTAEUAIAAn
AEYAQQBMAFMARQAnACAARQBOAEQAIABBAFMAIABEAEUATABfAFIARQBDAE8AUgBEACAAAS3HMPww
vzBrMAZcZWduMNVOZVEdT2h55WVMMFhbKFdVMIwwZjBEMH4wWTACMAFDSQBOAFMARQBSAFQAIABJ
AE4AVABPACAASwBBAE4AUwBIAEkAXwBQAEEAQwBLAEEARwBFAF8ARQBSAFIATwBSACAAAEsgACgA
0TDDMLEw/DC4MLMw/DDJMCwAxzD8ML8w5WXYTiwAqDDpMPww5WVCZiwAqDDpMPwwhVG5WywAqDDp
MPww1TDpMLAwKQAgAAEVIABWAEEATABVAEUAUwAoACcARwABI1UAcwBlAHIAOgA6AHAAYQBjAGsA
YQBnAGUAQwBvAGQAZQAABycALAAnAAEjVQBzAGUAcgA6ADoAYwB1AHIAcgBlAG4AdABEAGEAdABl
AAAbVQBzAGUAcgA6ADoAcwB5AHMARABhAHQAZQAAFycALAAnALcwuTDGMOAwqDDpMPwwOgABAycA
AQMtAAEPJwAsACcAMwAnACkAOwABFUQARQBMAF8AUgBFAEMATwBSAEQAAAlUAFIAVQBFAAAJewAw
AH0AIAAAAwIwARECMCcALAAnADMAJwApADsAASEgAFQAUgBVAE4AQwBBAFQARQAgAFQAQQBCAEwA
RQAgAAAfVQBzAGUAcgA6ADoAYwBoAGUAYwBrAFQAeQBwAGUAAAtfAFQARQBNAFAAAIPSVW3EQqhB
h1fTXL11hzoACLd6XFYZNOCJCImEXc2AgMyRAwYSFQMGEhkDIAABBAAAEhUEAAASGQUAAQESGQQI
ABIVBAgAEhkDBhIMBAAAEgwECAASDAggAwESHRIhDgcgAhIdDhIhBiACAQ4SIQUgAQESIQIGCAMG
ERQEAAAAAAQBAAAABCABAQ4EIAEBCAYAARJZEV0EIAASYQYgAgEOEmEEBwESFQUgAQERaQgBAAIA
AAAAAAMAAAEEIAASdQQgABJ5BSABEn0cAyAAHAMgAA4FIAASgIEGIAESgIEOBSAAEoCFAyAACAUg
Ag4ODgUAAQ4dDg8HBg4SIRKAgRIdEoCRHQ4CBg4GIAESgJUIBCABHA4FAAICDg4EIAAdHAcgAhKA
gQ4cBCAAEh0FIAASgJkGIAEBEoCVBgADDg4ODgUAAg4ODgUgAQESHRgHCxKAgRKAgQ4SgJUICAgI
EoCdEoCRHQ4GIAEBEYCtBiABARKApQUgAQgSHQ0HBBIdEoClEoCxEoCRCAcCEoClEoCRBSAAEYC9
BQcBEoCRRwEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC4wAQBUDhRGcmFtZXdvcmtEaXNwbGF5
TmFtZRAuTkVUIEZyYW1ld29yayA0KAEAI1NUX2NlM2ZmYzA5MDUwNTQ1YTU4ODc1MGI1MGYyMWMx
Nzg4AAAFAQAAAAAWAQARQ29weXJpZ2h0IEAgIDIwMTYAAAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5v
bkV4Y2VwdGlvblRocm93cwEAAFUAAAAAAAAAAAAAHlUAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAA
ABBVAAAAAAAAAAAAAAAAAAAAAF9Db3JEbGxNYWluAG1zY29yZWUuZGxsAAAAAAD/JQAgABAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAEAAAABgAAIAAAAAA
AAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgAAABYYAAAsAMAAAAAAAAA
AAAAsAM0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAAAL0E7/4AAAEAAAABAA90
YRgAAAEAD3RhGD8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAAAQBWAGEAcgBGAGkAbABl
AEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAAAAAAAACwBBADAAABAFMA
dAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAAOwCAAABADAAMAAwADAAMAA0AGIAMAAAAHAAJAAB
AEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABTAFQAXwBjAGUAMwBmAGYAYwAwADkA
MAA1ADAANQA0ADUAYQA1ADgAOAA3ADUAMABiADUAMABmADIAMQBjADEANwA4ADgAAABAAA8AAQBG
AGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4ANgAyADQAMQAuADIAOQA3ADEAMQAAAAAA
cAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAFQAXwBjAGUAMwBmAGYAYwAwADkAMAA1
ADAANQA0ADUAYQA1ADgAOAA3ADUAMABiADUAMABmADIAMQBjADEANwA4ADgALgBkAGwAbAAAAEgA
EgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBwAHkAcgBpAGcAaAB0ACAAQAAg
ACAAMgAwADEANgAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBtAGUAAABTAFQA
XwBjAGUAMwBmAGYAYwAwADkAMAA1ADAANQA0ADUAYQA1ADgAOAA3ADUAMABiADUAMABmADIAMQBj
ADEANwA4ADgALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAAAAAAUwBUAF8A
YwBlADMAZgBmAGMAMAA5ADAANQAwADUANAA1AGEANQA4ADgANwA1ADAAYgA1ADAAZgAyADEAYwAx
ADcAOAA4AAAARAAPAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgA2ADIA
NAAxAC4AMgA5ADcAMQAxAAAAAABIAA8AAQBBAHMAcwBlAG0AYgBsAHkAIABWAGUAcgBzAGkAbwBu
AAAAMQAuADAALgA2ADIANAAxAC4AMgA5ADcAMQAxAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUAAADAAAADA1AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\仕入条件履歴"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:Description="Script Task"
      DTS:DTSID="{63579B2F-DC97-4300-BCB1-4DC07015AEE6}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="仕入条件履歴"
      DTS:ThreadHint="4">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_159ab1b48c314db5a7c03208e5d74728"
          VSTAMajorVersion="3"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadOnlyVariables="User::checkType,User::connectionString,User::currentDate,User::packageCode,User::sysDate">
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_ce3ffc09050545a588750b50f21c1788")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_ce3ffc09050545a588750b50f21c1788")]
[assembly: AssemblyCopyright("Copyright @  2016")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[
#region Namespaces
using System;
using System.Data;
using System.Data.SqlClient;
using System.Text;
#endregion

namespace ST_ce3ffc09050545a588750b50f21c1788
{
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
    {
        #region "Main Method"
        /// <summary>
        /// 作成者：イルファン　マンスリー
        /// 説明：仕入条件履歴データの業務チェックする。
        /// 作成日：2016年11月17日
        /// </summary>
        public void Main()
		{
            string strConnection = Dts.Variables["User::connectionString"].Value.ToString();
            SqlConnection myConnection = new SqlConnection(strConnection);
            StringBuilder strERRQuery = new StringBuilder();
            DataTable dtFaultyTemp;
            try
            { 
                dtFaultyTemp = new DataTable();
                _connectionOpen(myConnection);
                
                #region "伝票日付 Should not be bigger than Today"
                //Get All The Records of Temp TABLE, with New Column DEL_RECORD as Flag.
                //Faulty Records will have DEL_RECORD as 'TRUE'
                strERRQuery.Clear();
                strERRQuery.Append(" SELECT *,CASE ");
                strERRQuery.Append(" WHEN CONVERT(DATE,有効開始日) > CONVERT(DATE,GETDATE()) ");
                strERRQuery.Append(" THEN 'TRUE' ELSE 'FALSE' END AS DEL_RECORD ");
                strERRQuery.Append(" FROM M_SHIIRE_JOUKEN_RIREKI_TEMP;");
                dtFaultyTemp.Reset();
                dtFaultyTemp = _getDataTable(strERRQuery.ToString(), myConnection);
                if (dtFaultyTemp.Rows.Count > 0)
                {
                    _replaceData(dtFaultyTemp, myConnection, "データに将来の仕入条件有効開始日が存在されています。");   //Replace & Remove Data in Actual Db Table
                }
                #endregion
                Dts.TaskResult = (int)ScriptResults.Success;
            }
            #region Catch/Finally
            catch (Exception ex)
            {
                strERRQuery.Clear();
                strERRQuery.Append("INSERT INTO KANSHI_PACKAGE_ERROR ");
                strERRQuery.Append(" (パッケージコード,データ日付,エラー日時,エラー内容,エラーフラグ) ");
                strERRQuery.Append(" VALUES('G" + Dts.Variables["User::packageCode"].Value.ToString() + "','" + Dts.Variables["User::currentDate"].Value.ToString() + "','" + Dts.Variables["User::sysDate"].Value.ToString() + "','システムエラー:" + ex.Message.ToString().Replace("'", "-") + "','3');");
                _updateInsert(strERRQuery.ToString(), myConnection);
                Dts.TaskResult = (int)ScriptResults.Success;
            }
            finally 
            {
                _connectionClose(myConnection);
                dtFaultyTemp = null;
                strERRQuery = null;
                myConnection = null;
            }
            #endregion
		}
        #endregion

        #region "replace Data"
        //Data Replacement in Actual DB After Test
        private void _replaceData(DataTable dtFaultyTemp, SqlConnection myConnection, string strErrorMsg)
        {
            StringBuilder strERRQuery = new StringBuilder();
            StringBuilder strBuildRow = new StringBuilder();
            DataRow drTemp;
            string strPackageCode = string.Empty;
            int intErrorCount = 0;  //To Count Errors in the DataTable, to avoid its extra TRUNCATION and BULK.
            try
            {
                _connectionOpen(myConnection);
                strPackageCode = Dts.Variables["User::packageCode"].Value.ToString();
                intErrorCount = 0;
                int countRows = dtFaultyTemp.Rows.Count;
                for (int intI = 0; intI < countRows; intI++)
                {
                    #region Report Faulty Records
                    if (dtFaultyTemp.Rows[intI]["DEL_RECORD"].ToString().ToUpper() == "TRUE")
                    {
                        intErrorCount = intErrorCount + 1;
                        //'TRUE' means Faulty SKU Record
                        drTemp = dtFaultyTemp.Rows[intI];
                        strBuildRow.Clear();
                        for (int intJ = 0; intJ < drTemp.Table.Columns.Count-1; intJ++)
                        {
                            strBuildRow.AppendFormat("{0} ", drTemp.ItemArray[intJ]);
                        }
                        strERRQuery.Clear();
                        strERRQuery.Append("INSERT INTO KANSHI_PACKAGE_ERROR ");
                        strERRQuery.Append(" (パッケージコード,データ日付,エラー日時,エラー内容,エラーフラグ) ");
                        strERRQuery.Append(" VALUES('G" + strPackageCode + "','" + Dts.Variables["User::currentDate"].Value.ToString() + "','" + Dts.Variables["User::sysDate"].Value.ToString() + "','" + strBuildRow.ToString() + "。" + strErrorMsg + "','3');");
                        _updateInsert(strERRQuery.ToString(), myConnection);
                        countRows = countRows - 1;
                        intI = intI - 1;
                        dtFaultyTemp.Rows.Remove(drTemp);   //Remove Faulty Records from DataTable Object.
                        dtFaultyTemp.AcceptChanges();    //Commit DataTable Changes.
                    }
                    #endregion
                }
                dtFaultyTemp.Columns.Remove("DEL_RECORD");
                if (intErrorCount > 0)
                {
                    #region "TRUNCATE TEMP Table"
                    //TRUNCATE TEMP Table, to be import New Correct Records
                    strERRQuery.Clear();
                    strERRQuery.Append(" TRUNCATE TABLE " + Dts.Variables["User::checkType"].Value.ToString() + "_TEMP");
                    _updateInsert(strERRQuery.ToString(), myConnection);
                    #endregion
                    #region "Bulk Update Records"
                    //正しいデータテーブルからインポートするためいに。
                    using (SqlBulkCopy bulkCopy = new SqlBulkCopy(myConnection))
                    {
                        bulkCopy.DestinationTableName = Dts.Variables["User::checkType"].Value.ToString() + "_TEMP";   //Assign table name
                        _connectionOpen(myConnection);
                        bulkCopy.BulkCopyTimeout = 600; //Default Timeut 30 Change to 600. in seconds
                        bulkCopy.WriteToServer(dtFaultyTemp);   //Write into Actual table.
                    }
                    #endregion
                }
            }
            #region Catch/Finally
            catch (Exception ex) 
            {
                throw ex;
            }
            finally
            {
                strERRQuery = null;
                dtFaultyTemp = null;
                strBuildRow = null;
                drTemp = null;
                strErrorMsg = null;
                strPackageCode = null;
            }
            #endregion
        }
        #endregion

        #region "Get DataTable"
        //Created On: 08-08-2016
        //Description: Aim to Return DataTable from the Query.
        public DataTable _getDataTable(string strQuery, SqlConnection myConnection)
        {
            StringBuilder strERRQuery = new StringBuilder();
            DataTable objDT = new DataTable();
            SqlCommand myCommand;
            SqlDataAdapter sqlSelectData;
            try
            {
                _connectionOpen(myConnection);
                myCommand = new SqlCommand(strQuery, myConnection);
                myCommand.CommandType = CommandType.Text;
                sqlSelectData = new SqlDataAdapter();
                sqlSelectData.SelectCommand = myCommand;
                myCommand.CommandTimeout = 600; //Increases Query execution timeout.
                sqlSelectData.Fill(objDT);
            }
            #region CATCH/FINALLY
            catch (Exception ex)
            {
                throw ex;
            }
            finally
            {
                strQuery = null;
                myCommand = null;
                sqlSelectData = null;
                strERRQuery = null;
            }
            #endregion
            return objDT;
        }
        #endregion

        #region "Update/Insert Query in Db"
        protected void _updateInsert(string strQuery, SqlConnection myConnection)
        {
            StringBuilder strERRQuery = new StringBuilder();
            SqlCommand myCommand;
            try
            {
                myCommand = new SqlCommand(strQuery, myConnection);
                _connectionOpen(myConnection);
                myCommand.ExecuteNonQuery();
            }
            #region CATCH/FINALLY
            catch (Exception ex)
            {
                throw ex;
            }
            finally
            {
                strERRQuery = null;
                myConnection = null;
                myCommand = null;
            }
            #endregion
        }
        #endregion

        #region Connection Open
        private void _connectionOpen(SqlConnection myConnection)
        {
            try
            {
                if (myConnection.State != ConnectionState.Open)
                {
                    myConnection.Open();
                }
            }
            catch (Exception ex)
            {
                throw ex;
            }
        }
        #endregion

        #region Connection Close
        private void _connectionClose(SqlConnection myConnection)
        {
            try
            {
                if (myConnection.State != ConnectionState.Closed)
                {
                    myConnection.Close();
                }
            }
            catch (Exception ex)
            {
                throw ex;
            }
        }
        #endregion

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
          <ProjectItem
            Name="ST_159ab1b48c314db5a7c03208e5d74728.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?><Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003"><PropertyGroup><ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids><Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration><Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform><ProductVersion>8.0.30703</ProductVersion><SchemaVersion>2.0</SchemaVersion><ProjectGuid>{6f1cd3ad-124c-410c-a3da-0ed5e3468b82}</ProjectGuid><OutputType>Library</OutputType><AppDesignerFolder>Properties</AppDesignerFolder><RootNamespace>ST_ce3ffc09050545a588750b50f21c1788</RootNamespace><AssemblyName>ST_159ab1b48c314db5a7c03208e5d74728</AssemblyName><TargetFrameworkVersion>v4.0</TargetFrameworkVersion><FileAlignment>512</FileAlignment><ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Debug' "><DebugSymbols>true</DebugSymbols><DebugType>full</DebugType><Optimize>false</Optimize><OutputPath>.\bin\Debug\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>DEBUG;TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Release' "><DebugSymbols>false</DebugSymbols><Optimize>true</Optimize><OutputPath>.\bin\Release\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><ItemGroup><Reference Include="System" /><Reference Include="System.Data" /><Reference Include="System.Windows.Forms" /><Reference Include="System.Xml" /><Reference Include="Microsoft.SqlServer.ManagedDTS, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.ScriptTask, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /></ItemGroup><ItemGroup><AppDesigner Include="Properties\" /><Compile Include="Properties\AssemblyInfo.cs"><SubType>Code</SubType></Compile><EmbeddedResource Include="Properties\Resources.resx"><Generator>ResXFileCodeGenerator</Generator><LastGenOutput>Resources.Designer.cs</LastGenOutput></EmbeddedResource><Compile Include="Properties\Resources.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Resources.resx</DependentUpon></Compile><None Include="Properties\Settings.settings"><Generator>SettingsSingleFileGenerator</Generator><LastGenOutput>Settings.Designer.cs</LastGenOutput></None><Compile Include="Properties\Settings.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Settings.settings</DependentUpon></Compile><Compile Include="ScriptMain.cs"><SubType>Code</SubType></Compile></ItemGroup><!-- Include the build rules for a C# project.--><Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" /><ProjectExtensions><VisualStudio><FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}"><ProjectProperties HostName="ScriptTask" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="#HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\VisualStudio\10.0\InstallDir#\devenv.exe" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" /><Host Name="ScriptTask" GeneratedNamespace="$safeprojectname" IconIndex=""></Host><ProjectClient><HostIdentifier>SSIS_ST120</HostIdentifier></ProjectClient></FlavorProperties></VisualStudio></ProjectExtensions></Project>]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>ST_ce3ffc09050545a588750b50f21c1788</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>ST_ce3ffc09050545a588750b50f21c1788</msb:DisplayName>
		<msb:ProjectId>{EE24C7D7-5D12-4340-B8D9-E41721313B68}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_159ab1b48c314db5a7c03208e5d74728.csproj"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_ce3ffc09050545a588750b50f21c1788.Properties.Settings.get_Default():ST_ce3ffc09050545a588750b50f21c1788.Properties.Sett" +
    "ings")]

namespace ST_ce3ffc09050545a588750b50f21c1788.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_ce3ffc09050545a588750b50f21c1788.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_ce3ffc09050545a588750b50f21c1788.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_ce3ffc09050545a588750b50f21c1788.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_ce3ffc09050545a588750b50f21c1788.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_ce3ffc09050545a588750b50f21c1788.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_159ab1b48c314db5a7c03208e5d74728.dll">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
CnKTAwBwbxgAAApvGQAACm8aAAAKcrMDAHAoNQAACm82AAAKAgQoDAAABhEIIFgCAABvNwAAChEI
A284AAAK3gwRCCwHEQhvOQAACtzeBRMJEQl63g8UChQQARQLFAwUEAMUDdwqAABBTAAAAgAAAEAC
AABNAAAAjQIAAAwAAAAAAAAAAAAAABUAAACGAgAAmwIAAAUAAAAkAAABAgAAABUAAACNAgAAogIA
AA8AAAAAAAAAGzACAFMAAAAEAAARcxwAAAomcx0AAAoKAgQoDAAABgMEczoAAAoLBxdvOwAACnM8
AAAKDAgHbz0AAAoHIFgCAABvPgAACggGbz8AAAom3gMNCXreCBQQARQLFAzcBioAARwAAAAADAA4
RAADJAAAAQIADAA9SQAIAAAAABswAgAqAAAABQAAEXMcAAAKJgMEczoAAAoKAgQoDAAABgZvQAAA
CibeAwsHet4GFBACFArcKgAAARwAAAAABgAYHgADJAAAAQIABgAdIwAGAAAAABswAgAVAAAABgAA
EQNvQQAAChcuBgNvQgAACt4DCgZ6KgAAAAEQAAAAAAAAEREAAyQAAAEbMAEAFAAAAAYAABEDb0EA
AAosBgNvQwAACt4DCgZ6KgEQAAAAAAAAEBAAAyQAAAEeAihEAAAKKrQAAADOyu++AQAAAJEAAABs
U3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAu
MCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5c3Rl
bS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFEULQAAABCU0pC
AQABAAAAAAAMAAAAdjQuMC4zMDMxOQAAAAAFAGwAAAC0BQAAI34AACAGAADECAAAI1N0cmluZ3MA
AAAA5A4AAMADAAAjVVMApBIAABAAAAAjR1VJRAAAALQSAABEAgAAI0Jsb2IAAAAAAAAAAgAAAVcd
ogEJAwAAAPolMwAWAAABAAAALwAAAAUAAAAGAAAADgAAAAoAAABEAAAAAgAAAA8AAAAGAAAAAgAA
AAMAAAAEAAAAAQAAAAUAAAABAAAAAQAAAAAACgABAAAAAAAGAMEAugAKAN0AyAAOAD0BFAEGAFkB
ugAGAG8BXgEGAKABiwESACsCHwISAEsCNQIGAAoD8AIGADUDIwMGAEwDIwMGAGkDIwMGAIgDIwMG
AKEDIwMGALoDIwMGANUDIwMGAPADIwMGAAkEIwMGAEIEIgQGAGIEIgQGALcEpAQGANQEugAGANkE
ugAGAP0EIwMKACkFEwUKAEIFEwUGAFcFIgQOAHkFFAEOAJsFFAEWAPQF1AUWAAwG1AUGAD0GMQYS
AF4GHwISAHkGHwIGAK0GugAGALQGugASAN8GHwISACAHHwISAFYHNQIGAJ0HugASALEHNQISAM8H
vAcSANkHHwISAPUHNQISACkIvAcSAEwIvAcSAFkIHwIAAAAAAQAAAAAAAQABAAAAEAAyADwABQAB
AAEAAAEQAGsAPAAJAAMABQABABAAdAB/AA0ABAAIAAMBAACjAAAAEQAEAA8AEQB/ARMAEQCsARcA
EQD2ATkABgajAmUAVoCrAmgAVoCzAmgAUCAAAAAAgxi8ARsAAQBYIAAAAACTCMIBHwABAJEgAAAA
AJMI1gEkAAEAmCAAAAAAkwjiASkAAQCgIAAAAACWCAYCPQACALMgAAAAAIYYvAEbAAIApyAAAAAA
kRhyBacAAgC8IAAAAACGABoCGwACAMgiAAAAAIEAWQJHAAIA1CUAAAAAhgBmAlAABQBQJgAAAACE
AHQCWAAHAKQmAAAAAIEAggJfAAkA2CYAAAAAgQCSAl8ACgAIJwAAAACGGLwBGwALAAAAAQC7AgAA
AQDBAgAAAgDOAgAAAwDbAgAAAQDnAgAAAgDOAgAAAQDnAgAAAgDOAgAAAQDOAgAAAQDOAkkAvAF2
AFEAvAF2AFkAvAF2AGEAvAF2AGkAvAF2AHEAvAF2AHkAvAF2AIEAvAF2AIkAvAF2AJEAvAF2AJkA
vAF7AKEAvAEbAKkAvAEbAAkAvAEbALEA6wSAALEABgWHACkAvAGMAMkAvAGYANkAvAEbABEAvAEb
AOEAvAEbABkArQWrAOkA/gWwAPEAFQa1APkAHga7AAkAKAa/AEEAvAF2AAEBvAEbADkAvAEbAAEB
SwbDAAEBUQbJADkAWAYbADkAcAbQABEBlAbWAOkAngZ7ACEBvga/ABkBygbaABkB0gbgABkB2Qb2
AAkBFQb5ACkBFQYAARkB5wa/ABkB7wYFASkB+wYLAQEBCQcQASkBFgcYATkANQcdAQkBQQcjATkA
SAcbADEBQQd2ABkB0gYqATkBvAFfABkB0gYxATkBYgd2ADkBewd7ADkBjwc3AUEBqQcbAEkBvAFY
AFEB5QdWAWEBvAEbAGEBBAhdAVEBFgh7AGkBNwhkAVEBPAjWAHEBaQiBAXEBcwgbAHEBeAgbABkA
vAEbAAgAFABsAAgAGABxACkAkwCeAC4AGwD+AS4AIwD+AS4AYwAkAi4ACwCNAS4AEwDVAS4AMwDV
AS4AKwD+AS4AOwAEAi4AQwD+AS4AWwAbAkMAawBxAEkAkwCeAGEAmwBxAIMAqwBxAJMA5gA9AWoB
eAGHAQIAAQADAAMAAABvAS8AAADuATQAAAASAkIAAgACAAMAAgADAAUAAQAEAAUAAgAFAAcABIAA
AAEAAABMGNVKAAAAAAAAgAQAAAQAAAAAAAAAAAAAAAEAsQAAAAAABAAAAAAAAAAAAAAAAQC6AAAA
AAAMAAAAAAAAAAAAAAAKAPUAAAAAAAQAAAAAAAAAAAAAAAEAHwIAAAAADAAAAAAAAAAAAAAACgC1
BQAAAAAAAAAAAQAAAH4IAAAFAAQAAAAAAAA8TW9kdWxlPgBTVF8xNTlhYjFiNDhjMzE0ZGI1YTdj
MDMyMDhlNWQ3NDcyOC5kbGwAUmVzb3VyY2VzAFNUX2NlM2ZmYzA5MDUwNTQ1YTU4ODc1MGI1MGYy
MWMxNzg4LlByb3BlcnRpZXMAU2V0dGluZ3MAU2NyaXB0TWFpbgBTVF9jZTNmZmMwOTA1MDU0NWE1
ODg3NTBiNTBmMjFjMTc4OABTY3JpcHRSZXN1bHRzAG1zY29ybGliAFN5c3RlbQBPYmplY3QAU3lz
dGVtLkNvbmZpZ3VyYXRpb24AQXBwbGljYXRpb25TZXR0aW5nc0Jhc2UATWljcm9zb2Z0LlNxbFNl
cnZlci5TY3JpcHRUYXNrAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlRhc2tzLlNjcmlwdFRhc2sA
VlNUQVJUU2NyaXB0T2JqZWN0TW9kZWxCYXNlAEVudW0AU3lzdGVtLlJlc291cmNlcwBSZXNvdXJj
ZU1hbmFnZXIAcmVzb3VyY2VNYW4AU3lzdGVtLkdsb2JhbGl6YXRpb24AQ3VsdHVyZUluZm8AcmVz
b3VyY2VDdWx0dXJlAC5jdG9yAGdldF9SZXNvdXJjZU1hbmFnZXIAZ2V0X0N1bHR1cmUAc2V0X0N1
bHR1cmUAQ3VsdHVyZQBkZWZhdWx0SW5zdGFuY2UAZ2V0X0RlZmF1bHQARGVmYXVsdABNYWluAFN5
c3RlbS5EYXRhAERhdGFUYWJsZQBTeXN0ZW0uRGF0YS5TcWxDbGllbnQAU3FsQ29ubmVjdGlvbgBf
cmVwbGFjZURhdGEAX2dldERhdGFUYWJsZQBfdXBkYXRlSW5zZXJ0AF9jb25uZWN0aW9uT3BlbgBf
Y29ubmVjdGlvbkNsb3NlAHZhbHVlX18AU3VjY2VzcwBGYWlsdXJlAHZhbHVlAGR0RmF1bHR5VGVt
cABteUNvbm5lY3Rpb24Ac3RyRXJyb3JNc2cAc3RyUXVlcnkAU3lzdGVtLlJ1bnRpbWUuVmVyc2lv
bmluZwBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUAU3lzdGVtLlJlZmxlY3Rpb24AQXNzZW1ibHlU
aXRsZUF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0cmlidXRlAEFzc2VtYmx5Q29uZmln
dXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUAQXNzZW1ibHlQcm9kdWN0
QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0
cmlidXRlAEFzc2VtYmx5Q3VsdHVyZUF0dHJpYnV0ZQBBc3NlbWJseVZlcnNpb25BdHRyaWJ1dGUA
U3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBDb21waWxhdGlvblJlbGF4YXRpb25zQXR0
cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAFNUXzE1OWFiMWI0OGMzMTRkYjVh
N2MwMzIwOGU1ZDc0NzI4AFN5c3RlbS5EaWFnbm9zdGljcwBEZWJ1Z2dlck5vblVzZXJDb2RlQXR0
cmlidXRlAFR5cGUAUnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUAQXNzZW1ibHkA
Z2V0X0Fzc2VtYmx5AFN5c3RlbS5Db21wb25lbnRNb2RlbABFZGl0b3JCcm93c2FibGVBdHRyaWJ1
dGUARWRpdG9yQnJvd3NhYmxlU3RhdGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUALmNjdG9y
AFNTSVNTY3JpcHRUYXNrRW50cnlQb2ludEF0dHJpYnV0ZQBTY3JpcHRPYmplY3RNb2RlbABnZXRf
RHRzAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuTWFuYWdlZERUUwBNaWNyb3NvZnQuU3FsU2VydmVyLkR0
cy5SdW50aW1lAFZhcmlhYmxlcwBnZXRfVmFyaWFibGVzAFZhcmlhYmxlAGdldF9JdGVtAGdldF9W
YWx1ZQBUb1N0cmluZwBTeXN0ZW0uVGV4dABTdHJpbmdCdWlsZGVyAENsZWFyAEFwcGVuZABSZXNl
dABEYXRhUm93Q29sbGVjdGlvbgBnZXRfUm93cwBJbnRlcm5hbERhdGFDb2xsZWN0aW9uQmFzZQBn
ZXRfQ291bnQAc2V0X1Rhc2tSZXN1bHQAU3RyaW5nAEV4Y2VwdGlvbgBnZXRfTWVzc2FnZQBSZXBs
YWNlAENvbmNhdABFbXB0eQBEYXRhUm93AFRvVXBwZXIAb3BfRXF1YWxpdHkAZ2V0X0l0ZW1BcnJh
eQBBcHBlbmRGb3JtYXQAZ2V0X1RhYmxlAERhdGFDb2x1bW5Db2xsZWN0aW9uAGdldF9Db2x1bW5z
AFJlbW92ZQBBY2NlcHRDaGFuZ2VzAFNxbEJ1bGtDb3B5AHNldF9EZXN0aW5hdGlvblRhYmxlTmFt
ZQBzZXRfQnVsa0NvcHlUaW1lb3V0AFdyaXRlVG9TZXJ2ZXIASURpc3Bvc2FibGUARGlzcG9zZQBT
cWxDb21tYW5kAFN5c3RlbS5EYXRhLkNvbW1vbgBEYkNvbW1hbmQAQ29tbWFuZFR5cGUAc2V0X0Nv
bW1hbmRUeXBlAFNxbERhdGFBZGFwdGVyAHNldF9TZWxlY3RDb21tYW5kAHNldF9Db21tYW5kVGlt
ZW91dABEYkRhdGFBZGFwdGVyAEZpbGwARXhlY3V0ZU5vblF1ZXJ5AERiQ29ubmVjdGlvbgBDb25u
ZWN0aW9uU3RhdGUAZ2V0X1N0YXRlAE9wZW4AQ2xvc2UAU1RfY2UzZmZjMDkwNTA1NDVhNTg4NzUw
YjUwZjIxYzE3ODguUHJvcGVydGllcy5SZXNvdXJjZXMucmVzb3VyY2VzAAAAAABxUwBUAF8AYwBl
ADMAZgBmAGMAMAA5ADAANQAwADUANAA1AGEANQA4ADgANwA1ADAAYgA1ADAAZgAyADEAYwAxADcA
OAA4AC4AUAByAG8AcABlAHIAdABpAGUAcwAuAFIAZQBzAG8AdQByAGMAZQBzAAAtVQBzAGUAcgA6
ADoAYwBvAG4AbgBlAGMAdABpAG8AbgBTAHQAcgBpAG4AZwAAHyAAUwBFAEwARQBDAFQAIAAqACwA
QwBBAFMARQAgAABpIABXAEgARQBOACAAQwBPAE4AVgBFAFIAVAAoAEQAQQBUAEUALAAJZ7lSi5XL
WeVlKQAgAD4AIABDAE8ATgBWAEUAUgBUACgARABBAFQARQAsAEcARQBUAEQAQQBUAEUAKAApACkA
IAABWSAAVABIAEUATgAgACcAVABSAFUARQAnACAARQBMAFMARQAgACcARgBBAEwAUwBFACcAIABF
AE4ARAAgAEEAUwAgAEQARQBMAF8AUgBFAEMATwBSAEQAIAABRSAARgBSAE8ATQAgAE0AXwBTAEgA
SQBJAFIARQBfAEoATwBVAEsARQBOAF8AUgBJAFIARQBLAEkAXwBUAEUATQBQADsAADXHMPwwvzBr
MAZcZWduMNVOZVFhZ/ZOCWe5UouVy1nlZUwwWFsoV1UwjDBmMEQwfjBZMAIwAUNJAE4AUwBFAFIA
VAAgAEkATgBUAE8AIABLAEEATgBTAEgASQBfAFAAQQBDAEsAQQBHAEUAXwBFAFIAUgBPAFIAIAAA
SyAAKADRMMMwsTD8MLgwszD8MMkwLADHMPwwvzDlZdhOLACoMOkw/DDlZUJmLACoMOkw/DCFUblb
LACoMOkw/DDVMOkwsDApACAAARUgAFYAQQBMAFUARQBTACgAJwBHAAEjVQBzAGUAcgA6ADoAcABh
AGMAawBhAGcAZQBDAG8AZABlAAAHJwAsACcAASNVAHMAZQByADoAOgBjAHUAcgByAGUAbgB0AEQA
YQB0AGUAABtVAHMAZQByADoAOgBzAHkAcwBEAGEAdABlAAAXJwAsACcAtzC5MMYw4DCoMOkw/DA6
AAEDJwABAy0AAQ8nACwAJwAzACcAKQA7AAEVRABFAEwAXwBSAEUAQwBPAFIARAAACVQAUgBVAEUA
AAl7ADAAfQAgAAADAjABISAAVABSAFUATgBDAEEAVABFACAAVABBAEIATABFACAAAB9VAHMAZQBy
ADoAOgBjAGgAZQBjAGsAVAB5AHAAZQAAC18AVABFAE0AUAAAAJwLSmtLE/ZGlX92QyIz3rwACLd6
XFYZNOCJCImEXc2AgMyRAwYSFQMGEhkDIAABBAAAEhUEAAASGQUAAQESGQQIABIVBAgAEhkDBhIM
BAAAEgwECAASDAggAwESHRIhDgcgAhIdDhIhBiACAQ4SIQUgAQESIQIGCAMGERQEAAAAAAQBAAAA
BCABAQ4EIAEBCAYAARJZEV0EIAASYQYgAgEOEmEEBwESFQUgAQERaQgBAAIAAAAAAAMAAAEEIAAS
dQQgABJ5BSABEn0cAyAAHAMgAA4FIAASgIEGIAESgIEOBSAAEoCFAyAACAUgAg4ODgUAAQ4dDg8H
Bg4SIRKAgRIdEoCRHQ4CBg4GIAESgJUIBCABHA4FAAICDg4EIAAdHAcgAhKAgQ4cBCAAEh0FIAAS
gJkGIAEBEoCVBgADDg4ODgUAAg4ODgUgAQESHRgHCxKAgRKAgRKAlQ4ICAgIEoCdEoCRHQ4GIAEB
EYCtBiABARKApQUgAQgSHQ0HBBIdEoClEoCxEoCRCAcCEoClEoCRBSAAEYC9BQcBEoCRRwEAGi5O
RVRGcmFtZXdvcmssVmVyc2lvbj12NC4wAQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRAuTkVUIEZy
YW1ld29yayA0KAEAI1NUX2NlM2ZmYzA5MDUwNTQ1YTU4ODc1MGI1MGYyMWMxNzg4AAAFAQAAAAAW
AQARQ29weXJpZ2h0IEAgIDIwMTYAAAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRo
cm93cwEA6DwAAAAAAAAAAAAA/jwAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPA8AAAAAAAAAABf
Q29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEA
EAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgAAABY
QAAAsAMAAAAAAAAAAAAAsAM0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAAAL0E
7/4AAAEAAAABANVKTBgAAAEA1UpMGD8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAAAQBW
AGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAAAAAA
AACwBBADAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAAOwCAAABADAAMAAwADAAMAA0
AGIAMAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABTAFQAXwBjAGUA
MwBmAGYAYwAwADkAMAA1ADAANQA0ADUAYQA1ADgAOAA3ADUAMABiADUAMABmADIAMQBjADEANwA4
ADgAAABAAA8AAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4ANgAyADIAMAAuADEA
OQAxADUANwAAAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAFQAXwAxADUAOQBh
AGIAMQBiADQAOABjADMAMQA0AGQAYgA1AGEANwBjADAAMwAyADAAOABlADUAZAA3ADQANwAyADgA
LgBkAGwAbAAAAEgAEgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBwAHkAcgBp
AGcAaAB0ACAAQAAgACAAMgAwADEANgAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4A
YQBtAGUAAABTAFQAXwAxADUAOQBhAGIAMQBiADQAOABjADMAMQA0AGQAYgA1AGEANwBjADAAMwAy
ADAAOABlADUAZAA3ADQANwAyADgALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0A
ZQAAAAAAUwBUAF8AYwBlADMAZgBmAGMAMAA5ADAANQAwADUANAA1AGEANQA4ADgANwA1ADAAYgA1
ADAAZgAyADEAYwAxADcAOAA4AAAARAAPAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAA
MQAuADAALgA2ADIAMgAwAC4AMQA5ADEANQA3AAAAAABIAA8AAQBBAHMAcwBlAG0AYgBsAHkAIABW
AGUAcgBzAGkAbwBuAAAAMQAuADAALgA2ADIAMgAwAC4AMQA5ADEANQA3AAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAADAAAABA9AAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\会計伝票明細"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:Description="Script Task"
      DTS:DTSID="{84C58A63-175A-420B-B5A4-347DEA07BE4B}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="会計伝票明細"
      DTS:ThreadHint="5">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_2cdc2f78a3de42ee8a573a5d2a7e7563"
          VSTAMajorVersion="3"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadOnlyVariables="User::checkType,User::connectionString,User::currentDate,User::packageCode,User::sysDate">
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_ce3ffc09050545a588750b50f21c1788.Properties.Settings.get_Default():ST_ce3ffc09050545a588750b50f21c1788.Properties.Sett" +
    "ings")]

namespace ST_ce3ffc09050545a588750b50f21c1788.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[
#region Namespaces
using System;
using System.Data;
using System.Data.SqlClient;
using System.Text;
#endregion

namespace ST_ce3ffc09050545a588750b50f21c1788
{
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
    {
        #region "Main Method"
        /// <summary>
        /// 作成者：イルファン　マンスリー
        /// 説明：仕入実績の業務データチェックする。
        /// 作成日：２０１６年０８月０８日
        /// </summary>
        public void Main()
		{
            string strConnection = Dts.Variables["User::connectionString"].Value.ToString();
            SqlConnection myConnection = new SqlConnection(strConnection);
            StringBuilder strERRQuery = new StringBuilder();
            DataTable dtFaultyTemp;
            try
            { 
                dtFaultyTemp = new DataTable();
                _connectionOpen(myConnection);
                #region "Check for 伝票頭一桁 Check"
                //Get All The Records of Temp TABLE, with New Column DEL_RECORD as Flag.
                //Faulty Records will have DEL_RECORD as 'TRUE'
                strERRQuery.Clear();
                strERRQuery.Append(" SELECT KAIKEI.*, ");
                strERRQuery.Append(" CASE WHEN SUBSTRING(KAIKEI.会計伝票番号,1,1) != KANJO.伝票頭一桁 ");
                strERRQuery.Append(" OR KANJO.伝票頭一桁 IS NULL ");
                strERRQuery.Append(" THEN 'TRUE' ELSE 'FALSE' ");
                strERRQuery.Append(" END AS DEL_RECORD ");
                strERRQuery.Append(" FROM D_KAIKEI_DENPYOU_MEISAI_TEMP AS KAIKEI ");
                strERRQuery.Append(" LEFT JOIN M_KANJOU_CODE AS KANJO ");
                strERRQuery.Append(" ON KAIKEI.勘定コード = KANJO.勘定コード; ");
                dtFaultyTemp.Reset();
                dtFaultyTemp = _getDataTable(strERRQuery.ToString(), myConnection);
                if (dtFaultyTemp.Rows.Count > 0)
                {
                    _replaceData(dtFaultyTemp, myConnection, "会計伝票の先頭桁を間違えました。");   //Replace & Remove Data in Actual Db Table
                }
                #endregion

                #region "Check for 会計伝票番号,会計伝票明細番号(PK) Check"
                strERRQuery.Clear();
                strERRQuery.Append(" SELECT TEMP.*, ");
                strERRQuery.Append(" CASE WHEN TEMP.会計伝票番号 = MAIN.会計伝票番号 ");
                strERRQuery.Append(" AND TEMP.会計伝票明細番号 = MAIN.会計伝票明細番号 ");
                strERRQuery.Append(" THEN 'TRUE' ELSE 'FALSE' ");
                strERRQuery.Append(" END AS DEL_RECORD ");
                strERRQuery.Append(" FROM D_KAIKEI_DENPYOU_MEISAI_TEMP AS TEMP ");
                strERRQuery.Append(" LEFT JOIN D_KAIKEI_DENPYOU_MEISAI AS MAIN ");
                strERRQuery.Append(" ON TEMP.会計伝票番号 = MAIN.会計伝票番号 ");
                strERRQuery.Append(" AND TEMP.会計伝票明細番号 = MAIN.会計伝票明細番号 ");
                dtFaultyTemp.Reset();
                dtFaultyTemp = _getDataTable(strERRQuery.ToString(), myConnection);
                if (dtFaultyTemp.Rows.Count > 0)
                {
                    _replaceData(dtFaultyTemp, myConnection, "会計伝票番号・会計伝票明細番号が既に取込済みです。");   //Replace & Remove Data in Actual Db Table
                }
                #endregion

                #region "Check for 締日 Check"
                //Get All The Records of Temp TABLE, with New Column DEL_RECORD as Flag.
                //Faulty Records will have DEL_RECORD as 'TRUE'
                strERRQuery.Clear();
                strERRQuery.Append(" SELECT *,CASE WHEN 勘定コード='701' THEN ");
                strERRQuery.Append(" CASE WHEN CAST(CONVERT(VARCHAR(10),会計伝票日付,121) AS DATE) <= (SELECT MAX(月度終了日) FROM M_DENPYOU_SIME_MASTER WHERE 月度締日 IS NOT NULL) ");
                strERRQuery.Append(" THEN 'TRUE' ELSE 'FALSE' END ");
                strERRQuery.Append(" ELSE CASE WHEN CAST(CONVERT(VARCHAR(10),会計伝票日付,121) AS DATE) <= (SELECT MAX(ロイヤリティ締日) FROM M_DENPYOU_SIME_MASTER WHERE ロイヤリティ締日 IS NOT NULL) ");
                strERRQuery.Append(" THEN 'TRUE' ELSE 'FALSE' END END AS DEL_RECORD ");
                strERRQuery.Append(" FROM D_KAIKEI_DENPYOU_MEISAI_TEMP; ");
                dtFaultyTemp.Reset();
                dtFaultyTemp = _getDataTable(strERRQuery.ToString(), myConnection);
                if (dtFaultyTemp.Rows.Count > 0)
                {
                    _replaceData(dtFaultyTemp, myConnection, "月度締めました。締め日前の会計伝票日があります。");   //Replace & Remove Data in Actual Db Table
                }
                #endregion

                #region "Check for 棚卸確定日 Check"
                //Get All The Records of Temp TABLE, with New Column DEL_RECORD as Flag.
                //Faulty Records will have DEL_RECORD as 'TRUE'
                strERRQuery.Clear();
                strERRQuery.Append(" SELECT KAIKEI.*, CASE ");
                strERRQuery.Append(" WHEN KAIKEI.会計伝票日付 < TANA.棚卸日付 ");
                strERRQuery.Append(" THEN 'TRUE' ELSE 'FALSE' ");
                strERRQuery.Append(" END AS DEL_RECORD ");
                strERRQuery.Append(" FROM D_KAIKEI_DENPYOU_MEISAI_TEMP AS KAIKEI ");
                strERRQuery.Append(" LEFT JOIN (SELECT DISTINCT 店舗コード,MAX(棚卸日付) AS 棚卸日付 FROM M_TANAOROSHI_MASTER WHERE 棚卸確定日 != '1900-01-01' GROUP BY 店舗コード) TANA  ");
                strERRQuery.Append(" ON KAIKEI.店舗コード = TANA.店舗コード ");
                dtFaultyTemp.Reset();
                dtFaultyTemp = _getDataTable(strERRQuery.ToString(), myConnection);
                if (dtFaultyTemp.Rows.Count > 0)
                {
                    _replaceData(dtFaultyTemp, myConnection, "棚卸確定日前の会計伝票日があります。");   //Replace & Remove Data in Actual Db Table
                }
                #endregion

                #region "Check for F.K（店舗コード） Check"
                //Get All The Records of Temp TABLE, with New Column DEL_RECORD as Flag.
                //Faulty Records will have DEL_RECORD as 'TRUE'
                strERRQuery.Clear();
                strERRQuery.Append(" SELECT KAIKEI.*, CASE   ");
                strERRQuery.Append(" WHEN LEN(TENPO.店舗コード) !=5 THEN  ");
                strERRQuery.Append(" CASE  WHEN TENPO.店舗コード IS NULL  ");
                strERRQuery.Append(" THEN 'TRUE' ELSE 'FALSE' END ELSE 'FALSE' ");
                strERRQuery.Append(" END AS DEL_RECORD FROM D_KAIKEI_DENPYOU_MEISAI_TEMP AS KAIKEI  ");
                strERRQuery.Append(" LEFT JOIN M_TENPO_MASTER AS TENPO  ");
                strERRQuery.Append(" ON KAIKEI.店舗コード = TENPO.店舗コード; ");
                dtFaultyTemp.Reset();
                dtFaultyTemp = _getDataTable(strERRQuery.ToString(), myConnection);
                if (dtFaultyTemp.Rows.Count > 0)
                {
                    _replaceData(dtFaultyTemp, myConnection, "店舗コードはマスタに存在されていません。");   //Replace & Remove Data in Actual Db Table
                }
                #endregion

                #region "伝票日付 Should not be bigger than Y-Day"
                //Get All The Records of Temp TABLE, with New Column DEL_RECORD as Flag.
                //Faulty Records will have DEL_RECORD as 'TRUE'
                strERRQuery.Clear();
                strERRQuery.Append(" SELECT *,CASE WHEN 勘定コード!='701' ");
                strERRQuery.Append(" THEN CASE WHEN CONVERT(DATE,会計伝票日付) > CONVERT(DATE,DATEADD(DAY,-1,GETDATE())) ");
                strERRQuery.Append(" THEN 'TRUE' ELSE 'FALSE' END ELSE 'FALSE' ");
                strERRQuery.Append(" END AS DEL_RECORD FROM D_KAIKEI_DENPYOU_MEISAI_TEMP ");
                dtFaultyTemp.Reset();
                dtFaultyTemp = _getDataTable(strERRQuery.ToString(), myConnection);
                if (dtFaultyTemp.Rows.Count > 0)
                {
                    _replaceData(dtFaultyTemp, myConnection, "データに将来の会計伝票日が存在されています。");   //Replace & Remove Data in Actual Db Table
                }
                #endregion
                Dts.TaskResult = (int)ScriptResults.Success;
            }
            #region Catch/Finally
            catch (Exception ex)
            {
                strERRQuery.Clear();
                strERRQuery.Append("INSERT INTO KANSHI_PACKAGE_ERROR ");
                strERRQuery.Append(" (パッケージコード,データ日付,エラー日時,エラー内容,エラーフラグ) ");
                strERRQuery.Append(" VALUES('G" + Dts.Variables["User::packageCode"].Value.ToString() + "','" + Dts.Variables["User::currentDate"].Value.ToString() + "','" + Dts.Variables["User::sysDate"].Value.ToString() + "','システムエラー:" + ex.Message.ToString().Replace("'", "-") + "','3');");
                _updateInsert(strERRQuery.ToString(), myConnection);
                Dts.TaskResult = (int)ScriptResults.Success;
            }
            finally 
            {
                _connectionClose(myConnection);
                dtFaultyTemp = null;
                strERRQuery = null;
                myConnection = null;
            }
            #endregion
		}
        #endregion

        #region "replace Data"
        //Data Replacement in Actual DB After Test
        private void _replaceData(DataTable dtFaultyTemp, SqlConnection myConnection, string strErrorMsg)
        {
            StringBuilder strERRQuery = new StringBuilder();
            StringBuilder strBuildRow = new StringBuilder();
            DataRow drTemp;
            string strPackageCode = string.Empty;
            int intErrorCount = 0;  //To Count Errors in the DataTable, to avoid its extra TRUNCATION and BULK.
            try
            {
                _connectionOpen(myConnection);
                strPackageCode = Dts.Variables["User::packageCode"].Value.ToString();
                intErrorCount = 0;
                int countRows = dtFaultyTemp.Rows.Count;
                for (int intI = 0; intI < countRows; intI++)
                {
                    #region Report Faulty Records
                    if (dtFaultyTemp.Rows[intI]["DEL_RECORD"].ToString().ToUpper() == "TRUE")
                    {
                        intErrorCount = intErrorCount + 1;
                        //'TRUE' means Faulty SKU Record
                        drTemp = dtFaultyTemp.Rows[intI];
                        strBuildRow.Clear();
                        for (int intJ = 0; intJ < drTemp.Table.Columns.Count-1; intJ++)
                        {
                            strBuildRow.AppendFormat("{0} ", drTemp.ItemArray[intJ]);
                        }
                        strERRQuery.Clear();
                        strERRQuery.Append("INSERT INTO KANSHI_PACKAGE_ERROR ");
                        strERRQuery.Append(" (パッケージコード,データ日付,エラー日時,エラー内容,エラーフラグ) ");
                        strERRQuery.Append(" VALUES('G" + strPackageCode + "','" + Dts.Variables["User::currentDate"].Value.ToString() + "','" + Dts.Variables["User::sysDate"].Value.ToString() + "','" + strBuildRow.ToString() + "。" + strErrorMsg + "','3');");
                        _updateInsert(strERRQuery.ToString(), myConnection);
                        countRows = countRows - 1;
                        intI = intI - 1;
                        dtFaultyTemp.Rows.Remove(drTemp);   //Remove Faulty Records from DataTable Object.
                        dtFaultyTemp.AcceptChanges();    //Commit DataTable Changes.
                    }
                    #endregion
                }
                dtFaultyTemp.Columns.Remove("DEL_RECORD");
                if (intErrorCount > 0)
                {
                    #region "TRUNCATE TEMP Table"
                    //TRUNCATE TEMP Table, to be import New Correct Records
                    strERRQuery.Clear();
                    strERRQuery.Append(" TRUNCATE TABLE " + Dts.Variables["User::checkType"].Value.ToString() + "_TEMP");
                    _updateInsert(strERRQuery.ToString(), myConnection);
                    #endregion
                    #region "Bulk Update Records"
                    //正しいデータテーブルからインポートするためいに。
                    using (SqlBulkCopy bulkCopy = new SqlBulkCopy(myConnection))
                    {
                        bulkCopy.DestinationTableName = Dts.Variables["User::checkType"].Value.ToString() + "_TEMP";   //Assign table name
                        _connectionOpen(myConnection);
                        bulkCopy.BulkCopyTimeout = 600; //Default Timeut 30 Change to 600. in seconds
                        bulkCopy.WriteToServer(dtFaultyTemp);   //Write into Actual table.
                    }
                    #endregion
                }
            }
            #region Catch/Finally
            catch (Exception ex) 
            {
                throw ex;
            }
            finally
            {
                strERRQuery = null;
                dtFaultyTemp = null;
                strBuildRow = null;
                drTemp = null;
                strErrorMsg = null;
                strPackageCode = null;
            }
            #endregion
        }
        #endregion

        #region "Get DataTable"
        //Created On: 08-08-2016
        //Description: Aim to Return DataTable from the Query.
        public DataTable _getDataTable(string strQuery, SqlConnection myConnection)
        {
            StringBuilder strERRQuery = new StringBuilder();
            DataTable objDT = new DataTable();
            SqlCommand myCommand;
            SqlDataAdapter sqlSelectData;
            try
            {
                _connectionOpen(myConnection);
                myCommand = new SqlCommand(strQuery, myConnection);
                myCommand.CommandType = CommandType.Text;
                sqlSelectData = new SqlDataAdapter();
                sqlSelectData.SelectCommand = myCommand;
                myCommand.CommandTimeout = 600; //Increases Query execution timeout.
                sqlSelectData.Fill(objDT);
            }
            #region CATCH/FINALLY
            catch (Exception ex)
            {
                throw ex;
            }
            finally
            {
                strQuery = null;
                myCommand = null;
                sqlSelectData = null;
                strERRQuery = null;
            }
            #endregion
            return objDT;
        }
        #endregion

        #region "Update/Insert Query in Db"
        protected void _updateInsert(string strQuery, SqlConnection myConnection)
        {
            StringBuilder strERRQuery = new StringBuilder();
            SqlCommand myCommand;
            try
            {
                myCommand = new SqlCommand(strQuery, myConnection);
                _connectionOpen(myConnection);
                myCommand.ExecuteNonQuery();
            }
            #region CATCH/FINALLY
            catch (Exception ex)
            {
                throw ex;
            }
            finally
            {
                strERRQuery = null;
                myConnection = null;
                myCommand = null;
            }
            #endregion
        }
        #endregion

        #region Connection Open
        private void _connectionOpen(SqlConnection myConnection)
        {
            try
            {
                if (myConnection.State != ConnectionState.Open)
                {
                    myConnection.Open();
                }
            }
            catch (Exception ex)
            {
                throw ex;
            }
        }
        #endregion

        #region Connection Close
        private void _connectionClose(SqlConnection myConnection)
        {
            try
            {
                if (myConnection.State != ConnectionState.Closed)
                {
                    myConnection.Close();
                }
            }
            catch (Exception ex)
            {
                throw ex;
            }
        }
        #endregion

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
          <ProjectItem
            Name="ST_2cdc2f78a3de42ee8a573a5d2a7e7563.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?><Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003"><PropertyGroup><ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids><Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration><Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform><ProductVersion>8.0.30703</ProductVersion><SchemaVersion>2.0</SchemaVersion><ProjectGuid>{6f1cd3ad-124c-410c-a3da-0ed5e3468b82}</ProjectGuid><OutputType>Library</OutputType><AppDesignerFolder>Properties</AppDesignerFolder><RootNamespace>ST_ce3ffc09050545a588750b50f21c1788</RootNamespace><AssemblyName>ST_2cdc2f78a3de42ee8a573a5d2a7e7563</AssemblyName><TargetFrameworkVersion>v4.0</TargetFrameworkVersion><FileAlignment>512</FileAlignment><ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Debug' "><DebugSymbols>true</DebugSymbols><DebugType>full</DebugType><Optimize>false</Optimize><OutputPath>.\bin\Debug\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>DEBUG;TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Release' "><DebugSymbols>false</DebugSymbols><Optimize>true</Optimize><OutputPath>.\bin\Release\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><ItemGroup><Reference Include="System" /><Reference Include="System.Data" /><Reference Include="System.Windows.Forms" /><Reference Include="System.Xml" /><Reference Include="Microsoft.SqlServer.ManagedDTS, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.ScriptTask, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /></ItemGroup><ItemGroup><AppDesigner Include="Properties\" /><Compile Include="Properties\AssemblyInfo.cs"><SubType>Code</SubType></Compile><EmbeddedResource Include="Properties\Resources.resx"><Generator>ResXFileCodeGenerator</Generator><LastGenOutput>Resources.Designer.cs</LastGenOutput></EmbeddedResource><Compile Include="Properties\Resources.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Resources.resx</DependentUpon></Compile><None Include="Properties\Settings.settings"><Generator>SettingsSingleFileGenerator</Generator><LastGenOutput>Settings.Designer.cs</LastGenOutput></None><Compile Include="Properties\Settings.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Settings.settings</DependentUpon></Compile><Compile Include="ScriptMain.cs"><SubType>Code</SubType></Compile></ItemGroup><!-- Include the build rules for a C# project.--><Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" /><ProjectExtensions><VisualStudio><FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}"><ProjectProperties HostName="ScriptTask" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="#HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\VisualStudio\10.0\InstallDir#\devenv.exe" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" /><Host Name="ScriptTask" GeneratedNamespace="$safeprojectname" IconIndex=""></Host><ProjectClient><HostIdentifier>SSIS_ST120</HostIdentifier></ProjectClient></FlavorProperties></VisualStudio></ProjectExtensions></Project>]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>ST_ce3ffc09050545a588750b50f21c1788</msb:CodeName>
		<msb:DisplayName>ST_ce3ffc09050545a588750b50f21c1788</msb:DisplayName>
		<msb:ProjectId>{EE24C7D7-5D12-4340-B8D9-E41721313B68}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_2cdc2f78a3de42ee8a573a5d2a7e7563.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_ce3ffc09050545a588750b50f21c1788")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_ce3ffc09050545a588750b50f21c1788")]
[assembly: AssemblyCopyright("Copyright @  2016")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_ce3ffc09050545a588750b50f21c1788.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_ce3ffc09050545a588750b50f21c1788.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_ce3ffc09050545a588750b50f21c1788.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_ce3ffc09050545a588750b50f21c1788.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_ce3ffc09050545a588750b50f21c1788.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_2cdc2f78a3de42ee8a573a5d2a7e7563.dll">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
AAAKCgIEKAwAAAYDBHM6AAAKCwcXbzsAAApzPAAACgwIB289AAAKByBYAgAAbz4AAAoIBm8/AAAK
Jt4DDQl63ggUEAEUCxQM3AYqAAEcAAAAAAwAOEQAAyQAAAECAAwAPUkACAAAAAAbMAIAKgAAAAUA
ABFzHAAACiYDBHM6AAAKCgIEKAwAAAYGb0AAAAom3gMLB3reBhQQAhQK3CoAAAEcAAAAAAYAGB4A
AyQAAAECAAYAHSMABgAAAAAbMAIAFQAAAAYAABEDb0EAAAoXLgYDb0IAAAreAwoGeioAAAABEAAA
AAAAABERAAMkAAABGzABABQAAAAGAAARA29BAAAKLAYDb0MAAAreAwoGeioBEAAAAAAAABAQAAMk
AAABHgIoRAAACiq0AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFk
ZXIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5
VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNl
dAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAAQlNKQgEAAQAAAAAADAAAAHY0LjAuMzAzMTkAAAAABQBs
AAAAtAUAACN+AAAgBgAAxAgAACNTdHJpbmdzAAAAAOQOAACUDwAAI1VTAHgeAAAQAAAAI0dVSUQA
AACIHgAARAIAACNCbG9iAAAAAAAAAAIAAAFXHaIBCQMAAAD6JTMAFgAAAQAAAC8AAAAFAAAABgAA
AA4AAAAKAAAARAAAAAIAAAAPAAAABgAAAAIAAAADAAAABAAAAAEAAAAFAAAAAQAAAAEAAAAAAAoA
AQAAAAAABgDBALoACgDdAMgADgA9ARQBBgBZAboABgBvAV4BBgCgAYsBEgArAh8CEgBLAjUCBgAK
A/ACBgA1AyMDBgBMAyMDBgBpAyMDBgCIAyMDBgChAyMDBgC6AyMDBgDVAyMDBgDwAyMDBgAJBCMD
BgBCBCIEBgBiBCIEBgC3BKQEBgDUBLoABgDZBLoABgD9BCMDCgApBRMFCgBCBRMFBgBXBSIEDgB5
BRQBDgCbBRQBFgD0BdQFFgAMBtQFBgA9BjEGEgBeBh8CEgB5Bh8CBgCtBroABgC0BroAEgDfBh8C
EgAgBx8CEgBWBzUCBgCdB7oAEgCxBzUCEgDPB7wHEgDZBx8CEgD1BzUCEgApCLwHEgBMCLwHEgBZ
CB8CAAAAAAEAAAAAAAEAAQAAABAAMgA8AAUAAQABAAABEABrADwACQADAAUAAQAQAHQAfwANAAQA
CAADAQAAowAAABEABAAPABEAfwETABEArAEXABEA9gE5AAYGowJlAFaAqwJoAFaAswJoAFAgAAAA
AIMYvAEbAAEAWCAAAAAAkwjCAR8AAQCRIAAAAACTCNYBJAABAJggAAAAAJMI4gEpAAEAoCAAAAAA
lggGAj0AAgCzIAAAAACGGLwBGwACAKcgAAAAAJEYcgWnAAIAvCAAAAAAhgAaAhsAAgCQJQAAAACB
AFkCRwACAJwoAAAAAIYAZgJQAAUAGCkAAAAAhAB0AlgABwBsKQAAAACBAIICXwAJAKApAAAAAIEA
kgJfAAoA0CkAAAAAhhi8ARsACwAAAAEAuwIAAAEAwQIAAAIAzgIAAAMA2wIAAAEA5wIAAAIAzgIA
AAEA5wIAAAIAzgIAAAEAzgIAAAEAzgJJALwBdgBRALwBdgBZALwBdgBhALwBdgBpALwBdgBxALwB
dgB5ALwBdgCBALwBdgCJALwBdgCRALwBdgCZALwBewChALwBGwCpALwBGwAJALwBGwCxAOsEgACx
AAYFhwApALwBjADJALwBmADZALwBGwARALwBGwDhALwBGwAZAK0FqwDpAP4FsADxABUGtQD5AB4G
uwAJACgGvwBBALwBdgABAbwBGwA5ALwBGwABAUsGwwABAVEGyQA5AFgGGwA5AHAG0AARAZQG1gDp
AJ4GewAhAb4GvwAZAcoG2gAZAdIG4AAZAdkG9gAJARUG+QApARUGAAEZAecGvwAZAe8GBQEpAfsG
CwEBAQkHEAEpARYHGAE5ADUHHQEJAUEHIwE5AEgHGwAxAUEHdgAZAdIGKgE5AbwBXwAZAdIGMQE5
AWIHdgA5AXsHewA5AY8HNwFBAakHGwBJAbwBWABRAeUHVgFhAbwBGwBhAQQIXQFRARYIewBpATcI
ZAFRATwI1gBxAWkIgQFxAXMIGwBxAXgIGwAZALwBGwAIABQAbAAIABgAcQApAJMAngAuABsA/gEu
ACMA/gEuAGMAJAIuAAsAjQEuABMA1QEuADMA1QEuACsA/gEuADsABAIuAEMA/gEuAFsAGwJDAGsA
cQBJAJMAngBhAJsAcQCDAKsAcQCTAOYAPQFqAXgBhwECAAEAAwADAAAAbwEvAAAA7gE0AAAAEgJC
AAIAAgADAAIAAwAFAAEABAAFAAIABQAHAASAAAABAAAACBlscQAAAAAAAIAEAAAEAAAAAAAAAAAA
AAABALEAAAAAAAQAAAAAAAAAAAAAAAEAugAAAAAADAAAAAAAAAAAAAAACgD1AAAAAAAEAAAAAAAA
AAAAAAABAB8CAAAAAAwAAAAAAAAAAAAAAAoAtQUAAAAAAAAAAAEAAAB+CAAABQAEAAAAAAAAPE1v
ZHVsZT4AU1RfMmNkYzJmNzhhM2RlNDJlZThhNTczYTVkMmE3ZTc1NjMuZGxsAFJlc291cmNlcwBT
VF9jZTNmZmMwOTA1MDU0NWE1ODg3NTBiNTBmMjFjMTc4OC5Qcm9wZXJ0aWVzAFNldHRpbmdzAFNj
cmlwdE1haW4AU1RfY2UzZmZjMDkwNTA1NDVhNTg4NzUwYjUwZjIxYzE3ODgAU2NyaXB0UmVzdWx0
cwBtc2NvcmxpYgBTeXN0ZW0AT2JqZWN0AFN5c3RlbS5Db25maWd1cmF0aW9uAEFwcGxpY2F0aW9u
U2V0dGluZ3NCYXNlAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuU2NyaXB0VGFzawBNaWNyb3NvZnQuU3Fs
U2VydmVyLkR0cy5UYXNrcy5TY3JpcHRUYXNrAFZTVEFSVFNjcmlwdE9iamVjdE1vZGVsQmFzZQBF
bnVtAFN5c3RlbS5SZXNvdXJjZXMAUmVzb3VyY2VNYW5hZ2VyAHJlc291cmNlTWFuAFN5c3RlbS5H
bG9iYWxpemF0aW9uAEN1bHR1cmVJbmZvAHJlc291cmNlQ3VsdHVyZQAuY3RvcgBnZXRfUmVzb3Vy
Y2VNYW5hZ2VyAGdldF9DdWx0dXJlAHNldF9DdWx0dXJlAEN1bHR1cmUAZGVmYXVsdEluc3RhbmNl
AGdldF9EZWZhdWx0AERlZmF1bHQATWFpbgBTeXN0ZW0uRGF0YQBEYXRhVGFibGUAU3lzdGVtLkRh
dGEuU3FsQ2xpZW50AFNxbENvbm5lY3Rpb24AX3JlcGxhY2VEYXRhAF9nZXREYXRhVGFibGUAX3Vw
ZGF0ZUluc2VydABfY29ubmVjdGlvbk9wZW4AX2Nvbm5lY3Rpb25DbG9zZQB2YWx1ZV9fAFN1Y2Nl
c3MARmFpbHVyZQB2YWx1ZQBkdEZhdWx0eVRlbXAAbXlDb25uZWN0aW9uAHN0ckVycm9yTXNnAHN0
clF1ZXJ5AFN5c3RlbS5SdW50aW1lLlZlcnNpb25pbmcAVGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRl
AFN5c3RlbS5SZWZsZWN0aW9uAEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlw
dGlvbkF0dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlDb21w
YW55QXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0
dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFya0F0dHJpYnV0ZQBBc3NlbWJseUN1bHR1cmVBdHRyaWJ1
dGUAQXNzZW1ibHlWZXJzaW9uQXR0cmlidXRlAFN5c3RlbS5SdW50aW1lLkNvbXBpbGVyU2Vydmlj
ZXMAQ29tcGlsYXRpb25SZWxheGF0aW9uc0F0dHJpYnV0ZQBSdW50aW1lQ29tcGF0aWJpbGl0eUF0
dHJpYnV0ZQBTVF8yY2RjMmY3OGEzZGU0MmVlOGE1NzNhNWQyYTdlNzU2MwBTeXN0ZW0uRGlhZ25v
c3RpY3MARGVidWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBUeXBlAFJ1bnRpbWVUeXBlSGFuZGxl
AEdldFR5cGVGcm9tSGFuZGxlAEFzc2VtYmx5AGdldF9Bc3NlbWJseQBTeXN0ZW0uQ29tcG9uZW50
TW9kZWwARWRpdG9yQnJvd3NhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZVN0YXRlAENvbXBp
bGVyR2VuZXJhdGVkQXR0cmlidXRlAC5jY3RvcgBTU0lTU2NyaXB0VGFza0VudHJ5UG9pbnRBdHRy
aWJ1dGUAU2NyaXB0T2JqZWN0TW9kZWwAZ2V0X0R0cwBNaWNyb3NvZnQuU3FsU2VydmVyLk1hbmFn
ZWREVFMATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUnVudGltZQBWYXJpYWJsZXMAZ2V0X1Zhcmlh
YmxlcwBWYXJpYWJsZQBnZXRfSXRlbQBnZXRfVmFsdWUAVG9TdHJpbmcAU3lzdGVtLlRleHQAU3Ry
aW5nQnVpbGRlcgBDbGVhcgBBcHBlbmQAUmVzZXQARGF0YVJvd0NvbGxlY3Rpb24AZ2V0X1Jvd3MA
SW50ZXJuYWxEYXRhQ29sbGVjdGlvbkJhc2UAZ2V0X0NvdW50AHNldF9UYXNrUmVzdWx0AFN0cmlu
ZwBFeGNlcHRpb24AZ2V0X01lc3NhZ2UAUmVwbGFjZQBDb25jYXQARW1wdHkARGF0YVJvdwBUb1Vw
cGVyAG9wX0VxdWFsaXR5AGdldF9JdGVtQXJyYXkAQXBwZW5kRm9ybWF0AGdldF9UYWJsZQBEYXRh
Q29sdW1uQ29sbGVjdGlvbgBnZXRfQ29sdW1ucwBSZW1vdmUAQWNjZXB0Q2hhbmdlcwBTcWxCdWxr
Q29weQBzZXRfRGVzdGluYXRpb25UYWJsZU5hbWUAc2V0X0J1bGtDb3B5VGltZW91dABXcml0ZVRv
U2VydmVyAElEaXNwb3NhYmxlAERpc3Bvc2UAU3FsQ29tbWFuZABTeXN0ZW0uRGF0YS5Db21tb24A
RGJDb21tYW5kAENvbW1hbmRUeXBlAHNldF9Db21tYW5kVHlwZQBTcWxEYXRhQWRhcHRlcgBzZXRf
U2VsZWN0Q29tbWFuZABzZXRfQ29tbWFuZFRpbWVvdXQARGJEYXRhQWRhcHRlcgBGaWxsAEV4ZWN1
dGVOb25RdWVyeQBEYkNvbm5lY3Rpb24AQ29ubmVjdGlvblN0YXRlAGdldF9TdGF0ZQBPcGVuAENs
b3NlAFNUX2NlM2ZmYzA5MDUwNTQ1YTU4ODc1MGI1MGYyMWMxNzg4LlByb3BlcnRpZXMuUmVzb3Vy
Y2VzLnJlc291cmNlcwAAAAAAcVMAVABfAGMAZQAzAGYAZgBjADAAOQAwADUAMAA1ADQANQBhADUA
OAA4ADcANQAwAGIANQAwAGYAMgAxAGMAMQA3ADgAOAAuAFAAcgBvAHAAZQByAHQAaQBlAHMALgBS
AGUAcwBvAHUAcgBjAGUAcwAALVUAcwBlAHIAOgA6AGMAbwBuAG4AZQBjAHQAaQBvAG4AUwB0AHIA
aQBuAGcAACUgAFMARQBMAEUAQwBUACAASwBBAEkASwBFAEkALgAqACwAIAAAbyAAQwBBAFMARQAg
AFcASABFAE4AIABTAFUAQgBTAFQAUgBJAE4ARwAoAEsAQQBJAEsARQBJAC4AGk8Iih1PaHlqdfdT
LAAxACwAMQApACAAIQA9ACAASwBBAE4ASgBPAC4AHU9oeS2YAE5BaCAAATEgAE8AUgAgAEsAQQBO
AEoATwAuAB1PaHktmABOQWggAEkAUwAgAE4AVQBMAEwAIAABNSAAVABIAEUATgAgACcAVABSAFUA
RQAnACAARQBMAFMARQAgACcARgBBAEwAUwBFACcAIAABJyAARQBOAEQAIABBAFMAIABEAEUATABf
AFIARQBDAE8AUgBEACAAAFsgAEYAUgBPAE0AIABEAF8ASwBBAEkASwBFAEkAXwBEAEUATgBQAFkA
TwBVAF8ATQBFAEkAUwBBAEkAXwBUAEUATQBQACAAQQBTACAASwBBAEkASwBFAEkAIAAARSAATABF
AEYAVAAgAEoATwBJAE4AIABNAF8ASwBBAE4ASgBPAFUAXwBDAE8ARABFACAAQQBTACAASwBBAE4A
SgBPACAAAEEgAE8ATgAgAEsAQQBJAEsARQBJAC4A2FKaW7Mw/DDJMCAAPQAgAEsAQQBOAEoATwAu
ANhSmluzMPwwyTA7ACAAASEaTwiKHU9oeW4wSFEtmEFokjCTlVWQSDB+MFcwXzACMAEhIABTAEUA
TABFAEMAVAAgAFQARQBNAFAALgAqACwAIAAASyAAQwBBAFMARQAgAFcASABFAE4AIABUAEUATQBQ
AC4AGk8Iih1PaHlqdfdTIAA9ACAATQBBAEkATgAuABpPCIodT2h5anX3UyAAAUcgAEEATgBEACAA
VABFAE0AUAAuABpPCIodT2h5DmYwfWp191MgAD0AIABNAEEASQBOAC4AGk8Iih1PaHkOZjB9anX3
UyAAAVcgAEYAUgBPAE0AIABEAF8ASwBBAEkASwBFAEkAXwBEAEUATgBQAFkATwBVAF8ATQBFAEkA
UwBBAEkAXwBUAEUATQBQACAAQQBTACAAVABFAE0AUAAgAABXIABMAEUARgBUACAASgBPAEkATgAg
AEQAXwBLAEEASQBLAEUASQBfAEQARQBOAFAAWQBPAFUAXwBNAEUASQBTAEEASQAgAEEAUwAgAE0A
QQBJAE4AIAAAPSAATwBOACAAVABFAE0AUAAuABpPCIodT2h5anX3UyAAPQAgAE0AQQBJAE4ALgAa
TwiKHU9oeWp191MgAAEzGk8Iih1PaHlqdfdT+zAaTwiKHU9oeQ5mMH1qdfdTTDDiZWsw1lO8jwhu
fzBnMFkwAjABSyAAUwBFAEwARQBDAFQAIAAqACwAQwBBAFMARQAgAFcASABFAE4AIADYUppbszD8
MMkwPQAnADcAMAAxACcAIABUAEgARQBOACAAAYEFIABDAEEAUwBFACAAVwBIAEUATgAgAEMAQQBT
AFQAKABDAE8ATgBWAEUAUgBUACgAVgBBAFIAQwBIAEEAUgAoADEAMAApACwAGk8Iih1PaHnlZdhO
LAAxADIAMQApACAAQQBTACAARABBAFQARQApACAAPAA9ACAAKABTAEUATABFAEMAVAAgAE0AQQBY
ACgACGemXkJ9hk7lZSkAIABGAFIATwBNACAATQBfAEQARQBOAFAAWQBPAFUAXwBTAEkATQBFAF8A
TQBBAFMAVABFAFIAIABXAEgARQBSAEUAIAAIZ6Ze4H3lZSAASQBTACAATgBPAFQAIABOAFUATABM
ACkAIAABPSAAVABIAEUATgAgACcAVABSAFUARQAnACAARQBMAFMARQAgACcARgBBAEwAUwBFACcA
IABFAE4ARAAgAAGBHSAARQBMAFMARQAgAEMAQQBTAEUAIABXAEgARQBOACAAQwBBAFMAVAAoAEMA
TwBOAFYARQBSAFQAKABWAEEAUgBDAEgAQQBSACgAMQAwACkALAAaTwiKHU9oeeVl2E4sADEAMgAx
ACkAIABBAFMAIABEAEEAVABFACkAIAA8AD0AIAAoAFMARQBMAEUAQwBUACAATQBBAFgAKADtMKQw
5DDqMMYwozDgfeVlKQAgAEYAUgBPAE0AIABNAF8ARABFAE4AUABZAE8AVQBfAFMASQBNAEUAXwBN
AEEAUwBUAEUAUgAgAFcASABFAFIARQAgAO0wpDDkMOowxjCjMOB95WUgAEkAUwAgAE4ATwBUACAA
TgBVAEwATAApACAAAWEgAFQASABFAE4AIAAnAFQAUgBVAEUAJwAgAEUATABTAEUAIAAnAEYAQQBM
AFMARQAnACAARQBOAEQAIABFAE4ARAAgAEEAUwAgAEQARQBMAF8AUgBFAEMATwBSAEQAIAABSSAA
RgBSAE8ATQAgAEQAXwBLAEEASQBLAEUASQBfAEQARQBOAFAAWQBPAFUAXwBNAEUASQBTAEEASQBf
AFQARQBNAFAAOwAgAAAxCGemXuB9gTB+MFcwXzACMOB9gTDlZU1SbjAaTwiKHU9oeeVlTDBCMIow
fjBZMAIwAS8gAFMARQBMAEUAQwBUACAASwBBAEkASwBFAEkALgAqACwAIABDAEEAUwBFACAAAEEg
AFcASABFAE4AIABLAEEASQBLAEUASQAuABpPCIodT2h55WXYTiAAPAAgAFQAQQBOAEEALgDaaHhT
5WXYTiAAAYD/IABMAEUARgBUACAASgBPAEkATgAgACgAUwBFAEwARQBDAFQAIABEAEkAUwBUAEkA
TgBDAFQAIACXXheCszD8MMkwLABNAEEAWAAoANpoeFPlZdhOKQAgAEEAUwAgANpoeFPlZdhOIABG
AFIATwBNACAATQBfAFQAQQBOAEEATwBSAE8AUwBIAEkAXwBNAEEAUwBUAEUAUgAgAFcASABFAFIA
RQAgANpoeFO6eJpb5WUgACEAPQAgACcAMQA5ADAAMAAtADAAMQAtADAAMQAnACAARwBSAE8AVQBQ
ACAAQgBZACAAl14XgrMw/DDJMCkAIABUAEEATgBBACAAIAABPSAATwBOACAASwBBAEkASwBFAEkA
LgCXXheCszD8MMkwIAA9ACAAVABBAE4AQQAuAJdeF4KzMPwwyTAgAAEl2mh4U7p4mlvlZU1SbjAa
TwiKHU9oeeVlTDBCMIowfjBZMAIwATMgAFMARQBMAEUAQwBUACAASwBBAEkASwBFAEkALgAqACwA
IABDAEEAUwBFACAAIAAgAABDIABXAEgARQBOACAATABFAE4AKABUAEUATgBQAE8ALgCXXheCszD8
MMkwKQAgACEAPQA1ACAAVABIAEUATgAgACAAAUMgAEMAQQBTAEUAIAAgAFcASABFAE4AIABUAEUA
TgBQAE8ALgCXXheCszD8MMkwIABJAFMAIABOAFUATABMACAAIAABVyAAVABIAEUATgAgACcAVABS
AFUARQAnACAARQBMAFMARQAgACcARgBBAEwAUwBFACcAIABFAE4ARAAgAEUATABTAEUAIAAnAEYA
QQBMAFMARQAnACAAAYCBIABFAE4ARAAgAEEAUwAgAEQARQBMAF8AUgBFAEMATwBSAEQAIABGAFIA
TwBNACAARABfAEsAQQBJAEsARQBJAF8ARABFAE4AUABZAE8AVQBfAE0ARQBJAFMAQQBJAF8AVABF
AE0AUAAgAEEAUwAgAEsAQQBJAEsARQBJACAAIAAASSAATABFAEYAVAAgAEoATwBJAE4AIABNAF8A
VABFAE4AUABPAF8ATQBBAFMAVABFAFIAIABBAFMAIABUAEUATgBQAE8AIAAgAABBIABPAE4AIABL
AEEASQBLAEUASQAuAJdeF4KzMPwwyTAgAD0AIABUAEUATgBQAE8ALgCXXheCszD8MMkwOwAgAAEp
l14XgrMw/DDJMG8w3jC5ML8wazBYWyhXVTCMMGYwRDB+MFswkzACMAFDIABTAEUATABFAEMAVAAg
ACoALABDAEEAUwBFACAAVwBIAEUATgAgANhSmluzMPwwyTAhAD0AJwA3ADAAMQAnACAAAYCfIABU
AEgARQBOACAAQwBBAFMARQAgAFcASABFAE4AIABDAE8ATgBWAEUAUgBUACgARABBAFQARQAsABpP
CIodT2h55WXYTikAIAA+ACAAQwBPAE4AVgBFAFIAVAAoAEQAQQBUAEUALABEAEEAVABFAEEARABE
ACgARABBAFkALAAtADEALABHAEUAVABEAEEAVABFACgAKQApACkAIAABayAARQBOAEQAIABBAFMA
IABEAEUATABfAFIARQBDAE8AUgBEACAARgBSAE8ATQAgAEQAXwBLAEEASQBLAEUASQBfAEQARQBO
AFAAWQBPAFUAXwBNAEUASQBTAEEASQBfAFQARQBNAFAAIAAALccw/DC/MGswBlxlZ24wGk8Iih1P
aHnlZUwwWFsoV1UwjDBmMEQwfjBZMAIwAUNJAE4AUwBFAFIAVAAgAEkATgBUAE8AIABLAEEATgBT
AEgASQBfAFAAQQBDAEsAQQBHAEUAXwBFAFIAUgBPAFIAIAAASyAAKADRMMMwsTD8MLgwszD8MMkw
LADHMPwwvzDlZdhOLACoMOkw/DDlZUJmLACoMOkw/DCFUblbLACoMOkw/DDVMOkwsDApACAAARUg
AFYAQQBMAFUARQBTACgAJwBHAAEjVQBzAGUAcgA6ADoAcABhAGMAawBhAGcAZQBDAG8AZABlAAAH
JwAsACcAASNVAHMAZQByADoAOgBjAHUAcgByAGUAbgB0AEQAYQB0AGUAABtVAHMAZQByADoAOgBz
AHkAcwBEAGEAdABlAAAXJwAsACcAtzC5MMYw4DCoMOkw/DA6AAEDJwABAy0AAQ8nACwAJwAzACcA
KQA7AAEVRABFAEwAXwBSAEUAQwBPAFIARAAACVQAUgBVAEUAAAl7ADAAfQAgAAADAjABISAAVABS
AFUATgBDAEEAVABFACAAVABBAEIATABFACAAAB9VAHMAZQByADoAOgBjAGgAZQBjAGsAVAB5AHAA
ZQAAC18AVABFAE0AUAAAgsMb4R98EUGVo/29u71L8gAIt3pcVhk04IkIiYRdzYCAzJEDBhIVAwYS
GQMgAAEEAAASFQQAABIZBQABARIZBAgAEhUECAASGQMGEgwEAAASDAQIABIMCCADARIdEiEOByAC
Eh0OEiEGIAIBDhIhBSABARIhAgYIAwYRFAQAAAAABAEAAAAEIAEBDgQgAQEIBgABElkRXQQgABJh
BiACAQ4SYQQHARIVBSABARFpCAEAAgAAAAAAAwAAAQQgABJ1BCAAEnkFIAESfRwDIAAcAyAADgUg
ABKAgQYgARKAgQ4FIAASgIUDIAAIBSACDg4OBQABDh0ODwcGDhIhEoCBEh0SgJEdDgIGDgYgARKA
lQgEIAEcDgUAAgIODgQgAB0cByACEoCBDhwEIAASHQUgABKAmQYgAQESgJUGAAMODg4OBQACDg4O
BSABARIdGAcLEoCBEoCBEoCVDggICAgSgJ0SgJEdDgYgAQERgK0GIAEBEoClBSABCBIdDQcEEh0S
gKUSgLESgJEIBwISgKUSgJEFIAARgL0FBwESgJFHAQAaLk5FVEZyYW1ld29yayxWZXJzaW9uPXY0
LjABAFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1lEC5ORVQgRnJhbWV3b3JrIDQoAQAjU1RfY2UzZmZj
MDkwNTA1NDVhNTg4NzUwYjUwZjIxYzE3ODgAAAUBAAAAABYBABFDb3B5cmlnaHQgQCAgMjAxNgAA
CAEACAAAAAAAHgEAAQBUAhZXcmFwTm9uRXhjZXB0aW9uVGhyb3dzAQCESwAAAAAAAAAAAACeSwAA
ACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAkEsAAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVl
LmRsbAAAAAAA/yUAIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAQAAAAGAAA
gAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAAAFhgAACwAwAA
AAAAAAAAAACwAzQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAAvQTv/gAAAQAA
AAEAbHEIGQAAAQBscQgZPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAABAFYAYQByAEYA
aQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAAAAAAALAEEAMA
AAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAA7AIAAAEAMAAwADAAMAAwADQAYgAwAAAA
cAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAAAFMAVABfAGMAZQAzAGYAZgBj
ADAAOQAwADUAMAA1ADQANQBhADUAOAA4ADcANQAwAGIANQAwAGYAMgAxAGMAMQA3ADgAOAAAAEAA
DwABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgA2ADQAMAA4AC4AMgA5ADAAMwA2
AAAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMAVABfADIAYwBkAGMAMgBmADcA
OABhADMAZABlADQAMgBlAGUAOABhADUANwAzAGEANQBkADIAYQA3AGUANwA1ADYAMwAuAGQAbABs
AAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBvAHAAeQByAGkAZwBoAHQA
IABAACAAIAAyADAAMQA2AAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBhAG0AZQAA
AFMAVABfADIAYwBkAGMAMgBmADcAOABhADMAZABlADQAMgBlAGUAOABhADUANwAzAGEANQBkADIA
YQA3AGUANwA1ADYAMwAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEAbQBlAAAAAABT
AFQAXwBjAGUAMwBmAGYAYwAwADkAMAA1ADAANQA0ADUAYQA1ADgAOAA3ADUAMABiADUAMABmADIA
MQBjADEANwA4ADgAAABEAA8AAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAxAC4AMAAu
ADYANAAwADgALgAyADkAMAAzADYAAAAAAEgADwABAEEAcwBzAGUAbQBiAGwAeQAgAFYAZQByAHMA
aQBvAG4AAAAxAC4AMAAuADYANAAwADgALgAyADkAMAAzADYAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAMAAAAsDsAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\倉庫間移動"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:Description="Script Task"
      DTS:DTSID="{08FCCE49-4273-45D1-B241-98AEB0C174EC}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="倉庫間移動"
      DTS:ThreadHint="7">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_a1a075574e634677a8918594ab9ac81f"
          VSTAMajorVersion="3"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadOnlyVariables="User::checkType,User::connectionString,User::currentDate,User::packageCode,User::sysDate">
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_ce3ffc09050545a588750b50f21c1788")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_ce3ffc09050545a588750b50f21c1788")]
[assembly: AssemblyCopyright("Copyright @  2016")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="ST_a1a075574e634677a8918594ab9ac81f.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?><Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003"><PropertyGroup><ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids><Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration><Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform><ProductVersion>8.0.30703</ProductVersion><SchemaVersion>2.0</SchemaVersion><ProjectGuid>{6f1cd3ad-124c-410c-a3da-0ed5e3468b82}</ProjectGuid><OutputType>Library</OutputType><AppDesignerFolder>Properties</AppDesignerFolder><RootNamespace>ST_ce3ffc09050545a588750b50f21c1788</RootNamespace><AssemblyName>ST_a1a075574e634677a8918594ab9ac81f</AssemblyName><TargetFrameworkVersion>v4.0</TargetFrameworkVersion><FileAlignment>512</FileAlignment><ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Debug' "><DebugSymbols>true</DebugSymbols><DebugType>full</DebugType><Optimize>false</Optimize><OutputPath>.\bin\Debug\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>DEBUG;TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Release' "><DebugSymbols>false</DebugSymbols><Optimize>true</Optimize><OutputPath>.\bin\Release\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><ItemGroup><Reference Include="System" /><Reference Include="System.Data" /><Reference Include="System.Windows.Forms" /><Reference Include="System.Xml" /><Reference Include="Microsoft.SqlServer.ManagedDTS, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.ScriptTask, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /></ItemGroup><ItemGroup><AppDesigner Include="Properties\" /><Compile Include="Properties\AssemblyInfo.cs"><SubType>Code</SubType></Compile><EmbeddedResource Include="Properties\Resources.resx"><Generator>ResXFileCodeGenerator</Generator><LastGenOutput>Resources.Designer.cs</LastGenOutput></EmbeddedResource><Compile Include="Properties\Resources.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Resources.resx</DependentUpon></Compile><None Include="Properties\Settings.settings"><Generator>SettingsSingleFileGenerator</Generator><LastGenOutput>Settings.Designer.cs</LastGenOutput></None><Compile Include="Properties\Settings.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Settings.settings</DependentUpon></Compile><Compile Include="ScriptMain.cs"><SubType>Code</SubType></Compile></ItemGroup><!-- Include the build rules for a C# project.--><Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" /><ProjectExtensions><VisualStudio><FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}"><ProjectProperties HostName="ScriptTask" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="#HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\VisualStudio\10.0\InstallDir#\devenv.exe" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" /><Host Name="ScriptTask" GeneratedNamespace="$safeprojectname" IconIndex=""></Host><ProjectClient><HostIdentifier>SSIS_ST120</HostIdentifier></ProjectClient></FlavorProperties></VisualStudio></ProjectExtensions></Project>]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[
#region Namespaces
using System;
using System.Data;
using System.Data.SqlClient;
using System.Text;
#endregion

namespace ST_ce3ffc09050545a588750b50f21c1788
{
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
    {
        #region "Main Method"
        /// <summary>
        /// 作成者：イルファン　マンスリー
        /// 説明：仕入実績の業務データチェックする。
        /// 作成日：２０１６年０８月０８日
        /// </summary>
        public void Main()
		{
            string strConnection = Dts.Variables["User::connectionString"].Value.ToString();
            SqlConnection myConnection = new SqlConnection(strConnection);
            StringBuilder strERRQuery = new StringBuilder();
            DataTable dtFaultyTemp;
            try
            { 
                dtFaultyTemp = new DataTable();
                _connectionOpen(myConnection);
                #region "Check for 伝票頭一桁 Check"
                //Get All The Records of Temp TABLE, with New Column DEL_RECORD as Flag.
                //Faulty Records will have DEL_RECORD as 'TRUE'
                strERRQuery.Clear();
                strERRQuery.Append(" SELECT SOKOKAN.*, ");
                strERRQuery.Append(" CASE WHEN SUBSTRING(SOKOKAN.倉庫間移動伝票番号,1,1) != KANJO.伝票頭一桁 ");
                strERRQuery.Append(" OR KANJO.伝票頭一桁 IS NULL ");
                strERRQuery.Append(" THEN 'TRUE' ELSE 'FALSE' ");
                strERRQuery.Append(" END AS DEL_RECORD ");
                strERRQuery.Append(" FROM T_DAY_SOUKOKAN_IDO_DATA_TEMP AS SOKOKAN ");
                strERRQuery.Append(" LEFT JOIN M_KANJOU_CODE AS KANJO");
                strERRQuery.Append(" ON SOKOKAN.勘定コード = KANJO.勘定コード;");
                dtFaultyTemp.Reset();
                dtFaultyTemp = _getDataTable(strERRQuery.ToString(), myConnection);
                if (dtFaultyTemp.Rows.Count > 0)
                {
                    _replaceData(dtFaultyTemp, myConnection, "倉庫間移動伝票の先頭桁を間違えました。");   //Replace & Remove Data in Actual Db Table
                }
                #endregion

                #region "Check for 倉庫間移動伝票番号,倉庫間移動伝票明細番号(PK) Check"
                strERRQuery.Clear();
                strERRQuery.Append(" SELECT TEMP.*, ");
                strERRQuery.Append(" CASE WHEN TEMP.倉庫間移動伝票番号 = MAIN.倉庫間移動伝票番号 ");
                strERRQuery.Append(" AND TEMP.倉庫間移動伝票明細番号 = MAIN.倉庫間移動伝票明細番号 ");
                strERRQuery.Append(" THEN 'TRUE' ELSE 'FALSE' ");
                strERRQuery.Append(" END AS DEL_RECORD ");
                strERRQuery.Append(" FROM T_DAY_SOUKOKAN_IDO_DATA_TEMP AS TEMP ");
                strERRQuery.Append(" LEFT JOIN T_DAY_SOUKOKAN_IDO_DATA AS MAIN ");
                strERRQuery.Append(" ON TEMP.倉庫間移動伝票番号 = MAIN.倉庫間移動伝票番号 ");
                strERRQuery.Append(" AND TEMP.倉庫間移動伝票明細番号 = MAIN.倉庫間移動伝票明細番号; ");
                dtFaultyTemp.Reset();
                dtFaultyTemp = _getDataTable(strERRQuery.ToString(), myConnection);
                if (dtFaultyTemp.Rows.Count > 0)
                {
                    _replaceData(dtFaultyTemp, myConnection, "倉庫間移動伝票番号・倉庫間移動伝票明細番号が既に取込済みです。");   //Replace & Remove Data in Actual Db Table
                }
                #endregion

                #region "Check for 締日 Check"
                //Get All The Records of Temp TABLE, with New Column DEL_RECORD as Flag.
                //Faulty Records will have DEL_RECORD as 'TRUE'
                strERRQuery.Clear();
                strERRQuery.Append(" SELECT *,CASE ");
                strERRQuery.Append(" WHEN CAST(CONVERT(VARCHAR(10),倉庫間移動日,121) AS DATE) <= (SELECT MAX(月度終了日) FROM M_DENPYOU_SIME_MASTER WHERE 月度締日 IS NOT NULL) ");
                strERRQuery.Append(" THEN 'TRUE' ELSE 'FALSE' ");
                strERRQuery.Append(" END AS DEL_RECORD ");
                strERRQuery.Append(" FROM T_DAY_SOUKOKAN_IDO_DATA_TEMP; ");
                dtFaultyTemp.Reset();
                dtFaultyTemp = _getDataTable(strERRQuery.ToString(), myConnection);
                if (dtFaultyTemp.Rows.Count > 0)
                {
                    _replaceData(dtFaultyTemp, myConnection, "月度締めました。締め日前の倉庫間移動実績日があります。");   //Replace & Remove Data in Actual Db Table
                }
                #endregion

                #region "Check for 棚卸確定日 Check"
                //Get All The Records of Temp TABLE, with New Column DEL_RECORD as Flag.
                //Faulty Records will have DEL_RECORD as 'TRUE'
                strERRQuery.Clear();
                strERRQuery.Append(" SELECT SOKOKAN.*,  CASE ");
                strERRQuery.Append(" WHEN SOKOKAN.倉庫間移動日 < TANA.棚卸日付  ");
                strERRQuery.Append(" THEN 'TRUE' ELSE 'FALSE' ");
                strERRQuery.Append(" END AS DEL_RECORD  ");
                strERRQuery.Append(" FROM T_DAY_SOUKOKAN_IDO_DATA_TEMP AS SOKOKAN ");
                strERRQuery.Append(" LEFT JOIN (SELECT DISTINCT 店舗コード,MAX(棚卸日付) AS 棚卸日付 FROM M_TANAOROSHI_MASTER WHERE 棚卸確定日 != '1900-01-01' GROUP BY 店舗コード) TANA  ");
                strERRQuery.Append(" ON SOKOKAN.出庫サイト = TANA.店舗コード ");
                dtFaultyTemp.Reset();
                dtFaultyTemp = _getDataTable(strERRQuery.ToString(), myConnection);
                if (dtFaultyTemp.Rows.Count > 0)
                {
                    _replaceData(dtFaultyTemp, myConnection, "棚卸確定日前の倉庫間移動実績日があります。");   //Replace & Remove Data in Actual Db Table
                }
                #endregion

                #region "Check for 仕入条件 & 買取受託 Check"
                //Get All The Records of Temp TABLE, with New Column DEL_RECORD as Flag.
                //Faulty Records will have DEL_RECORD as 'TRUE'
                strERRQuery.Clear();
                strERRQuery.Append(" SELECT SOKOKAN.*, ");
                strERRQuery.Append(" CASE WHEN JOKEN.仕入条件 != SOKOKAN.買取受託 ");
                strERRQuery.Append(" THEN 'TRUE' ELSE 'FALSE' ");
                strERRQuery.Append(" END AS DEL_RECORD ");
                strERRQuery.Append(" FROM T_DAY_SOUKOKAN_IDO_DATA_TEMP AS SOKOKAN ");
                strERRQuery.Append(" LEFT JOIN (SELECT MST.ＳＫＵコード AS ＳＫＵコード,JR.有効開始日,JR.有効終了日, JR.仕入条件 FROM M_SHIIRE_JOUKEN_RIREKI JR LEFT JOIN M_SHOUHIN_DATA MST ON JR.商品コード = MST.商品コード) AS JOKEN ");
                strERRQuery.Append(" ON JOKEN.ＳＫＵコード = SOKOKAN.ＳＫＵコード AND ");
                strERRQuery.Append(" SOKOKAN.倉庫間移動日 BETWEEN JOKEN.有効開始日 AND JOKEN.有効終了日; ");
                dtFaultyTemp.Reset();
                dtFaultyTemp = _getDataTable(strERRQuery.ToString(), myConnection);
                if (dtFaultyTemp.Rows.Count > 0)
                {
                    _replaceData(dtFaultyTemp, myConnection, "倉庫間日付と有効開始日の組み合わせを間違えました。");   //Replace & Remove Data in Actual Db Table
                }
                #endregion

                #region "Check for F.K（仕入先コード、ＳＫＵコード、店舗コード） Check"
                //Get All The Records of Temp TABLE, with New Column DEL_RECORD as Flag.
                //Faulty Records will have DEL_RECORD as 'TRUE'
                strERRQuery.Clear();
                strERRQuery.Append("SELECT SOKOKAN.*, CASE ");
                strERRQuery.Append("WHEN TENPO.店舗コード IS NULL OR ");
                strERRQuery.Append("NYUTENPO.店舗コード IS NULL OR ");
                strERRQuery.Append("SHOHIN.ＳＫＵコード IS NULL OR ");
                strERRQuery.Append("SIIRESAKI.仕入先コード IS NULL ");
                strERRQuery.Append("THEN 'TRUE' ELSE 'FALSE' ");
                strERRQuery.Append("END AS DEL_RECORD ");
                strERRQuery.Append("FROM T_DAY_SOUKOKAN_IDO_DATA_TEMP AS SOKOKAN ");
                strERRQuery.Append("LEFT JOIN M_TENPO_MASTER AS TENPO ");
                strERRQuery.Append("ON SOKOKAN.出庫サイト = TENPO.店舗コード ");
                strERRQuery.Append("LEFT JOIN M_TENPO_MASTER AS NYUTENPO ");
                strERRQuery.Append("ON SOKOKAN.入庫サイト = NYUTENPO.店舗コード ");
                strERRQuery.Append("LEFT JOIN M_SHOUHIN_DATA AS SHOHIN ");
                strERRQuery.Append("ON SOKOKAN.ＳＫＵコード = SHOHIN.ＳＫＵコード ");
                strERRQuery.Append("LEFT JOIN M_SIIRESAKI_MASTER AS SIIRESAKI ");
                strERRQuery.Append("ON SOKOKAN.仕入先コード = SIIRESAKI.仕入先コード; ");
                dtFaultyTemp.Reset();
                dtFaultyTemp = _getDataTable(strERRQuery.ToString(), myConnection);
                if (dtFaultyTemp.Rows.Count > 0)
                {
                    _replaceData(dtFaultyTemp, myConnection, "仕入先コード、ＳＫＵコードまたは店舗コードはマスタに存在されていません。");   //Replace & Remove Data in Actual Db Table
                }
                #endregion

                #region "発生日 Should be exact as Y-Day"
                //Get All The Records of Temp TABLE, with New Column DEL_RECORD as Flag.
                //Faulty Records will have DEL_RECORD as 'TRUE'
                strERRQuery.Clear();
                strERRQuery.Append(" SELECT *, CASE");
                strERRQuery.Append(" WHEN CONVERT(VARCHAR(8),発生日付,112) != CONVERT(VARCHAR(8),DATEADD(DAY,-1,GETDATE()),112) ");
                strERRQuery.Append(" THEN 'TRUE' ELSE 'FALSE' ");
                strERRQuery.Append(" END AS DEL_RECORD ");
                strERRQuery.Append(" FROM T_DAY_SOUKOKAN_IDO_DATA_TEMP;");
                dtFaultyTemp.Reset();
                dtFaultyTemp = _getDataTable(strERRQuery.ToString(), myConnection);
                if (dtFaultyTemp.Rows.Count > 0)
                {
                    _replaceData(dtFaultyTemp, myConnection, "発生日を間違えました。");   //Replace & Remove Data in Actual Db Table
                }
                #endregion

                #region "伝票日付 Should not be bigger than Y-Day"
                //Get All The Records of Temp TABLE, with New Column DEL_RECORD as Flag.
                //Faulty Records will have DEL_RECORD as 'TRUE'
                strERRQuery.Clear();
                strERRQuery.Append(" SELECT *,CASE ");
                strERRQuery.Append(" WHEN CONVERT(DATE,倉庫間移動日) > CONVERT(DATE,DATEADD(DAY,-1,GETDATE())) ");
                strERRQuery.Append(" THEN 'TRUE' ELSE 'FALSE' END AS DEL_RECORD ");
                strERRQuery.Append(" FROM T_DAY_SOUKOKAN_IDO_DATA_TEMP;");
                dtFaultyTemp.Reset();
                dtFaultyTemp = _getDataTable(strERRQuery.ToString(), myConnection);
                if (dtFaultyTemp.Rows.Count > 0)
                {
                    _replaceData(dtFaultyTemp, myConnection, "データに将来の倉庫間移動伝票日が存在されています。");   //Replace & Remove Data in Actual Db Table
                }
                #endregion

                Dts.TaskResult = (int)ScriptResults.Success;
            }
            #region Catch/Finally
            catch (Exception ex)
            {
                strERRQuery.Clear();
                strERRQuery.Append("INSERT INTO KANSHI_PACKAGE_ERROR ");
                strERRQuery.Append(" (パッケージコード,データ日付,エラー日時,エラー内容,エラーフラグ) ");
                strERRQuery.Append(" VALUES('G" + Dts.Variables["User::packageCode"].Value.ToString() + "','" + Dts.Variables["User::currentDate"].Value.ToString() + "','" + Dts.Variables["User::sysDate"].Value.ToString() + "','システムエラー:" + ex.Message.ToString().Replace("'", "-") + "','3');");
                _updateInsert(strERRQuery.ToString(), myConnection);
                Dts.TaskResult = (int)ScriptResults.Success;
            }
            finally 
            {
                _connectionClose(myConnection);
                dtFaultyTemp = null;
                strERRQuery = null;
                myConnection = null;
            }
            #endregion
		}
        #endregion

        #region "replace Data"
        //Data Replacement in Actual DB After Test
        private void _replaceData(DataTable dtFaultyTemp, SqlConnection myConnection, string strErrorMsg)
        {
            StringBuilder strERRQuery = new StringBuilder();
            StringBuilder strBuildRow = new StringBuilder();
            DataRow drTemp;
            string strPackageCode = string.Empty;
            int intErrorCount = 0;  //To Count Errors in the DataTable, to avoid its extra TRUNCATION and BULK.
            try
            {
                _connectionOpen(myConnection);
                strPackageCode = Dts.Variables["User::currentDate"].Value.ToString();
                intErrorCount = 0;
                int countRows = dtFaultyTemp.Rows.Count;
                for (int intI = 0; intI < countRows; intI++)
                {
                    #region Report Faulty Records
                    if (dtFaultyTemp.Rows[intI]["DEL_RECORD"].ToString().ToUpper() == "TRUE")
                    {
                        intErrorCount = intErrorCount + 1;
                        //'TRUE' means Faulty SKU Record
                        drTemp = dtFaultyTemp.Rows[intI];
                        strBuildRow.Clear();
                        for (int intJ = 0; intJ < drTemp.Table.Columns.Count-1; intJ++)
                        {
                            strBuildRow.AppendFormat("{0} ", drTemp.ItemArray[intJ]);
                        }
                        strERRQuery.Clear();
                        strERRQuery.Append("INSERT INTO KANSHI_PACKAGE_ERROR ");
                        strERRQuery.Append(" (パッケージコード,データ日付,エラー日時,エラー内容,エラーフラグ) ");
                        strERRQuery.Append(" VALUES('G" + strPackageCode + "','" + Dts.Variables["User::currentDate"].Value.ToString() + "','" + Dts.Variables["User::sysDate"].Value.ToString() + "','" + strBuildRow.ToString() + "。" + strErrorMsg + "','3');");
                        _updateInsert(strERRQuery.ToString(), myConnection);
                        countRows = countRows - 1;
                        intI = intI - 1;
                        dtFaultyTemp.Rows.Remove(drTemp);   //Remove Faulty Records from DataTable Object.
                        dtFaultyTemp.AcceptChanges();    //Commit DataTable Changes.
                    }
                    #endregion
                }
                dtFaultyTemp.Columns.Remove("DEL_RECORD");
                if (intErrorCount > 0)
                {
                    #region "TRUNCATE TEMP Table"
                    //TRUNCATE TEMP Table, to be import New Correct Records
                    strERRQuery.Clear();
                    strERRQuery.Append(" TRUNCATE TABLE " + Dts.Variables["User::checkType"].Value.ToString() + "_TEMP");
                    _updateInsert(strERRQuery.ToString(), myConnection);
                    #endregion
                    #region "Bulk Update Records"
                    //正しいデータテーブルからインポートするためいに。
                    using (SqlBulkCopy bulkCopy = new SqlBulkCopy(myConnection))
                    {
                        bulkCopy.DestinationTableName = Dts.Variables["User::checkType"].Value.ToString() + "_TEMP";   //Assign table name
                        _connectionOpen(myConnection);
                        bulkCopy.BulkCopyTimeout = 600; //Default Timeut 30 Change to 600. in seconds
                        bulkCopy.WriteToServer(dtFaultyTemp);   //Write into Actual table.
                    }
                    #endregion
                }
            }
            #region Catch/Finally
            catch (Exception ex) 
            {
                throw ex;
                //strERRQuery.Clear();
                //strERRQuery.Append("INSERT INTO KANSHI_PACKAGE_ERROR ");
                //strERRQuery.Append(" (パッケージコード,データ日付,エラー日時,エラー内容,エラーフラグ) ");
                //strERRQuery.Append(" VALUES('G" + strPackageCode + "','" + Dts.Variables["User::currentDate"].Value.ToString() + "','" + Dts.Variables["User::sysDate"].Value.ToString() + "','システムエラー:" + ex.Message.ToString().Replace("'", "-") + "','3');");
                //_updateInsert(strERRQuery.ToString(), myConnection);
                //Dts.TaskResult = (int)ScriptResults.Failure;
            }
            finally
            {
                strPackageCode = null;
                strERRQuery = null;
                dtFaultyTemp = null;
                strBuildRow = null;
                drTemp = null;
                strErrorMsg = null;
            }
            #endregion
        }
        #endregion

        #region "Get DataTable"
        //Created On: 08-08-2016
        //Description: Aim to Return DataTable from the Query.
        public DataTable _getDataTable(string strQuery, SqlConnection myConnection)
        {
            StringBuilder strERRQuery = new StringBuilder();
            DataTable objDT = new DataTable();
            SqlCommand myCommand;
            SqlDataAdapter sqlSelectData;
            try
            {
                _connectionOpen(myConnection);
                myCommand = new SqlCommand(strQuery, myConnection);
                myCommand.CommandType = CommandType.Text;
                sqlSelectData = new SqlDataAdapter();
                sqlSelectData.SelectCommand = myCommand;
                myCommand.CommandTimeout = 600; //Increases Query execution timeout.
                sqlSelectData.Fill(objDT);
            }
            #region CATCH/FINALLY
            catch (Exception ex)
            {
                throw ex;
            }
            finally
            {
                strQuery = null;
                myCommand = null;
                sqlSelectData = null;
                strERRQuery = null;
            }
            #endregion
            return objDT;
        }
        #endregion

        #region "Update/Insert Query in Db"
        protected void _updateInsert(string strQuery, SqlConnection myConnection)
        {
            StringBuilder strERRQuery = new StringBuilder();
            SqlCommand myCommand;
            try
            {
                myCommand = new SqlCommand(strQuery, myConnection);
                _connectionOpen(myConnection);
                myCommand.ExecuteNonQuery();
            }
            #region CATCH/FINALLY
            catch (Exception ex)
            {
                throw ex;
            }
            finally
            {
                strERRQuery = null;
                myConnection = null;
                myCommand = null;
            }
            #endregion
        }
        #endregion

        #region Connection Open
        private void _connectionOpen(SqlConnection myConnection)
        {
            try
            {
                if (myConnection.State != ConnectionState.Open)
                {
                    myConnection.Open();
                }
            }
            catch (Exception ex)
            {
                throw ex;
            }
        }
        #endregion

        #region Connection Close
        private void _connectionClose(SqlConnection myConnection)
        {
            try
            {
                if (myConnection.State != ConnectionState.Closed)
                {
                    myConnection.Close();
                }
            }
            catch (Exception ex)
            {
                throw ex;
            }
        }
        #endregion

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>ST_ce3ffc09050545a588750b50f21c1788</msb:CodeName>
		<msb:DisplayName>ST_ce3ffc09050545a588750b50f21c1788</msb:DisplayName>
		<msb:ProjectId>{EE24C7D7-5D12-4340-B8D9-E41721313B68}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_a1a075574e634677a8918594ab9ac81f.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_ce3ffc09050545a588750b50f21c1788.Properties.Settings.get_Default():ST_ce3ffc09050545a588750b50f21c1788.Properties.Sett" +
    "ings")]

namespace ST_ce3ffc09050545a588750b50f21c1788.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_ce3ffc09050545a588750b50f21c1788.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_ce3ffc09050545a588750b50f21c1788.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_ce3ffc09050545a588750b50f21c1788.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_ce3ffc09050545a588750b50f21c1788.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_ce3ffc09050545a588750b50f21c1788.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_a1a075574e634677a8918594ab9ac81f.dll">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
F1kTBREGF1kTBgNvIQAACghvMAAACgNvMQAAChEGF1gTBhEGEQU/ff7//wNvLwAACnJOEwBwbzIA
AAoRBBY+qgAAAAZvHgAACiYGcnwTAHACKBYAAApvFwAACnKeEwBwbxgAAApvGQAACm8aAAAKcr4T
AHAoMwAACm8fAAAKJgIGbxoAAAoEKAsAAAYEczQAAAoTCBEIAigWAAAKbxcAAApynhMAcG8YAAAK
bxkAAApvGgAACnK+EwBwKDUAAApvNgAACgIEKAwAAAYRCCBYAgAAbzcAAAoRCANvOAAACt4MEQgs
BxEIbzkAAArc3gUTCREJet4PFA0UChQQARQLFAwUEAPcKgAAQUwAAAIAAABAAgAATQAAAI0CAAAM
AAAAAAAAAAAAAAAVAAAAhgIAAJsCAAAFAAAAJAAAAQIAAAAVAAAAjQIAAKICAAAPAAAAAAAAABsw
AgBTAAAABAAAEXMcAAAKJnMdAAAKCgIEKAwAAAYDBHM6AAAKCwcXbzsAAApzPAAACgwIB289AAAK
ByBYAgAAbz4AAAoIBm8/AAAKJt4DDQl63ggUEAEUCxQM3AYqAAEcAAAAAAwAOEQAAyQAAAECAAwA
PUkACAAAAAAbMAIAKgAAAAUAABFzHAAACiYDBHM6AAAKCgIEKAwAAAYGb0AAAAom3gMLB3reBhQQ
AhQK3CoAAAEcAAAAAAYAGB4AAyQAAAECAAYAHSMABgAAAAAbMAIAFQAAAAYAABEDb0EAAAoXLgYD
b0IAAAreAwoGeioAAAABEAAAAAAAABERAAMkAAABGzABABQAAAAGAAARA29BAAAKLAYDb0MAAAre
AwoGeioBEAAAAAAAABAQAAMkAAABHgIoRAAACiq0AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5SZXNv
dXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9
bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2Vz
LlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAAQlNKQgEAAQAAAAAADAAA
AHY0LjAuMzAzMTkAAAAABQBsAAAAtAUAACN+AAAgBgAAxAgAACNTdHJpbmdzAAAAAOQOAADMEwAA
I1VTALAiAAAQAAAAI0dVSUQAAADAIgAARAIAACNCbG9iAAAAAAAAAAIAAAFXHaIBCQMAAAD6JTMA
FgAAAQAAAC8AAAAFAAAABgAAAA4AAAAKAAAARAAAAAIAAAAPAAAABgAAAAIAAAADAAAABAAAAAEA
AAAFAAAAAQAAAAEAAAAAAAoAAQAAAAAABgDBALoACgDdAMgADgA9ARQBBgBZAboABgBvAV4BBgCg
AYsBEgArAh8CEgBLAjUCBgAKA/ACBgA1AyMDBgBMAyMDBgBpAyMDBgCIAyMDBgChAyMDBgC6AyMD
BgDVAyMDBgDwAyMDBgAJBCMDBgBCBCIEBgBiBCIEBgC3BKQEBgDUBLoABgDZBLoABgD9BCMDCgAp
BRMFCgBCBRMFBgBXBSIEDgB5BRQBDgCbBRQBFgD0BdQFFgAMBtQFBgA9BjEGEgBeBh8CEgB5Bh8C
BgCtBroABgC0BroAEgDfBh8CEgAgBx8CEgBWBzUCBgCdB7oAEgCxBzUCEgDPB7wHEgDZBx8CEgD1
BzUCEgApCLwHEgBMCLwHEgBZCB8CAAAAAAEAAAAAAAEAAQAAABAAMgA8AAUAAQABAAABEABrADwA
CQADAAUAAQAQAHQAfwANAAQACAADAQAAowAAABEABAAPABEAfwETABEArAEXABEA9gE5AAYGowJl
AFaAqwJoAFaAswJoAFAgAAAAAIMYvAEbAAEAWCAAAAAAkwjCAR8AAQCRIAAAAACTCNYBJAABAJgg
AAAAAJMI4gEpAAEAoCAAAAAAlggGAj0AAgCzIAAAAACGGLwBGwACAKcgAAAAAJEYcgWnAAIAvCAA
AAAAhgAaAhsAAgD4JgAAAACBAFkCRwACAAQqAAAAAIYAZgJQAAUAgCoAAAAAhAB0AlgABwDUKgAA
AACBAIICXwAJAAgrAAAAAIEAkgJfAAoAOCsAAAAAhhi8ARsACwAAAAEAuwIAAAEAwQIAAAIAzgIA
AAMA2wIAAAEA5wIAAAIAzgIAAAEA5wIAAAIAzgIAAAEAzgIAAAEAzgJJALwBdgBRALwBdgBZALwB
dgBhALwBdgBpALwBdgBxALwBdgB5ALwBdgCBALwBdgCJALwBdgCRALwBdgCZALwBewChALwBGwCp
ALwBGwAJALwBGwCxAOsEgACxAAYFhwApALwBjADJALwBmADZALwBGwARALwBGwDhALwBGwAZAK0F
qwDpAP4FsADxABUGtQD5AB4GuwAJACgGvwBBALwBdgABAbwBGwA5ALwBGwABAUsGwwABAVEGyQA5
AFgGGwA5AHAG0AARAZQG1gDpAJ4GewAhAb4GvwAZAcoG2gAZAdIG4AAZAdkG9gAJARUG+QApARUG
AAEZAecGvwAZAe8GBQEpAfsGCwEBAQkHEAEpARYHGAE5ADUHHQEJAUEHIwE5AEgHGwAxAUEHdgAZ
AdIGKgE5AbwBXwAZAdIGMQE5AWIHdgA5AXsHewA5AY8HNwFBAakHGwBJAbwBWABRAeUHVgFhAbwB
GwBhAQQIXQFRARYIewBpATcIZAFRATwI1gBxAWkIgQFxAXMIGwBxAXgIGwAZALwBGwAIABQAbAAI
ABgAcQApAJMAngAuABsA/gEuACMA/gEuAGMAJAIuAAsAjQEuABMA1QEuADMA1QEuACsA/gEuADsA
BAIuAEMA/gEuAFsAGwJDAGsAcQBJAJMAngBhAJsAcQCDAKsAcQCTAOYAPQFqAXgBhwECAAEAAwAD
AAAAbwEvAAAA7gE0AAAAEgJCAAIAAgADAAIAAwAFAAEABAAFAAIABQAHAASAAAABAAAA3RhZhgAA
AAAAAIAEAAAEAAAAAAAAAAAAAAABALEAAAAAAAQAAAAAAAAAAAAAAAEAugAAAAAADAAAAAAAAAAA
AAAACgD1AAAAAAAEAAAAAAAAAAAAAAABAB8CAAAAAAwAAAAAAAAAAAAAAAoAtQUAAAAAAAAAAAEA
AAB+CAAABQAEAAAAAAAAPE1vZHVsZT4AU1RfYTFhMDc1NTc0ZTYzNDY3N2E4OTE4NTk0YWI5YWM4
MWYuZGxsAFJlc291cmNlcwBTVF9jZTNmZmMwOTA1MDU0NWE1ODg3NTBiNTBmMjFjMTc4OC5Qcm9w
ZXJ0aWVzAFNldHRpbmdzAFNjcmlwdE1haW4AU1RfY2UzZmZjMDkwNTA1NDVhNTg4NzUwYjUwZjIx
YzE3ODgAU2NyaXB0UmVzdWx0cwBtc2NvcmxpYgBTeXN0ZW0AT2JqZWN0AFN5c3RlbS5Db25maWd1
cmF0aW9uAEFwcGxpY2F0aW9uU2V0dGluZ3NCYXNlAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuU2NyaXB0
VGFzawBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5UYXNrcy5TY3JpcHRUYXNrAFZTVEFSVFNjcmlw
dE9iamVjdE1vZGVsQmFzZQBFbnVtAFN5c3RlbS5SZXNvdXJjZXMAUmVzb3VyY2VNYW5hZ2VyAHJl
c291cmNlTWFuAFN5c3RlbS5HbG9iYWxpemF0aW9uAEN1bHR1cmVJbmZvAHJlc291cmNlQ3VsdHVy
ZQAuY3RvcgBnZXRfUmVzb3VyY2VNYW5hZ2VyAGdldF9DdWx0dXJlAHNldF9DdWx0dXJlAEN1bHR1
cmUAZGVmYXVsdEluc3RhbmNlAGdldF9EZWZhdWx0AERlZmF1bHQATWFpbgBTeXN0ZW0uRGF0YQBE
YXRhVGFibGUAU3lzdGVtLkRhdGEuU3FsQ2xpZW50AFNxbENvbm5lY3Rpb24AX3JlcGxhY2VEYXRh
AF9nZXREYXRhVGFibGUAX3VwZGF0ZUluc2VydABfY29ubmVjdGlvbk9wZW4AX2Nvbm5lY3Rpb25D
bG9zZQB2YWx1ZV9fAFN1Y2Nlc3MARmFpbHVyZQB2YWx1ZQBkdEZhdWx0eVRlbXAAbXlDb25uZWN0
aW9uAHN0ckVycm9yTXNnAHN0clF1ZXJ5AFN5c3RlbS5SdW50aW1lLlZlcnNpb25pbmcAVGFyZ2V0
RnJhbWV3b3JrQXR0cmlidXRlAFN5c3RlbS5SZWZsZWN0aW9uAEFzc2VtYmx5VGl0bGVBdHRyaWJ1
dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25BdHRy
aWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBB
c3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFya0F0dHJpYnV0ZQBBc3Nl
bWJseUN1bHR1cmVBdHRyaWJ1dGUAQXNzZW1ibHlWZXJzaW9uQXR0cmlidXRlAFN5c3RlbS5SdW50
aW1lLkNvbXBpbGVyU2VydmljZXMAQ29tcGlsYXRpb25SZWxheGF0aW9uc0F0dHJpYnV0ZQBSdW50
aW1lQ29tcGF0aWJpbGl0eUF0dHJpYnV0ZQBTVF9hMWEwNzU1NzRlNjM0Njc3YTg5MTg1OTRhYjlh
YzgxZgBTeXN0ZW0uRGlhZ25vc3RpY3MARGVidWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBUeXBl
AFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAEFzc2VtYmx5AGdldF9Bc3NlbWJs
eQBTeXN0ZW0uQ29tcG9uZW50TW9kZWwARWRpdG9yQnJvd3NhYmxlQXR0cmlidXRlAEVkaXRvckJy
b3dzYWJsZVN0YXRlAENvbXBpbGVyR2VuZXJhdGVkQXR0cmlidXRlAC5jY3RvcgBTU0lTU2NyaXB0
VGFza0VudHJ5UG9pbnRBdHRyaWJ1dGUAU2NyaXB0T2JqZWN0TW9kZWwAZ2V0X0R0cwBNaWNyb3Nv
ZnQuU3FsU2VydmVyLk1hbmFnZWREVFMATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUnVudGltZQBW
YXJpYWJsZXMAZ2V0X1ZhcmlhYmxlcwBWYXJpYWJsZQBnZXRfSXRlbQBnZXRfVmFsdWUAVG9TdHJp
bmcAU3lzdGVtLlRleHQAU3RyaW5nQnVpbGRlcgBDbGVhcgBBcHBlbmQAUmVzZXQARGF0YVJvd0Nv
bGxlY3Rpb24AZ2V0X1Jvd3MASW50ZXJuYWxEYXRhQ29sbGVjdGlvbkJhc2UAZ2V0X0NvdW50AHNl
dF9UYXNrUmVzdWx0AFN0cmluZwBFeGNlcHRpb24AZ2V0X01lc3NhZ2UAUmVwbGFjZQBDb25jYXQA
RW1wdHkARGF0YVJvdwBUb1VwcGVyAG9wX0VxdWFsaXR5AGdldF9JdGVtQXJyYXkAQXBwZW5kRm9y
bWF0AGdldF9UYWJsZQBEYXRhQ29sdW1uQ29sbGVjdGlvbgBnZXRfQ29sdW1ucwBSZW1vdmUAQWNj
ZXB0Q2hhbmdlcwBTcWxCdWxrQ29weQBzZXRfRGVzdGluYXRpb25UYWJsZU5hbWUAc2V0X0J1bGtD
b3B5VGltZW91dABXcml0ZVRvU2VydmVyAElEaXNwb3NhYmxlAERpc3Bvc2UAU3FsQ29tbWFuZABT
eXN0ZW0uRGF0YS5Db21tb24ARGJDb21tYW5kAENvbW1hbmRUeXBlAHNldF9Db21tYW5kVHlwZQBT
cWxEYXRhQWRhcHRlcgBzZXRfU2VsZWN0Q29tbWFuZABzZXRfQ29tbWFuZFRpbWVvdXQARGJEYXRh
QWRhcHRlcgBGaWxsAEV4ZWN1dGVOb25RdWVyeQBEYkNvbm5lY3Rpb24AQ29ubmVjdGlvblN0YXRl
AGdldF9TdGF0ZQBPcGVuAENsb3NlAFNUX2NlM2ZmYzA5MDUwNTQ1YTU4ODc1MGI1MGYyMWMxNzg4
LlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwAAAAAAcVMAVABfAGMAZQAzAGYAZgBjADAA
OQAwADUAMAA1ADQANQBhADUAOAA4ADcANQAwAGIANQAwAGYAMgAxAGMAMQA3ADgAOAAuAFAAcgBv
AHAAZQByAHQAaQBlAHMALgBSAGUAcwBvAHUAcgBjAGUAcwAALVUAcwBlAHIAOgA6AGMAbwBuAG4A
ZQBjAHQAaQBvAG4AUwB0AHIAaQBuAGcAACcgAFMARQBMAEUAQwBUACAAUwBPAEsATwBLAEEATgAu
ACoALAAgAAB3IABDAEEAUwBFACAAVwBIAEUATgAgAFMAVQBCAFMAVABSAEkATgBHACgAUwBPAEsA
TwBLAEEATgAuAAlQq16Tlft51VIdT2h5anX3UywAMQAsADEAKQAgACEAPQAgAEsAQQBOAEoATwAu
AB1PaHktmABOQWggAAExIABPAFIAIABLAEEATgBKAE8ALgAdT2h5LZgATkFoIABJAFMAIABOAFUA
TABMACAAATUgAFQASABFAE4AIAAnAFQAUgBVAEUAJwAgAEUATABTAEUAIAAnAEYAQQBMAFMARQAn
ACAAAScgAEUATgBEACAAQQBTACAARABFAEwAXwBSAEUAQwBPAFIARAAgAABdIABGAFIATwBNACAA
VABfAEQAQQBZAF8AUwBPAFUASwBPAEsAQQBOAF8ASQBEAE8AXwBEAEEAVABBAF8AVABFAE0AUAAg
AEEAUwAgAFMATwBLAE8ASwBBAE4AIAAAQyAATABFAEYAVAAgAEoATwBJAE4AIABNAF8ASwBBAE4A
SgBPAFUAXwBDAE8ARABFACAAQQBTACAASwBBAE4ASgBPAABBIABPAE4AIABTAE8ASwBPAEsAQQBO
AC4A2FKaW7Mw/DDJMCAAPQAgAEsAQQBOAEoATwAuANhSmluzMPwwyTA7AAEnCVCrXpOV+3nVUh1P
aHluMEhRLZhBaJIwk5VVkEgwfjBXMF8wAjABISAAUwBFAEwARQBDAFQAIABUAEUATQBQAC4AKgAs
ACAAAFcgAEMAQQBTAEUAIABXAEgARQBOACAAVABFAE0AUAAuAAlQq16Tlft51VIdT2h5anX3UyAA
PQAgAE0AQQBJAE4ALgAJUKtek5X7edVSHU9oeWp191MgAAFTIABBAE4ARAAgAFQARQBNAFAALgAJ
UKtek5X7edVSHU9oeQ5mMH1qdfdTIAA9ACAATQBBAEkATgAuAAlQq16Tlft51VIdT2h5DmYwfWp1
91MgAAFXIABGAFIATwBNACAAVABfAEQAQQBZAF8AUwBPAFUASwBPAEsAQQBOAF8ASQBEAE8AXwBE
AEEAVABBAF8AVABFAE0AUAAgAEEAUwAgAFQARQBNAFAAIAAAVyAATABFAEYAVAAgAEoATwBJAE4A
IABUAF8ARABBAFkAXwBTAE8AVQBLAE8ASwBBAE4AXwBJAEQATwBfAEQAQQBUAEEAIABBAFMAIABN
AEEASQBOACAAAEkgAE8ATgAgAFQARQBNAFAALgAJUKtek5X7edVSHU9oeWp191MgAD0AIABNAEEA
SQBOAC4ACVCrXpOV+3nVUh1PaHlqdfdTIAABVSAAQQBOAEQAIABUAEUATQBQAC4ACVCrXpOV+3nV
Uh1PaHkOZjB9anX3UyAAPQAgAE0AQQBJAE4ALgAJUKtek5X7edVSHU9oeQ5mMH1qdfdTOwAgAAE/
CVCrXpOV+3nVUh1PaHlqdfdT+zAJUKtek5X7edVSHU9oeQ5mMH1qdfdTTDDiZWsw1lO8jwhufzBn
MFkwAjABHyAAUwBFAEwARQBDAFQAIAAqACwAQwBBAFMARQAgAACA+yAAVwBIAEUATgAgAEMAQQBT
AFQAKABDAE8ATgBWAEUAUgBUACgAVgBBAFIAQwBIAEEAUgAoADEAMAApACwACVCrXpOV+3nVUuVl
LAAxADIAMQApACAAQQBTACAARABBAFQARQApACAAPAA9ACAAKABTAEUATABFAEMAVAAgAE0AQQBY
ACgACGemXkJ9hk7lZSkAIABGAFIATwBNACAATQBfAEQARQBOAFAAWQBPAFUAXwBTAEkATQBFAF8A
TQBBAFMAVABFAFIAIABXAEgARQBSAEUAIAAIZ6Ze4H3lZSAASQBTACAATgBPAFQAIABOAFUATABM
ACkAIAABSSAARgBSAE8ATQAgAFQAXwBEAEEAWQBfAFMATwBVAEsATwBLAEEATgBfAEkARABPAF8A
RABBAFQAQQBfAFQARQBNAFAAOwAgAAA3CGemXuB9gTB+MFcwXzACMOB9gTDlZU1SbjAJUKtek5X7
edVSn1s+fuVlTDBCMIowfjBZMAIwATMgAFMARQBMAEUAQwBUACAAUwBPAEsATwBLAEEATgAuACoA
LAAgACAAQwBBAFMARQAgAABFIABXAEgARQBOACAAUwBPAEsATwBLAEEATgAuAAlQq16Tlft51VLl
ZSAAPAAgAFQAQQBOAEEALgDaaHhT5WXYTiAAIAABKSAARQBOAEQAIABBAFMAIABEAEUATABfAFIA
RQBDAE8AUgBEACAAIAAAgP8gAEwARQBGAFQAIABKAE8ASQBOACAAKABTAEUATABFAEMAVAAgAEQA
SQBTAFQASQBOAEMAVAAgAJdeF4KzMPwwyTAsAE0AQQBYACgA2mh4U+Vl2E4pACAAQQBTACAA2mh4
U+Vl2E4gAEYAUgBPAE0AIABNAF8AVABBAE4AQQBPAFIATwBTAEgASQBfAE0AQQBTAFQARQBSACAA
VwBIAEUAUgBFACAA2mh4U7p4mlvlZSAAIQA9ACAAJwAxADkAMAAwAC0AMAAxAC0AMAAxACcAIABH
AFIATwBVAFAAIABCAFkAIACXXheCszD8MMkwKQAgAFQAQQBOAEEAIAAgAAE/IABPAE4AIABTAE8A
SwBPAEsAQQBOAC4A+lGrXrUwpDDIMCAAPQAgAFQAQQBOAEEALgCXXheCszD8MMkwIAABK9poeFO6
eJpb5WVNUm4wCVCrXpOV+3nVUp9bPn7lZUwwQjCKMH4wWTACMAFNIABDAEEAUwBFACAAVwBIAEUA
TgAgAEoATwBLAEUATgAuANVOZVFhZ/ZOIAAhAD0AIABTAE8ASwBPAEsAQQBOAC4At4zWU9dTF4og
AAGBQyAATABFAEYAVAAgAEoATwBJAE4AIAAoAFMARQBMAEUAQwBUACAATQBTAFQALgAz/yv/Nf+z
MPwwyTAgAEEAUwAgADP/K/81/7Mw/DDJMCwASgBSAC4ACWe5UouVy1nlZSwASgBSAC4ACWe5UkJ9
hk7lZSwAIABKAFIALgDVTmVRYWf2TiAARgBSAE8ATQAgAE0AXwBTAEgASQBJAFIARQBfAEoATwBV
AEsARQBOAF8AUgBJAFIARQBLAEkAIABKAFIAIABMAEUARgBUACAASgBPAEkATgAgAE0AXwBTAEgA
TwBVAEgASQBOAF8ARABBAFQAQQAgAE0AUwBUACAATwBOACAASgBSAC4ARlXBVLMw/DDJMCAAPQAg
AE0AUwBUAC4ARlXBVLMw/DDJMCkAIABBAFMAIABKAE8ASwBFAE4AIAABTSAATwBOACAASgBPAEsA
RQBOAC4AM/8r/zX/szD8MMkwIAA9ACAAUwBPAEsATwBLAEEATgAuADP/K/81/7Mw/DDJMCAAQQBO
AEQAIAABayAAUwBPAEsATwBLAEEATgAuAAlQq16Tlft51VLlZSAAQgBFAFQAVwBFAEUATgAgAEoA
TwBLAEUATgAuAAlnuVKLlctZ5WUgAEEATgBEACAASgBPAEsARQBOAC4ACWe5UkJ9hk7lZTsAIAAB
MwlQq16TleVl2E5oMAlnuVKLlctZ5WVuMER9fzAIVI8wWzCSMJOVVZBIMH4wVzBfMAIwAS9TAEUA
TABFAEMAVAAgAFMATwBLAE8ASwBBAE4ALgAqACwAIABDAEEAUwBFACAAADlXAEgARQBOACAAVABF
AE4AUABPAC4Al14XgrMw/DDJMCAASQBTACAATgBVAEwATAAgAE8AUgAgAAE1TgBZAFUAVABFAE4A
UABPAC4Al14XgrMw/DDJMCAASQBTACAATgBVAEwATAAgAE8AUgAgAAEzUwBIAE8ASABJAE4ALgAz
/yv/Nf+zMPwwyTAgAEkAUwAgAE4AVQBMAEwAIABPAFIAIAABM1MASQBJAFIARQBTAEEASwBJAC4A
1U5lUUhRszD8MMkwIABJAFMAIABOAFUATABMACAAATNUAEgARQBOACAAJwBUAFIAVQBFACcAIABF
AEwAUwBFACAAJwBGAEEATABTAEUAJwAgAAElRQBOAEQAIABBAFMAIABEAEUATABfAFIARQBDAE8A
UgBEACAAAFtGAFIATwBNACAAVABfAEQAQQBZAF8AUwBPAFUASwBPAEsAQQBOAF8ASQBEAE8AXwBE
AEEAVABBAF8AVABFAE0AUAAgAEEAUwAgAFMATwBLAE8ASwBBAE4AIAAARUwARQBGAFQAIABKAE8A
SQBOACAATQBfAFQARQBOAFAATwBfAE0AQQBTAFQARQBSACAAQQBTACAAVABFAE4AUABPACAAAD9P
AE4AIABTAE8ASwBPAEsAQQBOAC4A+lGrXrUwpDDIMCAAPQAgAFQARQBOAFAATwAuAJdeF4KzMPww
yTAgAAFLTABFAEYAVAAgAEoATwBJAE4AIABNAF8AVABFAE4AUABPAF8ATQBBAFMAVABFAFIAIABB
AFMAIABOAFkAVQBUAEUATgBQAE8AIAAARU8ATgAgAFMATwBLAE8ASwBBAE4ALgBlUatetTCkMMgw
IAA9ACAATgBZAFUAVABFAE4AUABPAC4Al14XgrMw/DDJMCAAAUdMAEUARgBUACAASgBPAEkATgAg
AE0AXwBTAEgATwBVAEgASQBOAF8ARABBAFQAQQAgAEEAUwAgAFMASABPAEgASQBOACAAAEVPAE4A
IABTAE8ASwBPAEsAQQBOAC4AM/8r/zX/szD8MMkwIAA9ACAAUwBIAE8ASABJAE4ALgAz/yv/Nf+z
MPwwyTAgAAFVTABFAEYAVAAgAEoATwBJAE4AIABNAF8AUwBJAEkAUgBFAFMAQQBLAEkAXwBNAEEA
UwBUAEUAUgAgAEEAUwAgAFMASQBJAFIARQBTAEEASwBJACAAAE1PAE4AIABTAE8ASwBPAEsAQQBO
AC4A1U5lUUhRszD8MMkwIAA9ACAAUwBJAEkAUgBFAFMAQQBLAEkALgDVTmVRSFGzMPwwyTA7ACAA
AUnVTmVRSFGzMPwwyTABMDP/K/81/7Mw/DDJMH4wXzBvMJdeF4KzMPwwyTBvMN4wuTC/MGswWFso
V1UwjDBmMEQwfjBbMJMwAjABHyAAUwBFAEwARQBDAFQAIAAqACwAIABDAEEAUwBFAACAsSAAVwBI
AEUATgAgAEMATwBOAFYARQBSAFQAKABWAEEAUgBDAEgAQQBSACgAOAApACwAenYfdeVl2E4sADEA
MQAyACkAIAAhAD0AIABDAE8ATgBWAEUAUgBUACgAVgBBAFIAQwBIAEEAUgAoADgAKQAsAEQAQQBU
AEUAQQBEAEQAKABEAEEAWQAsAC0AMQAsAEcARQBUAEQAQQBUAEUAKAApACkALAAxADEAMgApACAA
AUcgAEYAUgBPAE0AIABUAF8ARABBAFkAXwBTAE8AVQBLAE8ASwBBAE4AXwBJAEQATwBfAEQAQQBU
AEEAXwBUAEUATQBQADsAABd6dh915WWSMJOVVZBIMH4wVzBfMAIwAYCLIABXAEgARQBOACAAQwBP
AE4AVgBFAFIAVAAoAEQAQQBUAEUALAAJUKtek5X7edVS5WUpACAAPgAgAEMATwBOAFYARQBSAFQA
KABEAEEAVABFACwARABBAFQARQBBAEQARAAoAEQAQQBZACwALQAxACwARwBFAFQARABBAFQARQAo
ACkAKQApACAAAVkgAFQASABFAE4AIAAnAFQAUgBVAEUAJwAgAEUATABTAEUAIAAnAEYAQQBMAFMA
RQAnACAARQBOAEQAIABBAFMAIABEAEUATABfAFIARQBDAE8AUgBEACAAATPHMPwwvzBrMAZcZWdu
MAlQq16Tlft51VIdT2h55WVMMFhbKFdVMIwwZjBEMH4wWTACMAFDSQBOAFMARQBSAFQAIABJAE4A
VABPACAASwBBAE4AUwBIAEkAXwBQAEEAQwBLAEEARwBFAF8ARQBSAFIATwBSACAAAEsgACgA0TDD
MLEw/DC4MLMw/DDJMCwAxzD8ML8w5WXYTiwAqDDpMPww5WVCZiwAqDDpMPwwhVG5WywAqDDpMPww
1TDpMLAwKQAgAAEVIABWAEEATABVAEUAUwAoACcARwABI1UAcwBlAHIAOgA6AHAAYQBjAGsAYQBn
AGUAQwBvAGQAZQAABycALAAnAAEjVQBzAGUAcgA6ADoAYwB1AHIAcgBlAG4AdABEAGEAdABlAAAb
VQBzAGUAcgA6ADoAcwB5AHMARABhAHQAZQAAFycALAAnALcwuTDGMOAwqDDpMPwwOgABAycAAQMt
AAEPJwAsACcAMwAnACkAOwABFUQARQBMAF8AUgBFAEMATwBSAEQAAAlUAFIAVQBFAAAJewAwAH0A
IAAAAwIwASEgAFQAUgBVAE4AQwBBAFQARQAgAFQAQQBCAEwARQAgAAAfVQBzAGUAcgA6ADoAYwBo
AGUAYwBrAFQAeQBwAGUAAAtfAFQARQBNAFAAAAAAGaEu4x1eIkWmGne5AJyOagAIt3pcVhk04IkI
iYRdzYCAzJEDBhIVAwYSGQMgAAEEAAASFQQAABIZBQABARIZBAgAEhUECAASGQMGEgwEAAASDAQI
ABIMCCADARIdEiEOByACEh0OEiEGIAIBDhIhBSABARIhAgYIAwYRFAQAAAAABAEAAAAEIAEBDgQg
AQEIBgABElkRXQQgABJhBiACAQ4SYQQHARIVBSABARFpCAEAAgAAAAAAAwAAAQQgABJ1BCAAEnkF
IAESfRwDIAAcAyAADgUgABKAgQYgARKAgQ4FIAASgIUDIAAIBSACDg4OBQABDh0ODwcGDhIhEoCB
Eh0SgJEdDgIGDgYgARKAlQgEIAEcDgUAAgIODgQgAB0cByACEoCBDhwEIAASHQUgABKAmQYgAQES
gJUGAAMODg4OBQACDg4OBSABARIdGAcLEoCBEoCBEoCVDggICAgSgJ0SgJEdDgYgAQERgK0GIAEB
EoClBSABCBIdDQcEEh0SgKUSgLESgJEIBwISgKUSgJEFIAARgL0FBwESgJFHAQAaLk5FVEZyYW1l
d29yayxWZXJzaW9uPXY0LjABAFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1lEC5ORVQgRnJhbWV3b3Jr
IDQoAQAjU1RfY2UzZmZjMDkwNTA1NDVhNTg4NzUwYjUwZjIxYzE3ODgAAAUBAAAAABYBABFDb3B5
cmlnaHQgQCAgMjAxNgAACAEACAAAAAAAHgEAAQBUAhZXcmFwTm9uRXhjZXB0aW9uVGhyb3dzAQAk
UQAAAAAAAAAAAAA+UQAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMFEAAAAAAAAAAAAAAABfQ29y
RGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAQAAAAGAAAgAAA
AAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAAAFhgAACwAwAAAAAA
AAAAAACwAzQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAAvQTv/gAAAQAAAAEA
WYbdGAAAAQBZht0YPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAABAFYAYQByAEYAaQBs
AGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAAAAAAALAEEAMAAAEA
UwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAA7AIAAAEAMAAwADAAMAAwADQAYgAwAAAAcAAk
AAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAAAFMAVABfAGMAZQAzAGYAZgBjADAA
OQAwADUAMAA1ADQANQBhADUAOAA4ADcANQAwAGIANQAwAGYAMgAxAGMAMQA3ADgAOAAAAEAADwAB
AEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgA2ADMANgA1AC4AMwA0ADMAOQAzAAAA
AABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMAVABfAGEAMQBhADAANwA1ADUANwA0
AGUANgAzADQANgA3ADcAYQA4ADkAMQA4ADUAOQA0AGEAYgA5AGEAYwA4ADEAZgAuAGQAbABsAAAA
SAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBvAHAAeQByAGkAZwBoAHQAIABA
ACAAIAAyADAAMQA2AAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBhAG0AZQAAAFMA
VABfAGEAMQBhADAANwA1ADUANwA0AGUANgAzADQANgA3ADcAYQA4ADkAMQA4ADUAOQA0AGEAYgA5
AGEAYwA4ADEAZgAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEAbQBlAAAAAABTAFQA
XwBjAGUAMwBmAGYAYwAwADkAMAA1ADAANQA0ADUAYQA1ADgAOAA3ADUAMABiADUAMABmADIAMQBj
ADEANwA4ADgAAABEAA8AAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADYA
MwA2ADUALgAzADQAMwA5ADMAAAAAAEgADwABAEEAcwBzAGUAbQBiAGwAeQAgAFYAZQByAHMAaQBv
AG4AAAAxAC4AMAAuADYAMwA2ADUALgAzADQAMwA5ADMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABQAAAMAAAAUDEAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\出荷実績"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:Description="Script Task"
      DTS:DTSID="{FCFB6C4F-A27A-46EE-99EC-71A00CBE699C}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="出荷実績"
      DTS:ThreadHint="8">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_0f4c70e6f7c6442b80cd048e260b45e0"
          VSTAMajorVersion="3"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadOnlyVariables="User::checkType,User::connectionString,User::currentDate,User::packageCode,User::sysDate">
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_ce3ffc09050545a588750b50f21c1788")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_ce3ffc09050545a588750b50f21c1788")]
[assembly: AssemblyCopyright("Copyright @  2016")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[
#region Namespaces
using System;
using System.Data;
using System.Data.SqlClient;
using System.Text;
#endregion

namespace ST_ce3ffc09050545a588750b50f21c1788
{
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
    {
        #region "Main Method"
        /// <summary>
        /// 作成者：イルファン　マンスリー
        /// 説明：仕入実績の業務データチェックする。
        /// 作成日：２０１６年０８月０８日
        /// </summary>
        public void Main()
		{
            string strConnection = Dts.Variables["User::connectionString"].Value.ToString();
            SqlConnection myConnection = new SqlConnection(strConnection);
            StringBuilder strERRQuery = new StringBuilder();
            DataTable dtFaultyTemp;
            try
            { 
                dtFaultyTemp = new DataTable();
                _connectionOpen(myConnection);
                #region "Check for 伝票頭一桁 Check"
                //Get All The Records of Temp TABLE, with New Column DEL_RECORD as Flag.
                //Faulty Records will have DEL_RECORD as 'TRUE'
                strERRQuery.Clear();
                strERRQuery.Append(" SELECT SHUKKA.*, ");
                strERRQuery.Append(" CASE WHEN SUBSTRING(SHUKKA.出荷伝票番号,1,1) != KANJO.伝票頭一桁 ");
                strERRQuery.Append(" OR KANJO.伝票頭一桁 IS NULL ");
                strERRQuery.Append(" THEN 'TRUE' ELSE 'FALSE' ");
                strERRQuery.Append(" END AS DEL_RECORD ");
                strERRQuery.Append(" FROM T_DAY_TEN_SHUKKA_JISSEKI_TEMP AS SHUKKA ");
                strERRQuery.Append(" LEFT JOIN M_KANJOU_CODE AS KANJO ");
                strERRQuery.Append(" ON SHUKKA.勘定コード = KANJO.勘定コード; ");
                dtFaultyTemp.Reset();
                dtFaultyTemp = _getDataTable(strERRQuery.ToString(), myConnection);
                if (dtFaultyTemp.Rows.Count > 0)
                {
                    _replaceData(dtFaultyTemp, myConnection, "出荷実績伝票の先頭桁を間違えました。");   //Replace & Remove Data in Actual Db Table
                }
                #endregion

                #region "Check for 出荷伝票番号,出荷伝票明細番号(PK) Check"
                strERRQuery.Clear();
                strERRQuery.Append(" SELECT TEMP.*,  ");
                strERRQuery.Append(" CASE WHEN TEMP.出荷伝票番号 = MAIN.出荷伝票番号 ");
                strERRQuery.Append(" AND TEMP.出荷伝票明細番号 = MAIN.出荷伝票明細番号 ");
                strERRQuery.Append(" THEN 'TRUE' ELSE 'FALSE' ");
                strERRQuery.Append(" END AS DEL_RECORD ");
                strERRQuery.Append(" FROM T_DAY_TEN_SHUKKA_JISSEKI_TEMP AS TEMP ");
                strERRQuery.Append(" LEFT JOIN T_DAY_TEN_SHUKKA_JISSEKI AS MAIN ");
                strERRQuery.Append(" ON TEMP.出荷伝票番号 = MAIN.出荷伝票番号 ");
                strERRQuery.Append(" AND TEMP.出荷伝票明細番号 = MAIN.出荷伝票明細番号; ");
                dtFaultyTemp.Reset();
                dtFaultyTemp = _getDataTable(strERRQuery.ToString(), myConnection);
                if (dtFaultyTemp.Rows.Count > 0)
                {
                    _replaceData(dtFaultyTemp, myConnection, "出荷伝票番号・出荷伝票明細番号が既に取込済みです。");   //Replace & Remove Data in Actual Db Table
                }
                #endregion

                #region "Check for 締日 Check"
                //Get All The Records of Temp TABLE, with New Column DEL_RECORD as Flag.
                //Faulty Records will have DEL_RECORD as 'TRUE'
                strERRQuery.Clear();
                strERRQuery.Append(" SELECT *,CASE ");
                strERRQuery.Append(" WHEN CAST(CONVERT(VARCHAR(10),出荷日付,121) AS DATE) <= (SELECT MAX(月度終了日) FROM M_DENPYOU_SIME_MASTER WHERE 月度締日 IS NOT NULL) ");
                strERRQuery.Append(" THEN 'TRUE' ELSE 'FALSE' ");
                strERRQuery.Append(" END AS DEL_RECORD ");
                strERRQuery.Append(" FROM T_DAY_TEN_SHUKKA_JISSEKI_TEMP;");
                dtFaultyTemp.Reset();
                dtFaultyTemp = _getDataTable(strERRQuery.ToString(), myConnection);
                if (dtFaultyTemp.Rows.Count > 0)
                {
                    _replaceData(dtFaultyTemp, myConnection, "月度締めました。締め日前の出荷実績日があります。");   //Replace & Remove Data in Actual Db Table
                }
                #endregion

                #region "Check for 棚卸確定日 Check"
                //Get All The Records of Temp TABLE, with New Column DEL_RECORD as Flag.
                //Faulty Records will have DEL_RECORD as 'TRUE'
                strERRQuery.Clear();
                strERRQuery.Append(" SELECT SHUKKA.*,  CASE ");
                strERRQuery.Append(" WHEN SHUKKA.出荷日付 < TANA.棚卸日付  ");
                strERRQuery.Append(" THEN 'TRUE' ELSE 'FALSE' ");
                strERRQuery.Append(" END AS DEL_RECORD ");
                strERRQuery.Append(" FROM T_DAY_TEN_SHUKKA_JISSEKI_TEMP AS SHUKKA ");
                strERRQuery.Append(" LEFT JOIN (SELECT DISTINCT 店舗コード,MAX(棚卸日付) AS 棚卸日付 FROM M_TANAOROSHI_MASTER WHERE 棚卸確定日 != '1900-01-01' GROUP BY 店舗コード) TANA  ");
                strERRQuery.Append(" ON SHUKKA.出庫サイト = TANA.店舗コード ");
                dtFaultyTemp.Reset();
                dtFaultyTemp = _getDataTable(strERRQuery.ToString(), myConnection);
                if (dtFaultyTemp.Rows.Count > 0)
                {
                    _replaceData(dtFaultyTemp, myConnection, "棚卸確定日前の出荷実績日があります。");   //Replace & Remove Data in Actual Db Table
                }
                #endregion

                #region "Check for 仕入条件 & 買取受託 Check"
                //Get All The Records of Temp TABLE, with New Column DEL_RECORD as Flag.
                //Faulty Records will have DEL_RECORD as 'TRUE'
                strERRQuery.Clear();
                strERRQuery.Append(" SELECT SHUKKA.*, ");
                strERRQuery.Append(" CASE WHEN JOKEN.仕入条件 != SHUKKA.買取受託 ");
                strERRQuery.Append(" THEN 'TRUE' ELSE 'FALSE' ");
                strERRQuery.Append(" END AS DEL_RECORD ");
                strERRQuery.Append(" FROM T_DAY_TEN_SHUKKA_JISSEKI_TEMP AS SHUKKA ");
                strERRQuery.Append(" LEFT JOIN (SELECT MST.ＳＫＵコード AS ＳＫＵコード,JR.有効開始日,JR.有効終了日, JR.仕入条件 FROM M_SHIIRE_JOUKEN_RIREKI JR LEFT JOIN M_SHOUHIN_DATA MST ON JR.商品コード = MST.商品コード) AS JOKEN ");
                strERRQuery.Append(" ON JOKEN.ＳＫＵコード = SHUKKA.ＳＫＵコード AND ");
                strERRQuery.Append(" SHUKKA.出荷日付 BETWEEN JOKEN.有効開始日 AND JOKEN.有効終了日; ");
                dtFaultyTemp.Reset();
                dtFaultyTemp = _getDataTable(strERRQuery.ToString(), myConnection);
                if (dtFaultyTemp.Rows.Count > 0)
                {
                    _replaceData(dtFaultyTemp, myConnection, "出荷実績日と有効開始日の組み合わせを間違えました。");   //Replace & Remove Data in Actual Db Table
                }
                #endregion

                #region "Check for F.K（仕入先コード、ＳＫＵコード、店舗コード） Check"
                //Get All The Records of Temp TABLE, with New Column DEL_RECORD as Flag.
                //Faulty Records will have DEL_RECORD as 'TRUE'
                strERRQuery.Clear();
                strERRQuery.Append(" SELECT SHUKKA.*,CASE WHEN TENPO.店舗コード IS NULL OR ");
                strERRQuery.Append(" NYUTENPO.店舗コード IS NULL OR ");
                strERRQuery.Append(" SHOHIN.ＳＫＵコード IS NULL OR ");
                strERRQuery.Append(" SIIRESAKI.仕入先コード IS NULL ");
                strERRQuery.Append(" THEN 'TRUE' ELSE 'FALSE'  END	AS DEL_RECORD ");
                strERRQuery.Append(" FROM T_DAY_TEN_SHUKKA_JISSEKI_TEMP AS SHUKKA  ");
                strERRQuery.Append(" LEFT JOIN M_TENPO_MASTER AS TENPO  ");
                strERRQuery.Append(" ON SHUKKA.出庫サイト = TENPO.店舗コード ");
                strERRQuery.Append(" LEFT JOIN M_TENPO_MASTER AS NYUTENPO ");
                strERRQuery.Append(" ON SHUKKA.入庫サイト = NYUTENPO.店舗コード ");
                strERRQuery.Append(" LEFT JOIN M_SHOUHIN_DATA AS SHOHIN ");
                strERRQuery.Append(" ON SHUKKA.ＳＫＵコード = SHOHIN.ＳＫＵコード ");
                strERRQuery.Append(" LEFT JOIN M_SIIRESAKI_MASTER AS SIIRESAKI ");
                strERRQuery.Append(" ON SHUKKA.仕入先コード = SIIRESAKI.仕入先コード; ");
                dtFaultyTemp.Reset();
                dtFaultyTemp = _getDataTable(strERRQuery.ToString(), myConnection);
                if (dtFaultyTemp.Rows.Count > 0)
                {
                    _replaceData(dtFaultyTemp, myConnection, "仕入先コード、ＳＫＵコードまたは店舗コードはマスタに存在されていません。");   //Replace & Remove Data in Actual Db Table
                }
                #endregion

                #region "発生日 Should be exact as Y-Day"
                //Get All The Records of Temp TABLE, with New Column DEL_RECORD as Flag.
                //Faulty Records will have DEL_RECORD as 'TRUE'
                strERRQuery.Clear();
                strERRQuery.Append(" SELECT *, CASE");
                strERRQuery.Append(" WHEN CONVERT(VARCHAR(8),発生日付,112) != CONVERT(VARCHAR(8),DATEADD(DAY,-1,GETDATE()),112) ");
                strERRQuery.Append(" THEN 'TRUE' ELSE 'FALSE' ");
                strERRQuery.Append(" END AS DEL_RECORD ");
                strERRQuery.Append(" FROM T_DAY_TEN_SHUKKA_JISSEKI_TEMP;");
                dtFaultyTemp.Reset();
                dtFaultyTemp = _getDataTable(strERRQuery.ToString(), myConnection);
                if (dtFaultyTemp.Rows.Count > 0)
                {
                    _replaceData(dtFaultyTemp, myConnection, "発生日を間違えました。");   //Replace & Remove Data in Actual Db Table
                }
                #endregion

                #region "伝票日付 Should not be bigger than Y-Day"
                //Get All The Records of Temp TABLE, with New Column DEL_RECORD as Flag.
                //Faulty Records will have DEL_RECORD as 'TRUE'
                strERRQuery.Clear();
                strERRQuery.Append(" SELECT *,CASE ");
                strERRQuery.Append(" WHEN CONVERT(DATE,出荷日付) > CONVERT(DATE,DATEADD(DAY,-1,GETDATE())) ");
                strERRQuery.Append(" THEN 'TRUE' ELSE 'FALSE' END AS DEL_RECORD ");
                strERRQuery.Append(" FROM T_DAY_TEN_SHUKKA_JISSEKI_TEMP;");
                dtFaultyTemp.Reset();
                dtFaultyTemp = _getDataTable(strERRQuery.ToString(), myConnection);
                if (dtFaultyTemp.Rows.Count > 0)
                {
                    _replaceData(dtFaultyTemp, myConnection, "データに将来の出荷伝票日が存在されています。");   //Replace & Remove Data in Actual Db Table
                }
                #endregion
                Dts.TaskResult = (int)ScriptResults.Success;
            }
            #region Catch/Finally
            catch (Exception ex)
            {
                strERRQuery.Clear();
                strERRQuery.Append("INSERT INTO KANSHI_PACKAGE_ERROR ");
                strERRQuery.Append(" (パッケージコード,データ日付,エラー日時,エラー内容,エラーフラグ) ");
                strERRQuery.Append(" VALUES('G" + Dts.Variables["User::packageCode"].Value.ToString() + "','" + Dts.Variables["User::currentDate"].Value.ToString() + "','" + Dts.Variables["User::sysDate"].Value.ToString() + "','システムエラー:" + ex.Message.ToString().Replace("'", "-") + "','3');");
                _updateInsert(strERRQuery.ToString(), myConnection);
                Dts.TaskResult = (int)ScriptResults.Success;
            }
            finally 
            {
                _connectionClose(myConnection);
                dtFaultyTemp = null;
                strERRQuery = null;
                myConnection = null;
            }
            #endregion
		}
        #endregion

        #region "replace Data"
        //Data Replacement in Actual DB After Test
        private void _replaceData(DataTable dtFaultyTemp, SqlConnection myConnection, string strErrorMsg)
        {
            StringBuilder strERRQuery = new StringBuilder();
            StringBuilder strBuildRow = new StringBuilder();
            DataRow drTemp;
            string strPackageCode = string.Empty;
            int intErrorCount = 0;  //To Count Errors in the DataTable, to avoid its extra TRUNCATION and BULK.
            try
            {
                _connectionOpen(myConnection);
                strPackageCode = Dts.Variables["User::packageCode"].Value.ToString();
                intErrorCount = 0;
                int countRows = dtFaultyTemp.Rows.Count;
                for (int intI = 0; intI < countRows; intI++)
                {
                    #region Report Faulty Records
                    if (dtFaultyTemp.Rows[intI]["DEL_RECORD"].ToString().ToUpper() == "TRUE")
                    {
                        intErrorCount = intErrorCount + 1;
                        //'TRUE' means Faulty SKU Record
                        drTemp = dtFaultyTemp.Rows[intI];
                        strBuildRow.Clear();
                        for (int intJ = 0; intJ < drTemp.Table.Columns.Count-1; intJ++)
                        {
                            strBuildRow.AppendFormat("{0} ", drTemp.ItemArray[intJ]);
                        }
                        strERRQuery.Clear();
                        strERRQuery.Append("INSERT INTO KANSHI_PACKAGE_ERROR ");
                        strERRQuery.Append(" (パッケージコード,データ日付,エラー日時,エラー内容,エラーフラグ) ");
                        strERRQuery.Append(" VALUES('G" + strPackageCode + "','" + Dts.Variables["User::currentDate"].Value.ToString() + "','" + Dts.Variables["User::sysDate"].Value.ToString() + "','" + strBuildRow.ToString() + "。" + strErrorMsg + "','3');");
                        _updateInsert(strERRQuery.ToString(), myConnection);
                        countRows = countRows - 1;
                        intI = intI - 1;
                        dtFaultyTemp.Rows.Remove(drTemp);   //Remove Faulty Records from DataTable Object.
                        dtFaultyTemp.AcceptChanges();    //Commit DataTable Changes.
                    }
                    #endregion
                }
                dtFaultyTemp.Columns.Remove("DEL_RECORD");
                if (intErrorCount > 0)
                {
                    #region "TRUNCATE TEMP Table"
                    //TRUNCATE TEMP Table, to be import New Correct Records
                    strERRQuery.Clear();
                    strERRQuery.Append(" TRUNCATE TABLE " + Dts.Variables["User::checkType"].Value.ToString() + "_TEMP");
                    _updateInsert(strERRQuery.ToString(), myConnection);
                    #endregion
                    #region "Bulk Update Records"
                    //正しいデータテーブルからインポートするためいに。
                    using (SqlBulkCopy bulkCopy = new SqlBulkCopy(myConnection))
                    {
                        bulkCopy.DestinationTableName = Dts.Variables["User::checkType"].Value.ToString() + "_TEMP";   //Assign table name
                        _connectionOpen(myConnection);
                        bulkCopy.BulkCopyTimeout = 600; //Default Timeut 30 Change to 600. in seconds
                        bulkCopy.WriteToServer(dtFaultyTemp);   //Write into Actual table.
                    }
                    #endregion
                }
            }
            #region Catch/Finally
            catch (Exception ex) 
            {
                throw ex;
            }
            finally
            {
                strERRQuery = null;
                dtFaultyTemp = null;
                strBuildRow = null;
                drTemp = null;
                strPackageCode = null;
                strErrorMsg = null;
            }
            #endregion
        }
        #endregion

        #region "Get DataTable"
        //Created On: 08-08-2016
        //Description: Aim to Return DataTable from the Query.
        public DataTable _getDataTable(string strQuery, SqlConnection myConnection)
        {
            StringBuilder strERRQuery = new StringBuilder();
            DataTable objDT = new DataTable();
            SqlCommand myCommand;
            SqlDataAdapter sqlSelectData;
            string strPackageCode = string.Empty;
            try
            {
                _connectionOpen(myConnection);
                strPackageCode = Dts.Variables["User::packageCode"].Value.ToString();
                myCommand = new SqlCommand(strQuery, myConnection);
                myCommand.CommandType = CommandType.Text;
                sqlSelectData = new SqlDataAdapter();
                sqlSelectData.SelectCommand = myCommand;
                myCommand.CommandTimeout = 600; //Increases Query execution timeout.
                sqlSelectData.Fill(objDT);
            }
            #region CATCH/FINALLY
            catch (Exception ex)
            {
                throw ex;
            }
            finally
            {
                strQuery = null;
                myCommand = null;
                sqlSelectData = null;
                strERRQuery = null;
                strPackageCode = null;
            }
            #endregion
            return objDT;
        }
        #endregion

        #region "Update/Insert Query in Db"
        protected void _updateInsert(string strQuery, SqlConnection myConnection)
        {
            StringBuilder strERRQuery = new StringBuilder();
            SqlCommand myCommand;
            try
            {
                myCommand = new SqlCommand(strQuery, myConnection);
                _connectionOpen(myConnection);
                myCommand.ExecuteNonQuery();
            }
            #region CATCH/FINALLY
            catch (Exception ex)
            {
                throw ex;
            }
            finally
            {
                strERRQuery = null;
                myConnection = null;
                myCommand = null;
            }
            #endregion
        }
        #endregion

        #region Connection Open
        private void _connectionOpen(SqlConnection myConnection)
        {
            try
            {
                if (myConnection.State != ConnectionState.Open)
                {
                    myConnection.Open();
                }
            }
            catch (Exception ex)
            {
                throw ex;
            }
        }
        #endregion

        #region Connection Close
        private void _connectionClose(SqlConnection myConnection)
        {
            try
            {
                if (myConnection.State != ConnectionState.Closed)
                {
                    myConnection.Close();
                }
            }
            catch (Exception ex)
            {
                throw ex;
            }
        }
        #endregion

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
          <ProjectItem
            Name="ST_0f4c70e6f7c6442b80cd048e260b45e0.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?><Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003"><PropertyGroup><ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids><Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration><Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform><ProductVersion>8.0.30703</ProductVersion><SchemaVersion>2.0</SchemaVersion><ProjectGuid>{6f1cd3ad-124c-410c-a3da-0ed5e3468b82}</ProjectGuid><OutputType>Library</OutputType><AppDesignerFolder>Properties</AppDesignerFolder><RootNamespace>ST_ce3ffc09050545a588750b50f21c1788</RootNamespace><AssemblyName>ST_0f4c70e6f7c6442b80cd048e260b45e0</AssemblyName><TargetFrameworkVersion>v4.0</TargetFrameworkVersion><FileAlignment>512</FileAlignment><ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Debug' "><DebugSymbols>true</DebugSymbols><DebugType>full</DebugType><Optimize>false</Optimize><OutputPath>.\bin\Debug\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>DEBUG;TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Release' "><DebugSymbols>false</DebugSymbols><Optimize>true</Optimize><OutputPath>.\bin\Release\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><ItemGroup><Reference Include="System" /><Reference Include="System.Data" /><Reference Include="System.Windows.Forms" /><Reference Include="System.Xml" /><Reference Include="Microsoft.SqlServer.ManagedDTS, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.ScriptTask, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /></ItemGroup><ItemGroup><AppDesigner Include="Properties\" /><Compile Include="Properties\AssemblyInfo.cs"><SubType>Code</SubType></Compile><EmbeddedResource Include="Properties\Resources.resx"><Generator>ResXFileCodeGenerator</Generator><LastGenOutput>Resources.Designer.cs</LastGenOutput></EmbeddedResource><Compile Include="Properties\Resources.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Resources.resx</DependentUpon></Compile><None Include="Properties\Settings.settings"><Generator>SettingsSingleFileGenerator</Generator><LastGenOutput>Settings.Designer.cs</LastGenOutput></None><Compile Include="Properties\Settings.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Settings.settings</DependentUpon></Compile><Compile Include="ScriptMain.cs"><SubType>Code</SubType></Compile></ItemGroup><!-- Include the build rules for a C# project.--><Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" /><ProjectExtensions><VisualStudio><FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}"><ProjectProperties HostName="ScriptTask" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="#HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\VisualStudio\10.0\InstallDir#\devenv.exe" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" /><Host Name="ScriptTask" GeneratedNamespace="$safeprojectname" IconIndex=""></Host><ProjectClient><HostIdentifier>SSIS_ST120</HostIdentifier></ProjectClient></FlavorProperties></VisualStudio></ProjectExtensions></Project>]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>ST_ce3ffc09050545a588750b50f21c1788</msb:CodeName>
		<msb:DisplayName>ST_ce3ffc09050545a588750b50f21c1788</msb:DisplayName>
		<msb:ProjectId>{EE24C7D7-5D12-4340-B8D9-E41721313B68}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_0f4c70e6f7c6442b80cd048e260b45e0.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_ce3ffc09050545a588750b50f21c1788.Properties.Settings.get_Default():ST_ce3ffc09050545a588750b50f21c1788.Properties.Sett" +
    "ings")]

namespace ST_ce3ffc09050545a588750b50f21c1788.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_ce3ffc09050545a588750b50f21c1788.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_ce3ffc09050545a588750b50f21c1788.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_ce3ffc09050545a588750b50f21c1788.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_ce3ffc09050545a588750b50f21c1788.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_ce3ffc09050545a588750b50f21c1788.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_0f4c70e6f7c6442b80cd048e260b45e0.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAPUqNVkAAAAAAAAAAOAAAiELAQsAADIAAAAIAAAAAAAAjlAA
AAAgAAAAYAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACgAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAADxQAABPAAAAAGAAAAgEAAAAAAAAAAAAAAAAAAAA
AAAAAIAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAlDAAAAAgAAAAMgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAAgEAAAAYAAAAAYAAAA0AAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAIAAAAACAAAAOgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAABw
UAAAAAAAAEgAAAACAAUACCwAADQkAAABAAAAAAAAAFArAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKA4AAAoqEzACAC0AAAABAAARfgEAAAQtIHIBAABw0AIA
AAIoDwAACm8QAAAKcxEAAAoKBoABAAAEfgEAAAQqGn4CAAAEKh4CgAIAAAQqGn4DAAAEKi5zBgAA
BoADAAAEKh4CKBQAAAoqABswBgDkBQAAAgAAEQIoFgAACm8XAAAKcnMAAHBvGAAACm8ZAAAKbxoA
AAoKBnMbAAAKC3McAAAKDHMdAAAKDQIHKAwAAAYIbx4AAAomCHKhAABwbx8AAAomCHLHAABwbx8A
AAomCHI3AQBwbx8AAAomCHJpAQBwbx8AAAomCHKfAQBwbx8AAAomCHLHAQBwbx8AAAomCHIlAgBw
bx8AAAomCHJrAgBwbx8AAAomCW8gAAAKAghvGgAACgcoCgAABg0JbyEAAApvIgAAChYxDQIJB3Kt
AgBwKAkAAAYIbx4AAAomCHLTAgBwbx8AAAomCHL3AgBwbx8AAAomCHJDAwBwbx8AAAomCHJpAQBw
bx8AAAomCHKfAQBwbx8AAAomCHKLAwBwbx8AAAomCHLlAwBwbx8AAAomCHI/BABwbx8AAAomCHJ9
BABwbx8AAAomCW8gAAAKAghvGgAACgcoCgAABg0JbyEAAApvIgAAChYxDQIJB3LHBABwKAkAAAYI
bx4AAAomCHL7BABwbx8AAAomCHIbBQBwbx8AAAomCHJpAQBwbx8AAAomCHKfAQBwbx8AAAomCHIU
BgBwbx8AAAomCW8gAAAKAghvGgAACgcoCgAABg0JbyEAAApvIgAAChYxDQIJB3JeBgBwKAkAAAYI
bx4AAAomCHKQBgBwbx8AAAomCHLCBgBwbx8AAAomCHJpAQBwbx8AAAomCHKfAQBwbx8AAAomCHLH
AQBwbx8AAAomCHICBwBwbx8AAAomCHIDCABwbx8AAAomCW8gAAAKAghvGgAACgcoCgAABg0JbyEA
AApvIgAAChYxDQIJB3JBCABwKAkAAAYIbx4AAAomCHKhAABwbx8AAAomCHJnCABwbx8AAAomCHJp
AQBwbx8AAAomCHKfAQBwbx8AAAomCHLHAQBwbx8AAAomCHKzCABwbx8AAAomCHL4CQBwbx8AAAom
CHJECgBwbx8AAAomCW8gAAAKAghvGgAACgcoCgAABg0JbyEAAApvIgAAChYxDQIJB3KqCgBwKAkA
AAYIbx4AAAomCHLeCgBwbx8AAAomCHJECwBwbx8AAAomCHJ8CwBwbx8AAAomCHKyCwBwbx8AAAom
CHLoCwBwbx8AAAomCHJEDABwbx8AAAomCHKkDABwbx8AAAomCHLuDABwbx8AAAomCHIuDQBwbx8A
AAomCHJ8DQBwbx8AAAomCHLCDQBwbx8AAAomCHIMDgBwbx8AAAomCHJSDgBwbx8AAAomCHKqDgBw
bx8AAAomCW8gAAAKAghvGgAACgcoCgAABg0JbyEAAApvIgAAChYxDQIJB3L4DgBwKAkAAAYIbx4A
AAomCHJCDwBwbx8AAAomCHJiDwBwbx8AAAomCHJpAQBwbx8AAAomCHKfAQBwbx8AAAomCHIUBgBw
bx8AAAomCW8gAAAKAghvGgAACgcoCgAABg0JbyEAAApvIgAAChYxDQIJB3IVEABwKAkAAAYIbx4A
AAomCHL7BABwbx8AAAomCHItEABwbx8AAAomCHK2EABwbx8AAAomCHIUBgBwbx8AAAomCW8gAAAK
AghvGgAACgcoCgAABg0JbyEAAApvIgAAChYxDQIJB3IQEQBwKAkAAAYCKBYAAAoWbyMAAArdCAEA
ABMECG8eAAAKJghyPhEAcG8fAAAKJghyghEAcG8fAAAKJggfCY0jAAABEwURBRZyzhEAcKIRBRcC
KBYAAApvFwAACnLkEQBwbxgAAApvGQAACm8aAAAKohEFGHIIEgBwohEFGQIoFgAACm8XAAAKchAS
AHBvGAAACm8ZAAAKbxoAAAqiEQUacggSAHCiEQUbAigWAAAKbxcAAApyNBIAcG8YAAAKbxkAAApv
GgAACqIRBRxyUBIAcKIRBR0RBG8kAAAKbxoAAApyaBIAcHJsEgBwbyUAAAqiEQUecnASAHCiEQUo
JgAACm8fAAAKJgIIbxoAAAoHKAsAAAYCKBYAAAoWbyMAAAreAN4OAgcoDQAABhQNFAwUC9wqQTQA
AAAAAAAtAAAAngQAAMsEAAAIAQAAJAAAAQIAAAAtAAAAqAUAANUFAAAOAAAAAAAAABswBQCyAgAA
AwAAEXMcAAAKCnMcAAAKC34nAAAKDRYTBAIEKAwAAAYCKBYAAApvFwAACnLkEQBwbxgAAApvGQAA
Cm8aAAAKDRYTBANvIQAACm8iAAAKEwUWEwY4egEAAANvIQAAChEGbygAAApygBIAcG8pAAAKbxoA
AApvKgAACnKWEgBwKCsAAAo5RAEAABEEF1gTBANvIQAAChEGbygAAAoMB28eAAAKJhYTBysbB3Kg
EgBwCG8sAAAKEQeaby0AAAomEQcXWBMHEQcIby4AAApvLwAACm8iAAAKF1kyzwZvHgAACiYGcj4R
AHBvHwAACiYGcoIRAHBvHwAACiYGHwuNIwAAARMKEQoWcs4RAHCiEQoXCaIRChhyCBIAcKIRChkC
KBYAAApvFwAACnIQEgBwbxgAAApvGQAACm8aAAAKohEKGnIIEgBwohEKGwIoFgAACm8XAAAKcjQS
AHBvGAAACm8ZAAAKbxoAAAqiEQoccggSAHCiEQodB28aAAAKohEKHnKqEgBwohEKHwkFohEKHwpy
cBIAcKIRCigmAAAKbx8AAAomAgZvGgAACgQoCwAABhEFF1kTBREGF1kTBgNvIQAACghvMAAACgNv
MQAAChEGF1gTBhEGEQU/ff7//wNvLwAACnKAEgBwbzIAAAoRBBY+qgAAAAZvHgAACiYGcq4SAHAC
KBYAAApvFwAACnLQEgBwbxgAAApvGQAACm8aAAAKcvASAHAoMwAACm8fAAAKJgIGbxoAAAoEKAsA
AAYEczQAAAoTCBEIAigWAAAKbxcAAApy0BIAcG8YAAAKbxkAAApvGgAACnLwEgBwKDUAAApvNgAA
CgIEKAwAAAYRCCBYAgAAbzcAAAoRCANvOAAACt4MEQgsBxEIbzkAAArc3gUTCREJet4PFAoUEAEU
CxQMFA0UEAPcKgAAQUwAAAIAAABAAgAATQAAAI0CAAAMAAAAAAAAAAAAAAAVAAAAhgIAAJsCAAAF
AAAAJAAAAQIAAAAVAAAAjQIAAKICAAAPAAAAAAAAABswAgB5AAAABAAAEXMcAAAKJnMdAAAKCn4n
AAAKJgIEKAwAAAYCKBYAAApvFwAACnLkEQBwbxgAAApvGQAACm8aAAAKJgMEczoAAAoLBxdvOwAA
CnM8AAAKDAgHbz0AAAoHIFgCAABvPgAACggGbz8AAAom3gMNCXreCBQQARQLFAzcBioAAAABHAAA
AAASAFhqAAMkAAABAgASAF1vAAgAAAAAGzACACoAAAAFAAARcxwAAAomAwRzOgAACgoCBCgMAAAG
Bm9AAAAKJt4DCwd63gYUEAIUCtwqAAABHAAAAAAGABgeAAMkAAABAgAGAB0jAAYAAAAAGzACABUA
AAAGAAARA29BAAAKFy4GA29CAAAK3gMKBnoqAAAAARAAAAAAAAAREQADJAAAARswAQAUAAAABgAA
EQNvQQAACiwGA29DAAAK3gMKBnoqARAAAAAAAAAQEAADJAAAAR4CKEQAAAoqtAAAAM7K774BAAAA
kQAAAGxTeXN0ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00
LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkj
U3lzdGVtLlJlc291cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQQURQtAAA
AEJTSkIBAAEAAAAAAAwAAAB2NC4wLjMwMzE5AAAAAAUAbAAAALQFAAAjfgAAIAYAAMQIAAAjU3Ry
aW5ncwAAAADkDgAA/BIAACNVUwDgIQAAEAAAACNHVUlEAAAA8CEAAEQCAAAjQmxvYgAAAAAAAAAC
AAABVx2iAQkDAAAA+iUzABYAAAEAAAAvAAAABQAAAAYAAAAOAAAACgAAAEQAAAACAAAADwAAAAYA
AAACAAAAAwAAAAQAAAABAAAABQAAAAEAAAABAAAAAAAKAAEAAAAAAAYAwQC6AAoA3QDIAA4APQEU
AQYAWQG6AAYAbwFeAQYAoAGLARIAKwIfAhIASwI1AgYACgPwAgYANQMjAwYATAMjAwYAaQMjAwYA
iAMjAwYAoQMjAwYAugMjAwYA1QMjAwYA8AMjAwYACQQjAwYAQgQiBAYAYgQiBAYAtwSkBAYA1AS6
AAYA2QS6AAYA/QQjAwoAKQUTBQoAQgUTBQYAVwUiBA4AeQUUAQ4AmwUUARYA9AXUBRYADAbUBQYA
PQYxBhIAXgYfAhIAeQYfAgYArQa6AAYAtAa6ABIA3wYfAhIAIAcfAhIAVgc1AgYAnQe6ABIAsQc1
AhIAzwe8BxIA2QcfAhIA9Qc1AhIAKQi8BxIATAi8BxIAWQgfAgAAAAABAAAAAAABAAEAAAAQADIA
PAAFAAEAAQAAARAAawA8AAkAAwAFAAEAEAB0AH8ADQAEAAgAAwEAAKMAAAARAAQADwARAH8BEwAR
AKwBFwARAPYBOQAGBqMCZQBWgKsCaABWgLMCaABQIAAAAACDGLwBGwABAFggAAAAAJMIwgEfAAEA
kSAAAAAAkwjWASQAAQCYIAAAAACTCOIBKQABAKAgAAAAAJYIBgI9AAIAsyAAAAAAhhi8ARsAAgCn
IAAAAACRGHIFpwACALwgAAAAAIYAGgIbAAIA4CYAAAAAgQBZAkcAAgDsKQAAAACGAGYCUAAFAJAq
AAAAAIQAdAJYAAcA5CoAAAAAgQCCAl8ACQAYKwAAAACBAJICXwAKAEgrAAAAAIYYvAEbAAsAAAAB
ALsCAAABAMECAAACAM4CAAADANsCAAABAOcCAAACAM4CAAABAOcCAAACAM4CAAABAM4CAAABAM4C
SQC8AXYAUQC8AXYAWQC8AXYAYQC8AXYAaQC8AXYAcQC8AXYAeQC8AXYAgQC8AXYAiQC8AXYAkQC8
AXYAmQC8AXsAoQC8ARsAqQC8ARsACQC8ARsAsQDrBIAAsQAGBYcAKQC8AYwAyQC8AZgA2QC8ARsA
EQC8ARsA4QC8ARsAGQCtBasA6QD+BbAA8QAVBrUA+QAeBrsACQAoBr8AQQC8AXYAAQG8ARsAOQC8
ARsAAQFLBsMAAQFRBskAOQBYBhsAOQBwBtAAEQGUBtYA6QCeBnsAIQG+Br8AGQHKBtoAGQHSBuAA
GQHZBvYACQEVBvkAKQEVBgABGQHnBr8AGQHvBgUBKQH7BgsBAQEJBxABKQEWBxgBOQA1Bx0BCQFB
ByMBOQBIBxsAMQFBB3YAGQHSBioBOQG8AV8AGQHSBjEBOQFiB3YAOQF7B3sAOQGPBzcBQQGpBxsA
SQG8AVgAUQHlB1YBYQG8ARsAYQEECF0BUQEWCHsAaQE3CGQBUQE8CNYAcQFpCIEBcQFzCBsAcQF4
CBsAGQC8ARsACAAUAGwACAAYAHEAKQCTAJ4ALgAbAP4BLgAjAP4BLgBjACQCLgALAI0BLgATANUB
LgAzANUBLgArAP4BLgA7AAQCLgBDAP4BLgBbABsCQwBrAHEASQCTAJ4AYQCbAHEAgwCrAHEAkwDm
AD0BagF4AYcBAgABAAMAAwAAAG8BLwAAAO4BNAAAABICQgACAAIAAwACAAMABQABAAQABQACAAUA
BwAEgAAAAQAAAN0YQoUAAAAAAACABAAABAAAAAAAAAAAAAAAAQCxAAAAAAAEAAAAAAAAAAAAAAAB
ALoAAAAAAAwAAAAAAAAAAAAAAAoA9QAAAAAABAAAAAAAAAAAAAAAAQAfAgAAAAAMAAAAAAAAAAAA
AAAKALUFAAAAAAAAAAABAAAAfggAAAUABAAAAAAAADxNb2R1bGU+AFNUXzBmNGM3MGU2ZjdjNjQ0
MmI4MGNkMDQ4ZTI2MGI0NWUwLmRsbABSZXNvdXJjZXMAU1RfY2UzZmZjMDkwNTA1NDVhNTg4NzUw
YjUwZjIxYzE3ODguUHJvcGVydGllcwBTZXR0aW5ncwBTY3JpcHRNYWluAFNUX2NlM2ZmYzA5MDUw
NTQ1YTU4ODc1MGI1MGYyMWMxNzg4AFNjcmlwdFJlc3VsdHMAbXNjb3JsaWIAU3lzdGVtAE9iamVj
dABTeXN0ZW0uQ29uZmlndXJhdGlvbgBBcHBsaWNhdGlvblNldHRpbmdzQmFzZQBNaWNyb3NvZnQu
U3FsU2VydmVyLlNjcmlwdFRhc2sATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuVGFza3MuU2NyaXB0
VGFzawBWU1RBUlRTY3JpcHRPYmplY3RNb2RlbEJhc2UARW51bQBTeXN0ZW0uUmVzb3VyY2VzAFJl
c291cmNlTWFuYWdlcgByZXNvdXJjZU1hbgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBDdWx0dXJlSW5m
bwByZXNvdXJjZUN1bHR1cmUALmN0b3IAZ2V0X1Jlc291cmNlTWFuYWdlcgBnZXRfQ3VsdHVyZQBz
ZXRfQ3VsdHVyZQBDdWx0dXJlAGRlZmF1bHRJbnN0YW5jZQBnZXRfRGVmYXVsdABEZWZhdWx0AE1h
aW4AU3lzdGVtLkRhdGEARGF0YVRhYmxlAFN5c3RlbS5EYXRhLlNxbENsaWVudABTcWxDb25uZWN0
aW9uAF9yZXBsYWNlRGF0YQBfZ2V0RGF0YVRhYmxlAF91cGRhdGVJbnNlcnQAX2Nvbm5lY3Rpb25P
cGVuAF9jb25uZWN0aW9uQ2xvc2UAdmFsdWVfXwBTdWNjZXNzAEZhaWx1cmUAdmFsdWUAZHRGYXVs
dHlUZW1wAG15Q29ubmVjdGlvbgBzdHJFcnJvck1zZwBzdHJRdWVyeQBTeXN0ZW0uUnVudGltZS5W
ZXJzaW9uaW5nAFRhcmdldEZyYW1ld29ya0F0dHJpYnV0ZQBTeXN0ZW0uUmVmbGVjdGlvbgBBc3Nl
bWJseVRpdGxlQXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUAQXNzZW1ibHlD
b25maWd1cmF0aW9uQXR0cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBBc3NlbWJseVBy
b2R1Y3RBdHRyaWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1h
cmtBdHRyaWJ1dGUAQXNzZW1ibHlDdWx0dXJlQXR0cmlidXRlAEFzc2VtYmx5VmVyc2lvbkF0dHJp
YnV0ZQBTeXN0ZW0uUnVudGltZS5Db21waWxlclNlcnZpY2VzAENvbXBpbGF0aW9uUmVsYXhhdGlv
bnNBdHRyaWJ1dGUAUnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAU1RfMGY0YzcwZTZmN2M2
NDQyYjgwY2QwNDhlMjYwYjQ1ZTAAU3lzdGVtLkRpYWdub3N0aWNzAERlYnVnZ2VyTm9uVXNlckNv
ZGVBdHRyaWJ1dGUAVHlwZQBSdW50aW1lVHlwZUhhbmRsZQBHZXRUeXBlRnJvbUhhbmRsZQBBc3Nl
bWJseQBnZXRfQXNzZW1ibHkAU3lzdGVtLkNvbXBvbmVudE1vZGVsAEVkaXRvckJyb3dzYWJsZUF0
dHJpYnV0ZQBFZGl0b3JCcm93c2FibGVTdGF0ZQBDb21waWxlckdlbmVyYXRlZEF0dHJpYnV0ZQAu
Y2N0b3IAU1NJU1NjcmlwdFRhc2tFbnRyeVBvaW50QXR0cmlidXRlAFNjcmlwdE9iamVjdE1vZGVs
AGdldF9EdHMATWljcm9zb2Z0LlNxbFNlcnZlci5NYW5hZ2VkRFRTAE1pY3Jvc29mdC5TcWxTZXJ2
ZXIuRHRzLlJ1bnRpbWUAVmFyaWFibGVzAGdldF9WYXJpYWJsZXMAVmFyaWFibGUAZ2V0X0l0ZW0A
Z2V0X1ZhbHVlAFRvU3RyaW5nAFN5c3RlbS5UZXh0AFN0cmluZ0J1aWxkZXIAQ2xlYXIAQXBwZW5k
AFJlc2V0AERhdGFSb3dDb2xsZWN0aW9uAGdldF9Sb3dzAEludGVybmFsRGF0YUNvbGxlY3Rpb25C
YXNlAGdldF9Db3VudABzZXRfVGFza1Jlc3VsdABTdHJpbmcARXhjZXB0aW9uAGdldF9NZXNzYWdl
AFJlcGxhY2UAQ29uY2F0AEVtcHR5AERhdGFSb3cAVG9VcHBlcgBvcF9FcXVhbGl0eQBnZXRfSXRl
bUFycmF5AEFwcGVuZEZvcm1hdABnZXRfVGFibGUARGF0YUNvbHVtbkNvbGxlY3Rpb24AZ2V0X0Nv
bHVtbnMAUmVtb3ZlAEFjY2VwdENoYW5nZXMAU3FsQnVsa0NvcHkAc2V0X0Rlc3RpbmF0aW9uVGFi
bGVOYW1lAHNldF9CdWxrQ29weVRpbWVvdXQAV3JpdGVUb1NlcnZlcgBJRGlzcG9zYWJsZQBEaXNw
b3NlAFNxbENvbW1hbmQAU3lzdGVtLkRhdGEuQ29tbW9uAERiQ29tbWFuZABDb21tYW5kVHlwZQBz
ZXRfQ29tbWFuZFR5cGUAU3FsRGF0YUFkYXB0ZXIAc2V0X1NlbGVjdENvbW1hbmQAc2V0X0NvbW1h
bmRUaW1lb3V0AERiRGF0YUFkYXB0ZXIARmlsbABFeGVjdXRlTm9uUXVlcnkARGJDb25uZWN0aW9u
AENvbm5lY3Rpb25TdGF0ZQBnZXRfU3RhdGUAT3BlbgBDbG9zZQBTVF9jZTNmZmMwOTA1MDU0NWE1
ODg3NTBiNTBmMjFjMTc4OC5Qcm9wZXJ0aWVzLlJlc291cmNlcy5yZXNvdXJjZXMAAAAAAHFTAFQA
XwBjAGUAMwBmAGYAYwAwADkAMAA1ADAANQA0ADUAYQA1ADgAOAA3ADUAMABiADUAMABmADIAMQBj
ADEANwA4ADgALgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMAAC1VAHMA
ZQByADoAOgBjAG8AbgBuAGUAYwB0AGkAbwBuAFMAdAByAGkAbgBnAAAlIABTAEUATABFAEMAVAAg
AFMASABVAEsASwBBAC4AKgAsACAAAG8gAEMAQQBTAEUAIABXAEgARQBOACAAUwBVAEIAUwBUAFIA
SQBOAEcAKABTAEgAVQBLAEsAQQAuAPpRd4MdT2h5anX3UywAMQAsADEAKQAgACEAPQAgAEsAQQBO
AEoATwAuAB1PaHktmABOQWggAAExIABPAFIAIABLAEEATgBKAE8ALgAdT2h5LZgATkFoIABJAFMA
IABOAFUATABMACAAATUgAFQASABFAE4AIAAnAFQAUgBVAEUAJwAgAEUATABTAEUAIAAnAEYAQQBM
AFMARQAnACAAAScgAEUATgBEACAAQQBTACAARABFAEwAXwBSAEUAQwBPAFIARAAgAABdIABGAFIA
TwBNACAAVABfAEQAQQBZAF8AVABFAE4AXwBTAEgAVQBLAEsAQQBfAEoASQBTAFMARQBLAEkAXwBU
AEUATQBQACAAQQBTACAAUwBIAFUASwBLAEEAIAAARSAATABFAEYAVAAgAEoATwBJAE4AIABNAF8A
SwBBAE4ASgBPAFUAXwBDAE8ARABFACAAQQBTACAASwBBAE4ASgBPACAAAEEgAE8ATgAgAFMASABV
AEsASwBBAC4A2FKaW7Mw/DDJMCAAPQAgAEsAQQBOAEoATwAuANhSmluzMPwwyTA7ACAAASX6UXeD
n1s+fh1PaHluMEhRLZhBaJIwk5VVkEgwfjBXMF8wAjABIyAAUwBFAEwARQBDAFQAIABUAEUATQBQ
AC4AKgAsACAAIAAASyAAQwBBAFMARQAgAFcASABFAE4AIABUAEUATQBQAC4A+lF3gx1PaHlqdfdT
IAA9ACAATQBBAEkATgAuAPpRd4MdT2h5anX3UyAAAUcgAEEATgBEACAAVABFAE0AUAAuAPpRd4Md
T2h5DmYwfWp191MgAD0AIABNAEEASQBOAC4A+lF3gx1PaHkOZjB9anX3UyAAAVkgAEYAUgBPAE0A
IABUAF8ARABBAFkAXwBUAEUATgBfAFMASABVAEsASwBBAF8ASgBJAFMAUwBFAEsASQBfAFQARQBN
AFAAIABBAFMAIABUAEUATQBQACAAAFkgAEwARQBGAFQAIABKAE8ASQBOACAAVABfAEQAQQBZAF8A
VABFAE4AXwBTAEgAVQBLAEsAQQBfAEoASQBTAFMARQBLAEkAIABBAFMAIABNAEEASQBOACAAAD0g
AE8ATgAgAFQARQBNAFAALgD6UXeDHU9oeWp191MgAD0AIABNAEEASQBOAC4A+lF3gx1PaHlqdfdT
IAABSSAAQQBOAEQAIABUAEUATQBQAC4A+lF3gx1PaHkOZjB9anX3UyAAPQAgAE0AQQBJAE4ALgD6
UXeDHU9oeQ5mMH1qdfdTOwAgAAEz+lF3gx1PaHlqdfdT+zD6UXeDHU9oeQ5mMH1qdfdTTDDiZWsw
1lO8jwhufzBnMFkwAjABHyAAUwBFAEwARQBDAFQAIAAqACwAQwBBAFMARQAgAACA9yAAVwBIAEUA
TgAgAEMAQQBTAFQAKABDAE8ATgBWAEUAUgBUACgAVgBBAFIAQwBIAEEAUgAoADEAMAApACwA+lF3
g+Vl2E4sADEAMgAxACkAIABBAFMAIABEAEEAVABFACkAIAA8AD0AIAAoAFMARQBMAEUAQwBUACAA
TQBBAFgAKAAIZ6ZeQn2GTuVlKQAgAEYAUgBPAE0AIABNAF8ARABFAE4AUABZAE8AVQBfAFMASQBN
AEUAXwBNAEEAUwBUAEUAUgAgAFcASABFAFIARQAgAAhnpl7gfeVlIABJAFMAIABOAE8AVAAgAE4A
VQBMAEwAKQAgAAFJIABGAFIATwBNACAAVABfAEQAQQBZAF8AVABFAE4AXwBTAEgAVQBLAEsAQQBf
AEoASQBTAFMARQBLAEkAXwBUAEUATQBQADsAADEIZ6Ze4H2BMH4wVzBfMAIw4H2BMOVlTVJuMPpR
d4OfWz5+5WVMMEIwijB+MFkwAjABMSAAUwBFAEwARQBDAFQAIABTAEgAVQBLAEsAQQAuACoALAAg
ACAAQwBBAFMARQAgAAA/IABXAEgARQBOACAAUwBIAFUASwBLAEEALgD6UXeD5WXYTiAAPAAgAFQA
QQBOAEEALgDaaHhT5WXYTiAAIAABgP8gAEwARQBGAFQAIABKAE8ASQBOACAAKABTAEUATABFAEMA
VAAgAEQASQBTAFQASQBOAEMAVAAgAJdeF4KzMPwwyTAsAE0AQQBYACgA2mh4U+Vl2E4pACAAQQBT
ACAA2mh4U+Vl2E4gAEYAUgBPAE0AIABNAF8AVABBAE4AQQBPAFIATwBTAEgASQBfAE0AQQBTAFQA
RQBSACAAVwBIAEUAUgBFACAA2mh4U7p4mlvlZSAAIQA9ACAAJwAxADkAMAAwAC0AMAAxAC0AMAAx
ACcAIABHAFIATwBVAFAAIABCAFkAIACXXheCszD8MMkwKQAgAFQAQQBOAEEAIAAgAAE9IABPAE4A
IABTAEgAVQBLAEsAQQAuAPpRq161MKQwyDAgAD0AIABUAEEATgBBAC4Al14XgrMw/DDJMCAAASXa
aHhTuniaW+VlTVJuMPpRd4OfWz5+5WVMMEIwijB+MFkwAjABSyAAQwBBAFMARQAgAFcASABFAE4A
IABKAE8ASwBFAE4ALgDVTmVRYWf2TiAAIQA9ACAAUwBIAFUASwBLAEEALgC3jNZT11MXiiAAAYFD
IABMAEUARgBUACAASgBPAEkATgAgACgAUwBFAEwARQBDAFQAIABNAFMAVAAuADP/K/81/7Mw/DDJ
MCAAQQBTACAAM/8r/zX/szD8MMkwLABKAFIALgAJZ7lSi5XLWeVlLABKAFIALgAJZ7lSQn2GTuVl
LAAgAEoAUgAuANVOZVFhZ/ZOIABGAFIATwBNACAATQBfAFMASABJAEkAUgBFAF8ASgBPAFUASwBF
AE4AXwBSAEkAUgBFAEsASQAgAEoAUgAgAEwARQBGAFQAIABKAE8ASQBOACAATQBfAFMASABPAFUA
SABJAE4AXwBEAEEAVABBACAATQBTAFQAIABPAE4AIABKAFIALgBGVcFUszD8MMkwIAA9ACAATQBT
AFQALgBGVcFUszD8MMkwKQAgAEEAUwAgAEoATwBLAEUATgAgAAFLIABPAE4AIABKAE8ASwBFAE4A
LgAz/yv/Nf+zMPwwyTAgAD0AIABTAEgAVQBLAEsAQQAuADP/K/81/7Mw/DDJMCAAQQBOAEQAIAAB
ZSAAUwBIAFUASwBLAEEALgD6UXeD5WXYTiAAQgBFAFQAVwBFAEUATgAgAEoATwBLAEUATgAuAAln
uVKLlctZ5WUgAEEATgBEACAASgBPAEsARQBOAC4ACWe5UkJ9hk7lZTsAIAABM/pRd4OfWz5+5WVo
MAlnuVKLlctZ5WVuMER9fzAIVI8wWzCSMJOVVZBIMH4wVzBfMAIwAWUgAFMARQBMAEUAQwBUACAA
UwBIAFUASwBLAEEALgAqACwAQwBBAFMARQAgAFcASABFAE4AIABUAEUATgBQAE8ALgCXXheCszD8
MMkwIABJAFMAIABOAFUATABMACAATwBSACAAATcgAE4AWQBVAFQARQBOAFAATwAuAJdeF4KzMPww
yTAgAEkAUwAgAE4AVQBMAEwAIABPAFIAIAABNSAAUwBIAE8ASABJAE4ALgAz/yv/Nf+zMPwwyTAg
AEkAUwAgAE4AVQBMAEwAIABPAFIAIAABNSAAUwBJAEkAUgBFAFMAQQBLAEkALgDVTmVRSFGzMPww
yTAgAEkAUwAgAE4AVQBMAEwAIAABWyAAVABIAEUATgAgACcAVABSAFUARQAnACAARQBMAFMARQAg
ACcARgBBAEwAUwBFACcAIAAgAEUATgBEAAkAQQBTACAARABFAEwAXwBSAEUAQwBPAFIARAAgAAFf
IABGAFIATwBNACAAVABfAEQAQQBZAF8AVABFAE4AXwBTAEgAVQBLAEsAQQBfAEoASQBTAFMARQBL
AEkAXwBUAEUATQBQACAAQQBTACAAUwBIAFUASwBLAEEAIAAgAABJIABMAEUARgBUACAASgBPAEkA
TgAgAE0AXwBUAEUATgBQAE8AXwBNAEEAUwBUAEUAUgAgAEEAUwAgAFQARQBOAFAATwAgACAAAD8g
AE8ATgAgAFMASABVAEsASwBBAC4A+lGrXrUwpDDIMCAAPQAgAFQARQBOAFAATwAuAJdeF4KzMPww
yTAgAAFNIABMAEUARgBUACAASgBPAEkATgAgAE0AXwBUAEUATgBQAE8AXwBNAEEAUwBUAEUAUgAg
AEEAUwAgAE4AWQBVAFQARQBOAFAATwAgAABFIABPAE4AIABTAEgAVQBLAEsAQQAuAGVRq161MKQw
yDAgAD0AIABOAFkAVQBUAEUATgBQAE8ALgCXXheCszD8MMkwIAABSSAATABFAEYAVAAgAEoATwBJ
AE4AIABNAF8AUwBIAE8AVQBIAEkATgBfAEQAQQBUAEEAIABBAFMAIABTAEgATwBIAEkATgAgAABF
IABPAE4AIABTAEgAVQBLAEsAQQAuADP/K/81/7Mw/DDJMCAAPQAgAFMASABPAEgASQBOAC4AM/8r
/zX/szD8MMkwIAABVyAATABFAEYAVAAgAEoATwBJAE4AIABNAF8AUwBJAEkAUgBFAFMAQQBLAEkA
XwBNAEEAUwBUAEUAUgAgAEEAUwAgAFMASQBJAFIARQBTAEEASwBJACAAAE0gAE8ATgAgAFMASABV
AEsASwBBAC4A1U5lUUhRszD8MMkwIAA9ACAAUwBJAEkAUgBFAFMAQQBLAEkALgDVTmVRSFGzMPww
yTA7ACAAAUnVTmVRSFGzMPwwyTABMDP/K/81/7Mw/DDJMH4wXzBvMJdeF4KzMPwwyTBvMN4wuTC/
MGswWFsoV1UwjDBmMEQwfjBbMJMwAjABHyAAUwBFAEwARQBDAFQAIAAqACwAIABDAEEAUwBFAACA
sSAAVwBIAEUATgAgAEMATwBOAFYARQBSAFQAKABWAEEAUgBDAEgAQQBSACgAOAApACwAenYfdeVl
2E4sADEAMQAyACkAIAAhAD0AIABDAE8ATgBWAEUAUgBUACgAVgBBAFIAQwBIAEEAUgAoADgAKQAs
AEQAQQBUAEUAQQBEAEQAKABEAEEAWQAsAC0AMQAsAEcARQBUAEQAQQBUAEUAKAApACkALAAxADEA
MgApACAAARd6dh915WWSMJOVVZBIMH4wVzBfMAIwAYCHIABXAEgARQBOACAAQwBPAE4AVgBFAFIA
VAAoAEQAQQBUAEUALAD6UXeD5WXYTikAIAA+ACAAQwBPAE4AVgBFAFIAVAAoAEQAQQBUAEUALABE
AEEAVABFAEEARABEACgARABBAFkALAAtADEALABHAEUAVABEAEEAVABFACgAKQApACkAIAABWSAA
VABIAEUATgAgACcAVABSAFUARQAnACAARQBMAFMARQAgACcARgBBAEwAUwBFACcAIABFAE4ARAAg
AEEAUwAgAEQARQBMAF8AUgBFAEMATwBSAEQAIAABLccw/DC/MGswBlxlZ24w+lF3gx1PaHnlZUww
WFsoV1UwjDBmMEQwfjBZMAIwAUNJAE4AUwBFAFIAVAAgAEkATgBUAE8AIABLAEEATgBTAEgASQBf
AFAAQQBDAEsAQQBHAEUAXwBFAFIAUgBPAFIAIAAASyAAKADRMMMwsTD8MLgwszD8MMkwLADHMPww
vzDlZdhOLACoMOkw/DDlZUJmLACoMOkw/DCFUblbLACoMOkw/DDVMOkwsDApACAAARUgAFYAQQBM
AFUARQBTACgAJwBHAAEjVQBzAGUAcgA6ADoAcABhAGMAawBhAGcAZQBDAG8AZABlAAAHJwAsACcA
ASNVAHMAZQByADoAOgBjAHUAcgByAGUAbgB0AEQAYQB0AGUAABtVAHMAZQByADoAOgBzAHkAcwBE
AGEAdABlAAAXJwAsACcAtzC5MMYw4DCoMOkw/DA6AAEDJwABAy0AAQ8nACwAJwAzACcAKQA7AAEV
RABFAEwAXwBSAEUAQwBPAFIARAAACVQAUgBVAEUAAAl7ADAAfQAgAAADAjABISAAVABSAFUATgBD
AEEAVABFACAAVABBAEIATABFACAAAB9VAHMAZQByADoAOgBjAGgAZQBjAGsAVAB5AHAAZQAAC18A
VABFAE0AUAAAmU0YQHfYbUa5OErH7SouugAIt3pcVhk04IkIiYRdzYCAzJEDBhIVAwYSGQMgAAEE
AAASFQQAABIZBQABARIZBAgAEhUECAASGQMGEgwEAAASDAQIABIMCCADARIdEiEOByACEh0OEiEG
IAIBDhIhBSABARIhAgYIAwYRFAQAAAAABAEAAAAEIAEBDgQgAQEIBgABElkRXQQgABJhBiACAQ4S
YQQHARIVBSABARFpCAEAAgAAAAAAAwAAAQQgABJ1BCAAEnkFIAESfRwDIAAcAyAADgUgABKAgQYg
ARKAgQ4FIAASgIUDIAAIBSACDg4OBQABDh0ODwcGDhIhEoCBEh0SgJEdDgIGDgYgARKAlQgEIAEc
DgUAAgIODgQgAB0cByACEoCBDhwEIAASHQUgABKAmQYgAQESgJUGAAMODg4OBQACDg4OBSABARId
GAcLEoCBEoCBEoCVDggICAgSgJ0SgJEdDgYgAQERgK0GIAEBEoClBSABCBIdDQcEEh0SgKUSgLES
gJEIBwISgKUSgJEFIAARgL0FBwESgJFHAQAaLk5FVEZyYW1ld29yayxWZXJzaW9uPXY0LjABAFQO
FEZyYW1ld29ya0Rpc3BsYXlOYW1lEC5ORVQgRnJhbWV3b3JrIDQoAQAjU1RfY2UzZmZjMDkwNTA1
NDVhNTg4NzUwYjUwZjIxYzE3ODgAAAUBAAAAABYBABFDb3B5cmlnaHQgQCAgMjAxNgAACAEACAAA
AAAAHgEAAQBUAhZXcmFwTm9uRXhjZXB0aW9uVGhyb3dzAQBkUAAAAAAAAAAAAAB+UAAAACAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAcFAAAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAA
AAAA/yUAIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAQAAAAGAAAgAAA
AAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAAAFhgAACwAwAAAAAA
AAAAAACwAzQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAAvQTv/gAAAQAAAAEA
QoXdGAAAAQBChd0YPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAABAFYAYQByAEYAaQBs
AGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAAAAAAALAEEAMAAAEA
UwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAA7AIAAAEAMAAwADAAMAAwADQAYgAwAAAAcAAk
AAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAAAFMAVABfAGMAZQAzAGYAZgBjADAA
OQAwADUAMAA1ADQANQBhADUAOAA4ADcANQAwAGIANQAwAGYAMgAxAGMAMQA3ADgAOAAAAEAADwAB
AEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgA2ADMANgA1AC4AMwA0ADEAMQA0AAAA
AABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMAVABfADAAZgA0AGMANwAwAGUANgBm
ADcAYwA2ADQANAAyAGIAOAAwAGMAZAAwADQAOABlADIANgAwAGIANAA1AGUAMAAuAGQAbABsAAAA
SAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBvAHAAeQByAGkAZwBoAHQAIABA
ACAAIAAyADAAMQA2AAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBhAG0AZQAAAFMA
VABfADAAZgA0AGMANwAwAGUANgBmADcAYwA2ADQANAAyAGIAOAAwAGMAZAAwADQAOABlADIANgAw
AGIANAA1AGUAMAAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEAbQBlAAAAAABTAFQA
XwBjAGUAMwBmAGYAYwAwADkAMAA1ADAANQA0ADUAYQA1ADgAOAA3ADUAMABiADUAMABmADIAMQBj
ADEANwA4ADgAAABEAA8AAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADYA
MwA2ADUALgAzADQAMQAxADQAAAAAAEgADwABAEEAcwBzAGUAbQBiAGwAeQAgAFYAZQByAHMAaQBv
AG4AAAAxAC4AMAAuADYAMwA2ADUALgAzADQAMQAxADQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABQAAAMAAAAkDAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\原価履歴マスタチェック"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:Description="Script Task"
      DTS:DTSID="{74CA43AC-83B7-4CE0-A3F1-CEB2DC793070}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="原価履歴マスタチェック"
      DTS:ThreadHint="1">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_1879164d18434922b821b58ca4d6ca19"
          VSTAMajorVersion="3"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadOnlyVariables="User::checkType,User::connectionString,User::currentDate,User::packageCode,User::sysDate">
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_1879164d18434922b821b58ca4d6ca19")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_1879164d18434922b821b58ca4d6ca19")]
[assembly: AssemblyCopyright("Copyright @  2016")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="ST_1879164d18434922b821b58ca4d6ca19.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{c468750e-c8b3-4d46-98f3-f4486318237c}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_1879164d18434922b821b58ca4d6ca19</RootNamespace>
    <AssemblyName>ST_1879164d18434922b821b58ca4d6ca19</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>

  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>

  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
         <Generator>ResXFileCodeGenerator</Generator>
         <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
             <AutoGen>True</AutoGen>
         <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
         <Generator>SettingsSingleFileGenerator</Generator>
         <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
         <AutoGen>True</AutoGen>
         <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
         <SubType>Code</SubType>
    </Compile>
  </ItemGroup>

  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />

  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptTask"
                           HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}"
                           ApplicationType="usd"
                           Language="cs"
                           TemplatesPath=""
                           DebugInfoExeName="#HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\VisualStudio\10.0\InstallDir#\devenv.exe"
                           DebugInfoCommandLine=""
                           DebugInfoWorkingDir=""
                           IconImageList=""/>
        <Host Name="ScriptTask" GeneratedNamespace="$safeprojectname" IconIndex="">
        </Host>
        <ProjectClient>
            <HostIdentifier>SSIS_ST120</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[#region Namespaces
using System;
using System.Data;
using System.Data.SqlClient;
using System.Text;

#endregion

namespace ST_1879164d18434922b821b58ca4d6ca19
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region "Main Method"
        //作成者: Irfan Mansuri
        //説明: This Package aim to Check Master Data for 原価履歴(GENKA_RIREKI).
        //      By Checking its FK of SKU in SHOUHIN_MASTER.
		public void Main()
		{
            //User::connectionString,
            string strConnectionString = Dts.Variables["User::connectionString"].Value.ToString();
            SqlConnection myConnection = new SqlConnection(strConnectionString);
            StringBuilder strBuildQry = new StringBuilder();
            DataTable dtGenka = new DataTable();    //Get GENKA_TEMP Records in it
            DataRow drTemp=null; //To Delete From GENKA_TEMP Record from its DataTable.
            StringBuilder strBuildRow;
            string strPackageCode = string.Empty;
            int intErrorCount = 0;  //To Count Errors in the DataTable, to avoid its extra TRUNCATION and BULK.
            try
            {
                _connectionOpen(myConnection);   //Open SQL Connection
                strPackageCode = Dts.Variables["User::packageCode"].Value.ToString();
                strBuildRow = new StringBuilder();
                #region "Get Faulty SKU"
                //Which SKUs are NOT in its Master it will show 'DEL_RECORD' as 'TRUE'
                strBuildQry.Clear();
                strBuildQry.Append(" SELECT GENKA.*, CASE ");
                strBuildQry.Append(" WHEN SHOHIN.ＳＫＵコード IS NULL ");
                strBuildQry.Append(" THEN 'TRUE' ELSE 'FALSE' ");
                strBuildQry.Append(" END AS DEL_RECORD ");
                strBuildQry.Append(" FROM  M_GENKA_RIREKI_TEMP AS GENKA ");
                strBuildQry.Append(" LEFT JOIN  M_SHOUHIN_DATA AS SHOHIN ");
                strBuildQry.Append(" ON  GENKA.ＳＫＵコード = SHOHIN.ＳＫＵコード ");
                strBuildQry.Append(" ORDER BY  DEL_RECORD DESC;");
                #endregion
                dtGenka.Reset();
                dtGenka = _getDataTable(strBuildQry.ToString(), myConnection);  //Retrieve GENKA Records
                if (dtGenka.Rows.Count > 0)
                {
                    intErrorCount = 0;
                    int countRows = dtGenka.Rows.Count;
                    for (int intI = 0; intI < countRows; intI++)
                    {
                        #region Report Faulty Records
                        if (dtGenka.Rows[intI]["DEL_RECORD"].ToString().ToUpper() == "TRUE")
                        {
                            intErrorCount = intErrorCount + 1;
                            //'TRUE' means Faulty SKU Record
                            drTemp = dtGenka.Rows[intI];
                            strBuildRow.Clear();
                            for (int intJ = 0; intJ < drTemp.Table.Columns.Count-1; intJ++)
                            {
                                strBuildRow.AppendFormat("{0} ",drTemp.ItemArray[intJ]);
                            }
                            strBuildQry.Clear();
                            strBuildQry.Append("INSERT INTO KANSHI_PACKAGE_ERROR ");
                            strBuildQry.Append(" (パッケージコード,データ日付,エラー日時,エラー内容,エラーフラグ) ");
                            strBuildQry.Append(" VALUES('G" + strPackageCode + "','" + Dts.Variables["User::currentDate"].Value.ToString() + "','" + Dts.Variables["User::sysDate"].Value.ToString() + "','" + strBuildRow.ToString() + "。商品マスタにＳＫＵが存在されていません。','3');");
                            _updateInsert(strBuildQry.ToString(), myConnection);
                            countRows = countRows - 1;
                            intI = intI - 1;
                            dtGenka.Rows.Remove(drTemp);   //Remove Faulty Records from DataTable Object.
                            dtGenka.AcceptChanges();    //Commit DataTable Changes.
                        }
                        #endregion
                    }

                    dtGenka.Columns.Remove("DEL_RECORD");
                    if (intErrorCount > 0)
                    {
                        #region "TRUNCATE TEMP Table"
                        //TRUNCATE TEMP Table, to be import New Correct Records from 'DtGenka' DataTable.
                        strBuildQry.Clear();
                        strBuildQry.Append(" TRUNCATE TABLE " + Dts.Variables["User::checkType"].Value.ToString() + "_TEMP;");
                        _updateInsert(strBuildQry.ToString(), myConnection);
                        #endregion
                        #region "Bulk Update Records"
                        //正しいデータテーブルからインポートするためいに。
                        using (SqlBulkCopy bulkCopy = new SqlBulkCopy(myConnection))
                        {
                            bulkCopy.DestinationTableName = Dts.Variables["User::checkType"].Value.ToString() + "_TEMP";   //Assign table name
                            _connectionOpen(myConnection);   //Open only if it is Close.
                            bulkCopy.BulkCopyTimeout = 600; //Default Timeut 30 Change to 600. in seconds
                            bulkCopy.WriteToServer(dtGenka);   //Write into Actual table.
                        }
                        #endregion
                    }
                }

                #region "伝票日付 Should not be bigger than Today"
                //Get All The Records of Temp TABLE, with New Column DEL_RECORD as Flag.
                //Faulty Records will have DEL_RECORD as 'TRUE'
                strBuildQry.Clear();
                strBuildQry.Append(" SELECT *, CASE ");
                strBuildQry.Append(" WHEN CONVERT(DATE,有効開始日) > CONVERT(DATE,GETDATE()) ");
                strBuildQry.Append(" THEN 'TRUE' ELSE 'FALSE' END AS DEL_RECORD ");
                strBuildQry.Append(" FROM M_GENKA_RIREKI_TEMP;");
                dtGenka.Reset();
                dtGenka = _getDataTable(strBuildQry.ToString(), myConnection);
                if (dtGenka.Rows.Count > 0)
                {
                    intErrorCount = 0;
                    int countRows = dtGenka.Rows.Count;
                    for (int intI = 0; intI < countRows; intI++)
                    {
                        #region Report Faulty Records
                        if (dtGenka.Rows[intI]["DEL_RECORD"].ToString().ToUpper() == "TRUE")
                        {
                            intErrorCount = intErrorCount + 1;
                            //'TRUE' means Faulty SKU Record
                            drTemp = dtGenka.Rows[intI];
                            strBuildRow.Clear();
                            for (int intJ = 0; intJ < drTemp.Table.Columns.Count - 1; intJ++)
                            {
                                strBuildRow.AppendFormat("{0} ", drTemp.ItemArray[intJ]);
                            }
                            strBuildQry.Clear();
                            strBuildQry.Append("INSERT INTO KANSHI_PACKAGE_ERROR ");
                            strBuildQry.Append(" (パッケージコード,データ日付,エラー日時,エラー内容,エラーフラグ) ");
                            strBuildQry.Append(" VALUES('G" + strPackageCode + "','" + Dts.Variables["User::currentDate"].Value.ToString() + "','" + Dts.Variables["User::sysDate"].Value.ToString() + "','" + strBuildRow.ToString() + "。原価有効開始日で将来日の設定が禁止です。','3');");
                            _updateInsert(strBuildQry.ToString(), myConnection);
                            countRows = countRows - 1;
                            intI = intI - 1;
                            dtGenka.Rows.Remove(drTemp);   //Remove Faulty Records from DataTable Object.
                            dtGenka.AcceptChanges();    //Commit DataTable Changes.
                        }
                        #endregion
                    }

                    dtGenka.Columns.Remove("DEL_RECORD");
                    if (intErrorCount > 0)
                    {
                        #region "TRUNCATE TEMP Table"
                        //TRUNCATE TEMP Table, to be import New Correct Records from 'DtGenka' DataTable.
                        strBuildQry.Clear();
                        strBuildQry.Append(" TRUNCATE TABLE " + Dts.Variables["User::checkType"].Value.ToString() + "_TEMP;");
                        _updateInsert(strBuildQry.ToString(), myConnection);
                        #endregion
                        #region "Bulk Update Records"
                        //正しいデータテーブルからインポートするためいに。
                        using (SqlBulkCopy bulkCopy = new SqlBulkCopy(myConnection))
                        {
                            bulkCopy.DestinationTableName = Dts.Variables["User::checkType"].Value.ToString() + "_TEMP";   //Assign table name
                            _connectionOpen(myConnection);   //Open only if it is Close.
                            bulkCopy.BulkCopyTimeout = 600; //Default Timeut 30 Change to 600. in seconds
                            bulkCopy.WriteToServer(dtGenka);   //Write into Actual table.
                        }
                        #endregion
                    }
                }
                #endregion
                Dts.TaskResult = (int)ScriptResults.Success;
            }
            #region CATCH/FINALLY
            catch (Exception ex)
            {
                strBuildQry.Clear();
                strBuildQry.Append("INSERT INTO KANSHI_PACKAGE_ERROR ");
                strBuildQry.Append(" (パッケージコード,データ日付,エラー日時,エラー内容,エラーフラグ) ");
                strBuildQry.Append(" VALUES('G" + strPackageCode + "','" + Dts.Variables["User::currentDate"].Value.ToString() + "','" + Dts.Variables["User::sysDate"].Value.ToString() + "','システムエラー:" + ex.Message.ToString().Replace("'", "-") + "','3');");
                _connectionOpen(myConnection);
                _updateInsert(strBuildQry.ToString(), myConnection);
                //Dts.TaskResult = (int)ScriptResults.Failure;
                Dts.TaskResult = (int)ScriptResults.Success;
            }
            finally
            {
                _connectionClose(myConnection);  //Close SQL Connection
                strConnectionString = null;
                strBuildQry = null;
                myConnection = null;
                dtGenka = null;
                drTemp=null;
                strBuildRow = null;
                strPackageCode = null;
            }
            #endregion
        }
        #endregion

        #region "Get DataTable"
        //作成日付: 16-07-2016
        //説明: Aim to Return DataTable from the Query.
        public DataTable _getDataTable(string strQuery, SqlConnection myConnection)
        {
            StringBuilder strERRQuery = new StringBuilder();
            DataTable objDT = new DataTable();
            SqlCommand myCommand;
            SqlDataAdapter sqlSelectData;
            try
            {
                _connectionOpen(myConnection);
                myCommand = new SqlCommand(strQuery, myConnection);
                myCommand.CommandType = CommandType.Text;
                sqlSelectData = new SqlDataAdapter();
                sqlSelectData.SelectCommand = myCommand;
                myCommand.CommandTimeout = 600; //Increases Query execution timeout.
                sqlSelectData.Fill(objDT);
                Dts.TaskResult = (int)ScriptResults.Success;
            }
            #region CATCH/FINALLY
            catch (Exception ex)
            {
                throw ex;
            }
            finally
            {
                myConnection = null;
                strQuery = null;
                myCommand = null;
                sqlSelectData = null;
                strERRQuery = null;
            }
            #endregion
            return objDT;
        }
        #endregion

        #region "Update/Insert Query in Db"
        /// <summary>
        /// 作成日付: 2016-07-20
        /// 説明: Insert/Update Query will be run on specified connection.
        /// </summary>
        protected void _updateInsert(string strQuery, SqlConnection myConnection)
        {
            SqlCommand myCommand;
            try
            {
                _connectionOpen(myConnection);
                myCommand = new SqlCommand(strQuery, myConnection);
                myCommand.ExecuteNonQuery();
                Dts.TaskResult = (int)ScriptResults.Success;
            }
            #region CATCH/FINALLY
            catch (Exception ex)
            {
                throw ex;
            }
            finally
            {
                myConnection = null;
                myCommand = null;
            }
            #endregion
        }
        #endregion

        #region Connection Open
        private void _connectionOpen(SqlConnection myConnection)
        {
            try
            {
                if (myConnection.State != ConnectionState.Open)
                {
                    myConnection.Open();
                }
            }
            catch (Exception ex)
            {
                throw ex;
            }
        }
        #endregion

        #region Connection Close
        private void _connectionClose(SqlConnection myConnection)
        {
            try
            {
                if (myConnection.State != ConnectionState.Closed)
                {
                    myConnection.Close();
                }
            }
            catch (Exception ex)
            {
                throw ex;
            }
        }
        #endregion

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>ST_1879164d18434922b821b58ca4d6ca19</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>ST_1879164d18434922b821b58ca4d6ca19</msb:DisplayName>
		<msb:ProjectId>{57F3D134-EFF6-48F0-BAD5-A5039002E7C1}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_1879164d18434922b821b58ca4d6ca19.csproj"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_1879164d18434922b821b58ca4d6ca19.Properties.Settings.get_Default():ST_1879164d18434922b821b58ca4d6ca19.Properties.Sett" +
    "ings")]

namespace ST_1879164d18434922b821b58ca4d6ca19.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_1879164d18434922b821b58ca4d6ca19.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_1879164d18434922b821b58ca4d6ca19.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_1879164d18434922b821b58ca4d6ca19.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_1879164d18434922b821b58ca4d6ca19.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_1879164d18434922b821b58ca4d6ca19.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_1879164d18434922b821b58ca4d6ca19.dll">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
FBABFAsUDNwGKgAAARwAAAAADABEUAADKAAAAQIADABJVQALAAAAABswAgAwAAAABAAAEQIEKAsA
AAYDBHM6AAAKCgZvQAAACiYCKBYAAAoWbzcAAAreAwsHet4GFBACFArcKgEcAAAAAAAAJCQAAygA
AAECAAAAKSkABgAAAAAbMAIAFQAAAAUAABEDb0EAAAoXLgYDb0IAAAreAwoGeioAAAABEAAAAAAA
ABERAAMoAAABGzABABQAAAAFAAARA29BAAAKLAYDb0MAAAreAwoGeioBEAAAAAAAABAQAAMoAAAB
HgIoRAAACioAAAAAtAAAAM7K774BAAAAkQAAAGxTeXN0ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVh
ZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tl
eVRva2VuPWI3N2E1YzU2MTkzNGUwODkjU3lzdGVtLlJlc291cmNlcy5SdW50aW1lUmVzb3VyY2VT
ZXQCAAAAAAAAAAAAAABQQURQQURQtAAAAEJTSkIBAAEAAAAAAAwAAAB2NC4wLjMwMzE5AAAAAAUA
bAAAAJAFAAAjfgAA/AUAAHgIAAAjU3RyaW5ncwAAAAB0DgAA1AUAACNVUwBIFAAAEAAAACNHVUlE
AAAAWBQAADwCAAAjQmxvYgAAAAAAAAACAAABVx2iAQkDAAAA+iUzABYAAAEAAAAvAAAABQAAAAYA
AAANAAAABwAAAEQAAAACAAAADwAAAAUAAAACAAAAAwAAAAQAAAABAAAABQAAAAEAAAABAAAAAAAK
AAEAAAAAAAYAwQC6AAoA3QDIAA4APQEUAQYAWQG6AAYAbwFeAQYAoAGLARIAKwIfAhIASwI1AgYA
5ALKAgYADwP9AgYAJgP9AgYAQwP9AgYAYgP9AgYAewP9AgYAlAP9AgYArwP9AgYAygP9AgYA4wP9
AgYAHAT8AwYAPAT8AwYAbQRaBAYAigS6AAYAjwS6AAYAswT9AgoA3wTJBAoA+ATJBAYADQX8Aw4A
LwUUAQ4AUQUUARYAqgWKBRYAwgWKBQYA8wXnBQYAAQa6ABIAIQYfAhIAPAYfAhIAYQYfAhIAogYf
AhIA3wY1AgYAJge6AAYASQe6ABIAZwc1AhIAhQdyBxIAjwcfAhIAqwc1AhIA3wdyBxIAAghyBxIA
DwgfAgAAAAABAAAAAAABAAEAAAAQADIAPAAFAAEAAQAAARAAawA8AAkAAwAFAAEAEAB0AH8ADQAE
AAgAAwEAAKMAAAARAAQADgARAH8BEwARAKwBFwARAPYBOQAGBpYCXABWgJ4CXwBWgKYCXwBQIAAA
AACDGLwBGwABAFggAAAAAJMIwgEfAAEAkSAAAAAAkwjWASQAAQCYIAAAAACTCOIBKQABAKAgAAAA
AJYIBgI9AAIAsyAAAAAAhhi8ARsAAgCnIAAAAACRGCgFngACALwgAAAAAIYAGgIbAAIATCgAAAAA
hgBZAkcAAgDYKAAAAACEAGcCTwAEADApAAAAAIEAdQJWAAYAZCkAAAAAgQCFAlYABwCUKQAAAACG
GLwBGwAIAAAAAQCuAgAAAQC0AgAAAgC9AgAAAQC0AgAAAgC9AgAAAQC9AgAAAQC9AkkAvAFtAFEA
vAFtAFkAvAFtAGEAvAFtAGkAvAFtAHEAvAFtAHkAvAFtAIEAvAFtAIkAvAFtAJEAvAFtAJkAvAFy
AKEAvAEbAKkAvAEbAAkAvAEbALEAoQR3ALEAvAR+ACkAvAGDAMkAvAGPANkAvAEbABEAvAEbAOEA
vAEbABkAYwWiAOkAtAWnAPEAywWsAPkA1AWyAAkA3gW2AEEAvAFtAAEBvAEbADkAvAEbAAkBCAa6
AAEBDga9AAEBFAbDADkAGwYbADkAMwbKABkBVwbQABEBywXUACEBywXbAAkBaQa2AAkBcQbgACEB
fQbmAAEBiwbrACEBmAbzADkAtwb4AAkBwwb+ABEBygYEATkA0QYbACkBygZtAAkBwwYLATEBvAFW
AAkBwwYSATEB6wZtADEBBAdyADEBGAcYATkBMgcbAOkAOgdyAEEBUwe2AAkBXwceAUkBvAFPAFEB
mwdMAWEBvAEbAGEBugdTAVEBzAdyAGkB7QdaAVEB8gfQAHEBHwh3AXEBKQgbAHEBLggbABkAvAEb
AAgAFABjAAgAGABoACkAkwCVAC4AGwD0AS4AIwD0AS4AYwAaAi4ACwCDAS4AEwDLAS4AMwDLAS4A
KwD0AS4AOwD6AS4AQwD0AS4AWwARAkMAawBoAEkAkwCVAGEAmwBoAIMAqwBoAIoAJAFgAW4BfQEC
AAEAAwADAAAAbwEvAAAA7gE0AAAAEgJCAAIAAgADAAIAAwAFAAEABAAFAAIABQAHAASAAAABAAAA
QxhhZgAAAAAAAH8AAAAEAAAAAAAAAAAAAAABALEAAAAAAAQAAAAAAAAAAAAAAAEAugAAAAAADAAA
AAAAAAAAAAAACgD1AAAAAAAEAAAAAAAAAAAAAAABAB8CAAAAAAwAAAAAAAAAAAAAAAoAawUAAAAA
AAAAAAEAAAA0CAAABQAEAAAAADxNb2R1bGU+AFNUXzE4NzkxNjRkMTg0MzQ5MjJiODIxYjU4Y2E0
ZDZjYTE5LmRsbABSZXNvdXJjZXMAU1RfMTg3OTE2NGQxODQzNDkyMmI4MjFiNThjYTRkNmNhMTku
UHJvcGVydGllcwBTZXR0aW5ncwBTY3JpcHRNYWluAFNUXzE4NzkxNjRkMTg0MzQ5MjJiODIxYjU4
Y2E0ZDZjYTE5AFNjcmlwdFJlc3VsdHMAbXNjb3JsaWIAU3lzdGVtAE9iamVjdABTeXN0ZW0uQ29u
ZmlndXJhdGlvbgBBcHBsaWNhdGlvblNldHRpbmdzQmFzZQBNaWNyb3NvZnQuU3FsU2VydmVyLlNj
cmlwdFRhc2sATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuVGFza3MuU2NyaXB0VGFzawBWU1RBUlRT
Y3JpcHRPYmplY3RNb2RlbEJhc2UARW51bQBTeXN0ZW0uUmVzb3VyY2VzAFJlc291cmNlTWFuYWdl
cgByZXNvdXJjZU1hbgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBDdWx0dXJlSW5mbwByZXNvdXJjZUN1
bHR1cmUALmN0b3IAZ2V0X1Jlc291cmNlTWFuYWdlcgBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQBD
dWx0dXJlAGRlZmF1bHRJbnN0YW5jZQBnZXRfRGVmYXVsdABEZWZhdWx0AE1haW4AU3lzdGVtLkRh
dGEARGF0YVRhYmxlAFN5c3RlbS5EYXRhLlNxbENsaWVudABTcWxDb25uZWN0aW9uAF9nZXREYXRh
VGFibGUAX3VwZGF0ZUluc2VydABfY29ubmVjdGlvbk9wZW4AX2Nvbm5lY3Rpb25DbG9zZQB2YWx1
ZV9fAFN1Y2Nlc3MARmFpbHVyZQB2YWx1ZQBzdHJRdWVyeQBteUNvbm5lY3Rpb24AU3lzdGVtLlJ1
bnRpbWUuVmVyc2lvbmluZwBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUAU3lzdGVtLlJlZmxlY3Rp
b24AQXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0cmlidXRlAEFz
c2VtYmx5Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUAQXNz
ZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmlidXRlAEFzc2VtYmx5
VHJhZGVtYXJrQXR0cmlidXRlAEFzc2VtYmx5Q3VsdHVyZUF0dHJpYnV0ZQBBc3NlbWJseVZlcnNp
b25BdHRyaWJ1dGUAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBDb21waWxhdGlvblJl
bGF4YXRpb25zQXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAFN5c3RlbS5E
aWFnbm9zdGljcwBEZWJ1Z2dlck5vblVzZXJDb2RlQXR0cmlidXRlAFR5cGUAUnVudGltZVR5cGVI
YW5kbGUAR2V0VHlwZUZyb21IYW5kbGUAQXNzZW1ibHkAZ2V0X0Fzc2VtYmx5AFN5c3RlbS5Db21w
b25lbnRNb2RlbABFZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxlU3RhdGUA
Q29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUALmNjdG9yAFNTSVNTY3JpcHRUYXNrRW50cnlQb2lu
dEF0dHJpYnV0ZQBTY3JpcHRPYmplY3RNb2RlbABnZXRfRHRzAE1pY3Jvc29mdC5TcWxTZXJ2ZXIu
TWFuYWdlZERUUwBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5SdW50aW1lAFZhcmlhYmxlcwBnZXRf
VmFyaWFibGVzAFZhcmlhYmxlAGdldF9JdGVtAGdldF9WYWx1ZQBUb1N0cmluZwBTeXN0ZW0uVGV4
dABTdHJpbmdCdWlsZGVyAFN0cmluZwBFbXB0eQBDbGVhcgBBcHBlbmQAUmVzZXQARGF0YVJvd0Nv
bGxlY3Rpb24AZ2V0X1Jvd3MASW50ZXJuYWxEYXRhQ29sbGVjdGlvbkJhc2UAZ2V0X0NvdW50AERh
dGFSb3cAVG9VcHBlcgBvcF9FcXVhbGl0eQBnZXRfSXRlbUFycmF5AEFwcGVuZEZvcm1hdABnZXRf
VGFibGUARGF0YUNvbHVtbkNvbGxlY3Rpb24AZ2V0X0NvbHVtbnMAQ29uY2F0AFJlbW92ZQBBY2Nl
cHRDaGFuZ2VzAFNxbEJ1bGtDb3B5AHNldF9EZXN0aW5hdGlvblRhYmxlTmFtZQBzZXRfQnVsa0Nv
cHlUaW1lb3V0AFdyaXRlVG9TZXJ2ZXIASURpc3Bvc2FibGUARGlzcG9zZQBzZXRfVGFza1Jlc3Vs
dABFeGNlcHRpb24AZ2V0X01lc3NhZ2UAUmVwbGFjZQBTcWxDb21tYW5kAFN5c3RlbS5EYXRhLkNv
bW1vbgBEYkNvbW1hbmQAQ29tbWFuZFR5cGUAc2V0X0NvbW1hbmRUeXBlAFNxbERhdGFBZGFwdGVy
AHNldF9TZWxlY3RDb21tYW5kAHNldF9Db21tYW5kVGltZW91dABEYkRhdGFBZGFwdGVyAEZpbGwA
RXhlY3V0ZU5vblF1ZXJ5AERiQ29ubmVjdGlvbgBDb25uZWN0aW9uU3RhdGUAZ2V0X1N0YXRlAE9w
ZW4AQ2xvc2UAU1RfMTg3OTE2NGQxODQzNDkyMmI4MjFiNThjYTRkNmNhMTkuUHJvcGVydGllcy5S
ZXNvdXJjZXMucmVzb3VyY2VzAAAAcVMAVABfADEAOAA3ADkAMQA2ADQAZAAxADgANAAzADQAOQAy
ADIAYgA4ADIAMQBiADUAOABjAGEANABkADYAYwBhADEAOQAuAFAAcgBvAHAAZQByAHQAaQBlAHMA
LgBSAGUAcwBvAHUAcgBjAGUAcwAALVUAcwBlAHIAOgA6AGMAbwBuAG4AZQBjAHQAaQBvAG4AUwB0
AHIAaQBuAGcAACNVAHMAZQByADoAOgBwAGEAYwBrAGEAZwBlAEMAbwBkAGUAAC0gAFMARQBMAEUA
QwBUACAARwBFAE4ASwBBAC4AKgAsACAAQwBBAFMARQAgAAA5IABXAEgARQBOACAAUwBIAE8ASABJ
AE4ALgAz/yv/Nf+zMPwwyTAgAEkAUwAgAE4AVQBMAEwAIAABNSAAVABIAEUATgAgACcAVABSAFUA
RQAnACAARQBMAFMARQAgACcARgBBAEwAUwBFACcAIAABJyAARQBOAEQAIABBAFMAIABEAEUATABf
AFIARQBDAE8AUgBEACAAAEkgAEYAUgBPAE0AIAAgAE0AXwBHAEUATgBLAEEAXwBSAEkAUgBFAEsA
SQBfAFQARQBNAFAAIABBAFMAIABHAEUATgBLAEEAIAAASyAATABFAEYAVAAgAEoATwBJAE4AIAAg
AE0AXwBTAEgATwBVAEgASQBOAF8ARABBAFQAQQAgAEEAUwAgAFMASABPAEgASQBOACAAAEUgAE8A
TgAgACAARwBFAE4ASwBBAC4AM/8r/zX/szD8MMkwIAA9ACAAUwBIAE8ASABJAE4ALgAz/yv/Nf+z
MPwwyTAgAAE3IABPAFIARABFAFIAIABCAFkAIAAgAEQARQBMAF8AUgBFAEMATwBSAEQAIABEAEUA
UwBDADsAABVEAEUATABfAFIARQBDAE8AUgBEAAAJVABSAFUARQAACXsAMAB9ACAAAENJAE4AUwBF
AFIAVAAgAEkATgBUAE8AIABLAEEATgBTAEgASQBfAFAAQQBDAEsAQQBHAEUAXwBFAFIAUgBPAFIA
IAAASyAAKADRMMMwsTD8MLgwszD8MMkwLADHMPwwvzDlZdhOLACoMOkw/DDlZUJmLACoMOkw/DCF
UblbLACoMOkw/DDVMOkwsDApACAAARUgAFYAQQBMAFUARQBTACgAJwBHAAEHJwAsACcAASNVAHMA
ZQByADoAOgBjAHUAcgByAGUAbgB0AEQAYQB0AGUAABtVAHMAZQByADoAOgBzAHkAcwBEAGEAdABl
AAA5AjBGVcFU3jC5ML8wazAz/yv/Nf9MMFhbKFdVMIwwZjBEMH4wWzCTMAIwJwAsACcAMwAnACkA
OwABISAAVABSAFUATgBDAEEAVABFACAAVABBAEIATABFACAAAB9VAHMAZQByADoAOgBjAGgAZQBj
AGsAVAB5AHAAZQAADV8AVABFAE0AUAA7AAALXwBUAEUATQBQAAAhIABTAEUATABFAEMAVAAgACoA
LAAgAEMAQQBTAEUAIAAAaSAAVwBIAEUATgAgAEMATwBOAFYARQBSAFQAKABEAEEAVABFACwACWe5
UouVy1nlZSkAIAA+ACAAQwBPAE4AVgBFAFIAVAAoAEQAQQBUAEUALABHAEUAVABEAEEAVABFACgA
KQApACAAAVkgAFQASABFAE4AIAAnAFQAUgBVAEUAJwAgAEUATABTAEUAIAAnAEYAQQBMAFMARQAn
ACAARQBOAEQAIABBAFMAIABEAEUATABfAFIARQBDAE8AUgBEACAAATUgAEYAUgBPAE0AIABNAF8A
RwBFAE4ASwBBAF8AUgBJAFIARQBLAEkAXwBUAEUATQBQADsAADkCMJ9ToU8JZ7lSi5XLWeVlZzAG
XGVn5WVuMC2KmltMMIF5YmtnMFkwAjAnACwAJwAzACcAKQA7AAEXJwAsACcAtzC5MMYw4DCoMOkw
/DA6AAEDJwABAy0AAQ8nACwAJwAzACcAKQA7AAEAA/ebEK+AMki76ELDLnuLmwAIt3pcVhk04IkI
iYRdzYCAzJEDBhIVAwYSGQMgAAEEAAASFQQAABIZBQABARIZBAgAEhUECAASGQMGEgwEAAASDAQI
ABIMByACEh0OEiEGIAIBDhIhBSABARIhAgYIAwYRFAQAAAAABAEAAAAEIAEBDgQgAQEIBgABElkR
XQQgABJhBiACAQ4SYQQHARIVBSABARFpCAEAAgAAAAAAAwAAAQQgABJ1BCAAEnkFIAESfRwDIAAc
AyAADgIGDgUgABKAgQYgARKAgQ4FIAASgIkDIAAIBiABEoCRCAQgARwOBQACAg4OBCAAHRwHIAIS
gIEOHAQgABIdBSAAEoCVBQABDh0OBiABARKAkQYAAw4ODg4FAAIODg4FIAEBEh0FIAIODg4nBxQO
EiESgIESHRKAkRKAgQ4ICAgIEoCZCAgIEoCZEoChHQ4dDh0OBiABARGArQYgAQESgKUFIAEIEh0N
BwQSHRKApRKAsRKAoQgHAhKApRKAoQUgABGAvQUHARKAoUcBABouTkVURnJhbWV3b3JrLFZlcnNp
b249djQuMAEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUQLk5FVCBGcmFtZXdvcmsgNCgBACNTVF8x
ODc5MTY0ZDE4NDM0OTIyYjgyMWI1OGNhNGQ2Y2ExOQAABQEAAAAAFgEAEUNvcHlyaWdodCBAICAy
MDE2AAAIAQAIAAAAAAAeAQABAFQCFldyYXBOb25FeGNlcHRpb25UaHJvd3MBAAAAFEEAAAAAAAAA
AAAALkEAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAACBBAAAAAAAAAAAAAAAAX0NvckRsbE1haW4A
bXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABABAA
AAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABIAAAAWGAA
ALADAAAAAAAAAAAAALADNAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAAAAC9BO/+
AAABAAAAAQBhZkMYAAABAGFmQxg/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAAAAEAVgBh
AHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4AAAAAAAAA
sAQQAwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAADsAgAAAQAwADAAMAAwADAANABi
ADAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBUAF8AMQA4ADcA
OQAxADYANABkADEAOAA0ADMANAA5ADIAMgBiADgAMgAxAGIANQA4AGMAYQA0AGQANgBjAGEAMQA5
AAAAQAAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADYAMgAxADEALgAyADYA
MgAwADkAAAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBUAF8AMQA4ADcAOQAx
ADYANABkADEAOAA0ADMANAA5ADIAMgBiADgAMgAxAGIANQA4AGMAYQA0AGQANgBjAGEAMQA5AC4A
ZABsAGwAAABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8AcAB5AHIAaQBn
AGgAdAAgAEAAIAAgADIAMAAxADYAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEA
bQBlAAAAUwBUAF8AMQA4ADcAOQAxADYANABkADEAOAA0ADMANAA5ADIAMgBiADgAMgAxAGIANQA4
AGMAYQA0AGQANgBjAGEAMQA5AC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUA
AAAAAFMAVABfADEAOAA3ADkAMQA2ADQAZAAxADgANAAzADQAOQAyADIAYgA4ADIAMQBiADUAOABj
AGEANABkADYAYwBhADEAOQAAAEQADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEA
LgAwAC4ANgAyADEAMQAuADIANgAyADAAOQAAAAAASAAPAAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBl
AHIAcwBpAG8AbgAAADEALgAwAC4ANgAyADEAMQAuADIANgAyADAAOQAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAwAAABAMQAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\商品マスタチェック"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:Description="Script Task"
      DTS:DTSID="{35588B60-3D32-407C-B4B4-EF1558D2990B}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="商品マスタチェック"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_c96b634005154a1fa822efefa48a8b0a"
          VSTAMajorVersion="3"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadOnlyVariables="User::checkType,User::connectionString,User::currentDate,User::packageCode,User::sysDate">
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_c96b634005154a1fa822efefa48a8b0a.Properties.Settings.get_Default():ST_c96b634005154a1fa822efefa48a8b0a.Properties.Sett" +
    "ings")]

namespace ST_c96b634005154a1fa822efefa48a8b0a.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[#region Namespaces
using System;
using System.Data;
using System.Data.SqlClient;
using System.Text;
#endregion

namespace ST_c96b634005154a1fa822efefa48a8b0a
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region "Main Method"
        /// <summary>
        /// 作成人: イルファン マンスリー
        /// 説明: Check SHOUHIN Data, for foreign key '部門コード' & '仕入先コード'.
        /// Also Check Faulty Records for New SKU Codes & Old SKU Codes by checking its '商品コード'.
        /// 作成日付: 2016-07-16
        /// </summary>
        public void Main()
        {
            StringBuilder strBuildQuery = new StringBuilder();
            DataTable dtAllTable;   //商品データのＭＡＩＮとＴＥＭＰテーブルのデータ。
            DataTable dtOldData;  //商品メインテーブルの古いデータ。
            DataTable dtNewData;  //商品ＴＥＭＰテーブルの新しいデータ。
            //Start: トランザクション
            string strConnectionString = Dts.Variables["User::connectionString"].Value.ToString();
            SqlConnection myConnection = new SqlConnection(strConnectionString);
            _connectionOpen(myConnection);
            //End: トランザクション
            DataRow drTemp; //データテーブルの行削除するために。
            StringBuilder strBuildColumn;
            int intErrorCount = 0;  //This variable is to count number of ERROR in Single DataTable to Avoid its TRUNCATION of Table and bulk import, if no error.
            try
            {
                dtAllTable = new DataTable();
                dtOldData = new DataTable();
                dtNewData = new DataTable();
                strBuildColumn = new StringBuilder();

                #region FK Check
                //FK Check in Its MASTER Tables for foreign key '部門コード' & '仕入先コード'.
                #region 部門コード　チェック
                strBuildQuery.Clear();
                strBuildQuery.Append(" SELECT MSTEMP.*, CASE ");
                strBuildQuery.Append(" WHEN MB.部門コード IS NULL ");
                strBuildQuery.Append(" THEN 'TRUE' ELSE 'FALSE' ");
                strBuildQuery.Append(" END AS DEL_RECORD ");
                strBuildQuery.Append(" FROM M_SHOUHIN_DATA_TEMP AS MSTEMP ");
                strBuildQuery.Append(" LEFT JOIN M_BUMON_MASTER AS MB ");
                strBuildQuery.Append(" ON MB.部門コード=MSTEMP.部門コード ");
                strBuildQuery.Append(" AND MB.クラスコード = MSTEMP.クラスコード; ");
                dtAllTable.Reset();
                dtAllTable = _getDataTable(strBuildQuery.ToString(),myConnection);
                #region If faulty 部門コード found
                if (dtAllTable.Rows.Count > 0)
                {
                    intErrorCount = 0;  //Errors Count
                    int countRow = dtAllTable.Rows.Count;
                    for (int intI = 0; intI < countRow; intI++)
                    {
                        if (dtAllTable.Rows[intI]["DEL_RECORD"].ToString().ToUpper() == "TRUE")
                        {
                            intErrorCount = intErrorCount + 1;  //Add 1, when ERROR found
                            drTemp = dtAllTable.Rows[intI];
                            strBuildColumn.Clear();
                            for (int intJ = 0; intJ < drTemp.Table.Columns.Count-1; intJ++)
                            {
                                strBuildColumn.AppendFormat("{0}    ",drTemp.ItemArray[intJ]);
                            }
                            #region REPORT Faulty Record
                            strBuildQuery.Clear();  //オブジェクトリセット
                            strBuildQuery.Append(strBuildColumn.ToString());
                            strBuildQuery.Append(" 。部門コードが商品マスタに存在されていません。");
                            _insertError(strBuildQuery.ToString(), myConnection);
                            #endregion
                            countRow = countRow - 1;
                            intI = intI - 1;
                            dtAllTable.Rows.Remove(drTemp);
                            dtAllTable.AcceptChanges();
                        }
                    }
                    dtAllTable.Columns.Remove("DEL_RECORD");
                    if (intErrorCount > 0)  //Check Whther this DataTable contains Error or not. if condition 'TRUE' then it contains error
                    {
                        #region "TRUNCATE TEMP Table"
                        //TRUNCATE TEMP Table, to be import New Correct Records from 'DtAllData' DataTable.
                        strBuildQuery.Clear();
                        strBuildQuery.Append(" TRUNCATE TABLE " + Dts.Variables["User::checkType"].Value.ToString() + "_TEMP;");
                        _updateInsert(strBuildQuery.ToString(), myConnection);
                        #endregion
                        #region "Bulk Update Records"
                        //正しいデータテーブルからインポートするためいに。
                        using (SqlBulkCopy bulkCopy = new SqlBulkCopy(myConnection))
                        {
                            bulkCopy.DestinationTableName = Dts.Variables["User::checkType"].Value.ToString() + "_TEMP";   //Assign table name
                            _connectionOpen(myConnection);
                            bulkCopy.BulkCopyTimeout = 600; //Default Timeut 30 Change to 600. in seconds
                            bulkCopy.WriteToServer(dtAllTable);   //Write into Actual table.
                        }
                        #endregion
                    }
                }
                #endregion
                #endregion

                #region 仕入先コード　チェック
                strBuildQuery.Clear();
                strBuildQuery.Append(" SELECT msTemp.*, CASE ");
                strBuildQuery.Append(" WHEN msi.仕入先コード IS NULL ");
                strBuildQuery.Append(" THEN 'TRUE' ELSE 'FALSE'  ");
                strBuildQuery.Append(" END AS DEL_RECORD ");
                strBuildQuery.Append(" FROM M_SHOUHIN_DATA_TEMP as msTemp  ");
                strBuildQuery.Append(" LEFT JOIN M_SIIRESAKI_MASTER as msi  ");
                strBuildQuery.Append(" ON msi.仕入先コード = msTemp.仕入先コード;");
                dtAllTable.Reset();
                dtAllTable = _getDataTable(strBuildQuery.ToString(),myConnection);
                #region If faulty 仕入先コード found
                if (dtAllTable.Rows.Count > 0)
                {
                    intErrorCount = 0;
                    int countRow = dtAllTable.Rows.Count;
                    for (int intI = 0; intI < countRow; intI++)
                    {
                        if (dtAllTable.Rows[intI]["DEL_RECORD"].ToString().ToUpper() == "TRUE")
                        {
                            intErrorCount = intErrorCount + 1;  //When Error Occurs
                            drTemp = dtAllTable.Rows[intI];
                            strBuildColumn.Clear();
                            for (int intJ = 0; intJ < drTemp.Table.Columns.Count-1; intJ++)
                            {
                                strBuildColumn.AppendFormat("{0}    ", drTemp.ItemArray[intJ]);
                            }
                            #region REPORT Faulty Record
                            strBuildQuery.Clear();  //オブジェクトリセット
                            strBuildQuery.Append(strBuildColumn.ToString());
                            strBuildQuery.Append(" 。仕入先コードが商品マスタに存在されていません。");
                            _insertError(strBuildQuery.ToString(), myConnection);
                            #endregion
                            countRow = countRow - 1;
                            intI = intI - 1;
                            dtAllTable.Rows.Remove(drTemp);
                            dtAllTable.AcceptChanges();
                        }
                    }
                    dtAllTable.Columns.Remove("DEL_RECORD");
                    if (intErrorCount > 0)  //When Error Exists
                    {
                        #region "TRUNCATE TEMP Table"
                        //TRUNCATE TEMP Table, to be import New Correct Records from 'DtAllData' DataTable.
                        strBuildQuery.Clear();
                        strBuildQuery.Append(" TRUNCATE TABLE " + Dts.Variables["User::checkType"].Value.ToString() + "_TEMP;");
                        _updateInsert(strBuildQuery.ToString(), myConnection);
                        #endregion
                        #region "Bulk Update Records"
                        //正しいデータテーブルからインポートするために。
                        using (SqlBulkCopy bulkCopy = new SqlBulkCopy(myConnection))
                        {
                            _connectionOpen(myConnection);
                            bulkCopy.DestinationTableName = Dts.Variables["User::checkType"].Value.ToString() + "_TEMP";   //Assign table name
                            bulkCopy.BulkCopyTimeout = 600; //Default Timeut 30 Change to 600. in seconds
                            bulkCopy.WriteToServer(dtAllTable);   //Write into Actual table.
                        }
                        #endregion
                    }
                }
                #endregion
                #endregion
                #endregion

                #region FAULTY Records Check
                #region Start: Find New SKU Code from Temp.
                strBuildQuery.Clear();
                strBuildQuery.Append(" SELECT msTemp.*,ms.商品コード as ms商品コード, ");
                strBuildQuery.Append(" CONVERT(DATE,BAIKA.有効開始日) as 売価有効開始日, ");
                strBuildQuery.Append(" CONVERT(DATE,GENKA.有効開始日) as 原価有効開始日 ");
                strBuildQuery.Append(" FROM M_SHOUHIN_DATA_TEMP as msTemp ");
                strBuildQuery.Append(" LEFT JOIN M_SHOUHIN_DATA as ms ");
                strBuildQuery.Append(" ON msTemp.SKUコード = ms.SKUコード ");
                strBuildQuery.Append(" LEFT JOIN (SELECT SKUコード,MAX(有効開始日) as 有効開始日 FROM M_BAIKA_RIREKI_TEMP GROUP BY SKUコード)BAIKA ");
                strBuildQuery.Append(" ON msTemp.SKUコード = BAIKA.SKUコード ");
                strBuildQuery.Append(" AND ms.商品コード IS  NULL ");
                strBuildQuery.Append(" LEFT JOIN  (SELECT SKUコード,MAX(有効開始日) as 有効開始日 FROM M_GENKA_RIREKI_TEMP GROUP BY SKUコード) GENKA ");
                strBuildQuery.Append(" ON msTemp.SKUコード = GENKA.SKUコード AND ");
                strBuildQuery.Append(" ms.商品コード IS NULL ORDER BY msTemp.ＳＫＵコード; ");
                #endregion
                dtAllTable.Reset();
                dtAllTable = _getDataTable(strBuildQuery.ToString(), myConnection);

                if (dtAllTable.Rows.Count > 0)
                {
                    dtAllTable.Columns.Add("DEL_RECORD");   //データテーブルに削除フラグ。
                    dtNewData = dtAllTable.Clone(); //Create Same DataTable Definition
                    dtOldData = dtAllTable.Clone(); //Create Same DataTable Definition
                    #region Devide Old/New SKUs Data
                    for (int intI = 0; intI < dtAllTable.Rows.Count; intI++)
                    {
                        if (string.IsNullOrEmpty(dtAllTable.Rows[intI]["ms商品コード"].ToString()))
                        {
                            //Get NEW SKUs Which are Not Currently Exists in SHOUHIN_MASTER
                            dtNewData.ImportRow(dtAllTable.Rows[intI]);
                        }
                        else
                        {
                            //Get Old SKUs Which are Currently Exists in SHOUHIN_MASTER
                            dtOldData.ImportRow(dtAllTable.Rows[intI]);
                        }
                    }
                    #endregion

                    #region When Old SKU Data available
                    if (dtOldData.Rows.Count > 0)
                    {
                        foreach (DataRow dr in dtOldData.Rows)
                        {
                            if (dr["商品コード"].ToString() != dr["ms商品コード"].ToString())
                            {
                                dr["DEL_RECORD"] = "TRUE1";
                                dtOldData.AcceptChanges();
                            }
                        }
                    }
                    #endregion

                    #region When New SKU Data available
                    if (dtNewData.Rows.Count > 0)
                    {
                        foreach (DataRow dr in dtNewData.Rows)
                        {
                            //Check Whether 原価開始日 と 売価開始日 any of this is not NULL.
                            if (string.IsNullOrEmpty(dr["売価有効開始日"].ToString()))
                            {
                                dr["DEL_RECORD"] = "TRUE2";
                                dtNewData.AcceptChanges();
                            }
                            else if (string.IsNullOrEmpty(dr["原価有効開始日"].ToString()))
                            {
                                dr["DEL_RECORD"] = "TRUE3";
                                dtNewData.AcceptChanges();
                            }
                            else
                            {
                                //Check If Both the DATEs are not NULL then Check BAIKA_DATE Should be Small than GENKA_DATE
                                if (DateTime.Parse(dr["売価有効開始日"].ToString()) > DateTime.Parse(dr["原価有効開始日"].ToString()))
                                {
                                    dr["DEL_RECORD"] = "TRUE4";
                                    dtNewData.AcceptChanges();
                                }
                            }
                        }
                    }
                    #endregion

                    #region "Merge DataTable"
                    dtAllTable.Reset();  //Reset DataTable
                    if (dtOldData.Rows.Count > 0)
                    {
                        dtAllTable = dtOldData.Clone();
                    }
                    else
                    {
                        if (dtNewData.Rows.Count > 0)
                        {
                            dtAllTable = dtNewData.Clone();
                        }
                    }
                    if (dtOldData.Rows.Count > 0)
                    {
                        dtAllTable.Merge(dtOldData);
                        dtOldData.Clear();  //Clear Complete DataTable
                    }
                    if (dtNewData.Rows.Count > 0)
                    {
                        dtAllTable.Merge(dtNewData);
                        dtNewData.Clear();  //Clear Complete DataTable
                    }
                    #endregion
                    //メインテーブルの列の削除
                    dtAllTable.Columns.Remove("売価有効開始日");
                    dtAllTable.Columns.Remove("原価有効開始日");
                    dtAllTable.Columns.Remove("ms商品コード");
                    dtAllTable.AcceptChanges();

                    intErrorCount = 0;
                    #region Remove Faulty Records
                    int countRow = dtAllTable.Rows.Count;
                    for (int intI = 0; intI < countRow; intI++)
                    {
                        #region Old and New SKU is not having Same 商品コード
                        if (dtAllTable.Rows[intI]["DEL_RECORD"].ToString().ToUpper() == "TRUE1")
                        {
                            intErrorCount = intErrorCount + 1;
                            drTemp = dtAllTable.Rows[intI];
                            strBuildColumn.Clear();
                            for (int intJ = 0; intJ < drTemp.Table.Columns.Count - 1; intJ++)
                            {
                                //Table.Columns[intJ].DefaultValue)
                                strBuildColumn.AppendFormat("{0}    ", drTemp.ItemArray[intJ]);
                            }
                            #region REPORT Faulty Record
                            strBuildQuery.Clear();  //オブジェクトリセット
                            strBuildQuery.Append(strBuildColumn.ToString());
                            strBuildQuery.Append("。ＳＫＵコードと商品コードの組み合わせが商品マスタと異なります。");
                            _insertError(strBuildQuery.ToString(), myConnection);
                            #endregion
                            dtAllTable.Rows.Remove(drTemp);
                            dtAllTable.AcceptChanges();
                            countRow = countRow - 1;
                            intI = intI - 1;
                        }
                        #endregion

                        #region New SKU:原価開始日 or 売価開始日 arrived Null in their files
                        else if (dtAllTable.Rows[intI]["DEL_RECORD"].ToString().ToUpper() == "TRUE2")
                        {
                            intErrorCount = intErrorCount + 1;
                            drTemp = dtAllTable.Rows[intI];
                            strBuildColumn.Clear();
                            for (int intJ = 0; intJ < drTemp.Table.Columns.Count - 1; intJ++)
                            {
                                //Table.Columns[intJ].DefaultValue)
                                strBuildColumn.AppendFormat("{0}    ", drTemp.ItemArray[intJ]);
                            }
                            #region REPORT Faulty Record
                            strBuildQuery.Clear();  //オブジェクトリセット
                            strBuildQuery.Append(strBuildColumn.ToString());
                            strBuildQuery.Append("。ＳＫＵコードを売価履歴マスタに存在されていません。");
                            _insertError(strBuildQuery.ToString(), myConnection);
                            #endregion
                            dtAllTable.Rows.Remove(drTemp);
                            dtAllTable.AcceptChanges();
                            countRow = countRow - 1;
                            intI = intI - 1;
                        }
                        #endregion

                        #region New SKU:原価開始日 or 売価開始日 arrived Null in their files
                        else if (dtAllTable.Rows[intI]["DEL_RECORD"].ToString().ToUpper() == "TRUE3")
                        {
                            intErrorCount = intErrorCount + 1;
                            drTemp = dtAllTable.Rows[intI];
                            strBuildColumn.Clear();
                            for (int intJ = 0; intJ < drTemp.Table.Columns.Count - 1; intJ++)
                            {
                                //Table.Columns[intJ].DefaultValue)
                                strBuildColumn.AppendFormat("{0}    ", drTemp.ItemArray[intJ]);
                            }
                            #region REPORT Faulty Record
                            strBuildQuery.Clear();  //オブジェクトリセット
                            strBuildQuery.Append(strBuildColumn.ToString());
                            strBuildQuery.Append("。ＳＫＵコードを原価履歴マスタに存在されていません。");
                            _insertError(strBuildQuery.ToString(), myConnection);
                            #endregion
                            dtAllTable.Rows.Remove(drTemp);
                            dtAllTable.AcceptChanges();
                            countRow = countRow - 1;
                            intI = intI - 1;
                        }
                        #endregion

                        #region New SKU: 売価日付 is not smaller than 原価日付
                        else if (dtAllTable.Rows[intI]["DEL_RECORD"].ToString().ToUpper() == "TRUE4")
                        {
                            intErrorCount = intErrorCount + 1;
                            drTemp = dtAllTable.Rows[intI];
                            strBuildColumn.Clear();
                            for (int intJ = 0; intJ < drTemp.Table.Columns.Count - 1; intJ++)
                            {
                                strBuildColumn.AppendFormat("{0}    ", drTemp.ItemArray[intJ]);
                            }
                            #region REPORT Faulty Record
                            strBuildQuery.Clear();  //オブジェクトリセット
                            strBuildQuery.Append(strBuildColumn.ToString());
                            strBuildQuery.Append("。ＳＫＵコードの売価開始日が原価開始日より以上に制限されています。");
                            _insertError(strBuildQuery.ToString(), myConnection);
                            #endregion
                            dtAllTable.Rows.Remove(drTemp);
                            dtAllTable.AcceptChanges();
                            countRow = countRow - 1;
                            intI = intI - 1;
                        }
                        #endregion
                    }
                    dtAllTable.Columns.Remove("DEL_RECORD");
                    dtAllTable.AcceptChanges();
                    #endregion
                    if (intErrorCount > 0)
                    {
                        #region "TRUNCATE TEMP Table"
                        //TRUNCATE TEMP Table, to be import New Correct Records from 'DtAllData' DataTable.
                        strBuildQuery.Clear();
                        strBuildQuery.Append(" TRUNCATE TABLE " + Dts.Variables["User::checkType"].Value.ToString() + "_TEMP;");
                        _updateInsert(strBuildQuery.ToString(), myConnection);
                        #endregion

                        #region "Bulk Update Records"
                        //正しいデータテーブルからインポートする
                        using (SqlBulkCopy bulkCopy = new SqlBulkCopy(myConnection))
                        {
                            bulkCopy.DestinationTableName = Dts.Variables["User::checkType"].Value.ToString() + "_TEMP";   //Assign table name
                            _connectionOpen(myConnection);
                            bulkCopy.BulkCopyTimeout = 600; //Default Timeut 30 Change to 600. in seconds
                            bulkCopy.WriteToServer(dtAllTable);   //Write into Actual table.
                        }
                        #endregion
                    }
                }
                #endregion

                #region "DELETED SKU"
                strBuildQuery.Clear();
                strBuildQuery.Append(" SELECT TEMP.*, ");
                strBuildQuery.Append(" CASE WHEN TEMP.削除フラグ='1' AND DEL.ＳＫＵコード IS NOT NULL ");
                strBuildQuery.Append(" THEN 'TRUE' ELSE 'FALSE' END AS DEL_RECORD ");
                strBuildQuery.Append(" FROM M_SHOUHIN_DATA_TEMP AS TEMP ");
                strBuildQuery.Append(" LEFT JOIN M_SHOUHIN_DATA_DEL AS DEL ");
                strBuildQuery.Append(" ON DEL.ＳＫＵコード = TEMP.ＳＫＵコード ");
                dtAllTable.Reset();
                dtAllTable = _getDataTable(strBuildQuery.ToString(), myConnection);
                if (dtAllTable.Rows.Count > 0)
                {
                    _replaceData(dtAllTable, myConnection, "すでに削除済みSKU");
                }
                #endregion
                Dts.TaskResult = (int)ScriptResults.Success;
            }
            #region CATCH/FINALLY
            catch (Exception ex)
            {
                strBuildQuery.Clear();
                strBuildQuery.Append("システムエラー: ");
                strBuildQuery.Append(ex.Message.Replace("'", "-"));
                _insertError(strBuildQuery.ToString(), myConnection);
                //Dts.TaskResult = (int)ScriptResults.Failure;
                Dts.TaskResult = (int)ScriptResults.Success;
            }
            finally
            {
                _connectionClose(myConnection);
                dtAllTable = null;
                dtOldData = null;
                dtNewData = null;
                strBuildQuery = null;
                strConnectionString = null;
                strBuildColumn = null;
                drTemp = null;
            }
            #endregion
        }
        #endregion

        #region "replace Data"
        //Data Replacement in Actual DB After Test
        private void _replaceData(DataTable dtFaultyTemp, SqlConnection myConnection, String errMsg)
        {
            StringBuilder strERRQuery = new StringBuilder();
            StringBuilder strBuildRow = new StringBuilder();
            string strPackageCode = string.Empty;
            DataRow drTemp;
            int intErrorCount = 0;  //To Count Errors in the DataTable, to avoid its extra TRUNCATION and BULK.
            try
            {
                _connectionOpen(myConnection);
                strPackageCode = Dts.Variables["User::packageCode"].Value.ToString();
                intErrorCount = 0;
                int countRows = dtFaultyTemp.Rows.Count;
                for (int intI = 0; intI < countRows; intI++)
                {
                    #region Report Faulty Records
                    if (dtFaultyTemp.Rows[intI]["DEL_RECORD"].ToString().ToUpper() == "TRUE")
                    {
                        intErrorCount = intErrorCount + 1;
                        //'TRUE' means Faulty SKU Record
                        drTemp = dtFaultyTemp.Rows[intI];
                        strBuildRow.Clear();
                        for (int intJ = 0; intJ < drTemp.Table.Columns.Count - 1; intJ++)
                        {
                            strBuildRow.AppendFormat("{0} ", drTemp.ItemArray[intJ]);
                        }
                        strERRQuery.Clear();
                        strERRQuery.Append("INSERT INTO KANSHI_PACKAGE_ERROR ");
                        strERRQuery.Append(" (パッケージコード,データ日付,エラー日時,エラー内容,エラーフラグ) ");
                        strERRQuery.Append(" VALUES('G" + strPackageCode + "','" + Dts.Variables["User::currentDate"].Value.ToString() + "','" + Dts.Variables["User::sysDate"].Value.ToString() + "','" + strBuildRow.ToString() + "。" + errMsg + "。','3');");
                        _updateInsert(strERRQuery.ToString(), myConnection);
                        countRows = countRows - 1;
                        intI = intI - 1;
                        dtFaultyTemp.Rows.Remove(drTemp);   //Remove Faulty Records from DataTable Object.
                        dtFaultyTemp.AcceptChanges();    //Commit DataTable Changes.
                    }
                    #endregion
                }
                dtFaultyTemp.Columns.Remove("DEL_RECORD");
                if (intErrorCount > 0)
                {
                    #region "TRUNCATE TEMP Table"
                    //TRUNCATE TEMP Table, to be import New Correct Records
                    strERRQuery.Clear();
                    strERRQuery.Append(" TRUNCATE TABLE " + Dts.Variables["User::checkType"].Value.ToString() + "_TEMP");
                    _updateInsert(strERRQuery.ToString(), myConnection);
                    #endregion
                    #region "Bulk Update Records"
                    //正しいデータテーブルからインポートするためいに。
                    using (SqlBulkCopy bulkCopy = new SqlBulkCopy(myConnection))
                    {
                        bulkCopy.DestinationTableName = Dts.Variables["User::checkType"].Value.ToString() + "_TEMP";   //Assign table name
                        _connectionOpen(myConnection);
                        bulkCopy.BulkCopyTimeout = 600; //Default Timeut 30 Change to 600. in seconds
                        bulkCopy.WriteToServer(dtFaultyTemp);   //Write into Actual table.
                    }
                    #endregion
                }
            }
            #region Catch/Finally
            catch (Exception ex)
            {
                throw ex;
            }
            finally
            {
                strERRQuery = null;
                dtFaultyTemp = null;
                strBuildRow = null;
                drTemp = null;
            }
            #endregion
        }
        #endregion

        #region "Get DataTable"
        //作成日付: 16-07-2016
        //説明: Aim to Return DataTable from the Query.
        public DataTable _getDataTable(string strQuery, SqlConnection myConnection)
        {
            StringBuilder strERRQuery = new StringBuilder();
            DataTable objDT = new DataTable();
            SqlCommand myCommand;
            SqlDataAdapter sqlSelectData;
            try
            {
                _connectionOpen(myConnection);
                myCommand = new SqlCommand(strQuery, myConnection);
                myCommand.CommandType = CommandType.Text;
                sqlSelectData = new SqlDataAdapter();
                sqlSelectData.SelectCommand = myCommand;
                myCommand.CommandTimeout = 600; //Increases Query execution timeout.
                sqlSelectData.Fill(objDT);
            }
            catch (Exception ex)
            {
                throw ex;
            }
            finally
            {
                strQuery = null;
                myCommand = null;
                sqlSelectData = null;
                strERRQuery = null;
            }
            return objDT;
        }
        #endregion

        #region "Update/Insert Query in Db"
        /// <summary>
        /// 作成日付: 2016-07-16
        /// 説明: Insert/Update Query will be run on specified connection.
        /// </summary>
        protected void _updateInsert(string strQuery, SqlConnection myConnection)
        {
            SqlCommand myCommand;
            try
            {
                _connectionOpen(myConnection);
                myCommand = new SqlCommand(strQuery, myConnection);
                myCommand.ExecuteNonQuery();
                Dts.TaskResult = (int)ScriptResults.Success;
            }
            #region CATCH/FINALLY
            catch (Exception ex)
            {
                throw ex;
            }
            finally
            {
                myCommand = null;
            }
            #endregion
        }
        #endregion

        #region "Insert ERROR Query in Db"
        /// <summary>
        /// 作成日付: 2016-07-16
        /// 説明: Insert ERROR Only, bcz This Connection do Not Use Trnsaction to be rollback.
        /// </summary>
        protected void _insertError(string errMsg, SqlConnection myConnection)
        {
            //エラーログ書く所
            SqlCommand myCommand;
            StringBuilder strBuildQry = new StringBuilder();
            try
            {
                strBuildQry.Append("INSERT INTO ");
                strBuildQry.Append(" KANSHI_PACKAGE_ERROR([パッケージコード],[データ日付],[エラー日時],[エラー内容],[エラーフラグ]) ");
                strBuildQry.Append(" VALUES('G" + Dts.Variables["User::packageCode"].Value.ToString() + "','" + Dts.Variables["User::currentDate"].Value.ToString() + "','" + Dts.Variables["User::sysDate"].Value.ToString() + "','" + errMsg + "','3');");
                _connectionOpen(myConnection);
                myCommand = new SqlCommand(strBuildQry.ToString(), myConnection);
                myCommand.ExecuteNonQuery();
                Dts.TaskResult = (int)ScriptResults.Success;
            }
            #region CATCH/FINALLY
            catch (Exception ex)
            {
                throw ex;
            }
            finally
            {
                myCommand = null;
                strBuildQry = null;
            }
            #endregion
        }
        #endregion

        #region Connection Open
        private void _connectionOpen(SqlConnection myConnection)
        {
            try
            {
                if (myConnection.State != ConnectionState.Open)
                {
                    myConnection.Open();
                }
            }
            catch (Exception ex)
            {
                throw ex;
            }
        }
        #endregion

        #region Connection Close
        private void _connectionClose(SqlConnection myConnection)
        {
            try
            {
                if (myConnection.State != ConnectionState.Closed)
                {
                    myConnection.Close();
                }
            }
            catch (Exception ex)
            {
                throw ex;
            }
        }
        #endregion

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
          <ProjectItem
            Name="ST_c96b634005154a1fa822efefa48a8b0a.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{8e50a300-7a44-43d1-81fc-e3789bc3049c}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_c96b634005154a1fa822efefa48a8b0a</RootNamespace>
    <AssemblyName>ST_c96b634005154a1fa822efefa48a8b0a</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>

  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>

  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
         <Generator>ResXFileCodeGenerator</Generator>
         <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
             <AutoGen>True</AutoGen>
         <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
         <Generator>SettingsSingleFileGenerator</Generator>
         <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
         <AutoGen>True</AutoGen>
         <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
         <SubType>Code</SubType>
    </Compile>
  </ItemGroup>

  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />

  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptTask"
                           HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}"
                           ApplicationType="usd"
                           Language="cs"
                           TemplatesPath=""
                           DebugInfoExeName="#HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\VisualStudio\10.0\InstallDir#\devenv.exe"
                           DebugInfoCommandLine=""
                           DebugInfoWorkingDir=""
                           IconImageList=""/>
        <Host Name="ScriptTask" GeneratedNamespace="$safeprojectname" IconIndex="">
        </Host>
        <ProjectClient>
            <HostIdentifier>SSIS_ST120</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>ST_c96b634005154a1fa822efefa48a8b0a</msb:CodeName>
		<msb:DisplayName>ST_c96b634005154a1fa822efefa48a8b0a</msb:DisplayName>
		<msb:ProjectId>{C8D81AA3-881E-4A53-890C-C6E48CA7042A}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_c96b634005154a1fa822efefa48a8b0a.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_c96b634005154a1fa822efefa48a8b0a")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_c96b634005154a1fa822efefa48a8b0a")]
[assembly: AssemblyCopyright("Copyright @  2016")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_c96b634005154a1fa822efefa48a8b0a.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_c96b634005154a1fa822efefa48a8b0a.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_c96b634005154a1fa822efefa48a8b0a.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_c96b634005154a1fa822efefa48a8b0a.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_c96b634005154a1fa822efefa48a8b0a.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_c96b634005154a1fa822efefa48a8b0a.dll">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
GQAACm8aAAAKbxsAAAqiCRpyLw0AcKIJGwIoFwAACm8YAAAKclsNAHBvGQAACm8aAAAKbxsAAAqi
CRxyLw0AcKIJHQOiCR5yMA4AcKIJKEYAAApvHwAACiYCBCgNAAAGB28bAAAKBHNHAAAKCgZvTQAA
CiYCKBcAAAoWb0IAAAreAwwIet4FFAoUC9wqAAAAARwAAAAABgDo7gADKwAAAQIABgDt8wAFAAAA
ABswAgAVAAAABwAAEQNvTgAAChcuBgNvTwAACt4DCgZ6KgAAAAEQAAAAAAAAEREAAysAAAEbMAEA
FAAAAAcAABEDb04AAAosBgNvUAAACt4DCgZ6KgEQAAAAAAAAEBAAAysAAAEeAihRAAAKKrQAAADO
yu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIsIFZl
cnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5
MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAAAAAAAAAAUEFE
UEFEULQAAABCU0pCAQABAAAAAAAMAAAAdjQuMC4zMDMxOQAAAAAFAGwAAAAwBgAAI34AAJwGAABQ
CQAAI1N0cmluZ3MAAAAA7A8AAEAOAAAjVVMALB4AABAAAAAjR1VJRAAAADweAACoAgAAI0Jsb2IA
AAAAAAAAAgAAAVcdogEJAwAAAPolMwAWAAABAAAAMgAAAAUAAAAGAAAADwAAAAwAAABRAAAAAgAA
AA8AAAAHAAAAAgAAAAMAAAAEAAAAAQAAAAUAAAABAAAAAQAAAAAACgABAAAAAAAGAMEAugAKAN0A
yAAOAD0BFAEGAFkBugAGAG8BXgEGAKABiwESACsCHwISAEsCNQIGABID+AIGAD0DKwMGAFQDKwMG
AHEDKwMGAJADKwMGAKkDKwMGAMIDKwMGAN0DKwMGAPgDKwMGABEEKwMGAEoEKgQGAGoEKgQGAJsE
iAQGALgEugAGAL0EugAGAOEEKwMKAA0F9wQKACYF9wQGADsFKgQOAF0FFAEGAIsFfwUOAJkFFAEW
APIF0gUWAAoG0gUSAEIGHwISAF0GHwISAIIGHwIGAIoGugASAMoGHwISAAcHNQIGAE4HugASAGIH
HwIGAKIHjwcGAOgHugAGABsIugASAD8INQISAF0ISggSAGcIHwISAIMINQISALcISggSANoISggS
AOcIHwIAAAAAAQAAAAAAAQABAAAAEAAyADwABQABAAEAAAEQAGsAPAAJAAMABQABABAAdAB/AA0A
BAAIAAMBAACjAAAAEQAEABAAEQB/ARMAEQCsARcAEQD2ATkABgawAmUAVoC4AmgAVoDAAmgAUCAA
AAAAgxi8ARsAAQBYIAAAAACTCMIBHwABAJEgAAAAAJMI1gEkAAEAmCAAAAAAkwjiASkAAQCgIAAA
AACWCAYCPQACALMgAAAAAIYYvAEbAAIApyAAAAAAkRhWBacAAgC8IAAAAACGABoCGwACAAwvAAAA
AIEAWQJHAAIAFDIAAAAAhgBmAlAABQCQMgAAAACEAHQCWAAHAOgyAAAAAIQAggJYAAkADDQAAAAA
gQCPAl8ACwBANAAAAACBAJ8CXwAMAHA0AAAAAIYYvAEbAA0AAAABAMgCAAABAM4CAAACANsCAAAD
AOgCAAABAO8CAAACANsCAAABAO8CAAACANsCAAABAOgCAAACANsCAAABANsCAAABANsCSQC8AXYA
UQC8AXYAWQC8AXYAYQC8AXYAaQC8AXYAcQC8AXYAeQC8AXYAgQC8AXYAiQC8AXYAkQC8AXYAmQC8
AXsAoQC8ARsAqQC8ARsACQC8ARsAsQDPBIAAsQDqBIcAKQC8AYwAyQC8AZgA2QC8ARsAEQC8ARsA
4QC8ARsA6QC8ARsAGQCrBasA8QD8BbAA+QATBrUAAQEcBrwACQAmBsAAQQC8AXYAOQC8ARsA6QAv
BsQA6QA1BskAOQA8BhsAOQBUBs8AEQF4BtUACQETBtkAGQETBuAAIQGRBsAAIQGZBuUAGQGlBusA
6QCzBvAAGQHABvcAOQDfBvwACQHrBgIBOQDyBhsAKQHrBnYAIQEABwkBMQG8AV8AIQEABxABMQET
B3YAMQEsB3sAMQFABxYBOQFaBxsAKQFtBxwBOQBxB/cAIQF3ByMBOQCFBwIBEQGuBygBSQG8B7wA
IQHIB+UAGQHWBy4BSQHfBzQBUQHxBzgBUQH3Bz8BOQAGCBYBOQAvBhsA8QAMCHsAWQElCMAAIQEx
CEkBIQE5CI4BIQEAB5EBYQG8AVgAaQFzCK4BeQG8ARsAeQGSCLUBaQGkCHsAgQHFCLwBaQHKCNUA
iQH3COYBiQEBCRsAiQEGCRsAGQC8ARsACAAUAGwACAAYAHEAKQCTAJ4ALgAbAGMCLgAjAGMCLgBj
AIkCLgALAPIBLgATADoCLgAzADoCLgArAGMCLgA7AGkCLgBDAGMCLgBbAIACQwBrAHEASQCTAJ4A
YQCbAHEAgwCrAHEAkwBPAZcBwgHQAdkB7AECAAEAAwADAAAAbwEvAAAA7gE0AAAAEgJCAAIAAgAD
AAIAAwAFAAEABAAFAAIABQAHAASAAAABAAAA2hjsgQAAAAAAAH8AAAAEAAAAAAAAAAAAAAABALEA
AAAAAAQAAAAAAAAAAAAAAAEAugAAAAAADAAAAAAAAAAAAAAACgD1AAAAAAAEAAAAAAAAAAAAAAAB
AB8CAAAAAAwAAAAAAAAAAAAAAAoAswUAAAAAAAAAAAEAAAAMCQAABQAEAAAAAAAAPE1vZHVsZT4A
U1RfYzk2YjYzNDAwNTE1NGExZmE4MjJlZmVmYTQ4YThiMGEuZGxsAFJlc291cmNlcwBTVF9jOTZi
NjM0MDA1MTU0YTFmYTgyMmVmZWZhNDhhOGIwYS5Qcm9wZXJ0aWVzAFNldHRpbmdzAFNjcmlwdE1h
aW4AU1RfYzk2YjYzNDAwNTE1NGExZmE4MjJlZmVmYTQ4YThiMGEAU2NyaXB0UmVzdWx0cwBtc2Nv
cmxpYgBTeXN0ZW0AT2JqZWN0AFN5c3RlbS5Db25maWd1cmF0aW9uAEFwcGxpY2F0aW9uU2V0dGlu
Z3NCYXNlAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuU2NyaXB0VGFzawBNaWNyb3NvZnQuU3FsU2VydmVy
LkR0cy5UYXNrcy5TY3JpcHRUYXNrAFZTVEFSVFNjcmlwdE9iamVjdE1vZGVsQmFzZQBFbnVtAFN5
c3RlbS5SZXNvdXJjZXMAUmVzb3VyY2VNYW5hZ2VyAHJlc291cmNlTWFuAFN5c3RlbS5HbG9iYWxp
emF0aW9uAEN1bHR1cmVJbmZvAHJlc291cmNlQ3VsdHVyZQAuY3RvcgBnZXRfUmVzb3VyY2VNYW5h
Z2VyAGdldF9DdWx0dXJlAHNldF9DdWx0dXJlAEN1bHR1cmUAZGVmYXVsdEluc3RhbmNlAGdldF9E
ZWZhdWx0AERlZmF1bHQATWFpbgBTeXN0ZW0uRGF0YQBEYXRhVGFibGUAU3lzdGVtLkRhdGEuU3Fs
Q2xpZW50AFNxbENvbm5lY3Rpb24AX3JlcGxhY2VEYXRhAF9nZXREYXRhVGFibGUAX3VwZGF0ZUlu
c2VydABfaW5zZXJ0RXJyb3IAX2Nvbm5lY3Rpb25PcGVuAF9jb25uZWN0aW9uQ2xvc2UAdmFsdWVf
XwBTdWNjZXNzAEZhaWx1cmUAdmFsdWUAZHRGYXVsdHlUZW1wAG15Q29ubmVjdGlvbgBlcnJNc2cA
c3RyUXVlcnkAU3lzdGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1
dGUAU3lzdGVtLlJlZmxlY3Rpb24AQXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3NlbWJseURlc2Ny
aXB0aW9uQXR0cmlidXRlAEFzc2VtYmx5Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJseUNv
bXBhbnlBdHRyaWJ1dGUAQXNzZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0
QXR0cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAEFzc2VtYmx5Q3VsdHVyZUF0dHJp
YnV0ZQBBc3NlbWJseVZlcnNpb25BdHRyaWJ1dGUAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2
aWNlcwBDb21waWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5
QXR0cmlidXRlAFN5c3RlbS5EaWFnbm9zdGljcwBEZWJ1Z2dlck5vblVzZXJDb2RlQXR0cmlidXRl
AFR5cGUAUnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUAQXNzZW1ibHkAZ2V0X0Fz
c2VtYmx5AFN5c3RlbS5Db21wb25lbnRNb2RlbABFZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUARWRp
dG9yQnJvd3NhYmxlU3RhdGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUALmNjdG9yAFNTSVNT
Y3JpcHRUYXNrRW50cnlQb2ludEF0dHJpYnV0ZQBTeXN0ZW0uVGV4dABTdHJpbmdCdWlsZGVyAFNj
cmlwdE9iamVjdE1vZGVsAGdldF9EdHMATWljcm9zb2Z0LlNxbFNlcnZlci5NYW5hZ2VkRFRTAE1p
Y3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlJ1bnRpbWUAVmFyaWFibGVzAGdldF9WYXJpYWJsZXMAVmFy
aWFibGUAZ2V0X0l0ZW0AZ2V0X1ZhbHVlAFRvU3RyaW5nAENsZWFyAEFwcGVuZABSZXNldABEYXRh
Um93Q29sbGVjdGlvbgBnZXRfUm93cwBJbnRlcm5hbERhdGFDb2xsZWN0aW9uQmFzZQBnZXRfQ291
bnQARGF0YVJvdwBTdHJpbmcAVG9VcHBlcgBvcF9FcXVhbGl0eQBnZXRfSXRlbUFycmF5AEFwcGVu
ZEZvcm1hdABnZXRfVGFibGUARGF0YUNvbHVtbkNvbGxlY3Rpb24AZ2V0X0NvbHVtbnMAUmVtb3Zl
AEFjY2VwdENoYW5nZXMAQ29uY2F0AFNxbEJ1bGtDb3B5AHNldF9EZXN0aW5hdGlvblRhYmxlTmFt
ZQBzZXRfQnVsa0NvcHlUaW1lb3V0AFdyaXRlVG9TZXJ2ZXIASURpc3Bvc2FibGUARGlzcG9zZQBE
YXRhQ29sdW1uAEFkZABDbG9uZQBJc051bGxPckVtcHR5AEltcG9ydFJvdwBTeXN0ZW0uQ29sbGVj
dGlvbnMASUVudW1lcmF0b3IAR2V0RW51bWVyYXRvcgBnZXRfQ3VycmVudABvcF9JbmVxdWFsaXR5
AHNldF9JdGVtAE1vdmVOZXh0AERhdGVUaW1lAFBhcnNlAG9wX0dyZWF0ZXJUaGFuAE1lcmdlAHNl
dF9UYXNrUmVzdWx0AEV4Y2VwdGlvbgBnZXRfTWVzc2FnZQBSZXBsYWNlAEVtcHR5AFNxbENvbW1h
bmQAU3lzdGVtLkRhdGEuQ29tbW9uAERiQ29tbWFuZABDb21tYW5kVHlwZQBzZXRfQ29tbWFuZFR5
cGUAU3FsRGF0YUFkYXB0ZXIAc2V0X1NlbGVjdENvbW1hbmQAc2V0X0NvbW1hbmRUaW1lb3V0AERi
RGF0YUFkYXB0ZXIARmlsbABFeGVjdXRlTm9uUXVlcnkARGJDb25uZWN0aW9uAENvbm5lY3Rpb25T
dGF0ZQBnZXRfU3RhdGUAT3BlbgBDbG9zZQBTVF9jOTZiNjM0MDA1MTU0YTFmYTgyMmVmZWZhNDhh
OGIwYS5Qcm9wZXJ0aWVzLlJlc291cmNlcy5yZXNvdXJjZXMAAABxUwBUAF8AYwA5ADYAYgA2ADMA
NAAwADAANQAxADUANABhADEAZgBhADgAMgAyAGUAZgBlAGYAYQA0ADgAYQA4AGIAMABhAC4AUABy
AG8AcABlAHIAdABpAGUAcwAuAFIAZQBzAG8AdQByAGMAZQBzAAAtVQBzAGUAcgA6ADoAYwBvAG4A
bgBlAGMAdABpAG8AbgBTAHQAcgBpAG4AZwAALyAAUwBFAEwARQBDAFQAIABNAFMAVABFAE0AUAAu
ACoALAAgAEMAQQBTAEUAIAAALyAAVwBIAEUATgAgAE0AQgAuAOiQgJWzMPwwyTAgAEkAUwAgAE4A
VQBMAEwAIAABNSAAVABIAEUATgAgACcAVABSAFUARQAnACAARQBMAFMARQAgACcARgBBAEwAUwBF
ACcAIAABJyAARQBOAEQAIABBAFMAIABEAEUATABfAFIARQBDAE8AUgBEACAAAEkgAEYAUgBPAE0A
IABNAF8AUwBIAE8AVQBIAEkATgBfAEQAQQBUAEEAXwBUAEUATQBQACAAQQBTACAATQBTAFQARQBN
AFAAIAAAQSAATABFAEYAVAAgAEoATwBJAE4AIABNAF8AQgBVAE0ATwBOAF8ATQBBAFMAVABFAFIA
IABBAFMAIABNAEIAIAAANSAATwBOACAATQBCAC4A6JCAlbMw/DDJMD0ATQBTAFQARQBNAFAALgDo
kICVszD8MMkwIAABQSAAQQBOAEQAIABNAEIALgCvMOkwuTCzMPwwyTAgAD0AIABNAFMAVABFAE0A
UAAuAK8w6TC5MLMw/DDJMDsAIAABFUQARQBMAF8AUgBFAEMATwBSAEQAAAlUAFIAVQBFAAAPewAw
AH0AIAAgACAAIAAAMSAAAjDokICVszD8MMkwTDBGVcFU3jC5ML8wazBYWyhXVTCMMGYwRDB+MFsw
kzACMAEhIABUAFIAVQBOAEMAQQBUAEUAIABUAEEAQgBMAEUAIAAAH1UAcwBlAHIAOgA6AGMAaABl
AGMAawBUAHkAcABlAAANXwBUAEUATQBQADsAAAtfAFQARQBNAFAAAC8gAFMARQBMAEUAQwBUACAA
bQBzAFQAZQBtAHAALgAqACwAIABDAEEAUwBFACAAADMgAFcASABFAE4AIABtAHMAaQAuANVOZVFI
UbMw/DDJMCAASQBTACAATgBVAEwATAAgAAE3IABUAEgARQBOACAAJwBUAFIAVQBFACcAIABFAEwA
UwBFACAAJwBGAEEATABTAEUAJwAgACAAAUsgAEYAUgBPAE0AIABNAF8AUwBIAE8AVQBIAEkATgBf
AEQAQQBUAEEAXwBUAEUATQBQACAAYQBzACAAbQBzAFQAZQBtAHAAIAAgAABNIABMAEUARgBUACAA
SgBPAEkATgAgAE0AXwBTAEkASQBSAEUAUwBBAEsASQBfAE0AQQBTAFQARQBSACAAYQBzACAAbQBz
AGkAIAAgAAA/IABPAE4AIABtAHMAaQAuANVOZVFIUbMw/DDJMCAAPQAgAG0AcwBUAGUAbQBwAC4A
1U5lUUhRszD8MMkwOwABMyAAAjDVTmVRSFGzMPwwyTBMMEZVwVTeMLkwvzBrMFhbKFdVMIwwZjBE
MH4wWzCTMAIwAU0gAFMARQBMAEUAQwBUACAAbQBzAFQAZQBtAHAALgAqACwAbQBzAC4ARlXBVLMw
/DDJMCAAYQBzACAAbQBzAEZVwVSzMPwwyTAsACAAAU8gAEMATwBOAFYARQBSAFQAKABEAEEAVABF
ACwAQgBBAEkASwBBAC4ACWe5UouVy1nlZSkAIABhAHMAIADyWKFPCWe5UouVy1nlZSwAIAABTSAA
QwBPAE4AVgBFAFIAVAAoAEQAQQBUAEUALABHAEUATgBLAEEALgAJZ7lSi5XLWeVlKQAgAGEAcwAg
AJ9ToU8JZ7lSi5XLWeVlIAABSSAARgBSAE8ATQAgAE0AXwBTAEgATwBVAEgASQBOAF8ARABBAFQA
QQBfAFQARQBNAFAAIABhAHMAIABtAHMAVABlAG0AcAAgAABBIABMAEUARgBUACAASgBPAEkATgAg
AE0AXwBTAEgATwBVAEgASQBOAF8ARABBAFQAQQAgAGEAcwAgAG0AcwAgAAA9IABPAE4AIABtAHMA
VABlAG0AcAAuAFMASwBVALMw/DDJMCAAPQAgAG0AcwAuAFMASwBVALMw/DDJMCAAAYC7IABMAEUA
RgBUACAASgBPAEkATgAgACgAUwBFAEwARQBDAFQAIABTAEsAVQCzMPwwyTAsAE0AQQBYACgACWe5
UouVy1nlZSkAIABhAHMAIAAJZ7lSi5XLWeVlIABGAFIATwBNACAATQBfAEIAQQBJAEsAQQBfAFIA
SQBSAEUASwBJAF8AVABFAE0AUAAgAEcAUgBPAFUAUAAgAEIAWQAgAFMASwBVALMw/DDJMCkAQgBB
AEkASwBBACAAAUMgAE8ATgAgAG0AcwBUAGUAbQBwAC4AUwBLAFUAszD8MMkwIAA9ACAAQgBBAEkA
SwBBAC4AUwBLAFUAszD8MMkwIAABLyAAQQBOAEQAIABtAHMALgBGVcFUszD8MMkwIABJAFMAIAAg
AE4AVQBMAEwAIAABgL8gAEwARQBGAFQAIABKAE8ASQBOACAAIAAoAFMARQBMAEUAQwBUACAAUwBL
AFUAszD8MMkwLABNAEEAWAAoAAlnuVKLlctZ5WUpACAAYQBzACAACWe5UouVy1nlZSAARgBSAE8A
TQAgAE0AXwBHAEUATgBLAEEAXwBSAEkAUgBFAEsASQBfAFQARQBNAFAAIABHAFIATwBVAFAAIABC
AFkAIABTAEsAVQCzMPwwyTApACAARwBFAE4ASwBBACAAAUsgAE8ATgAgAG0AcwBUAGUAbQBwAC4A
UwBLAFUAszD8MMkwIAA9ACAARwBFAE4ASwBBAC4AUwBLAFUAszD8MMkwIABBAE4ARAAgAAFVIABt
AHMALgBGVcFUszD8MMkwIABJAFMAIABOAFUATABMACAATwBSAEQARQBSACAAQgBZACAAbQBzAFQA
ZQBtAHAALgAz/yv/Nf+zMPwwyTA7ACAAAQ9tAHMARlXBVLMw/DDJMAELRlXBVLMw/DDJMAELVABS
AFUARQAxAAAP8lihTwlnuVKLlctZ5WUBC1QAUgBVAEUAMgAAD59ToU8JZ7lSi5XLWeVlAQtUAFIA
VQBFADMAAAtUAFIAVQBFADQAAEECMDP/K/81/7Mw/DDJMGgwRlXBVLMw/DDJMG4wRH1/MAhUjzBb
MEwwRlXBVN4wuTC/MGgwcHVqMIowfjBZMAIwATUCMDP/K/81/7Mw/DDJMJIw8lihT2VcdGveMLkw
vzBrMFhbKFdVMIwwZjBEMH4wWzCTMAIwATUCMDP/K/81/7Mw/DDJMJIwn1OhT2VcdGveMLkwvzBr
MFhbKFdVMIwwZjBEMH4wWzCTMAIwAUMCMDP/K/81/7Mw/DDJMG4w8lihT4uVy1nlZUwwn1OhT4uV
y1nlZYgwijDlTgpOazA2UlCWVTCMMGYwRDB+MFkwAjABISAAUwBFAEwARQBDAFQAIABUAEUATQBQ
AC4AKgAsACAAAGsgAEMAQQBTAEUAIABXAEgARQBOACAAVABFAE0AUAAuAEpSZJbVMOkwsDA9ACcA
MQAnACAAQQBOAEQAIABEAEUATAAuADP/K/81/7Mw/DDJMCAASQBTACAATgBPAFQAIABOAFUATABM
ACAAAVkgAFQASABFAE4AIAAnAFQAUgBVAEUAJwAgAEUATABTAEUAIAAnAEYAQQBMAFMARQAnACAA
RQBOAEQAIABBAFMAIABEAEUATABfAFIARQBDAE8AUgBEACAAAUUgAEYAUgBPAE0AIABNAF8AUwBI
AE8AVQBIAEkATgBfAEQAQQBUAEEAXwBUAEUATQBQACAAQQBTACAAVABFAE0AUAAgAABLIABMAEUA
RgBUACAASgBPAEkATgAgAE0AXwBTAEgATwBVAEgASQBOAF8ARABBAFQAQQBfAEQARQBMACAAQQBT
ACAARABFAEwAIAAAOyAATwBOACAARABFAEwALgAz/yv/Nf+zMPwwyTAgAD0AIABUAEUATQBQAC4A
M/8r/zX/szD8MMkwIAABFVkwZzBrMEpSZJYIbn8wUwBLAFUAARO3MLkwxjDgMKgw6TD8MDoAIAAB
AycAAQMtAAEjVQBzAGUAcgA6ADoAcABhAGMAawBhAGcAZQBDAG8AZABlAAAJewAwAH0AIAAAQ0kA
TgBTAEUAUgBUACAASQBOAFQATwAgAEsAQQBOAFMASABJAF8AUABBAEMASwBBAEcARQBfAEUAUgBS
AE8AUgAgAABLIAAoANEwwzCxMPwwuDCzMPwwyTAsAMcw/DC/MOVl2E4sAKgw6TD8MOVlQmYsAKgw
6TD8MIVRuVssAKgw6TD8MNUw6TCwMCkAIAABFSAAVgBBAEwAVQBFAFMAKAAnAEcAAQcnACwAJwAB
I1UAcwBlAHIAOgA6AGMAdQByAHIAZQBuAHQARABhAHQAZQAAG1UAcwBlAHIAOgA6AHMAeQBzAEQA
YQB0AGUAAAMCMAERAjAnACwAJwAzACcAKQA7AAEZSQBOAFMARQBSAFQAIABJAE4AVABPACAAAICH
IABLAEEATgBTAEgASQBfAFAAQQBDAEsAQQBHAEUAXwBFAFIAUgBPAFIAKABbANEwwzCxMPwwuDCz
MPwwyTBdACwAWwDHMPwwvzDlZdhOXQAsAFsAqDDpMPww5WVCZl0ALABbAKgw6TD8MIVRuVtdACwA
WwCoMOkw/DDVMOkwsDBdACkAIAABDycALAAnADMAJwApADsAAQkBJBciWa1KrHd9lXWW4rwACLd6
XFYZNOCJCImEXc2AgMyRAwYSFQMGEhkDIAABBAAAEhUEAAASGQUAAQESGQQIABIVBAgAEhkDBhIM
BAAAEgwECAASDAggAwESHRIhDgcgAhIdDhIhBiACAQ4SIQUgAQESIQIGCAMGERQEAAAAAAQBAAAA
BCABAQ4EIAEBCAYAARJZEV0EIAASYQYgAgEOEmEEBwESFQUgAQERaQgBAAIAAAAAAAMAAAEEIAAS
eQQgABJ9BiABEoCBHAMgABwDIAAOBCAAEnUFIAESdQ4FIAASgIUDIAAIBiABEoCNCAQgARwOBQAC
Ag4OBCAAHRwGIAISdQ4cBCAAEh0FIAASgJUGIAEBEoCNBgADDg4ODgUAAg4ODgUgAQESHQYgARKA
oQ4EAAECDgUgABKApQUgAgEOHAMgAAIGAAERgKkOCQACAhGAqRGAqQUgAg4ODj4HIBJ1Eh0SHRId
DhIhEoCNEnUICAgIEoCZCAgIEoCZCBKAjRKAjQgICAgICBKAmRKArRKApRKAnRKApRKAnQIGDgUA
AQ4dDhYHCxJ1EnUOEoCNCAgICBKAmRKArR0OBiABARGAuQYgAQESgLEFIAEIEh0NBwQSHRKAsRKA
vRKArQgHAhKAsRKArQwHBBKAsRJ1EoCtHQ4FIAARgMkFBwESgK1HAQAaLk5FVEZyYW1ld29yayxW
ZXJzaW9uPXY0LjABAFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1lEC5ORVQgRnJhbWV3b3JrIDQoAQAj
U1RfYzk2YjYzNDAwNTE1NGExZmE4MjJlZmVmYTQ4YThiMGEAAAUBAAAAABYBABFDb3B5cmlnaHQg
QCAgMjAxNgAACAEACAAAAAAAHgEAAQBUAhZXcmFwTm9uRXhjZXB0aW9uVGhyb3dzATxWAAAAAAAA
AAAAAF5WAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAABQVgAAAAAAAAAAAAAAAAAAAAAAAAAAX0Nv
ckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAQAAAAGAAAgAAAAAAA
AAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAAAFhgAACwAwAAAAAAAAAA
AACwAzQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAAvQTv/gAAAQAAAAEA7IHa
GAAAAQDsgdoYPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAABAFYAYQByAEYAaQBsAGUA
SQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAAAAAAALAEEAMAAAEAUwB0
AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAA7AIAAAEAMAAwADAAMAAwADQAYgAwAAAAcAAkAAEA
RgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAAAFMAVABfAGMAOQA2AGIANgAzADQAMAAw
ADUAMQA1ADQAYQAxAGYAYQA4ADIAMgBlAGYAZQBmAGEANAA4AGEAOABiADAAYQAAAEAADwABAEYA
aQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgA2ADMANgAyAC4AMwAzADIANgAwAAAAAABw
ACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMAVABfAGMAOQA2AGIANgAzADQAMAAwADUA
MQA1ADQAYQAxAGYAYQA4ADIAMgBlAGYAZQBmAGEANAA4AGEAOABiADAAYQAuAGQAbABsAAAASAAS
AAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBvAHAAeQByAGkAZwBoAHQAIABAACAA
IAAyADAAMQA2AAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBhAG0AZQAAAFMAVABf
AGMAOQA2AGIANgAzADQAMAAwADUAMQA1ADQAYQAxAGYAYQA4ADIAMgBlAGYAZQBmAGEANAA4AGEA
OABiADAAYQAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEAbQBlAAAAAABTAFQAXwBj
ADkANgBiADYAMwA0ADAAMAA1ADEANQA0AGEAMQBmAGEAOAAyADIAZQBmAGUAZgBhADQAOABhADgA
YgAwAGEAAABEAA8AAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADYAMwA2
ADIALgAzADMAMgA2ADAAAAAAAEgADwABAEEAcwBzAGUAbQBiAGwAeQAgAFYAZQByAHMAaQBvAG4A
AAAxAC4AMAAuADYAMwA2ADIALgAzADMAMgA2ADAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABQAAAMAAAAcDYAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\売上伝票明細"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:Description="Script Task"
      DTS:DTSID="{25594900-5C65-4CA5-95E3-30F41108B3EE}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="売上伝票明細"
      DTS:ThreadHint="2">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_870c819dae0648b8a7489000b106a353"
          VSTAMajorVersion="3"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadOnlyVariables="User::checkType,User::connectionString,User::currentDate,User::packageCode,User::sysDate">
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_ce3ffc09050545a588750b50f21c1788.Properties.Settings.get_Default():ST_ce3ffc09050545a588750b50f21c1788.Properties.Sett" +
    "ings")]

namespace ST_ce3ffc09050545a588750b50f21c1788.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[
#region Namespaces
using System;
using System.Data;
using System.Data.SqlClient;
using System.Text;
#endregion

namespace ST_ce3ffc09050545a588750b50f21c1788
{
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
    {
        #region "Main Method"
        /// <summary>
        /// 作成者：イルファン　マンスリー
        /// 説明：仕入実績の業務データチェックする。
        /// 作成日：２０１６年０８月０８日
        /// </summary>
        public void Main()
		{
            string strConnection = Dts.Variables["User::connectionString"].Value.ToString();
            SqlConnection myConnection = new SqlConnection(strConnection);
            StringBuilder strERRQuery = new StringBuilder();
            DataTable dtFaultyTemp;
            try
            { 
                dtFaultyTemp = new DataTable();
                _connectionOpen(myConnection);
                #region "Check for 伝票頭一桁 Check"
                //Get All The Records of Temp TABLE, with New Column DEL_RECORD as Flag.
                //Faulty Records will have DEL_RECORD as 'TRUE'
                strERRQuery.Clear();
                strERRQuery.Append(" SELECT URIAGE.*, ");
                strERRQuery.Append(" CASE WHEN SUBSTRING(URIAGE.売上伝票番号,1,1) != KANJO.伝票頭一桁 ");
                strERRQuery.Append(" OR KANJO.伝票頭一桁 IS NULL ");
                strERRQuery.Append(" THEN 'TRUE' ELSE 'FALSE' ");
                strERRQuery.Append(" END AS DEL_RECORD ");
                strERRQuery.Append(" FROM D_URIAGE_DENPYOU_MEISAI_TEMP AS URIAGE ");
                strERRQuery.Append(" LEFT JOIN M_KANJOU_CODE AS KANJO ");
                strERRQuery.Append(" ON URIAGE.勘定コード = KANJO.勘定コード;");
                dtFaultyTemp.Reset();
                dtFaultyTemp = _getDataTable(strERRQuery.ToString(), myConnection);
                if (dtFaultyTemp.Rows.Count > 0)
                {
                    _replaceData(dtFaultyTemp, myConnection, "売上伝票の先頭桁を間違えました。");   //Replace & Remove Data in Actual Db Table
                }
                #endregion

                #region "Check for 売上伝票番号,売上伝票明細番号(PK) Check"
                strERRQuery.Clear();
                strERRQuery.Append(" SELECT TEMP.*, ");
                strERRQuery.Append(" CASE WHEN TEMP.売上伝票番号 = MAIN.売上伝票番号 ");
                strERRQuery.Append(" AND TEMP.売上伝票明細番号 = MAIN.売上伝票明細番号 ");
                strERRQuery.Append(" THEN 'TRUE' ELSE 'FALSE' ");
                strERRQuery.Append(" END AS DEL_RECORD ");
                strERRQuery.Append(" FROM D_URIAGE_DENPYOU_MEISAI_TEMP AS TEMP ");
                strERRQuery.Append(" LEFT JOIN D_URIAGE_DENPYOU_MEISAI AS MAIN ");
                strERRQuery.Append(" ON TEMP.売上伝票番号 = MAIN.売上伝票番号 ");
                strERRQuery.Append(" AND TEMP.売上伝票明細番号 = MAIN.売上伝票明細番号; ");
                dtFaultyTemp.Reset();
                dtFaultyTemp = _getDataTable(strERRQuery.ToString(), myConnection);
                if (dtFaultyTemp.Rows.Count > 0)
                {
                    _replaceData(dtFaultyTemp, myConnection, "売上伝票番号・売上伝票明細番号が既に取込済みです。");   //Replace & Remove Data in Actual Db Table
                }
                #endregion

                #region "Check for 締日 Check"
                //Get All The Records of Temp TABLE, with New Column DEL_RECORD as Flag.
                //Faulty Records will have DEL_RECORD as 'TRUE'
                strERRQuery.Clear();
                strERRQuery.Append(" SELECT *, CASE ");
                strERRQuery.Append(" WHEN CAST(CONVERT(VARCHAR(10),売上伝票日付,121) AS DATE) <= (SELECT MAX(月度終了日) FROM M_DENPYOU_SIME_MASTER WHERE 月度締日 IS NOT NULL) ");
                strERRQuery.Append(" THEN 'TRUE' ELSE 'FALSE' ");
                strERRQuery.Append(" END AS DEL_RECORD ");
                strERRQuery.Append(" FROM D_URIAGE_DENPYOU_MEISAI_TEMP;");
                dtFaultyTemp.Reset();
                dtFaultyTemp = _getDataTable(strERRQuery.ToString(), myConnection);
                if (dtFaultyTemp.Rows.Count > 0)
                {
                    _replaceData(dtFaultyTemp, myConnection, "月度締めました。締め日前の売上伝票日があります。");   //Replace & Remove Data in Actual Db Table
                }
                #endregion

                #region "Check for 棚卸確定日 Check"
                //Get All The Records of Temp TABLE, with New Column DEL_RECORD as Flag.
                //Faulty Records will have DEL_RECORD as 'TRUE'
                strERRQuery.Clear();
                strERRQuery.Append(" SELECT TEMP.*, CASE ");
                strERRQuery.Append(" WHEN TEMP.売上伝票日付 < TANA.棚卸日付  ");
                strERRQuery.Append(" THEN 'TRUE' ELSE 'FALSE' ");
                strERRQuery.Append(" END AS DEL_RECORD  ");
                strERRQuery.Append(" FROM D_URIAGE_DENPYOU_MEISAI_TEMP AS TEMP  ");
                strERRQuery.Append(" LEFT JOIN (SELECT DISTINCT 店舗コード,MAX(棚卸日付) AS 棚卸日付 FROM M_TANAOROSHI_MASTER WHERE 棚卸確定日 != '1900-01-01' GROUP BY 店舗コード) TANA   ");
                strERRQuery.Append(" ON TEMP.店舗コード = TANA.店舗コード  ");
                dtFaultyTemp.Reset();
                dtFaultyTemp = _getDataTable(strERRQuery.ToString(), myConnection);
                if (dtFaultyTemp.Rows.Count > 0)
                {
                    _replaceData(dtFaultyTemp, myConnection, "棚卸確定日前の売上伝票日があります。");   //Replace & Remove Data in Actual Db Table
                }
                #endregion

                #region "Check for 仕入条件 & 勘定コード Check"
                //Get All The Records of Temp TABLE, with New Column DEL_RECORD as Flag.
                //Faulty Records will have DEL_RECORD as 'TRUE'
                strERRQuery.Clear();
                strERRQuery.Append(" SELECT URIAGE.*, ");
                strERRQuery.Append(" CASE WHEN JOKEN.仕入条件 != URIAGE.買取受託 ");
                strERRQuery.Append(" THEN 'TRUE' ELSE 'FALSE' ");
                strERRQuery.Append(" END AS DEL_RECORD  ");
                strERRQuery.Append(" FROM D_URIAGE_DENPYOU_MEISAI_TEMP AS URIAGE ");
                strERRQuery.Append(" LEFT JOIN (SELECT MST.ＳＫＵコード AS ＳＫＵコード,JR.有効開始日,JR.有効終了日, JR.仕入条件  ");
                strERRQuery.Append(" FROM M_SHIIRE_JOUKEN_RIREKI JR LEFT JOIN M_SHOUHIN_DATA MST  ");
                strERRQuery.Append(" ON JR.商品コード = MST.商品コード) AS JOKEN ");
                strERRQuery.Append(" ON JOKEN.ＳＫＵコード = URIAGE.ＳＫＵコード  ");
                strERRQuery.Append(" AND URIAGE.売上伝票日付 BETWEEN JOKEN.有効開始日 AND JOKEN.有効終了日; ");
                dtFaultyTemp.Reset();
                dtFaultyTemp = _getDataTable(strERRQuery.ToString(), myConnection);
                if (dtFaultyTemp.Rows.Count > 0)
                {
                    _replaceData(dtFaultyTemp, myConnection, "売上日と有効開始日の組み合わせを間違えました。");   //Replace & Remove Data in Actual Db Table
                }
                #endregion

                #region "Check for F.K（仕入先コード、ＳＫＵコード、店舗コード） Check"
                //Get All The Records of Temp TABLE, with New Column DEL_RECORD as Flag.
                //Faulty Records will have DEL_RECORD as 'TRUE'
                strERRQuery.Clear();
                strERRQuery.Append(" SELECT URIAGE.*, CASE ");
                strERRQuery.Append(" WHEN TENPO.店舗コード IS NULL OR ");
                strERRQuery.Append(" SHOHIN.ＳＫＵコード IS NULL OR ");
                strERRQuery.Append(" SIIRESAKI.仕入先コード IS NULL ");
                strERRQuery.Append(" THEN 'TRUE' ELSE 'FALSE' ");
                strERRQuery.Append(" END AS DEL_RECORD ");
                strERRQuery.Append(" FROM D_URIAGE_DENPYOU_MEISAI_TEMP AS URIAGE ");
                strERRQuery.Append(" LEFT JOIN M_TENPO_MASTER AS TENPO ");
                strERRQuery.Append(" ON URIAGE.店舗コード = TENPO.店舗コード ");
                strERRQuery.Append(" LEFT JOIN M_SHOUHIN_DATA AS SHOHIN ");
                strERRQuery.Append(" ON URIAGE.ＳＫＵコード = SHOHIN.ＳＫＵコード  ");
                strERRQuery.Append(" LEFT JOIN M_SIIRESAKI_MASTER AS SIIRESAKI ");
                strERRQuery.Append(" ON URIAGE.仕入先コード = SIIRESAKI.仕入先コード;");
                dtFaultyTemp.Reset();
                dtFaultyTemp = _getDataTable(strERRQuery.ToString(), myConnection);
                if (dtFaultyTemp.Rows.Count > 0)
                {
                    _replaceData(dtFaultyTemp, myConnection, "仕入先コード、ＳＫＵコードまたは店舗コードはマスタに存在されていません。");   //Replace & Remove Data in Actual Db Table
                }
                #endregion
                Dts.TaskResult = (int)ScriptResults.Success;
            }
            #region Catch/Finally
            catch (Exception ex)
            {
                strERRQuery.Clear();
                strERRQuery.Append("INSERT INTO KANSHI_PACKAGE_ERROR ");
                strERRQuery.Append(" (パッケージコード,データ日付,エラー日時,エラー内容,エラーフラグ) ");
                strERRQuery.Append(" VALUES('G" + Dts.Variables["User::packageCode"].Value.ToString() + "','" + Dts.Variables["User::currentDate"].Value.ToString() + "','" + Dts.Variables["User::sysDate"].Value.ToString() + "','システムエラー:" + ex.Message.ToString().Replace("'", "-") + "','3');");
                _updateInsert(strERRQuery.ToString(), myConnection);
                Dts.TaskResult = (int)ScriptResults.Success;
            }
            finally 
            {
                _connectionClose(myConnection);
                dtFaultyTemp = null;
                strERRQuery = null;
                myConnection = null;
            }
            #endregion
		}
        #endregion

        #region "replace Data"
        //Data Replacement in Actual DB After Test
        private void _replaceData(DataTable dtFaultyTemp, SqlConnection myConnection, string strErrorMsg)
        {
            StringBuilder strERRQuery = new StringBuilder();
            StringBuilder strBuildRow = new StringBuilder();
            DataRow drTemp;
            string strPackageCode = string.Empty;
            int intErrorCount = 0;  //To Count Errors in the DataTable, to avoid its extra TRUNCATION and BULK.
            try
            {
                _connectionOpen(myConnection);
                strPackageCode = Dts.Variables["User::packageCode"].Value.ToString();
                intErrorCount = 0;
                int countRows = dtFaultyTemp.Rows.Count;
                for (int intI = 0; intI < countRows; intI++)
                {
                    #region Report Faulty Records
                    if (dtFaultyTemp.Rows[intI]["DEL_RECORD"].ToString().ToUpper() == "TRUE")
                    {
                        intErrorCount = intErrorCount + 1;
                        //'TRUE' means Faulty SKU Record
                        drTemp = dtFaultyTemp.Rows[intI];
                        strBuildRow.Clear();
                        for (int intJ = 0; intJ < drTemp.Table.Columns.Count-1; intJ++)
                        {
                            strBuildRow.AppendFormat("{0} ", drTemp.ItemArray[intJ]);
                        }
                        strERRQuery.Clear();
                        strERRQuery.Append("INSERT INTO KANSHI_PACKAGE_ERROR ");
                        strERRQuery.Append(" (パッケージコード,データ日付,エラー日時,エラー内容,エラーフラグ) ");
                        strERRQuery.Append(" VALUES('G" + strPackageCode + "','" + Dts.Variables["User::currentDate"].Value.ToString() + "','" + Dts.Variables["User::sysDate"].Value.ToString() + "','" + strBuildRow.ToString() + "。" + strErrorMsg + "','3');");
                        _updateInsert(strERRQuery.ToString(), myConnection);
                        countRows = countRows - 1;
                        intI = intI - 1;
                        dtFaultyTemp.Rows.Remove(drTemp);   //Remove Faulty Records from DataTable Object.
                        dtFaultyTemp.AcceptChanges();    //Commit DataTable Changes.
                    }
                    #endregion
                }
                dtFaultyTemp.Columns.Remove("DEL_RECORD");
                if (intErrorCount > 0)
                {
                    #region "TRUNCATE TEMP Table"
                    //TRUNCATE TEMP Table, to be import New Correct Records
                    strERRQuery.Clear();
                    strERRQuery.Append(" TRUNCATE TABLE " + Dts.Variables["User::checkType"].Value.ToString() + "_TEMP");
                    _updateInsert(strERRQuery.ToString(), myConnection);
                    #endregion
                    #region "Bulk Update Records"
                    //正しいデータテーブルからインポートするためいに。
                    using (SqlBulkCopy bulkCopy = new SqlBulkCopy(myConnection))
                    {
                        bulkCopy.DestinationTableName = Dts.Variables["User::checkType"].Value.ToString() + "_TEMP";   //Assign table name
                        _connectionOpen(myConnection);
                        bulkCopy.BulkCopyTimeout = 600; //Default Timeut 30 Change to 600. in seconds
                        bulkCopy.WriteToServer(dtFaultyTemp);   //Write into Actual table.
                    }
                    #endregion
                }
            }
            #region Catch/Finally
            catch (Exception ex) 
            {
                throw ex;
            }
            finally
            {
                strERRQuery = null;
                dtFaultyTemp = null;
                strBuildRow = null;
                drTemp = null;
                strErrorMsg = null;
                strPackageCode = null;
            }
            #endregion
        }
        #endregion

        #region "Get DataTable"
        //Created On: 08-08-2016
        //Description: Aim to Return DataTable from the Query.
        public DataTable _getDataTable(string strQuery, SqlConnection myConnection)
        {
            StringBuilder strERRQuery = new StringBuilder();
            DataTable objDT = new DataTable();
            SqlCommand myCommand;
            SqlDataAdapter sqlSelectData;
            try
            {
                _connectionOpen(myConnection);
                myCommand = new SqlCommand(strQuery, myConnection);
                myCommand.CommandType = CommandType.Text;
                sqlSelectData = new SqlDataAdapter();
                sqlSelectData.SelectCommand = myCommand;
                myCommand.CommandTimeout = 600; //Increases Query execution timeout.
                sqlSelectData.Fill(objDT);
            }
            #region CATCH/FINALLY
            catch (Exception ex)
            {
                throw ex;
            }
            finally
            {
                strQuery = null;
                myCommand = null;
                sqlSelectData = null;
                strERRQuery = null;
            }
            #endregion
            return objDT;
        }
        #endregion

        #region "Update/Insert Query in Db"
        protected void _updateInsert(string strQuery, SqlConnection myConnection)
        {
            StringBuilder strERRQuery = new StringBuilder();
            SqlCommand myCommand;
            try
            {
                myCommand = new SqlCommand(strQuery, myConnection);
                _connectionOpen(myConnection);
                myCommand.ExecuteNonQuery();
            }
            #region CATCH/FINALLY
            catch (Exception ex)
            {
                throw ex;
            }
            finally
            {
                strERRQuery = null;
                myConnection = null;
                myCommand = null;
            }
            #endregion
        }
        #endregion

        #region Connection Open
        private void _connectionOpen(SqlConnection myConnection)
        {
            try
            {
                if (myConnection.State != ConnectionState.Open)
                {
                    myConnection.Open();
                }
            }
            catch (Exception ex)
            {
                throw ex;
            }
        }
        #endregion

        #region Connection Close
        private void _connectionClose(SqlConnection myConnection)
        {
            try
            {
                if (myConnection.State != ConnectionState.Closed)
                {
                    myConnection.Close();
                }
            }
            catch (Exception ex)
            {
                throw ex;
            }
        }
        #endregion

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
          <ProjectItem
            Name="ST_870c819dae0648b8a7489000b106a353.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?><Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003"><PropertyGroup><ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids><Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration><Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform><ProductVersion>8.0.30703</ProductVersion><SchemaVersion>2.0</SchemaVersion><ProjectGuid>{6f1cd3ad-124c-410c-a3da-0ed5e3468b82}</ProjectGuid><OutputType>Library</OutputType><AppDesignerFolder>Properties</AppDesignerFolder><RootNamespace>ST_ce3ffc09050545a588750b50f21c1788</RootNamespace><AssemblyName>ST_870c819dae0648b8a7489000b106a353</AssemblyName><TargetFrameworkVersion>v4.0</TargetFrameworkVersion><FileAlignment>512</FileAlignment><ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Debug' "><DebugSymbols>true</DebugSymbols><DebugType>full</DebugType><Optimize>false</Optimize><OutputPath>.\bin\Debug\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>DEBUG;TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Release' "><DebugSymbols>false</DebugSymbols><Optimize>true</Optimize><OutputPath>.\bin\Release\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><ItemGroup><Reference Include="System" /><Reference Include="System.Data" /><Reference Include="System.Windows.Forms" /><Reference Include="System.Xml" /><Reference Include="Microsoft.SqlServer.ManagedDTS, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.ScriptTask, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /></ItemGroup><ItemGroup><AppDesigner Include="Properties\" /><Compile Include="Properties\AssemblyInfo.cs"><SubType>Code</SubType></Compile><EmbeddedResource Include="Properties\Resources.resx"><Generator>ResXFileCodeGenerator</Generator><LastGenOutput>Resources.Designer.cs</LastGenOutput></EmbeddedResource><Compile Include="Properties\Resources.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Resources.resx</DependentUpon></Compile><None Include="Properties\Settings.settings"><Generator>SettingsSingleFileGenerator</Generator><LastGenOutput>Settings.Designer.cs</LastGenOutput></None><Compile Include="Properties\Settings.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Settings.settings</DependentUpon></Compile><Compile Include="ScriptMain.cs"><SubType>Code</SubType></Compile></ItemGroup><!-- Include the build rules for a C# project.--><Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" /><ProjectExtensions><VisualStudio><FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}"><ProjectProperties HostName="ScriptTask" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="#HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\VisualStudio\10.0\InstallDir#\devenv.exe" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" /><Host Name="ScriptTask" GeneratedNamespace="$safeprojectname" IconIndex=""></Host><ProjectClient><HostIdentifier>SSIS_ST120</HostIdentifier></ProjectClient></FlavorProperties></VisualStudio></ProjectExtensions></Project>]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>ST_ce3ffc09050545a588750b50f21c1788</msb:CodeName>
		<msb:DisplayName>ST_ce3ffc09050545a588750b50f21c1788</msb:DisplayName>
		<msb:ProjectId>{EE24C7D7-5D12-4340-B8D9-E41721313B68}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_870c819dae0648b8a7489000b106a353.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_ce3ffc09050545a588750b50f21c1788")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_ce3ffc09050545a588750b50f21c1788")]
[assembly: AssemblyCopyright("Copyright @  2016")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_ce3ffc09050545a588750b50f21c1788.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_ce3ffc09050545a588750b50f21c1788.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_ce3ffc09050545a588750b50f21c1788.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_ce3ffc09050545a588750b50f21c1788.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_ce3ffc09050545a588750b50f21c1788.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_870c819dae0648b8a7489000b106a353.dll">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
BxEIbzkAAArc3gUTCREJet4PFAoUEAEUCxQMFBADFA3cKgAAQUwAAAIAAABAAgAATQAAAI0CAAAM
AAAAAAAAAAAAAAAVAAAAhgIAAJsCAAAFAAAAJAAAAQIAAAAVAAAAjQIAAKICAAAPAAAAAAAAABsw
AgBTAAAABAAAEXMcAAAKJnMdAAAKCgIEKAwAAAYDBHM6AAAKCwcXbzsAAApzPAAACgwIB289AAAK
ByBYAgAAbz4AAAoIBm8/AAAKJt4DDQl63ggUEAEUCxQM3AYqAAEcAAAAAAwAOEQAAyQAAAECAAwA
PUkACAAAAAAbMAIAKgAAAAUAABFzHAAACiYDBHM6AAAKCgIEKAwAAAYGb0AAAAom3gMLB3reBhQQ
AhQK3CoAAAEcAAAAAAYAGB4AAyQAAAECAAYAHSMABgAAAAAbMAIAFQAAAAYAABEDb0EAAAoXLgYD
b0IAAAreAwoGeioAAAABEAAAAAAAABERAAMkAAABGzABABQAAAAGAAARA29BAAAKLAYDb0MAAAre
AwoGeioBEAAAAAAAABAQAAMkAAABHgIoRAAACioAAAAAtAAAAM7K774BAAAAkQAAAGxTeXN0ZW0u
UmVzb3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0
dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkjU3lzdGVtLlJlc291
cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQQURQtAAAAEJTSkIBAAEAAAAA
AAwAAAB2NC4wLjMwMzE5AAAAAAUAbAAAALQFAAAjfgAAIAYAAMQIAAAjU3RyaW5ncwAAAADkDgAA
ABAAACNVUwDkHgAAEAAAACNHVUlEAAAA9B4AAEQCAAAjQmxvYgAAAAAAAAACAAABVx2iAQkDAAAA
+iUzABYAAAEAAAAvAAAABQAAAAYAAAAOAAAACgAAAEQAAAACAAAADwAAAAYAAAACAAAAAwAAAAQA
AAABAAAABQAAAAEAAAABAAAAAAAKAAEAAAAAAAYAwQC6AAoA3QDIAA4APQEUAQYAWQG6AAYAbwFe
AQYAoAGLARIAKwIfAhIASwI1AgYACgPwAgYANQMjAwYATAMjAwYAaQMjAwYAiAMjAwYAoQMjAwYA
ugMjAwYA1QMjAwYA8AMjAwYACQQjAwYAQgQiBAYAYgQiBAYAtwSkBAYA1AS6AAYA2QS6AAYA/QQj
AwoAKQUTBQoAQgUTBQYAVwUiBA4AeQUUAQ4AmwUUARYA9AXUBRYADAbUBQYAPQYxBhIAXgYfAhIA
eQYfAgYArQa6AAYAtAa6ABIA3wYfAhIAIAcfAhIAVgc1AgYAnQe6ABIAsQc1AhIAzwe8BxIA2Qcf
AhIA9Qc1AhIAKQi8BxIATAi8BxIAWQgfAgAAAAABAAAAAAABAAEAAAAQADIAPAAFAAEAAQAAARAA
awA8AAkAAwAFAAEAEAB0AH8ADQAEAAgAAwEAAKMAAAARAAQADwARAH8BEwARAKwBFwARAPYBOQAG
BqMCZQBWgKsCaABWgLMCaABQIAAAAACDGLwBGwABAFggAAAAAJMIwgEfAAEAkSAAAAAAkwjWASQA
AQCYIAAAAACTCOIBKQABAKAgAAAAAJYIBgI9AAIAsyAAAAAAhhi8ARsAAgCnIAAAAACRGHIFpwAC
ALwgAAAAAIYAGgIbAAIAFCYAAAAAgQBZAkcAAgAgKQAAAACGAGYCUAAFAJwpAAAAAIQAdAJYAAcA
8CkAAAAAgQCCAl8ACQAkKgAAAACBAJICXwAKAFQqAAAAAIYYvAEbAAsAAAABALsCAAABAMECAAAC
AM4CAAADANsCAAABAOcCAAACAM4CAAABAOcCAAACAM4CAAABAM4CAAABAM4CSQC8AXYAUQC8AXYA
WQC8AXYAYQC8AXYAaQC8AXYAcQC8AXYAeQC8AXYAgQC8AXYAiQC8AXYAkQC8AXYAmQC8AXsAoQC8
ARsAqQC8ARsACQC8ARsAsQDrBIAAsQAGBYcAKQC8AYwAyQC8AZgA2QC8ARsAEQC8ARsA4QC8ARsA
GQCtBasA6QD+BbAA8QAVBrUA+QAeBrsACQAoBr8AQQC8AXYAAQG8ARsAOQC8ARsAAQFLBsMAAQFR
BskAOQBYBhsAOQBwBtAAEQGUBtYA6QCeBnsAIQG+Br8AGQHKBtoAGQHSBuAAGQHZBvYACQEVBvkA
KQEVBgABGQHnBr8AGQHvBgUBKQH7BgsBAQEJBxABKQEWBxgBOQA1Bx0BCQFBByMBOQBIBxsAMQFB
B3YAGQHSBioBOQG8AV8AGQHSBjEBOQFiB3YAOQF7B3sAOQGPBzcBQQGpBxsASQG8AVgAUQHlB1YB
YQG8ARsAYQEECF0BUQEWCHsAaQE3CGQBUQE8CNYAcQFpCIEBcQFzCBsAcQF4CBsAGQC8ARsACAAU
AGwACAAYAHEAKQCTAJ4ALgAbAP4BLgAjAP4BLgBjACQCLgALAI0BLgATANUBLgAzANUBLgArAP4B
LgA7AAQCLgBDAP4BLgBbABsCQwBrAHEASQCTAJ4AYQCbAHEAgwCrAHEAkwDmAD0BagF4AYcBAgAB
AAMAAwAAAG8BLwAAAO4BNAAAABICQgACAAIAAwACAAMABQABAAQABQACAAUABwAEgAAAAQAAAGEY
nnQAAAAAAACABAAABAAAAAAAAAAAAAAAAQCxAAAAAAAEAAAAAAAAAAAAAAABALoAAAAAAAwAAAAA
AAAAAAAAAAoA9QAAAAAABAAAAAAAAAAAAAAAAQAfAgAAAAAMAAAAAAAAAAAAAAAKALUFAAAAAAAA
AAABAAAAfggAAAUABAAAAAAAADxNb2R1bGU+AFNUXzg3MGM4MTlkYWUwNjQ4YjhhNzQ4OTAwMGIx
MDZhMzUzLmRsbABSZXNvdXJjZXMAU1RfY2UzZmZjMDkwNTA1NDVhNTg4NzUwYjUwZjIxYzE3ODgu
UHJvcGVydGllcwBTZXR0aW5ncwBTY3JpcHRNYWluAFNUX2NlM2ZmYzA5MDUwNTQ1YTU4ODc1MGI1
MGYyMWMxNzg4AFNjcmlwdFJlc3VsdHMAbXNjb3JsaWIAU3lzdGVtAE9iamVjdABTeXN0ZW0uQ29u
ZmlndXJhdGlvbgBBcHBsaWNhdGlvblNldHRpbmdzQmFzZQBNaWNyb3NvZnQuU3FsU2VydmVyLlNj
cmlwdFRhc2sATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuVGFza3MuU2NyaXB0VGFzawBWU1RBUlRT
Y3JpcHRPYmplY3RNb2RlbEJhc2UARW51bQBTeXN0ZW0uUmVzb3VyY2VzAFJlc291cmNlTWFuYWdl
cgByZXNvdXJjZU1hbgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBDdWx0dXJlSW5mbwByZXNvdXJjZUN1
bHR1cmUALmN0b3IAZ2V0X1Jlc291cmNlTWFuYWdlcgBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQBD
dWx0dXJlAGRlZmF1bHRJbnN0YW5jZQBnZXRfRGVmYXVsdABEZWZhdWx0AE1haW4AU3lzdGVtLkRh
dGEARGF0YVRhYmxlAFN5c3RlbS5EYXRhLlNxbENsaWVudABTcWxDb25uZWN0aW9uAF9yZXBsYWNl
RGF0YQBfZ2V0RGF0YVRhYmxlAF91cGRhdGVJbnNlcnQAX2Nvbm5lY3Rpb25PcGVuAF9jb25uZWN0
aW9uQ2xvc2UAdmFsdWVfXwBTdWNjZXNzAEZhaWx1cmUAdmFsdWUAZHRGYXVsdHlUZW1wAG15Q29u
bmVjdGlvbgBzdHJFcnJvck1zZwBzdHJRdWVyeQBTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nAFRh
cmdldEZyYW1ld29ya0F0dHJpYnV0ZQBTeXN0ZW0uUmVmbGVjdGlvbgBBc3NlbWJseVRpdGxlQXR0
cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUAQXNzZW1ibHlDb25maWd1cmF0aW9u
QXR0cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRyaWJ1
dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1dGUA
QXNzZW1ibHlDdWx0dXJlQXR0cmlidXRlAEFzc2VtYmx5VmVyc2lvbkF0dHJpYnV0ZQBTeXN0ZW0u
UnVudGltZS5Db21waWxlclNlcnZpY2VzAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1dGUA
UnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAU1RfODcwYzgxOWRhZTA2NDhiOGE3NDg5MDAw
YjEwNmEzNTMAU3lzdGVtLkRpYWdub3N0aWNzAERlYnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUA
VHlwZQBSdW50aW1lVHlwZUhhbmRsZQBHZXRUeXBlRnJvbUhhbmRsZQBBc3NlbWJseQBnZXRfQXNz
ZW1ibHkAU3lzdGVtLkNvbXBvbmVudE1vZGVsAEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBFZGl0
b3JCcm93c2FibGVTdGF0ZQBDb21waWxlckdlbmVyYXRlZEF0dHJpYnV0ZQAuY2N0b3IAU1NJU1Nj
cmlwdFRhc2tFbnRyeVBvaW50QXR0cmlidXRlAFNjcmlwdE9iamVjdE1vZGVsAGdldF9EdHMATWlj
cm9zb2Z0LlNxbFNlcnZlci5NYW5hZ2VkRFRTAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlJ1bnRp
bWUAVmFyaWFibGVzAGdldF9WYXJpYWJsZXMAVmFyaWFibGUAZ2V0X0l0ZW0AZ2V0X1ZhbHVlAFRv
U3RyaW5nAFN5c3RlbS5UZXh0AFN0cmluZ0J1aWxkZXIAQ2xlYXIAQXBwZW5kAFJlc2V0AERhdGFS
b3dDb2xsZWN0aW9uAGdldF9Sb3dzAEludGVybmFsRGF0YUNvbGxlY3Rpb25CYXNlAGdldF9Db3Vu
dABzZXRfVGFza1Jlc3VsdABTdHJpbmcARXhjZXB0aW9uAGdldF9NZXNzYWdlAFJlcGxhY2UAQ29u
Y2F0AEVtcHR5AERhdGFSb3cAVG9VcHBlcgBvcF9FcXVhbGl0eQBnZXRfSXRlbUFycmF5AEFwcGVu
ZEZvcm1hdABnZXRfVGFibGUARGF0YUNvbHVtbkNvbGxlY3Rpb24AZ2V0X0NvbHVtbnMAUmVtb3Zl
AEFjY2VwdENoYW5nZXMAU3FsQnVsa0NvcHkAc2V0X0Rlc3RpbmF0aW9uVGFibGVOYW1lAHNldF9C
dWxrQ29weVRpbWVvdXQAV3JpdGVUb1NlcnZlcgBJRGlzcG9zYWJsZQBEaXNwb3NlAFNxbENvbW1h
bmQAU3lzdGVtLkRhdGEuQ29tbW9uAERiQ29tbWFuZABDb21tYW5kVHlwZQBzZXRfQ29tbWFuZFR5
cGUAU3FsRGF0YUFkYXB0ZXIAc2V0X1NlbGVjdENvbW1hbmQAc2V0X0NvbW1hbmRUaW1lb3V0AERi
RGF0YUFkYXB0ZXIARmlsbABFeGVjdXRlTm9uUXVlcnkARGJDb25uZWN0aW9uAENvbm5lY3Rpb25T
dGF0ZQBnZXRfU3RhdGUAT3BlbgBDbG9zZQBTVF9jZTNmZmMwOTA1MDU0NWE1ODg3NTBiNTBmMjFj
MTc4OC5Qcm9wZXJ0aWVzLlJlc291cmNlcy5yZXNvdXJjZXMAAAAAAHFTAFQAXwBjAGUAMwBmAGYA
YwAwADkAMAA1ADAANQA0ADUAYQA1ADgAOAA3ADUAMABiADUAMABmADIAMQBjADEANwA4ADgALgBQ
AHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMAAC1VAHMAZQByADoAOgBjAG8A
bgBuAGUAYwB0AGkAbwBuAFMAdAByAGkAbgBnAAAlIABTAEUATABFAEMAVAAgAFUAUgBJAEEARwBF
AC4AKgAsACAAAG8gAEMAQQBTAEUAIABXAEgARQBOACAAUwBVAEIAUwBUAFIASQBOAEcAKABVAFIA
SQBBAEcARQAuAPJYCk4dT2h5anX3UywAMQAsADEAKQAgACEAPQAgAEsAQQBOAEoATwAuAB1PaHkt
mABOQWggAAExIABPAFIAIABLAEEATgBKAE8ALgAdT2h5LZgATkFoIABJAFMAIABOAFUATABMACAA
ATUgAFQASABFAE4AIAAnAFQAUgBVAEUAJwAgAEUATABTAEUAIAAnAEYAQQBMAFMARQAnACAAAScg
AEUATgBEACAAQQBTACAARABFAEwAXwBSAEUAQwBPAFIARAAgAABbIABGAFIATwBNACAARABfAFUA
UgBJAEEARwBFAF8ARABFAE4AUABZAE8AVQBfAE0ARQBJAFMAQQBJAF8AVABFAE0AUAAgAEEAUwAg
AFUAUgBJAEEARwBFACAAAEUgAEwARQBGAFQAIABKAE8ASQBOACAATQBfAEsAQQBOAEoATwBVAF8A
QwBPAEQARQAgAEEAUwAgAEsAQQBOAEoATwAgAAA/IABPAE4AIABVAFIASQBBAEcARQAuANhSmluz
MPwwyTAgAD0AIABLAEEATgBKAE8ALgDYUppbszD8MMkwOwABIfJYCk4dT2h5bjBIUS2YQWiSMJOV
VZBIMH4wVzBfMAIwASEgAFMARQBMAEUAQwBUACAAVABFAE0AUAAuACoALAAgAABLIABDAEEAUwBF
ACAAVwBIAEUATgAgAFQARQBNAFAALgDyWApOHU9oeWp191MgAD0AIABNAEEASQBOAC4A8lgKTh1P
aHlqdfdTIAABRyAAQQBOAEQAIABUAEUATQBQAC4A8lgKTh1PaHkOZjB9anX3UyAAPQAgAE0AQQBJ
AE4ALgDyWApOHU9oeQ5mMH1qdfdTIAABVyAARgBSAE8ATQAgAEQAXwBVAFIASQBBAEcARQBfAEQA
RQBOAFAAWQBPAFUAXwBNAEUASQBTAEEASQBfAFQARQBNAFAAIABBAFMAIABUAEUATQBQACAAAFcg
AEwARQBGAFQAIABKAE8ASQBOACAARABfAFUAUgBJAEEARwBFAF8ARABFAE4AUABZAE8AVQBfAE0A
RQBJAFMAQQBJACAAQQBTACAATQBBAEkATgAgAAA9IABPAE4AIABUAEUATQBQAC4A8lgKTh1PaHlq
dfdTIAA9ACAATQBBAEkATgAuAPJYCk4dT2h5anX3UyAAAUkgAEEATgBEACAAVABFAE0AUAAuAPJY
Ck4dT2h5DmYwfWp191MgAD0AIABNAEEASQBOAC4A8lgKTh1PaHkOZjB9anX3UzsAIAABM/JYCk4d
T2h5anX3U/sw8lgKTh1PaHkOZjB9anX3U0ww4mVrMNZTvI8Ibn8wZzBZMAIwASEgAFMARQBMAEUA
QwBUACAAKgAsACAAQwBBAFMARQAgAACA+yAAVwBIAEUATgAgAEMAQQBTAFQAKABDAE8ATgBWAEUA
UgBUACgAVgBBAFIAQwBIAEEAUgAoADEAMAApACwA8lgKTh1PaHnlZdhOLAAxADIAMQApACAAQQBT
ACAARABBAFQARQApACAAPAA9ACAAKABTAEUATABFAEMAVAAgAE0AQQBYACgACGemXkJ9hk7lZSkA
IABGAFIATwBNACAATQBfAEQARQBOAFAAWQBPAFUAXwBTAEkATQBFAF8ATQBBAFMAVABFAFIAIABX
AEgARQBSAEUAIAAIZ6Ze4H3lZSAASQBTACAATgBPAFQAIABOAFUATABMACkAIAABRyAARgBSAE8A
TQAgAEQAXwBVAFIASQBBAEcARQBfAEQARQBOAFAAWQBPAFUAXwBNAEUASQBTAEEASQBfAFQARQBN
AFAAOwAAMQhnpl7gfYEwfjBXMF8wAjDgfYEw5WVNUm4w8lgKTh1PaHnlZUwwQjCKMH4wWTACMAEr
IABTAEUATABFAEMAVAAgAFQARQBNAFAALgAqACwAIABDAEEAUwBFACAAAD8gAFcASABFAE4AIABU
AEUATQBQAC4A8lgKTh1PaHnlZdhOIAA8ACAAVABBAE4AQQAuANpoeFPlZdhOIAAgAAEpIABFAE4A
RAAgAEEAUwAgAEQARQBMAF8AUgBFAEMATwBSAEQAIAAgAABZIABGAFIATwBNACAARABfAFUAUgBJ
AEEARwBFAF8ARABFAE4AUABZAE8AVQBfAE0ARQBJAFMAQQBJAF8AVABFAE0AUAAgAEEAUwAgAFQA
RQBNAFAAIAAgAACBASAATABFAEYAVAAgAEoATwBJAE4AIAAoAFMARQBMAEUAQwBUACAARABJAFMA
VABJAE4AQwBUACAAl14XgrMw/DDJMCwATQBBAFgAKADaaHhT5WXYTikAIABBAFMAIADaaHhT5WXY
TiAARgBSAE8ATQAgAE0AXwBUAEEATgBBAE8AUgBPAFMASABJAF8ATQBBAFMAVABFAFIAIABXAEgA
RQBSAEUAIADaaHhTuniaW+VlIAAhAD0AIAAnADEAOQAwADAALQAwADEALQAwADEAJwAgAEcAUgBP
AFUAUAAgAEIAWQAgAJdeF4KzMPwwyTApACAAVABBAE4AQQAgACAAIAABOyAATwBOACAAVABFAE0A
UAAuAJdeF4KzMPwwyTAgAD0AIABUAEEATgBBAC4Al14XgrMw/DDJMCAAIAABJdpoeFO6eJpb5WVN
Um4w8lgKTh1PaHnlZUwwQjCKMH4wWTACMAFLIABDAEEAUwBFACAAVwBIAEUATgAgAEoATwBLAEUA
TgAuANVOZVFhZ/ZOIAAhAD0AIABVAFIASQBBAEcARQAuALeM1lPXUxeKIAABgIkgAEwARQBGAFQA
IABKAE8ASQBOACAAKABTAEUATABFAEMAVAAgAE0AUwBUAC4AM/8r/zX/szD8MMkwIABBAFMAIAAz
/yv/Nf+zMPwwyTAsAEoAUgAuAAlnuVKLlctZ5WUsAEoAUgAuAAlnuVJCfYZO5WUsACAASgBSAC4A
1U5lUWFn9k4gACAAAX0gAEYAUgBPAE0AIABNAF8AUwBIAEkASQBSAEUAXwBKAE8AVQBLAEUATgBf
AFIASQBSAEUASwBJACAASgBSACAATABFAEYAVAAgAEoATwBJAE4AIABNAF8AUwBIAE8AVQBIAEkA
TgBfAEQAQQBUAEEAIABNAFMAVAAgACAAAEcgAE8ATgAgAEoAUgAuAEZVwVSzMPwwyTAgAD0AIABN
AFMAVAAuAEZVwVSzMPwwyTApACAAQQBTACAASgBPAEsARQBOACAAAUUgAE8ATgAgAEoATwBLAEUA
TgAuADP/K/81/7Mw/DDJMCAAPQAgAFUAUgBJAEEARwBFAC4AM/8r/zX/szD8MMkwIAAgAAFxIABB
AE4ARAAgAFUAUgBJAEEARwBFAC4A8lgKTh1PaHnlZdhOIABCAEUAVABXAEUARQBOACAASgBPAEsA
RQBOAC4ACWe5UouVy1nlZSAAQQBOAEQAIABKAE8ASwBFAE4ALgAJZ7lSQn2GTuVlOwAgAAEv8lgK
TuVlaDAJZ7lSi5XLWeVlbjBEfX8wCFSPMFswkjCTlVWQSDB+MFcwXzACMAEvIABTAEUATABFAEMA
VAAgAFUAUgBJAEEARwBFAC4AKgAsACAAQwBBAFMARQAgAAA7IABXAEgARQBOACAAVABFAE4AUABP
AC4Al14XgrMw/DDJMCAASQBTACAATgBVAEwATAAgAE8AUgAgAAE1IABTAEgATwBIAEkATgAuADP/
K/81/7Mw/DDJMCAASQBTACAATgBVAEwATAAgAE8AUgAgAAE1IABTAEkASQBSAEUAUwBBAEsASQAu
ANVOZVFIUbMw/DDJMCAASQBTACAATgBVAEwATAAgAAFHIABMAEUARgBUACAASgBPAEkATgAgAE0A
XwBUAEUATgBQAE8AXwBNAEEAUwBUAEUAUgAgAEEAUwAgAFQARQBOAFAATwAgAAA/IABPAE4AIABV
AFIASQBBAEcARQAuAJdeF4KzMPwwyTAgAD0AIABUAEUATgBQAE8ALgCXXheCszD8MMkwIAABSSAA
TABFAEYAVAAgAEoATwBJAE4AIABNAF8AUwBIAE8AVQBIAEkATgBfAEQAQQBUAEEAIABBAFMAIABT
AEgATwBIAEkATgAgAABHIABPAE4AIABVAFIASQBBAEcARQAuADP/K/81/7Mw/DDJMCAAPQAgAFMA
SABPAEgASQBOAC4AM/8r/zX/szD8MMkwIAAgAAFXIABMAEUARgBUACAASgBPAEkATgAgAE0AXwBT
AEkASQBSAEUAUwBBAEsASQBfAE0AQQBTAFQARQBSACAAQQBTACAAUwBJAEkAUgBFAFMAQQBLAEkA
IAAASyAATwBOACAAVQBSAEkAQQBHAEUALgDVTmVRSFGzMPwwyTAgAD0AIABTAEkASQBSAEUAUwBB
AEsASQAuANVOZVFIUbMw/DDJMDsAAUnVTmVRSFGzMPwwyTABMDP/K/81/7Mw/DDJMH4wXzBvMJde
F4KzMPwwyTBvMN4wuTC/MGswWFsoV1UwjDBmMEQwfjBbMJMwAjABQ0kATgBTAEUAUgBUACAASQBO
AFQATwAgAEsAQQBOAFMASABJAF8AUABBAEMASwBBAEcARQBfAEUAUgBSAE8AUgAgAABLIAAoANEw
wzCxMPwwuDCzMPwwyTAsAMcw/DC/MOVl2E4sAKgw6TD8MOVlQmYsAKgw6TD8MIVRuVssAKgw6TD8
MNUw6TCwMCkAIAABFSAAVgBBAEwAVQBFAFMAKAAnAEcAASNVAHMAZQByADoAOgBwAGEAYwBrAGEA
ZwBlAEMAbwBkAGUAAAcnACwAJwABI1UAcwBlAHIAOgA6AGMAdQByAHIAZQBuAHQARABhAHQAZQAA
G1UAcwBlAHIAOgA6AHMAeQBzAEQAYQB0AGUAABcnACwAJwC3MLkwxjDgMKgw6TD8MDoAAQMnAAED
LQABDycALAAnADMAJwApADsAARVEAEUATABfAFIARQBDAE8AUgBEAAAJVABSAFUARQAACXsAMAB9
ACAAAAMCMAEhIABUAFIAVQBOAEMAQQBUAEUAIABUAEEAQgBMAEUAIAAAH1UAcwBlAHIAOgA6AGMA
aABlAGMAawBUAHkAcABlAAALXwBUAEUATQBQAAAAACC6Weu/DdJPqfKlGQCPQ+IACLd6XFYZNOCJ
CImEXc2AgMyRAwYSFQMGEhkDIAABBAAAEhUEAAASGQUAAQESGQQIABIVBAgAEhkDBhIMBAAAEgwE
CAASDAggAwESHRIhDgcgAhIdDhIhBiACAQ4SIQUgAQESIQIGCAMGERQEAAAAAAQBAAAABCABAQ4E
IAEBCAYAARJZEV0EIAASYQYgAgEOEmEEBwESFQUgAQERaQgBAAIAAAAAAAMAAAEEIAASdQQgABJ5
BSABEn0cAyAAHAMgAA4FIAASgIEGIAESgIEOBSAAEoCFAyAACAUgAg4ODgUAAQ4dDg8HBg4SIRKA
gRIdEoCRHQ4CBg4GIAESgJUIBCABHA4FAAICDg4EIAAdHAcgAhKAgQ4cBCAAEh0FIAASgJkGIAEB
EoCVBgADDg4ODgUAAg4ODgUgAQESHRgHCxKAgRKAgRKAlQ4ICAgIEoCdEoCRHQ4GIAEBEYCtBiAB
ARKApQUgAQgSHQ0HBBIdEoClEoCxEoCRCAcCEoClEoCRBSAAEYC9BQcBEoCRRwEAGi5ORVRGcmFt
ZXdvcmssVmVyc2lvbj12NC4wAQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRAuTkVUIEZyYW1ld29y
ayA0KAEAI1NUX2NlM2ZmYzA5MDUwNTQ1YTU4ODc1MGI1MGYyMWMxNzg4AAAFAQAAAAAWAQARQ29w
eXJpZ2h0IEAgIDIwMTYAAAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEA
eEwAAAAAAAAAAAAAjkwAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIBMAAAAAAAAAABfQ29yRGxs
TWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABABAAAAAYAACA
AAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABIAAAAWGAAALADAAAA
AAAAAAAAALADNAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAAAAC9BO/+AAABAAAA
AQCedGEYAAABAJ50YRg/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAAAAEAVgBhAHIARgBp
AGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4AAAAAAAAAsAQQAwAA
AQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAADsAgAAAQAwADAAMAAwADAANABiADAAAABw
ACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBUAF8AYwBlADMAZgBmAGMA
MAA5ADAANQAwADUANAA1AGEANQA4ADgANwA1ADAAYgA1ADAAZgAyADEAYwAxADcAOAA4AAAAQAAP
AAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADYAMgA0ADEALgAyADkAOAA1ADQA
AAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBUAF8AOAA3ADAAYwA4ADEAOQBk
AGEAZQAwADYANAA4AGIAOABhADcANAA4ADkAMAAwADAAYgAxADAANgBhADMANQAzAC4AZABsAGwA
AABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8AcAB5AHIAaQBnAGgAdAAg
AEAAIAAgADIAMAAxADYAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEAbQBlAAAA
UwBUAF8AOAA3ADAAYwA4ADEAOQBkAGEAZQAwADYANAA4AGIAOABhADcANAA4ADkAMAAwADAAYgAx
ADAANgBhADMANQAzAC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUAAAAAAFMA
VABfAGMAZQAzAGYAZgBjADAAOQAwADUAMAA1ADQANQBhADUAOAA4ADcANQAwAGIANQAwAGYAMgAx
AGMAMQA3ADgAOAAAAEQADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4A
NgAyADQAMQAuADIAOQA4ADUANAAAAAAASAAPAAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBlAHIAcwBp
AG8AbgAAADEALgAwAC4ANgAyADQAMQAuADIAOQA4ADUANAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAwAAACgPAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\売価履歴マスタチェック"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:Description="Script Task"
      DTS:DTSID="{C3C74B4E-0AF4-41FB-AD04-19E77952478C}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="売価履歴マスタチェック"
      DTS:ThreadHint="13">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_f8ff373a12d249c3825a8aacbe586416"
          VSTAMajorVersion="3"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadOnlyVariables="User::checkType,User::connectionString,User::currentDate,User::packageCode,User::sysDate">
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_1879164d18434922b821b58ca4d6ca19")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_1879164d18434922b821b58ca4d6ca19")]
[assembly: AssemblyCopyright("Copyright @  2016")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="ST_f8ff373a12d249c3825a8aacbe586416.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?><Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003"><PropertyGroup><ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids><Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration><Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform><ProductVersion>8.0.30703</ProductVersion><SchemaVersion>2.0</SchemaVersion><ProjectGuid>{c468750e-c8b3-4d46-98f3-f4486318237c}</ProjectGuid><OutputType>Library</OutputType><AppDesignerFolder>Properties</AppDesignerFolder><RootNamespace>ST_1879164d18434922b821b58ca4d6ca19</RootNamespace><AssemblyName>ST_f8ff373a12d249c3825a8aacbe586416</AssemblyName><TargetFrameworkVersion>v4.0</TargetFrameworkVersion><FileAlignment>512</FileAlignment><ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Debug' "><DebugSymbols>true</DebugSymbols><DebugType>full</DebugType><Optimize>false</Optimize><OutputPath>.\bin\Debug\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>DEBUG;TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Release' "><DebugSymbols>false</DebugSymbols><Optimize>true</Optimize><OutputPath>.\bin\Release\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><ItemGroup><Reference Include="System" /><Reference Include="System.Data" /><Reference Include="System.Windows.Forms" /><Reference Include="System.Xml" /><Reference Include="Microsoft.SqlServer.ManagedDTS, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.ScriptTask, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /></ItemGroup><ItemGroup><AppDesigner Include="Properties\" /><Compile Include="Properties\AssemblyInfo.cs"><SubType>Code</SubType></Compile><EmbeddedResource Include="Properties\Resources.resx"><Generator>ResXFileCodeGenerator</Generator><LastGenOutput>Resources.Designer.cs</LastGenOutput></EmbeddedResource><Compile Include="Properties\Resources.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Resources.resx</DependentUpon></Compile><None Include="Properties\Settings.settings"><Generator>SettingsSingleFileGenerator</Generator><LastGenOutput>Settings.Designer.cs</LastGenOutput></None><Compile Include="Properties\Settings.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Settings.settings</DependentUpon></Compile><Compile Include="ScriptMain.cs"><SubType>Code</SubType></Compile></ItemGroup><!-- Include the build rules for a C# project.--><Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" /><ProjectExtensions><VisualStudio><FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}"><ProjectProperties HostName="ScriptTask" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="#HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\VisualStudio\10.0\InstallDir#\devenv.exe" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" /><Host Name="ScriptTask" GeneratedNamespace="$safeprojectname" IconIndex=""></Host><ProjectClient><HostIdentifier>SSIS_ST120</HostIdentifier></ProjectClient></FlavorProperties></VisualStudio></ProjectExtensions></Project>]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[
#region Namespaces
using System;
using System.Data;
using System.Data.SqlClient;
using System.Text;

#endregion

namespace ST_1879164d18434922b821b58ca4d6ca19
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region "Main Method"
        //作成者: Irfan Mansuri
        //説明: This Package aim to Check Master Data for 原価履歴(GENKA_RIREKI).
        //      By Checking its FK of SKU in SHOUHIN_MASTER.
		public void Main()
		{
            string strConnectionString = Dts.Variables["User::connectionString"].Value.ToString();
            SqlConnection myConnection = new SqlConnection(strConnectionString);
            StringBuilder strBuildQry = new StringBuilder();
            DataTable dtGenka = new DataTable();    //Get GENKA_TEMP Records in it
            DataRow drTemp=null; //To Delete From GENKA_TEMP Record from its DataTable.
            StringBuilder strBuildRow;
            string strPackageCode = string.Empty;
            int intErrorCount = 0;  //To Count Errors in the DataTable, to avoid its extra TRUNCATION and BULK.
            try
            {
                _connectionOpen(myConnection);
                strBuildRow = new StringBuilder();
                strPackageCode = Dts.Variables["User::packageCode"].Value.ToString();
                #region "Get Faulty SKU"
                //Which SKUs are NOT in its Master it will show 'DEL_RECORD' as 'TRUE'
                strBuildQry.Clear();
                strBuildQry.Append(" SELECT BAIKA.*,CASE ");
                strBuildQry.Append(" WHEN SHOHIN.ＳＫＵコード IS NULL ");
                strBuildQry.Append(" THEN 'TRUE' ELSE 'FALSE' ");
                strBuildQry.Append(" END AS DEL_RECORD ");
                strBuildQry.Append(" FROM M_BAIKA_RIREKI_TEMP AS BAIKA ");
                strBuildQry.Append(" LEFT JOIN M_SHOUHIN_DATA AS SHOHIN ");
                strBuildQry.Append(" ON BAIKA.ＳＫＵコード = SHOHIN.ＳＫＵコード ");
                strBuildQry.Append(" ORDER BY DEL_RECORD DESC;");
                #endregion
                dtGenka.Reset();
                dtGenka = _getDataTable(strBuildQry.ToString(), myConnection);  //Retrieve GENKA Records
                if (dtGenka.Rows.Count > 0)
                {
                    intErrorCount = 0;
                    int countRows = dtGenka.Rows.Count;
                    for (int intI = 0; intI < countRows; intI++)
                    {
                        #region Report Faulty Records
                        if (dtGenka.Rows[intI]["DEL_RECORD"].ToString().ToUpper() == "TRUE")
                        {
                            intErrorCount = intErrorCount + 1;
                            //'TRUE' means Faulty SKU Record
                            drTemp = dtGenka.Rows[intI];
                            strBuildRow.Clear();
                            for (int intJ = 0; intJ < drTemp.Table.Columns.Count-1; intJ++)
                            {
                                strBuildRow.AppendFormat("{0} ",drTemp.ItemArray[intJ]);
                            }
                            strBuildQry.Clear();
                            strBuildQry.Append("INSERT INTO KANSHI_PACKAGE_ERROR ");
                            strBuildQry.Append(" (パッケージコード,データ日付,エラー日時,エラー内容,エラーフラグ) ");
                            strBuildQry.Append(" VALUES('G" + strPackageCode + "','" + Dts.Variables["User::currentDate"].Value.ToString() + "','" + Dts.Variables["User::sysDate"].Value.ToString() + "','" + strBuildRow.ToString() + "。商品マスタにＳＫＵが存在されていません。','3');");
                            _updateInsert(strBuildQry.ToString(), myConnection);
                            countRows = countRows - 1;
                            intI = intI - 1;
                            dtGenka.Rows.Remove(drTemp);   //Remove Faulty Records from DataTable Object.
                            dtGenka.AcceptChanges();    //Commit DataTable Changes.
                        }
                        #endregion
                    }

                    dtGenka.Columns.Remove("DEL_RECORD");
                    if (intErrorCount > 0)
                    {
                        #region "TRUNCATE TEMP Table"
                        //TRUNCATE TEMP Table, to be import New Correct Records from 'DtGenka' DataTable.
                        strBuildQry.Clear();
                        strBuildQry.Append(" TRUNCATE TABLE " + Dts.Variables["User::checkType"].Value.ToString() + "_TEMP;");
                        _updateInsert(strBuildQry.ToString(), myConnection);
                        #endregion
                        #region "Bulk Update Records"
                        //正しいデータテーブルからインポートするためいに。
                        using (SqlBulkCopy bulkCopy = new SqlBulkCopy(myConnection))
                        {
                            bulkCopy.DestinationTableName = Dts.Variables["User::checkType"].Value.ToString() + "_TEMP";   //Assign table name
                            _connectionOpen(myConnection);  //Open only if it is close.
                            bulkCopy.BulkCopyTimeout = 600; //Default Timeut 30 Change to 600. in seconds
                            bulkCopy.WriteToServer(dtGenka);   //Write into Actual table.
                        }
                        #endregion
                    }
                }

                #region "伝票日付 Should not be bigger than Today"
                //Get All The Records of Temp TABLE, with New Column DEL_RECORD as Flag.
                //Faulty Records will have DEL_RECORD as 'TRUE'
                strBuildQry.Clear();
                strBuildQry.Append(" SELECT *, CASE ");
                strBuildQry.Append(" WHEN CONVERT(DATE,有効開始日) > CONVERT(DATE,GETDATE()) ");
                strBuildQry.Append(" THEN 'TRUE' ELSE 'FALSE' END AS DEL_RECORD ");
                strBuildQry.Append(" FROM M_BAIKA_RIREKI_TEMP;");
                dtGenka.Reset();
                dtGenka = _getDataTable(strBuildQry.ToString(), myConnection);
                if (dtGenka.Rows.Count > 0)
                {
                    intErrorCount = 0;
                    int countRows = dtGenka.Rows.Count;
                    for (int intI = 0; intI < countRows; intI++)
                    {
                        #region Report Faulty Records
                        if (dtGenka.Rows[intI]["DEL_RECORD"].ToString().ToUpper() == "TRUE")
                        {
                            intErrorCount = intErrorCount + 1;
                            //'TRUE' means Faulty SKU Record
                            drTemp = dtGenka.Rows[intI];
                            strBuildRow.Clear();
                            for (int intJ = 0; intJ < drTemp.Table.Columns.Count - 1; intJ++)
                            {
                                strBuildRow.AppendFormat("{0} ", drTemp.ItemArray[intJ]);
                            }
                            strBuildQry.Clear();
                            strBuildQry.Append("INSERT INTO KANSHI_PACKAGE_ERROR ");
                            strBuildQry.Append(" (パッケージコード,データ日付,エラー日時,エラー内容,エラーフラグ) ");
                            strBuildQry.Append(" VALUES('G" + strPackageCode + "','" + Dts.Variables["User::currentDate"].Value.ToString() + "','" + Dts.Variables["User::sysDate"].Value.ToString() + "','" + strBuildRow.ToString() + "。売価有効開始日で将来日の設定が禁止です。','3');");
                            _updateInsert(strBuildQry.ToString(), myConnection);
                            countRows = countRows - 1;
                            intI = intI - 1;
                            dtGenka.Rows.Remove(drTemp);   //Remove Faulty Records from DataTable Object.
                            dtGenka.AcceptChanges();    //Commit DataTable Changes.
                        }
                        #endregion
                    }

                    dtGenka.Columns.Remove("DEL_RECORD");
                    if (intErrorCount > 0)
                    {
                        #region "TRUNCATE TEMP Table"
                        //TRUNCATE TEMP Table, to be import New Correct Records from 'DtGenka' DataTable.
                        strBuildQry.Clear();
                        strBuildQry.Append(" TRUNCATE TABLE " + Dts.Variables["User::checkType"].Value.ToString() + "_TEMP;");
                        _updateInsert(strBuildQry.ToString(), myConnection);
                        #endregion
                        #region "Bulk Update Records"
                        //正しいデータテーブルからインポートするためいに。
                        using (SqlBulkCopy bulkCopy = new SqlBulkCopy(myConnection))
                        {
                            bulkCopy.DestinationTableName = Dts.Variables["User::checkType"].Value.ToString() + "_TEMP";   //Assign table name
                            _connectionOpen(myConnection);   //Open only if it is Close.
                            bulkCopy.BulkCopyTimeout = 600; //Default Timeut 30 Change to 600. in seconds
                            bulkCopy.WriteToServer(dtGenka);   //Write into Actual table.
                        }
                        #endregion
                    }
                }
                #endregion

                Dts.TaskResult = (int)ScriptResults.Success;
            }
            #region CATCH/FINALLY
            catch (Exception ex)
            {
                strBuildQry.Clear();
                strBuildQry.Append("INSERT INTO KANSHI_PACKAGE_ERROR ");
                strBuildQry.Append(" (パッケージコード,データ日付,エラー日時,エラー内容,エラーフラグ) ");
                strBuildQry.Append(" VALUES('G" + strPackageCode + "','" + Dts.Variables["User::currentDate"].Value.ToString() + "','" + Dts.Variables["User::sysDate"].Value.ToString() + "','システムエラー:" + ex.Message.ToString().Replace("'", "-") + "','3');");
                _updateInsert(strBuildQry.ToString(), myConnection);
                Dts.TaskResult = (int)ScriptResults.Success;
            }
            finally
            {
                _connectionClose(myConnection);
                strConnectionString = null;
                strBuildQry = null;
                myConnection = null;
                dtGenka = null;
                drTemp=null;
                strBuildRow = null;
            }
            #endregion
        }
        #endregion

        #region "Get DataTable"
        //作成日付: 16-07-2016
        //説明: Aim to Return DataTable from the Query.
        public DataTable _getDataTable(string strQuery, SqlConnection myConnection)
        {
            StringBuilder strERRQuery = new StringBuilder();
            DataTable objDT = new DataTable();
            SqlCommand myCommand;
            SqlDataAdapter sqlSelectData;
            try
            {
                _connectionOpen(myConnection);
                myCommand = new SqlCommand(strQuery, myConnection);
                myCommand.CommandType = CommandType.Text;
                sqlSelectData = new SqlDataAdapter();
                sqlSelectData.SelectCommand = myCommand;
                myCommand.CommandTimeout = 600; //Increases Query execution timeout.
                sqlSelectData.Fill(objDT);
            }
            #region CATCH/FINALLY
            catch (Exception ex)
            {
                throw ex;
            }
            finally
            {
                myConnection = null;
                strQuery = null;
                myCommand = null;
                sqlSelectData = null;
                strERRQuery = null;
            }
            #endregion
            return objDT;
        }
        #endregion

        #region "Update/Insert Query in Db"
        /// <summary>
        /// 作成日付: 2016-07-20
        /// 説明: Insert/Update Query will be run on specified connection.
        /// </summary>
        protected void _updateInsert(string strQuery, SqlConnection myConnection)
        {
            SqlCommand myCommand;
            try
            {
                _connectionOpen(myConnection);
                myCommand = new SqlCommand(strQuery, myConnection);
                myCommand.ExecuteNonQuery();
            }
            #region CATCH/FINALLY
            catch (Exception ex)
            {
                throw ex;
            }
            finally
            {
                myConnection = null;
                myCommand = null;
            }
            #endregion
        }
        #endregion

        #region Connection Open
        private void _connectionOpen(SqlConnection myConnection)
        {
            try
            {
                if (myConnection.State != ConnectionState.Open)
                {
                    myConnection.Open();
                }
            }
            catch(Exception ex)
            {
                throw ex;
            }
        }
        #endregion

        #region Connection Close
        private void _connectionClose(SqlConnection myConnection)
        {
            try
            {
                if (myConnection.State != ConnectionState.Closed)
                {
                    myConnection.Close();
                }
            }
            catch (Exception ex)
            {
                throw ex;
            }
        }
        #endregion

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>ST_1879164d18434922b821b58ca4d6ca19</msb:CodeName>
		<msb:DisplayName>ST_1879164d18434922b821b58ca4d6ca19</msb:DisplayName>
		<msb:ProjectId>{57F3D134-EFF6-48F0-BAD5-A5039002E7C1}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_f8ff373a12d249c3825a8aacbe586416.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_1879164d18434922b821b58ca4d6ca19.Properties.Settings.get_Default():ST_1879164d18434922b821b58ca4d6ca19.Properties.Sett" +
    "ings")]

namespace ST_1879164d18434922b821b58ca4d6ca19.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_1879164d18434922b821b58ca4d6ca19.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_1879164d18434922b821b58ca4d6ca19.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_1879164d18434922b821b58ca4d6ca19.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_1879164d18434922b821b58ca4d6ca19.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_1879164d18434922b821b58ca4d6ca19.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_f8ff373a12d249c3825a8aacbe586416.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAG3maVgAAAAAAAAAAOAAAiELAQsAACIAAAAIAAAAAAAAPkEA
AAAgAAAAYAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACgAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAOhAAABTAAAAAGAAAAgEAAAAAAAAAAAAAAAAAAAA
AAAAAIAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAARCEAAAAgAAAAIgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAAgEAAAAYAAAAAYAAAAkAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAIAAAAACAAAAKgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAAg
QQAAAAAAAEgAAAACAAUAOCoAALAWAAABAAAAAAAAAIApAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKA4AAAoqEzACAC0AAAABAAARfgEAAAQtIHIBAABw0AIA
AAIoDwAACm8QAAAKcxEAAAoKBoABAAAEfgEAAAQqGn4CAAAEKh4CgAIAAAQqGn4DAAAEKi5zBgAA
BoADAAAEKh4CKBQAAAoqABswBgAWBwAAAgAAEQIoFgAACm8XAAAKcnMAAHBvGAAACm8ZAAAKbxoA
AAoKBnMbAAAKC3McAAAKDHMdAAAKDRQTBH4eAAAKEwYWEwcCBygLAAAGcxwAAAoTBQIoFgAACm8X
AAAKcqEAAHBvGAAACm8ZAAAKbxoAAAoTBghvHwAACiYIcsUAAHBvIAAACiYIcvEAAHBvIAAACiYI
cisBAHBvIAAACiYIcmEBAHBvIAAACiYIcokBAHBvIAAACiYIctEBAHBvIAAACiYIchsCAHBvIAAA
CiYIcl8CAHBvIAAACiYJbyEAAAoCCG8aAAAKBygJAAAGDQlvIgAACm8jAAAKFj5VAgAAFhMHCW8i
AAAKbyMAAAoTCBYTCThyAQAACW8iAAAKEQlvJAAACnKVAgBwbyUAAApvGgAACm8mAAAKcqsCAHAo
JwAACjk8AQAAEQcXWBMHCW8iAAAKEQlvJAAAChMEEQVvHwAACiYWEworHREFcrUCAHARBG8oAAAK
EQqabykAAAomEQoXWBMKEQoRBG8qAAAKbysAAApvIwAAChdZMswIbx8AAAomCHK/AgBwbyAAAAom
CHIDAwBwbyAAAAomCB8JjSEAAAETERERFnJPAwBwohERFxEGohERGHJlAwBwohERGQIoFgAACm8X
AAAKcm0DAHBvGAAACm8ZAAAKbxoAAAqiEREacmUDAHCiEREbAigWAAAKbxcAAApykQMAcG8YAAAK
bxkAAApvGgAACqIRERxyZQMAcKIRER0RBW8aAAAKohERHnKtAwBwohERKCwAAApvIAAACiYCCG8a
AAAKBygKAAAGEQgXWRMIEQkXWRMJCW8iAAAKEQRvLQAACglvLgAAChEJF1gTCREJEQg/hf7//wlv
KwAACnKVAgBwby8AAAoRBxY+qgAAAAhvHwAACiYIcucDAHACKBYAAApvFwAACnIJBABwbxgAAApv
GQAACm8aAAAKcikEAHAoMAAACm8gAAAKJgIIbxoAAAoHKAoAAAYHczEAAAoTCxELAigWAAAKbxcA
AApyCQQAcG8YAAAKbxkAAApvGgAACnI3BABwKDIAAApvMwAACgIHKAsAAAYRCyBYAgAAbzQAAAoR
CwlvNQAACt4MEQssBxELbzYAAArcCG8fAAAKJghyQwQAcG8gAAAKJghyZQQAcG8gAAAKJghyzwQA
cG8gAAAKJghyKQUAcG8gAAAKJglvIQAACgIIbxoAAAoHKAkAAAYNCW8iAAAKbyMAAAoWPlUCAAAW
EwcJbyIAAApvIwAAChMMFhMNOHIBAAAJbyIAAAoRDW8kAAAKcpUCAHBvJQAACm8aAAAKbyYAAApy
qwIAcCgnAAAKOTwBAAARBxdYEwcJbyIAAAoRDW8kAAAKEwQRBW8fAAAKJhYTDisdEQVytQIAcBEE
bygAAAoRDppvKQAACiYRDhdYEw4RDhEEbyoAAApvKwAACm8jAAAKF1kyzAhvHwAACiYIcr8CAHBv
IAAACiYIcgMDAHBvIAAACiYIHwmNIQAAARMSERIWck8DAHCiERIXEQaiERIYcmUDAHCiERIZAigW
AAAKbxcAAApybQMAcG8YAAAKbxkAAApvGgAACqIREhpyZQMAcKIREhsCKBYAAApvFwAACnKRAwBw
bxgAAApvGQAACm8aAAAKohESHHJlAwBwohESHREFbxoAAAqiERIecl8FAHCiERIoLAAACm8gAAAK
JgIIbxoAAAoHKAoAAAYRDBdZEwwRDRdZEw0JbyIAAAoRBG8tAAAKCW8uAAAKEQ0XWBMNEQ0RDD+F
/v//CW8rAAAKcpUCAHBvLwAAChEHFj6qAAAACG8fAAAKJghy5wMAcAIoFgAACm8XAAAKcgkEAHBv
GAAACm8ZAAAKbxoAAApyKQQAcCgwAAAKbyAAAAomAghvGgAACgcoCgAABgdzMQAAChMPEQ8CKBYA
AApvFwAACnIJBABwbxgAAApvGQAACm8aAAAKcjcEAHAoMgAACm8zAAAKAgcoCwAABhEPIFgCAABv
NAAAChEPCW81AAAK3gwRDywHEQ9vNgAACtwCKBYAAAoWbzcAAArd6wAAABMQCG8fAAAKJghyvwIA
cG8gAAAKJghyAwMAcG8gAAAKJggfCY0hAAABExMRExZyTwMAcKIRExcRBqIRExhyZQMAcKIRExkC
KBYAAApvFwAACnJtAwBwbxgAAApvGQAACm8aAAAKohETGnJlAwBwohETGwIoFgAACm8XAAAKcpED
AHBvGAAACm8ZAAAKbxoAAAqiERMccpkFAHCiERMdERBvOAAACm8aAAAKcrEFAHBytQUAcG85AAAK
ohETHnK5BQBwohETKCwAAApvIAAACiYCCG8aAAAKBygKAAAGAigWAAAKFm83AAAK3gDeFgIHKAwA
AAYUChQMFAsUDRQTBBQTBdwqAABBZAAAAgAAAPcCAABNAAAARAMAAAwAAAAAAAAAAgAAAKgFAABN
AAAA9QUAAAwAAAAAAAAAAAAAAEAAAADSBQAAEgYAAOsAAAAoAAABAgAAAEAAAAC/BgAA/wYAABYA
AAAAAAAAGzACAFYAAAADAAARcxwAAAomcx0AAAoKAgQoCwAABgMEczoAAAoLBxdvOwAACnM8AAAK
DAgHbz0AAAoHIFgCAABvPgAACggGbz8AAAom3gMNCXreCxQQAhQQARQLFAzcBioAAAEcAAAAAAwA
OEQAAygAAAECAAwAPUkACwAAAAAbMAIAJAAAAAQAABECBCgLAAAGAwRzOgAACgoGb0AAAAom3gML
B3reBhQQAhQK3CoBHAAAAAAAABgYAAMoAAABAgAAAB0dAAYAAAAAGzACABUAAAAFAAARA29BAAAK
Fy4GA29CAAAK3gMKBnoqAAAAARAAAAAAAAAREQADKAAAARswAQAUAAAABQAAEQNvQQAACiwGA29D
AAAK3gMKBnoqARAAAAAAAAAQEAADKAAAAR4CKEQAAAoqAAAAALQAAADOyu++AQAAAJEAAABsU3lz
dGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwg
Q3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5S
ZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFEULQAAABCU0pCAQAB
AAAAAAAMAAAAdjQuMC4zMDMxOQAAAAAFAGwAAACQBQAAI34AAPwFAACcCAAAI1N0cmluZ3MAAAAA
mA4AAMwFAAAjVVMAZBQAABAAAAAjR1VJRAAAAHQUAAA8AgAAI0Jsb2IAAAAAAAAAAgAAAVcdogEJ
AwAAAPolMwAWAAABAAAALwAAAAUAAAAGAAAADQAAAAcAAABEAAAAAgAAAA8AAAAFAAAAAgAAAAMA
AAAEAAAAAQAAAAUAAAABAAAAAQAAAAAACgABAAAAAAAGAMEAugAKAN0AyAAOAD0BFAEGAFkBugAG
AG8BXgEGAKABiwESACsCHwISAEsCNQIGAOQCygIGAA8D/QIGACYD/QIGAEMD/QIGAGID/QIGAHsD
/QIGAJQD/QIGAK8D/QIGAMoD/QIGAOMD/QIGABwE/AMGADwE/AMGAJEEfgQGAK4EugAGALMEugAG
ANcE/QIKAAMF7QQKABwF7QQGADEF/AMOAFMFFAEOAHUFFAEWAM4FrgUWAOYFrgUGABcGCwYGACUG
ugASAEUGHwISAGAGHwISAIUGHwISAMYGHwISAAMHNQIGAEoHugAGAG0HugASAIsHNQISAKkHlgcS
ALMHHwISAM8HNQISAAMIlgcSACYIlgcSADMIHwIAAAAAAQAAAAAAAQABAAAAEAAyADwABQABAAEA
AAEQAGsAPAAJAAMABQABABAAdAB/AA0ABAAIAAMBAACjAAAAEQAEAA4AEQB/ARMAEQCsARcAEQD2
ATkABgaWAlwAVoCeAl8AVoCmAl8AUCAAAAAAgxi8ARsAAQBYIAAAAACTCMIBHwABAJEgAAAAAJMI
1gEkAAEAmCAAAAAAkwjiASkAAQCgIAAAAACWCAYCPQACALMgAAAAAIYYvAEbAAIApyAAAAAAkRhM
BZ4AAgC8IAAAAACGABoCGwACAEQoAAAAAIYAWQJHAAIAxCgAAAAAhABnAk8ABAAQKQAAAACBAHUC
VgAGAEQpAAAAAIEAhQJWAAcAdCkAAAAAhhi8ARsACAAAAAEArgIAAAEAtAIAAAIAvQIAAAEAtAIA
AAIAvQIAAAEAvQIAAAEAvQJJALwBbQBRALwBbQBZALwBbQBhALwBbQBpALwBbQBxALwBbQB5ALwB
bQCBALwBbQCJALwBbQCRALwBbQCZALwBcgChALwBGwCpALwBGwAJALwBGwCxAMUEdwCxAOAEfgAp
ALwBgwDJALwBjwDZALwBGwARALwBGwDhALwBGwAZAIcFogDpANgFpwDxAO8FrAD5APgFsgAJAAIG
tgBBALwBbQABAbwBGwA5ALwBGwAJASwGugABATIGvQABATgGwwA5AD8GGwA5AFcGygAZAXsG0AAR
Ae8F1AAhAe8F2wAJAY0GtgAJAZUG4AAhAaEG5gABAa8G6wAhAbwG8wA5ANsG+AAJAecG/gARAe4G
BAE5APUGGwApAe4GbQAJAecGCwExAbwBVgAJAecGEgExAQ8HbQAxASgHcgAxATwHGAE5AVYHGwDp
AF4HcgBBAXcHtgAJAYMHHgFJAbwBTwBRAb8HTAFhAbwBGwBhAd4HUwFRAfAHcgBpAREIWgFRARYI
0ABxAUMIdwFxAU0IGwBxAVIIGwAZALwBGwAIABQAYwAIABgAaAApAJMAlQAuABsA9AEuACMA9AEu
AGMAGgIuAAsAgwEuABMAywEuADMAywEuACsA9AEuADsA+gEuAEMA9AEuAFsAEQJDAGsAaABJAJMA
lQBhAJsAaACDAKsAaACKACQBYAFuAX0BAgABAAMAAwAAAG8BLwAAAO4BNAAAABICQgACAAIAAwAC
AAMABQABAAQABQACAAUABwAEgAAAAQAAAEMYfmYAAAAAAABaBAAABAAAAAAAAAAAAAAAAQCxAAAA
AAAEAAAAAAAAAAAAAAABALoAAAAAAAwAAAAAAAAAAAAAAAoA9QAAAAAABAAAAAAAAAAAAAAAAQAf
AgAAAAAMAAAAAAAAAAAAAAAKAI8FAAAAAAAAAAABAAAAWAgAAAUABAAAAAA8TW9kdWxlPgBTVF9m
OGZmMzczYTEyZDI0OWMzODI1YThhYWNiZTU4NjQxNi5kbGwAUmVzb3VyY2VzAFNUXzE4NzkxNjRk
MTg0MzQ5MjJiODIxYjU4Y2E0ZDZjYTE5LlByb3BlcnRpZXMAU2V0dGluZ3MAU2NyaXB0TWFpbgBT
VF8xODc5MTY0ZDE4NDM0OTIyYjgyMWI1OGNhNGQ2Y2ExOQBTY3JpcHRSZXN1bHRzAG1zY29ybGli
AFN5c3RlbQBPYmplY3QAU3lzdGVtLkNvbmZpZ3VyYXRpb24AQXBwbGljYXRpb25TZXR0aW5nc0Jh
c2UATWljcm9zb2Z0LlNxbFNlcnZlci5TY3JpcHRUYXNrAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRz
LlRhc2tzLlNjcmlwdFRhc2sAVlNUQVJUU2NyaXB0T2JqZWN0TW9kZWxCYXNlAEVudW0AU3lzdGVt
LlJlc291cmNlcwBSZXNvdXJjZU1hbmFnZXIAcmVzb3VyY2VNYW4AU3lzdGVtLkdsb2JhbGl6YXRp
b24AQ3VsdHVyZUluZm8AcmVzb3VyY2VDdWx0dXJlAC5jdG9yAGdldF9SZXNvdXJjZU1hbmFnZXIA
Z2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAQ3VsdHVyZQBkZWZhdWx0SW5zdGFuY2UAZ2V0X0RlZmF1
bHQARGVmYXVsdABNYWluAFN5c3RlbS5EYXRhAERhdGFUYWJsZQBTeXN0ZW0uRGF0YS5TcWxDbGll
bnQAU3FsQ29ubmVjdGlvbgBfZ2V0RGF0YVRhYmxlAF91cGRhdGVJbnNlcnQAX2Nvbm5lY3Rpb25P
cGVuAF9jb25uZWN0aW9uQ2xvc2UAdmFsdWVfXwBTdWNjZXNzAEZhaWx1cmUAdmFsdWUAc3RyUXVl
cnkAbXlDb25uZWN0aW9uAFN5c3RlbS5SdW50aW1lLlZlcnNpb25pbmcAVGFyZ2V0RnJhbWV3b3Jr
QXR0cmlidXRlAFN5c3RlbS5SZWZsZWN0aW9uAEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUAQXNzZW1i
bHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNz
ZW1ibHlDb21wYW55QXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNv
cHlyaWdodEF0dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFya0F0dHJpYnV0ZQBBc3NlbWJseUN1bHR1
cmVBdHRyaWJ1dGUAQXNzZW1ibHlWZXJzaW9uQXR0cmlidXRlAFN5c3RlbS5SdW50aW1lLkNvbXBp
bGVyU2VydmljZXMAQ29tcGlsYXRpb25SZWxheGF0aW9uc0F0dHJpYnV0ZQBSdW50aW1lQ29tcGF0
aWJpbGl0eUF0dHJpYnV0ZQBTVF9mOGZmMzczYTEyZDI0OWMzODI1YThhYWNiZTU4NjQxNgBTeXN0
ZW0uRGlhZ25vc3RpY3MARGVidWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBUeXBlAFJ1bnRpbWVU
eXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAEFzc2VtYmx5AGdldF9Bc3NlbWJseQBTeXN0ZW0u
Q29tcG9uZW50TW9kZWwARWRpdG9yQnJvd3NhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZVN0
YXRlAENvbXBpbGVyR2VuZXJhdGVkQXR0cmlidXRlAC5jY3RvcgBTU0lTU2NyaXB0VGFza0VudHJ5
UG9pbnRBdHRyaWJ1dGUAU2NyaXB0T2JqZWN0TW9kZWwAZ2V0X0R0cwBNaWNyb3NvZnQuU3FsU2Vy
dmVyLk1hbmFnZWREVFMATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUnVudGltZQBWYXJpYWJsZXMA
Z2V0X1ZhcmlhYmxlcwBWYXJpYWJsZQBnZXRfSXRlbQBnZXRfVmFsdWUAVG9TdHJpbmcAU3lzdGVt
LlRleHQAU3RyaW5nQnVpbGRlcgBTdHJpbmcARW1wdHkAQ2xlYXIAQXBwZW5kAFJlc2V0AERhdGFS
b3dDb2xsZWN0aW9uAGdldF9Sb3dzAEludGVybmFsRGF0YUNvbGxlY3Rpb25CYXNlAGdldF9Db3Vu
dABEYXRhUm93AFRvVXBwZXIAb3BfRXF1YWxpdHkAZ2V0X0l0ZW1BcnJheQBBcHBlbmRGb3JtYXQA
Z2V0X1RhYmxlAERhdGFDb2x1bW5Db2xsZWN0aW9uAGdldF9Db2x1bW5zAENvbmNhdABSZW1vdmUA
QWNjZXB0Q2hhbmdlcwBTcWxCdWxrQ29weQBzZXRfRGVzdGluYXRpb25UYWJsZU5hbWUAc2V0X0J1
bGtDb3B5VGltZW91dABXcml0ZVRvU2VydmVyAElEaXNwb3NhYmxlAERpc3Bvc2UAc2V0X1Rhc2tS
ZXN1bHQARXhjZXB0aW9uAGdldF9NZXNzYWdlAFJlcGxhY2UAU3FsQ29tbWFuZABTeXN0ZW0uRGF0
YS5Db21tb24ARGJDb21tYW5kAENvbW1hbmRUeXBlAHNldF9Db21tYW5kVHlwZQBTcWxEYXRhQWRh
cHRlcgBzZXRfU2VsZWN0Q29tbWFuZABzZXRfQ29tbWFuZFRpbWVvdXQARGJEYXRhQWRhcHRlcgBG
aWxsAEV4ZWN1dGVOb25RdWVyeQBEYkNvbm5lY3Rpb24AQ29ubmVjdGlvblN0YXRlAGdldF9TdGF0
ZQBPcGVuAENsb3NlAFNUXzE4NzkxNjRkMTg0MzQ5MjJiODIxYjU4Y2E0ZDZjYTE5LlByb3BlcnRp
ZXMuUmVzb3VyY2VzLnJlc291cmNlcwAAAHFTAFQAXwAxADgANwA5ADEANgA0AGQAMQA4ADQAMwA0
ADkAMgAyAGIAOAAyADEAYgA1ADgAYwBhADQAZAA2AGMAYQAxADkALgBQAHIAbwBwAGUAcgB0AGkA
ZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMAAC1VAHMAZQByADoAOgBjAG8AbgBuAGUAYwB0AGkAbwBu
AFMAdAByAGkAbgBnAAAjVQBzAGUAcgA6ADoAcABhAGMAawBhAGcAZQBDAG8AZABlAAArIABTAEUA
TABFAEMAVAAgAEIAQQBJAEsAQQAuACoALABDAEEAUwBFACAAADkgAFcASABFAE4AIABTAEgATwBI
AEkATgAuADP/K/81/7Mw/DDJMCAASQBTACAATgBVAEwATAAgAAE1IABUAEgARQBOACAAJwBUAFIA
VQBFACcAIABFAEwAUwBFACAAJwBGAEEATABTAEUAJwAgAAEnIABFAE4ARAAgAEEAUwAgAEQARQBM
AF8AUgBFAEMATwBSAEQAIAAARyAARgBSAE8ATQAgAE0AXwBCAEEASQBLAEEAXwBSAEkAUgBFAEsA
SQBfAFQARQBNAFAAIABBAFMAIABCAEEASQBLAEEAIAAASSAATABFAEYAVAAgAEoATwBJAE4AIABN
AF8AUwBIAE8AVQBIAEkATgBfAEQAQQBUAEEAIABBAFMAIABTAEgATwBIAEkATgAgAABDIABPAE4A
IABCAEEASQBLAEEALgAz/yv/Nf+zMPwwyTAgAD0AIABTAEgATwBIAEkATgAuADP/K/81/7Mw/DDJ
MCAAATUgAE8AUgBEAEUAUgAgAEIAWQAgAEQARQBMAF8AUgBFAEMATwBSAEQAIABEAEUAUwBDADsA
ABVEAEUATABfAFIARQBDAE8AUgBEAAAJVABSAFUARQAACXsAMAB9ACAAAENJAE4AUwBFAFIAVAAg
AEkATgBUAE8AIABLAEEATgBTAEgASQBfAFAAQQBDAEsAQQBHAEUAXwBFAFIAUgBPAFIAIAAASyAA
KADRMMMwsTD8MLgwszD8MMkwLADHMPwwvzDlZdhOLACoMOkw/DDlZUJmLACoMOkw/DCFUblbLACo
MOkw/DDVMOkwsDApACAAARUgAFYAQQBMAFUARQBTACgAJwBHAAEHJwAsACcAASNVAHMAZQByADoA
OgBjAHUAcgByAGUAbgB0AEQAYQB0AGUAABtVAHMAZQByADoAOgBzAHkAcwBEAGEAdABlAAA5AjBG
VcFU3jC5ML8wazAz/yv/Nf9MMFhbKFdVMIwwZjBEMH4wWzCTMAIwJwAsACcAMwAnACkAOwABISAA
VABSAFUATgBDAEEAVABFACAAVABBAEIATABFACAAAB9VAHMAZQByADoAOgBjAGgAZQBjAGsAVAB5
AHAAZQAADV8AVABFAE0AUAA7AAALXwBUAEUATQBQAAAhIABTAEUATABFAEMAVAAgACoALAAgAEMA
QQBTAEUAIAAAaSAAVwBIAEUATgAgAEMATwBOAFYARQBSAFQAKABEAEEAVABFACwACWe5UouVy1nl
ZSkAIAA+ACAAQwBPAE4AVgBFAFIAVAAoAEQAQQBUAEUALABHAEUAVABEAEEAVABFACgAKQApACAA
AVkgAFQASABFAE4AIAAnAFQAUgBVAEUAJwAgAEUATABTAEUAIAAnAEYAQQBMAFMARQAnACAARQBO
AEQAIABBAFMAIABEAEUATABfAFIARQBDAE8AUgBEACAAATUgAEYAUgBPAE0AIABNAF8AQgBBAEkA
SwBBAF8AUgBJAFIARQBLAEkAXwBUAEUATQBQADsAADkCMPJYoU8JZ7lSi5XLWeVlZzAGXGVn5WVu
MC2KmltMMIF5YmtnMFkwAjAnACwAJwAzACcAKQA7AAEXJwAsACcAtzC5MMYw4DCoMOkw/DA6AAED
JwABAy0AAQ8nACwAJwAzACcAKQA7AAEAAAAOqcXaBwzISpO4DdF168PIAAi3elxWGTTgiQiJhF3N
gIDMkQMGEhUDBhIZAyAAAQQAABIVBAAAEhkFAAEBEhkECAASFQQIABIZAwYSDAQAABIMBAgAEgwH
IAISHQ4SIQYgAgEOEiEFIAEBEiECBggDBhEUBAAAAAAEAQAAAAQgAQEOBCABAQgGAAESWRFdBCAA
EmEGIAIBDhJhBAcBEhUFIAEBEWkIAQACAAAAAAADAAABBCAAEnUEIAASeQUgARJ9HAMgABwDIAAO
AgYOBSAAEoCBBiABEoCBDgUgABKAiQMgAAgGIAESgJEIBCABHA4FAAICDg4EIAAdHAcgAhKAgQ4c
BCAAEh0FIAASgJUFAAEOHQ4GIAEBEoCRBgADDg4ODgUAAg4ODgUgAQESHQUgAg4ODicHFA4SIRKA
gRIdEoCREoCBDggICAgSgJkICAgSgJkSgKEdDh0OHQ4GIAEBEYCtBiABARKApQUgAQgSHQ0HBBId
EoClEoCxEoChCAcCEoClEoChBSAAEYC9BQcBEoChRwEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12
NC4wAQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRAuTkVUIEZyYW1ld29yayA0KAEAI1NUXzE4Nzkx
NjRkMTg0MzQ5MjJiODIxYjU4Y2E0ZDZjYTE5AAAFAQAAAAAWAQARQ29weXJpZ2h0IEAgIDIwMTYA
AAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEAAAAQQQAAAAAAAAAAAAAu
QQAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIEEAAAAAAAAAAAAAAAAAAAAAX0NvckRsbE1haW4A
bXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABABAA
AAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABIAAAAWGAA
ALADAAAAAAAAAAAAALADNAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAAAAC9BO/+
AAABAAAAAQB+ZkMYAAABAH5mQxg/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAAAAEAVgBh
AHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4AAAAAAAAA
sAQQAwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAADsAgAAAQAwADAAMAAwADAANABi
ADAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBUAF8AMQA4ADcA
OQAxADYANABkADEAOAA0ADMANAA5ADIAMgBiADgAMgAxAGIANQA4AGMAYQA0AGQANgBjAGEAMQA5
AAAAQAAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADYAMgAxADEALgAyADYA
MgAzADgAAAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBUAF8AZgA4AGYAZgAz
ADcAMwBhADEAMgBkADIANAA5AGMAMwA4ADIANQBhADgAYQBhAGMAYgBlADUAOAA2ADQAMQA2AC4A
ZABsAGwAAABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8AcAB5AHIAaQBn
AGgAdAAgAEAAIAAgADIAMAAxADYAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEA
bQBlAAAAUwBUAF8AZgA4AGYAZgAzADcAMwBhADEAMgBkADIANAA5AGMAMwA4ADIANQBhADgAYQBh
AGMAYgBlADUAOAA2ADQAMQA2AC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUA
AAAAAFMAVABfADEAOAA3ADkAMQA2ADQAZAAxADgANAAzADQAOQAyADIAYgA4ADIAMQBiADUAOABj
AGEANABkADYAYwBhADEAOQAAAEQADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEA
LgAwAC4ANgAyADEAMQAuADIANgAyADMAOAAAAAAASAAPAAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBl
AHIAcwBpAG8AbgAAADEALgAwAC4ANgAyADEAMQAuADIANgAyADMAOAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAwAAABAMQAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\売変伝票明細"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:Description="Script Task"
      DTS:DTSID="{2A13CC35-92D8-43B5-92B8-562C159E8800}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="売変伝票明細"
      DTS:ThreadHint="9">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_34469eb3bcd64501946cdc06136e1d0a"
          VSTAMajorVersion="3"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadOnlyVariables="User::checkType,User::connectionString,User::currentDate,User::packageCode,User::sysDate">
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_ce3ffc09050545a588750b50f21c1788.Properties.Settings.get_Default():ST_ce3ffc09050545a588750b50f21c1788.Properties.Sett" +
    "ings")]

namespace ST_ce3ffc09050545a588750b50f21c1788.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[
#region Namespaces
using System;
using System.Data;
using System.Data.SqlClient;
using System.Text;
#endregion

namespace ST_ce3ffc09050545a588750b50f21c1788
{
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
    {
        #region "Main Method"
        /// <summary>
        /// 作成者：イルファン　マンスリー
        /// 説明：仕入実績の業務データチェックする。
        /// 作成日：２０１６年０８月０８日
        /// </summary>
        public void Main()
		{
            string strConnection = Dts.Variables["User::connectionString"].Value.ToString();
            SqlConnection myConnection = new SqlConnection(strConnection);
            StringBuilder strERRQuery = new StringBuilder();
            DataTable dtFaultyTemp;
            try
            { 
                dtFaultyTemp = new DataTable();
                _connectionOpen(myConnection);
                #region "Check for 伝票頭一桁 Check"
                //Get All The Records of Temp TABLE, with New Column DEL_RECORD as Flag.
                //Faulty Records will have DEL_RECORD as 'TRUE'
                strERRQuery.Clear();
                strERRQuery.Append(" SELECT BAIHEN.*, ");
                strERRQuery.Append(" CASE WHEN SUBSTRING(BAIHEN.売変伝票番号,1,1) != KANJO.伝票頭一桁 ");
                strERRQuery.Append(" OR KANJO.伝票頭一桁 IS NULL ");
                strERRQuery.Append(" THEN 'TRUE' ELSE 'FALSE' ");
                strERRQuery.Append(" END AS DEL_RECORD ");
                strERRQuery.Append(" FROM D_BAIHEN_DENPYOU_MEISAI_TEMP AS BAIHEN ");
                strERRQuery.Append(" LEFT JOIN M_KANJOU_CODE AS KANJO ");
                strERRQuery.Append(" ON BAIHEN.勘定コード = KANJO.勘定コード;");
                dtFaultyTemp.Reset();
                dtFaultyTemp = _getDataTable(strERRQuery.ToString(), myConnection);
                if (dtFaultyTemp.Rows.Count > 0)
                {
                    _replaceData(dtFaultyTemp, myConnection, "売変伝票の先頭桁を間違えました。");   //Replace & Remove Data in Actual Db Table
                }
                #endregion

                #region "Check for 売上伝票番号,売上伝票明細番号(PK) Check"
                strERRQuery.Clear();
                strERRQuery.Append(" SELECT TEMP.*, ");
                strERRQuery.Append(" CASE WHEN TEMP.売変伝票番号 = MAIN.売変伝票番号 ");
                strERRQuery.Append(" AND TEMP.売変伝票明細番号 = MAIN.売変伝票明細番号 ");
                strERRQuery.Append(" THEN 'TRUE' ELSE 'FALSE' ");
                strERRQuery.Append(" END AS DEL_RECORD ");
                strERRQuery.Append(" FROM D_BAIHEN_DENPYOU_MEISAI_TEMP AS TEMP ");
                strERRQuery.Append(" LEFT JOIN D_BAIHEN_DENPYOU_MEISAI AS MAIN ");
                strERRQuery.Append(" ON TEMP.売変伝票番号 = MAIN.売変伝票番号 ");
                strERRQuery.Append(" AND TEMP.売変伝票明細番号 = MAIN.売変伝票明細番号;");
                dtFaultyTemp.Reset();
                dtFaultyTemp = _getDataTable(strERRQuery.ToString(), myConnection);
                if (dtFaultyTemp.Rows.Count > 0)
                {
                    _replaceData(dtFaultyTemp, myConnection, "売変伝票番号・売変伝票明細番号が既に取込済みです。");   //Replace & Remove Data in Actual Db Table
                }
                #endregion

                #region "Check for 締日 Check"
                //Get All The Records of Temp TABLE, with New Column DEL_RECORD as Flag.
                //Faulty Records will have DEL_RECORD as 'TRUE'
                strERRQuery.Clear();
                strERRQuery.Append(" SELECT *, CASE ");
                strERRQuery.Append(" WHEN CAST(CONVERT(VARCHAR(10),売変伝票日付,121) AS DATE) <= (SELECT MAX(月度終了日) FROM M_DENPYOU_SIME_MASTER WHERE 月度締日 IS NOT NULL) ");
                strERRQuery.Append(" THEN 'TRUE' ELSE 'FALSE' ");
                strERRQuery.Append(" END AS DEL_RECORD ");
                strERRQuery.Append(" FROM D_BAIHEN_DENPYOU_MEISAI_TEMP; ");
                dtFaultyTemp.Reset();
                dtFaultyTemp = _getDataTable(strERRQuery.ToString(), myConnection);
                if (dtFaultyTemp.Rows.Count > 0)
                {
                    _replaceData(dtFaultyTemp, myConnection, "月度締めました。締め日前の売変伝票日があります。");   //Replace & Remove Data in Actual Db Table
                }
                #endregion

                #region "Check for 棚卸確定日 Check"
                //Get All The Records of Temp TABLE, with New Column DEL_RECORD as Flag.
                //Faulty Records will have DEL_RECORD as 'TRUE'
                strERRQuery.Clear();
                strERRQuery.Append(" SELECT TEMP.*, CASE  ");
                strERRQuery.Append(" WHEN TEMP.売変伝票日付 < TANA.棚卸日付  ");
                strERRQuery.Append(" THEN 'TRUE' ELSE 'FALSE' ");
                strERRQuery.Append(" END AS DEL_RECORD ");
                strERRQuery.Append(" FROM D_BAIHEN_DENPYOU_MEISAI_TEMP AS TEMP ");
                strERRQuery.Append(" LEFT JOIN (SELECT DISTINCT 店舗コード,MAX(棚卸日付) AS 棚卸日付 FROM M_TANAOROSHI_MASTER WHERE 棚卸確定日 != '1900-01-01' GROUP BY 店舗コード) TANA  ");
                strERRQuery.Append(" ON TEMP.売変サイト = TANA.店舗コード ");
                dtFaultyTemp.Reset();
                dtFaultyTemp = _getDataTable(strERRQuery.ToString(), myConnection);
                if (dtFaultyTemp.Rows.Count > 0)
                {
                    _replaceData(dtFaultyTemp, myConnection, "棚卸確定日前の売変伝票日があります。");   //Replace & Remove Data in Actual Db Table
                }
                #endregion

                #region "Check for 仕入条件 & 勘定コード Check"
                //Get All The Records of Temp TABLE, with New Column DEL_RECORD as Flag.
                //Faulty Records will have DEL_RECORD as 'TRUE'
                strERRQuery.Clear();
                strERRQuery.Append(" SELECT BAIHEN.*, ");
                strERRQuery.Append(" CASE WHEN JOKEN.仕入条件 != BAIHEN.買取受託 ");
                strERRQuery.Append(" THEN 'TRUE' ELSE 'FALSE' ");
                strERRQuery.Append(" END AS DEL_RECORD ");
                strERRQuery.Append(" FROM D_BAIHEN_DENPYOU_MEISAI_TEMP AS BAIHEN  ");
                strERRQuery.Append(" LEFT JOIN (SELECT MST.ＳＫＵコード AS ＳＫＵコード,JR.有効開始日,JR.有効終了日, JR.仕入条件  ");
                strERRQuery.Append(" FROM M_SHIIRE_JOUKEN_RIREKI JR LEFT JOIN M_SHOUHIN_DATA MST ");
                strERRQuery.Append(" ON JR.商品コード = MST.商品コード) AS JOKEN ");
                strERRQuery.Append(" ON JOKEN.ＳＫＵコード = BAIHEN.SKUコード ");
                strERRQuery.Append(" AND BAIHEN.売変伝票日付 BETWEEN JOKEN.有効開始日 AND JOKEN.有効終了日; ");
                dtFaultyTemp.Reset();
                dtFaultyTemp = _getDataTable(strERRQuery.ToString(), myConnection);
                if (dtFaultyTemp.Rows.Count > 0)
                {
                    _replaceData(dtFaultyTemp, myConnection, "売変日付と有効開始日の組み合わせを間違えました。");   //Replace & Remove Data in Actual Db Table
                }
                #endregion

                #region "Check for F.K（ＳＫＵコード、店舗コード） Check"
                //Get All The Records of Temp TABLE, with New Column DEL_RECORD as Flag.
                //Faulty Records will have DEL_RECORD as 'TRUE'
                strERRQuery.Clear();
                strERRQuery.Append(" SELECT BAIHEN.*, CASE ");
                strERRQuery.Append(" WHEN TENPO.店舗コード IS NULL OR ");
                strERRQuery.Append(" SHOHIN.ＳＫＵコード IS NULL ");
                strERRQuery.Append(" THEN 'TRUE' ELSE 'FALSE' ");
                strERRQuery.Append(" END AS DEL_RECORD ");
                strERRQuery.Append(" FROM D_BAIHEN_DENPYOU_MEISAI_TEMP AS BAIHEN ");
                strERRQuery.Append(" LEFT JOIN M_TENPO_MASTER AS TENPO ");
                strERRQuery.Append(" ON BAIHEN.売変サイト = TENPO.店舗コード ");
                strERRQuery.Append(" LEFT JOIN M_SHOUHIN_DATA AS SHOHIN ");
                strERRQuery.Append(" ON BAIHEN.ＳＫＵコード = SHOHIN.ＳＫＵコード;");
                dtFaultyTemp.Reset();
                dtFaultyTemp = _getDataTable(strERRQuery.ToString(), myConnection);
                if (dtFaultyTemp.Rows.Count > 0)
                {
                    _replaceData(dtFaultyTemp, myConnection, "ＳＫＵコードまたは店舗コードはマスタに存在されていません。");   //Replace & Remove Data in Actual Db Table
                }
                #endregion
                Dts.TaskResult = (int)ScriptResults.Success;
            }
            #region Catch/Finally
            catch (Exception ex)
            {
                strERRQuery.Clear();
                strERRQuery.Append("INSERT INTO KANSHI_PACKAGE_ERROR ");
                strERRQuery.Append(" (パッケージコード,データ日付,エラー日時,エラー内容,エラーフラグ) ");
                strERRQuery.Append(" VALUES('G" + Dts.Variables["User::packageCode"].Value.ToString() + "','" + Dts.Variables["User::currentDate"].Value.ToString() + "','" + Dts.Variables["User::sysDate"].Value.ToString() + "','システムエラー:" + ex.Message.ToString().Replace("'", "-") + "','3');");
                _updateInsert(strERRQuery.ToString(), myConnection);
                Dts.TaskResult = (int)ScriptResults.Success;
            }
            finally 
            {
                _connectionClose(myConnection);
                dtFaultyTemp = null;
                strERRQuery = null;
                myConnection = null;
            }
            #endregion
		}
        #endregion

        #region "replace Data"
        //Data Replacement in Actual DB After Test
        private void _replaceData(DataTable dtFaultyTemp, SqlConnection myConnection, string strErrorMsg)
        {
            StringBuilder strERRQuery = new StringBuilder();
            StringBuilder strBuildRow = new StringBuilder();
            DataRow drTemp;
            string strPackageCode = string.Empty;
            int intErrorCount = 0;  //To Count Errors in the DataTable, to avoid its extra TRUNCATION and BULK.
            try
            {
                _connectionOpen(myConnection);
                strPackageCode = Dts.Variables["User::packageCode"].Value.ToString();
                intErrorCount = 0;
                int countRows = dtFaultyTemp.Rows.Count;
                for (int intI = 0; intI < countRows; intI++)
                {
                    #region Report Faulty Records
                    if (dtFaultyTemp.Rows[intI]["DEL_RECORD"].ToString().ToUpper() == "TRUE")
                    {
                        intErrorCount = intErrorCount + 1;
                        //'TRUE' means Faulty SKU Record
                        drTemp = dtFaultyTemp.Rows[intI];
                        strBuildRow.Clear();
                        for (int intJ = 0; intJ < drTemp.Table.Columns.Count-1; intJ++)
                        {
                            strBuildRow.AppendFormat("{0} ", drTemp.ItemArray[intJ]);
                        }
                        strERRQuery.Clear();
                        strERRQuery.Append("INSERT INTO KANSHI_PACKAGE_ERROR ");
                        strERRQuery.Append(" (パッケージコード,データ日付,エラー日時,エラー内容,エラーフラグ) ");
                        strERRQuery.Append(" VALUES('G" + strPackageCode + "','" + Dts.Variables["User::currentDate"].Value.ToString() + "','" + Dts.Variables["User::sysDate"].Value.ToString() + "','" + strBuildRow.ToString() + "。" + strErrorMsg + "','3');");
                        _updateInsert(strERRQuery.ToString(), myConnection);
                        countRows = countRows - 1;
                        intI = intI - 1;
                        dtFaultyTemp.Rows.Remove(drTemp);   //Remove Faulty Records from DataTable Object.
                        dtFaultyTemp.AcceptChanges();    //Commit DataTable Changes.
                    }
                    #endregion
                }
                dtFaultyTemp.Columns.Remove("DEL_RECORD");
                if (intErrorCount > 0)
                {
                    #region "TRUNCATE TEMP Table"
                    //TRUNCATE TEMP Table, to be import New Correct Records
                    strERRQuery.Clear();
                    strERRQuery.Append(" TRUNCATE TABLE " + Dts.Variables["User::checkType"].Value.ToString() + "_TEMP");
                    _updateInsert(strERRQuery.ToString(), myConnection);
                    #endregion
                    #region "Bulk Update Records"
                    //正しいデータテーブルからインポートするためいに。
                    using (SqlBulkCopy bulkCopy = new SqlBulkCopy(myConnection))
                    {
                        bulkCopy.DestinationTableName = Dts.Variables["User::checkType"].Value.ToString() + "_TEMP";   //Assign table name
                        _connectionOpen(myConnection);
                        bulkCopy.BulkCopyTimeout = 600; //Default Timeut 30 Change to 600. in seconds
                        bulkCopy.WriteToServer(dtFaultyTemp);   //Write into Actual table.
                    }
                    #endregion
                }
            }
            #region Catch/Finally
            catch (Exception ex) 
            {
                throw ex;
            }
            finally
            {
                strPackageCode = null;
                strERRQuery = null;
                dtFaultyTemp = null;
                strBuildRow = null;
                strErrorMsg = null;
                drTemp = null;
            }
            #endregion
        }
        #endregion

        #region "Get DataTable"
        //Created On: 08-08-2016
        //Description: Aim to Return DataTable from the Query.
        public DataTable _getDataTable(string strQuery, SqlConnection myConnection)
        {
            StringBuilder strERRQuery = new StringBuilder();
            DataTable objDT = new DataTable();
            SqlCommand myCommand;
            SqlDataAdapter sqlSelectData;
            try
            {
                _connectionOpen(myConnection);
                myCommand = new SqlCommand(strQuery, myConnection);
                myCommand.CommandType = CommandType.Text;
                sqlSelectData = new SqlDataAdapter();
                sqlSelectData.SelectCommand = myCommand;
                myCommand.CommandTimeout = 600; //Increases Query execution timeout.
                sqlSelectData.Fill(objDT);
            }
            #region CATCH/FINALLY
            catch (Exception ex)
            {
                throw ex;
            }
            finally
            {
                strQuery = null;
                myCommand = null;
                sqlSelectData = null;
                strERRQuery = null;
            }
            #endregion
            return objDT;
        }
        #endregion

        #region "Update/Insert Query in Db"
        protected void _updateInsert(string strQuery, SqlConnection myConnection)
        {
            StringBuilder strERRQuery = new StringBuilder();
            SqlCommand myCommand;
            try
            {
                myCommand = new SqlCommand(strQuery, myConnection);
                _connectionOpen(myConnection);
                myCommand.ExecuteNonQuery();
            }
            #region CATCH/FINALLY
            catch (Exception ex)
            {
                throw ex;
            }
            finally
            {
                strERRQuery = null;
                myConnection = null;
                myCommand = null;
            }
            #endregion
        }
        #endregion

        #region Connection Open
        private void _connectionOpen(SqlConnection myConnection)
        {
            try
            {
                if (myConnection.State != ConnectionState.Open)
                {
                    myConnection.Open();
                }
            }
            catch (Exception ex)
            {
                throw ex;
            }
        }
        #endregion

        #region Connection Close
        private void _connectionClose(SqlConnection myConnection)
        {
            try
            {
                if (myConnection.State != ConnectionState.Closed)
                {
                    myConnection.Close();
                }
            }
            catch (Exception ex)
            {
                throw ex;
            }
        }
        #endregion

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>ST_ce3ffc09050545a588750b50f21c1788</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>ST_ce3ffc09050545a588750b50f21c1788</msb:DisplayName>
		<msb:ProjectId>{EE24C7D7-5D12-4340-B8D9-E41721313B68}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_34469eb3bcd64501946cdc06136e1d0a.csproj"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_ce3ffc09050545a588750b50f21c1788")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_ce3ffc09050545a588750b50f21c1788")]
[assembly: AssemblyCopyright("Copyright @  2016")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="ST_34469eb3bcd64501946cdc06136e1d0a.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?><Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003"><PropertyGroup><ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids><Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration><Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform><ProductVersion>8.0.30703</ProductVersion><SchemaVersion>2.0</SchemaVersion><ProjectGuid>{6f1cd3ad-124c-410c-a3da-0ed5e3468b82}</ProjectGuid><OutputType>Library</OutputType><AppDesignerFolder>Properties</AppDesignerFolder><RootNamespace>ST_ce3ffc09050545a588750b50f21c1788</RootNamespace><AssemblyName>ST_34469eb3bcd64501946cdc06136e1d0a</AssemblyName><TargetFrameworkVersion>v4.0</TargetFrameworkVersion><FileAlignment>512</FileAlignment><ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Debug' "><DebugSymbols>true</DebugSymbols><DebugType>full</DebugType><Optimize>false</Optimize><OutputPath>.\bin\Debug\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>DEBUG;TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Release' "><DebugSymbols>false</DebugSymbols><Optimize>true</Optimize><OutputPath>.\bin\Release\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><ItemGroup><Reference Include="System" /><Reference Include="System.Data" /><Reference Include="System.Windows.Forms" /><Reference Include="System.Xml" /><Reference Include="Microsoft.SqlServer.ManagedDTS, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.ScriptTask, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /></ItemGroup><ItemGroup><AppDesigner Include="Properties\" /><Compile Include="Properties\AssemblyInfo.cs"><SubType>Code</SubType></Compile><EmbeddedResource Include="Properties\Resources.resx"><Generator>ResXFileCodeGenerator</Generator><LastGenOutput>Resources.Designer.cs</LastGenOutput></EmbeddedResource><Compile Include="Properties\Resources.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Resources.resx</DependentUpon></Compile><None Include="Properties\Settings.settings"><Generator>SettingsSingleFileGenerator</Generator><LastGenOutput>Settings.Designer.cs</LastGenOutput></None><Compile Include="Properties\Settings.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Settings.settings</DependentUpon></Compile><Compile Include="ScriptMain.cs"><SubType>Code</SubType></Compile></ItemGroup><!-- Include the build rules for a C# project.--><Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" /><ProjectExtensions><VisualStudio><FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}"><ProjectProperties HostName="ScriptTask" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="#HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\VisualStudio\10.0\InstallDir#\devenv.exe" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" /><Host Name="ScriptTask" GeneratedNamespace="$safeprojectname" IconIndex=""></Host><ProjectClient><HostIdentifier>SSIS_ST120</HostIdentifier></ProjectClient></FlavorProperties></VisualStudio></ProjectExtensions></Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_ce3ffc09050545a588750b50f21c1788.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_ce3ffc09050545a588750b50f21c1788.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_ce3ffc09050545a588750b50f21c1788.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_ce3ffc09050545a588750b50f21c1788.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_ce3ffc09050545a588750b50f21c1788.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_34469eb3bcd64501946cdc06136e1d0a.dll">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
QUwAAAIAAABAAgAATQAAAI0CAAAMAAAAAAAAAAAAAAAVAAAAhgIAAJsCAAAFAAAAJAAAAQIAAAAV
AAAAjQIAAKICAAAPAAAAAAAAABswAgBTAAAABAAAEXMcAAAKJnMdAAAKCgIEKAwAAAYDBHM6AAAK
CwcXbzsAAApzPAAACgwIB289AAAKByBYAgAAbz4AAAoIBm8/AAAKJt4DDQl63ggUEAEUCxQM3AYq
AAEcAAAAAAwAOEQAAyQAAAECAAwAPUkACAAAAAAbMAIAKgAAAAUAABFzHAAACiYDBHM6AAAKCgIE
KAwAAAYGb0AAAAom3gMLB3reBhQQAhQK3CoAAAEcAAAAAAYAGB4AAyQAAAECAAYAHSMABgAAAAAb
MAIAFQAAAAYAABEDb0EAAAoXLgYDb0IAAAreAwoGeioAAAABEAAAAAAAABERAAMkAAABGzABABQA
AAAGAAARA29BAAAKLAYDb0MAAAreAwoGeioBEAAAAAAAABAQAAMkAAABHgIoRAAACiq0AAAAzsrv
vgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJz
aW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0
ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBBRFBB
RFC0AAAAQlNKQgEAAQAAAAAADAAAAHY0LjAuMzAzMTkAAAAABQBsAAAAtAUAACN+AAAgBgAAxAgA
ACNTdHJpbmdzAAAAAOQOAADkDgAAI1VTAMgdAAAQAAAAI0dVSUQAAADYHQAARAIAACNCbG9iAAAA
AAAAAAIAAAFXHaIBCQMAAAD6JTMAFgAAAQAAAC8AAAAFAAAABgAAAA4AAAAKAAAARAAAAAIAAAAP
AAAABgAAAAIAAAADAAAABAAAAAEAAAAFAAAAAQAAAAEAAAAAAAoAAQAAAAAABgDBALoACgDdAMgA
DgA9ARQBBgBZAboABgBvAV4BBgCgAYsBEgArAh8CEgBLAjUCBgAKA/ACBgA1AyMDBgBMAyMDBgBp
AyMDBgCIAyMDBgChAyMDBgC6AyMDBgDVAyMDBgDwAyMDBgAJBCMDBgBCBCIEBgBiBCIEBgC3BKQE
BgDUBLoABgDZBLoABgD9BCMDCgApBRMFCgBCBRMFBgBXBSIEDgB5BRQBDgCbBRQBFgD0BdQFFgAM
BtQFBgA9BjEGEgBeBh8CEgB5Bh8CBgCtBroABgC0BroAEgDfBh8CEgAgBx8CEgBWBzUCBgCdB7oA
EgCxBzUCEgDPB7wHEgDZBx8CEgD1BzUCEgApCLwHEgBMCLwHEgBZCB8CAAAAAAEAAAAAAAEAAQAA
ABAAMgA8AAUAAQABAAABEABrADwACQADAAUAAQAQAHQAfwANAAQACAADAQAAowAAABEABAAPABEA
fwETABEArAEXABEA9gE5AAYGowJlAFaAqwJoAFaAswJoAFAgAAAAAIMYvAEbAAEAWCAAAAAAkwjC
AR8AAQCRIAAAAACTCNYBJAABAJggAAAAAJMI4gEpAAEAoCAAAAAAlggGAj0AAgCzIAAAAACGGLwB
GwACAKcgAAAAAJEYcgWnAAIAvCAAAAAAhgAaAhsAAgDwJQAAAACBAFkCRwACAPwoAAAAAIYAZgJQ
AAUAeCkAAAAAhAB0AlgABwDMKQAAAACBAIICXwAJAAAqAAAAAIEAkgJfAAoAMCoAAAAAhhi8ARsA
CwAAAAEAuwIAAAEAwQIAAAIAzgIAAAMA2wIAAAEA5wIAAAIAzgIAAAEA5wIAAAIAzgIAAAEAzgIA
AAEAzgJJALwBdgBRALwBdgBZALwBdgBhALwBdgBpALwBdgBxALwBdgB5ALwBdgCBALwBdgCJALwB
dgCRALwBdgCZALwBewChALwBGwCpALwBGwAJALwBGwCxAOsEgACxAAYFhwApALwBjADJALwBmADZ
ALwBGwARALwBGwDhALwBGwAZAK0FqwDpAP4FsADxABUGtQD5AB4GuwAJACgGvwBBALwBdgABAbwB
GwA5ALwBGwABAUsGwwABAVEGyQA5AFgGGwA5AHAG0AARAZQG1gDpAJ4GewAhAb4GvwAZAcoG2gAZ
AdIG4AAZAdkG9gAJARUG+QApARUGAAEZAecGvwAZAe8GBQEpAfsGCwEBAQkHEAEpARYHGAE5ADUH
HQEJAUEHIwE5AEgHGwAxAUEHdgAZAdIGKgE5AbwBXwAZAdIGMQE5AWIHdgA5AXsHewA5AY8HNwFB
AakHGwBJAbwBWABRAeUHVgFhAbwBGwBhAQQIXQFRARYIewBpATcIZAFRATwI1gBxAWkIgQFxAXMI
GwBxAXgIGwAZALwBGwAIABQAbAAIABgAcQApAJMAngAuABsA/gEuACMA/gEuAGMAJAIuAAsAjQEu
ABMA1QEuADMA1QEuACsA/gEuADsABAIuAEMA/gEuAFsAGwJDAGsAcQBJAJMAngBhAJsAcQCDAKsA
cQCTAOYAPQFqAXgBhwECAAEAAwADAAAAbwEvAAAA7gE0AAAAEgJCAAIAAgADAAIAAwAFAAEABAAF
AAIABQAHAASAAAABAAAAYRildAAAAAAAAIAEAAAEAAAAAAAAAAAAAAABALEAAAAAAAQAAAAAAAAA
AAAAAAEAugAAAAAADAAAAAAAAAAAAAAACgD1AAAAAAAEAAAAAAAAAAAAAAABAB8CAAAAAAwAAAAA
AAAAAAAAAAoAtQUAAAAAAAAAAAEAAAB+CAAABQAEAAAAAAAAPE1vZHVsZT4AU1RfMzQ0NjllYjNi
Y2Q2NDUwMTk0NmNkYzA2MTM2ZTFkMGEuZGxsAFJlc291cmNlcwBTVF9jZTNmZmMwOTA1MDU0NWE1
ODg3NTBiNTBmMjFjMTc4OC5Qcm9wZXJ0aWVzAFNldHRpbmdzAFNjcmlwdE1haW4AU1RfY2UzZmZj
MDkwNTA1NDVhNTg4NzUwYjUwZjIxYzE3ODgAU2NyaXB0UmVzdWx0cwBtc2NvcmxpYgBTeXN0ZW0A
T2JqZWN0AFN5c3RlbS5Db25maWd1cmF0aW9uAEFwcGxpY2F0aW9uU2V0dGluZ3NCYXNlAE1pY3Jv
c29mdC5TcWxTZXJ2ZXIuU2NyaXB0VGFzawBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5UYXNrcy5T
Y3JpcHRUYXNrAFZTVEFSVFNjcmlwdE9iamVjdE1vZGVsQmFzZQBFbnVtAFN5c3RlbS5SZXNvdXJj
ZXMAUmVzb3VyY2VNYW5hZ2VyAHJlc291cmNlTWFuAFN5c3RlbS5HbG9iYWxpemF0aW9uAEN1bHR1
cmVJbmZvAHJlc291cmNlQ3VsdHVyZQAuY3RvcgBnZXRfUmVzb3VyY2VNYW5hZ2VyAGdldF9DdWx0
dXJlAHNldF9DdWx0dXJlAEN1bHR1cmUAZGVmYXVsdEluc3RhbmNlAGdldF9EZWZhdWx0AERlZmF1
bHQATWFpbgBTeXN0ZW0uRGF0YQBEYXRhVGFibGUAU3lzdGVtLkRhdGEuU3FsQ2xpZW50AFNxbENv
bm5lY3Rpb24AX3JlcGxhY2VEYXRhAF9nZXREYXRhVGFibGUAX3VwZGF0ZUluc2VydABfY29ubmVj
dGlvbk9wZW4AX2Nvbm5lY3Rpb25DbG9zZQB2YWx1ZV9fAFN1Y2Nlc3MARmFpbHVyZQB2YWx1ZQBk
dEZhdWx0eVRlbXAAbXlDb25uZWN0aW9uAHN0ckVycm9yTXNnAHN0clF1ZXJ5AFN5c3RlbS5SdW50
aW1lLlZlcnNpb25pbmcAVGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRlAFN5c3RlbS5SZWZsZWN0aW9u
AEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBBc3Nl
bWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRlAEFzc2Vt
Ymx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBBc3NlbWJseVRy
YWRlbWFya0F0dHJpYnV0ZQBBc3NlbWJseUN1bHR1cmVBdHRyaWJ1dGUAQXNzZW1ibHlWZXJzaW9u
QXR0cmlidXRlAFN5c3RlbS5SdW50aW1lLkNvbXBpbGVyU2VydmljZXMAQ29tcGlsYXRpb25SZWxh
eGF0aW9uc0F0dHJpYnV0ZQBSdW50aW1lQ29tcGF0aWJpbGl0eUF0dHJpYnV0ZQBTVF8zNDQ2OWVi
M2JjZDY0NTAxOTQ2Y2RjMDYxMzZlMWQwYQBTeXN0ZW0uRGlhZ25vc3RpY3MARGVidWdnZXJOb25V
c2VyQ29kZUF0dHJpYnV0ZQBUeXBlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxl
AEFzc2VtYmx5AGdldF9Bc3NlbWJseQBTeXN0ZW0uQ29tcG9uZW50TW9kZWwARWRpdG9yQnJvd3Nh
YmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZVN0YXRlAENvbXBpbGVyR2VuZXJhdGVkQXR0cmli
dXRlAC5jY3RvcgBTU0lTU2NyaXB0VGFza0VudHJ5UG9pbnRBdHRyaWJ1dGUAU2NyaXB0T2JqZWN0
TW9kZWwAZ2V0X0R0cwBNaWNyb3NvZnQuU3FsU2VydmVyLk1hbmFnZWREVFMATWljcm9zb2Z0LlNx
bFNlcnZlci5EdHMuUnVudGltZQBWYXJpYWJsZXMAZ2V0X1ZhcmlhYmxlcwBWYXJpYWJsZQBnZXRf
SXRlbQBnZXRfVmFsdWUAVG9TdHJpbmcAU3lzdGVtLlRleHQAU3RyaW5nQnVpbGRlcgBDbGVhcgBB
cHBlbmQAUmVzZXQARGF0YVJvd0NvbGxlY3Rpb24AZ2V0X1Jvd3MASW50ZXJuYWxEYXRhQ29sbGVj
dGlvbkJhc2UAZ2V0X0NvdW50AHNldF9UYXNrUmVzdWx0AFN0cmluZwBFeGNlcHRpb24AZ2V0X01l
c3NhZ2UAUmVwbGFjZQBDb25jYXQARW1wdHkARGF0YVJvdwBUb1VwcGVyAG9wX0VxdWFsaXR5AGdl
dF9JdGVtQXJyYXkAQXBwZW5kRm9ybWF0AGdldF9UYWJsZQBEYXRhQ29sdW1uQ29sbGVjdGlvbgBn
ZXRfQ29sdW1ucwBSZW1vdmUAQWNjZXB0Q2hhbmdlcwBTcWxCdWxrQ29weQBzZXRfRGVzdGluYXRp
b25UYWJsZU5hbWUAc2V0X0J1bGtDb3B5VGltZW91dABXcml0ZVRvU2VydmVyAElEaXNwb3NhYmxl
AERpc3Bvc2UAU3FsQ29tbWFuZABTeXN0ZW0uRGF0YS5Db21tb24ARGJDb21tYW5kAENvbW1hbmRU
eXBlAHNldF9Db21tYW5kVHlwZQBTcWxEYXRhQWRhcHRlcgBzZXRfU2VsZWN0Q29tbWFuZABzZXRf
Q29tbWFuZFRpbWVvdXQARGJEYXRhQWRhcHRlcgBGaWxsAEV4ZWN1dGVOb25RdWVyeQBEYkNvbm5l
Y3Rpb24AQ29ubmVjdGlvblN0YXRlAGdldF9TdGF0ZQBPcGVuAENsb3NlAFNUX2NlM2ZmYzA5MDUw
NTQ1YTU4ODc1MGI1MGYyMWMxNzg4LlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwAAAAAA
cVMAVABfAGMAZQAzAGYAZgBjADAAOQAwADUAMAA1ADQANQBhADUAOAA4ADcANQAwAGIANQAwAGYA
MgAxAGMAMQA3ADgAOAAuAFAAcgBvAHAAZQByAHQAaQBlAHMALgBSAGUAcwBvAHUAcgBjAGUAcwAA
LVUAcwBlAHIAOgA6AGMAbwBuAG4AZQBjAHQAaQBvAG4AUwB0AHIAaQBuAGcAACUgAFMARQBMAEUA
QwBUACAAQgBBAEkASABFAE4ALgAqACwAIAAAbyAAQwBBAFMARQAgAFcASABFAE4AIABTAFUAQgBT
AFQAUgBJAE4ARwAoAEIAQQBJAEgARQBOAC4A8lgJWR1PaHlqdfdTLAAxACwAMQApACAAIQA9ACAA
SwBBAE4ASgBPAC4AHU9oeS2YAE5BaCAAATEgAE8AUgAgAEsAQQBOAEoATwAuAB1PaHktmABOQWgg
AEkAUwAgAE4AVQBMAEwAIAABNSAAVABIAEUATgAgACcAVABSAFUARQAnACAARQBMAFMARQAgACcA
RgBBAEwAUwBFACcAIAABJyAARQBOAEQAIABBAFMAIABEAEUATABfAFIARQBDAE8AUgBEACAAAFsg
AEYAUgBPAE0AIABEAF8AQgBBAEkASABFAE4AXwBEAEUATgBQAFkATwBVAF8ATQBFAEkAUwBBAEkA
XwBUAEUATQBQACAAQQBTACAAQgBBAEkASABFAE4AIAAARSAATABFAEYAVAAgAEoATwBJAE4AIABN
AF8ASwBBAE4ASgBPAFUAXwBDAE8ARABFACAAQQBTACAASwBBAE4ASgBPACAAAD8gAE8ATgAgAEIA
QQBJAEgARQBOAC4A2FKaW7Mw/DDJMCAAPQAgAEsAQQBOAEoATwAuANhSmluzMPwwyTA7AAEh8lgJ
WR1PaHluMEhRLZhBaJIwk5VVkEgwfjBXMF8wAjABISAAUwBFAEwARQBDAFQAIABUAEUATQBQAC4A
KgAsACAAAEsgAEMAQQBTAEUAIABXAEgARQBOACAAVABFAE0AUAAuAPJYCVkdT2h5anX3UyAAPQAg
AE0AQQBJAE4ALgDyWAlZHU9oeWp191MgAAFHIABBAE4ARAAgAFQARQBNAFAALgDyWAlZHU9oeQ5m
MH1qdfdTIAA9ACAATQBBAEkATgAuAPJYCVkdT2h5DmYwfWp191MgAAFXIABGAFIATwBNACAARABf
AEIAQQBJAEgARQBOAF8ARABFAE4AUABZAE8AVQBfAE0ARQBJAFMAQQBJAF8AVABFAE0AUAAgAEEA
UwAgAFQARQBNAFAAIAAAVyAATABFAEYAVAAgAEoATwBJAE4AIABEAF8AQgBBAEkASABFAE4AXwBE
AEUATgBQAFkATwBVAF8ATQBFAEkAUwBBAEkAIABBAFMAIABNAEEASQBOACAAAD0gAE8ATgAgAFQA
RQBNAFAALgDyWAlZHU9oeWp191MgAD0AIABNAEEASQBOAC4A8lgJWR1PaHlqdfdTIAABRyAAQQBO
AEQAIABUAEUATQBQAC4A8lgJWR1PaHkOZjB9anX3UyAAPQAgAE0AQQBJAE4ALgDyWAlZHU9oeQ5m
MH1qdfdTOwABM/JYCVkdT2h5anX3U/sw8lgJWR1PaHkOZjB9anX3U0ww4mVrMNZTvI8Ibn8wZzBZ
MAIwASEgAFMARQBMAEUAQwBUACAAKgAsACAAQwBBAFMARQAgAACA+yAAVwBIAEUATgAgAEMAQQBT
AFQAKABDAE8ATgBWAEUAUgBUACgAVgBBAFIAQwBIAEEAUgAoADEAMAApACwA8lgJWR1PaHnlZdhO
LAAxADIAMQApACAAQQBTACAARABBAFQARQApACAAPAA9ACAAKABTAEUATABFAEMAVAAgAE0AQQBY
ACgACGemXkJ9hk7lZSkAIABGAFIATwBNACAATQBfAEQARQBOAFAAWQBPAFUAXwBTAEkATQBFAF8A
TQBBAFMAVABFAFIAIABXAEgARQBSAEUAIAAIZ6Ze4H3lZSAASQBTACAATgBPAFQAIABOAFUATABM
ACkAIAABSSAARgBSAE8ATQAgAEQAXwBCAEEASQBIAEUATgBfAEQARQBOAFAAWQBPAFUAXwBNAEUA
SQBTAEEASQBfAFQARQBNAFAAOwAgAAAxCGemXuB9gTB+MFcwXzACMOB9gTDlZU1SbjDyWAlZHU9o
eeVlTDBCMIowfjBZMAIwAS0gAFMARQBMAEUAQwBUACAAVABFAE0AUAAuACoALAAgAEMAQQBTAEUA
IAAgAAA/IABXAEgARQBOACAAVABFAE0AUAAuAPJYCVkdT2h55WXYTiAAPAAgAFQAQQBOAEEALgDa
aHhT5WXYTiAAIAABgP8gAEwARQBGAFQAIABKAE8ASQBOACAAKABTAEUATABFAEMAVAAgAEQASQBT
AFQASQBOAEMAVAAgAJdeF4KzMPwwyTAsAE0AQQBYACgA2mh4U+Vl2E4pACAAQQBTACAA2mh4U+Vl
2E4gAEYAUgBPAE0AIABNAF8AVABBAE4AQQBPAFIATwBTAEgASQBfAE0AQQBTAFQARQBSACAAVwBI
AEUAUgBFACAA2mh4U7p4mlvlZSAAIQA9ACAAJwAxADkAMAAwAC0AMAAxAC0AMAAxACcAIABHAFIA
TwBVAFAAIABCAFkAIACXXheCszD8MMkwKQAgAFQAQQBOAEEAIAAgAAE5IABPAE4AIABUAEUATQBQ
AC4A8lgJWbUwpDDIMCAAPQAgAFQAQQBOAEEALgCXXheCszD8MMkwIAABJdpoeFO6eJpb5WVNUm4w
8lgJWR1PaHnlZUwwQjCKMH4wWTACMAFLIABDAEEAUwBFACAAVwBIAEUATgAgAEoATwBLAEUATgAu
ANVOZVFhZ/ZOIAAhAD0AIABCAEEASQBIAEUATgAuALeM1lPXUxeKIAABXSAARgBSAE8ATQAgAEQA
XwBCAEEASQBIAEUATgBfAEQARQBOAFAAWQBPAFUAXwBNAEUASQBTAEEASQBfAFQARQBNAFAAIABB
AFMAIABCAEEASQBIAEUATgAgACAAAICJIABMAEUARgBUACAASgBPAEkATgAgACgAUwBFAEwARQBD
AFQAIABNAFMAVAAuADP/K/81/7Mw/DDJMCAAQQBTACAAM/8r/zX/szD8MMkwLABKAFIALgAJZ7lS
i5XLWeVlLABKAFIALgAJZ7lSQn2GTuVlLAAgAEoAUgAuANVOZVFhZ/ZOIAAgAAF7IABGAFIATwBN
ACAATQBfAFMASABJAEkAUgBFAF8ASgBPAFUASwBFAE4AXwBSAEkAUgBFAEsASQAgAEoAUgAgAEwA
RQBGAFQAIABKAE8ASQBOACAATQBfAFMASABPAFUASABJAE4AXwBEAEEAVABBACAATQBTAFQAIAAA
RyAATwBOACAASgBSAC4ARlXBVLMw/DDJMCAAPQAgAE0AUwBUAC4ARlXBVLMw/DDJMCkAIABBAFMA
IABKAE8ASwBFAE4AIAABQyAATwBOACAASgBPAEsARQBOAC4AM/8r/zX/szD8MMkwIAA9ACAAQgBB
AEkASABFAE4ALgBTAEsAVQCzMPwwyTAgAAFxIABBAE4ARAAgAEIAQQBJAEgARQBOAC4A8lgJWR1P
aHnlZdhOIABCAEUAVABXAEUARQBOACAASgBPAEsARQBOAC4ACWe5UouVy1nlZSAAQQBOAEQAIABK
AE8ASwBFAE4ALgAJZ7lSQn2GTuVlOwAgAAEx8lgJWeVl2E5oMAlnuVKLlctZ5WVuMER9fzAIVI8w
WzCSMJOVVZBIMH4wVzBfMAIwAS8gAFMARQBMAEUAQwBUACAAQgBBAEkASABFAE4ALgAqACwAIABD
AEEAUwBFACAAADsgAFcASABFAE4AIABUAEUATgBQAE8ALgCXXheCszD8MMkwIABJAFMAIABOAFUA
TABMACAATwBSACAAAS8gAFMASABPAEgASQBOAC4AM/8r/zX/szD8MMkwIABJAFMAIABOAFUATABM
ACAAAUcgAEwARQBGAFQAIABKAE8ASQBOACAATQBfAFQARQBOAFAATwBfAE0AQQBTAFQARQBSACAA
QQBTACAAVABFAE4AUABPACAAAD8gAE8ATgAgAEIAQQBJAEgARQBOAC4A8lgJWbUwpDDIMCAAPQAg
AFQARQBOAFAATwAuAJdeF4KzMPwwyTAgAAFJIABMAEUARgBUACAASgBPAEkATgAgAE0AXwBTAEgA
TwBVAEgASQBOAF8ARABBAFQAQQAgAEEAUwAgAFMASABPAEgASQBOACAAAEUgAE8ATgAgAEIAQQBJ
AEgARQBOAC4AM/8r/zX/szD8MMkwIAA9ACAAUwBIAE8ASABJAE4ALgAz/yv/Nf+zMPwwyTA7AAE7
M/8r/zX/szD8MMkwfjBfMG8wl14XgrMw/DDJMG8w3jC5ML8wazBYWyhXVTCMMGYwRDB+MFswkzAC
MAFDSQBOAFMARQBSAFQAIABJAE4AVABPACAASwBBAE4AUwBIAEkAXwBQAEEAQwBLAEEARwBFAF8A
RQBSAFIATwBSACAAAEsgACgA0TDDMLEw/DC4MLMw/DDJMCwAxzD8ML8w5WXYTiwAqDDpMPww5WVC
ZiwAqDDpMPwwhVG5WywAqDDpMPww1TDpMLAwKQAgAAEVIABWAEEATABVAEUAUwAoACcARwABI1UA
cwBlAHIAOgA6AHAAYQBjAGsAYQBnAGUAQwBvAGQAZQAABycALAAnAAEjVQBzAGUAcgA6ADoAYwB1
AHIAcgBlAG4AdABEAGEAdABlAAAbVQBzAGUAcgA6ADoAcwB5AHMARABhAHQAZQAAFycALAAnALcw
uTDGMOAwqDDpMPwwOgABAycAAQMtAAEPJwAsACcAMwAnACkAOwABFUQARQBMAF8AUgBFAEMATwBS
AEQAAAlUAFIAVQBFAAAJewAwAH0AIAAAAwIwASEgAFQAUgBVAE4AQwBBAFQARQAgAFQAQQBCAEwA
RQAgAAAfVQBzAGUAcgA6ADoAYwBoAGUAYwBrAFQAeQBwAGUAAAtfAFQARQBNAFAAAMkiJm7HVEBP
t/qMIcqVXZoACLd6XFYZNOCJCImEXc2AgMyRAwYSFQMGEhkDIAABBAAAEhUEAAASGQUAAQESGQQI
ABIVBAgAEhkDBhIMBAAAEgwECAASDAggAwESHRIhDgcgAhIdDhIhBiACAQ4SIQUgAQESIQIGCAMG
ERQEAAAAAAQBAAAABCABAQ4EIAEBCAYAARJZEV0EIAASYQYgAgEOEmEEBwESFQUgAQERaQgBAAIA
AAAAAAMAAAEEIAASdQQgABJ5BSABEn0cAyAAHAMgAA4FIAASgIEGIAESgIEOBSAAEoCFAyAACAUg
Ag4ODgUAAQ4dDg8HBg4SIRKAgRIdEoCRHQ4CBg4GIAESgJUIBCABHA4FAAICDg4EIAAdHAcgAhKA
gQ4cBCAAEh0FIAASgJkGIAEBEoCVBgADDg4ODgUAAg4ODgUgAQESHRgHCxKAgRKAgRKAlQ4ICAgI
EoCdEoCRHQ4GIAEBEYCtBiABARKApQUgAQgSHQ0HBBIdEoClEoCxEoCRCAcCEoClEoCRBSAAEYC9
BQcBEoCRRwEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC4wAQBUDhRGcmFtZXdvcmtEaXNwbGF5
TmFtZRAuTkVUIEZyYW1ld29yayA0KAEAI1NUX2NlM2ZmYzA5MDUwNTQ1YTU4ODc1MGI1MGYyMWMx
Nzg4AAAFAQAAAAAWAQARQ29weXJpZ2h0IEAgIDIwMTYAAAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5v
bkV4Y2VwdGlvblRocm93cwEANEsAAAAAAAAAAAAATksAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AEBLAAAAAAAAAAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAQAAAAGAAA
gAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAAAFhgAACwAwAA
AAAAAAAAAACwAzQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAAvQTv/gAAAQAA
AAEApXRhGAAAAQCldGEYPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAABAFYAYQByAEYA
aQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAAAAAAALAEEAMA
AAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAA7AIAAAEAMAAwADAAMAAwADQAYgAwAAAA
cAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAAAFMAVABfAGMAZQAzAGYAZgBj
ADAAOQAwADUAMAA1ADQANQBhADUAOAA4ADcANQAwAGIANQAwAGYAMgAxAGMAMQA3ADgAOAAAAEAA
DwABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgA2ADIANAAxAC4AMgA5ADgANgAx
AAAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMAVABfADMANAA0ADYAOQBlAGIA
MwBiAGMAZAA2ADQANQAwADEAOQA0ADYAYwBkAGMAMAA2ADEAMwA2AGUAMQBkADAAYQAuAGQAbABs
AAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBvAHAAeQByAGkAZwBoAHQA
IABAACAAIAAyADAAMQA2AAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBhAG0AZQAA
AFMAVABfADMANAA0ADYAOQBlAGIAMwBiAGMAZAA2ADQANQAwADEAOQA0ADYAYwBkAGMAMAA2ADEA
MwA2AGUAMQBkADAAYQAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEAbQBlAAAAAABT
AFQAXwBjAGUAMwBmAGYAYwAwADkAMAA1ADAANQA0ADUAYQA1ADgAOAA3ADUAMABiADUAMABmADIA
MQBjADEANwA4ADgAAABEAA8AAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAxAC4AMAAu
ADYAMgA0ADEALgAyADkAOAA2ADEAAAAAAEgADwABAEEAcwBzAGUAbQBiAGwAeQAgAFYAZQByAHMA
aQBvAG4AAAAxAC4AMAAuADYAMgA0ADEALgAyADkAOAA2ADEAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAMAAAAYDsAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\店間移動"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:Description="Script Task"
      DTS:DTSID="{3DD18CEA-B032-46FD-8DB4-F984CC1BF0E7}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="店間移動"
      DTS:ThreadHint="15">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_1c44e397e43c4d7e975ebf0713d2de7b"
          VSTAMajorVersion="3"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadOnlyVariables="User::checkType,User::connectionString,User::currentDate,User::packageCode,User::sysDate">
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_ce3ffc09050545a588750b50f21c1788")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_ce3ffc09050545a588750b50f21c1788")]
[assembly: AssemblyCopyright("Copyright @  2016")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[
#region Namespaces
using System;
using System.Data;
using System.Data.SqlClient;
using System.Text;
#endregion

namespace ST_ce3ffc09050545a588750b50f21c1788
{
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
    {
        #region "Main Method"
        /// <summary>
        /// 作成者：イルファン　マンスリー
        /// 説明：仕入実績の業務データチェックする。
        /// 作成日：２０１６年０８月０８日
        /// </summary>
        public void Main()
		{
            string strConnection = Dts.Variables["User::connectionString"].Value.ToString();
            SqlConnection myConnection = new SqlConnection(strConnection);
            StringBuilder strERRQuery = new StringBuilder();
            DataTable dtFaultyTemp;
            try
            { 
                dtFaultyTemp = new DataTable();
                _connectionOpen(myConnection);
                #region "Check for 伝票頭一桁 Check"
                //Get All The Records of Temp TABLE, with New Column DEL_RECORD as Flag.
                //Faulty Records will have DEL_RECORD as 'TRUE'
                strERRQuery.Clear();
                strERRQuery.Append(" SELECT TENKAN.*, ");
                strERRQuery.Append(" CASE WHEN SUBSTRING(TENKAN.店間移動伝票番号,1,1) != KANJO.伝票頭一桁 ");
                strERRQuery.Append(" OR KANJO.伝票頭一桁 IS NULL ");
                strERRQuery.Append(" THEN 'TRUE' ELSE 'FALSE' ");
                strERRQuery.Append(" END AS DEL_RECORD ");
                strERRQuery.Append(" FROM T_DAY_TENKAN_IDO_DATA_TEMP AS TENKAN ");
                strERRQuery.Append(" LEFT JOIN M_KANJOU_CODE AS KANJO ");
                strERRQuery.Append(" ON TENKAN.勘定コード = KANJO.勘定コード; ");
                dtFaultyTemp.Reset();
                dtFaultyTemp = _getDataTable(strERRQuery.ToString(), myConnection);
                if (dtFaultyTemp.Rows.Count > 0)
                {
                    _replaceData(dtFaultyTemp, myConnection, "店間移動伝票の先頭桁を間違えました。");   //Replace & Remove Data in Actual Db Table
                }
                #endregion

                #region "Check for 店間移動伝票番号,店間移動伝票明細番号(PK) Check"
                strERRQuery.Clear();
                strERRQuery.Append(" SELECT TEMP.*, ");
                strERRQuery.Append(" CASE WHEN TEMP.店間移動伝票番号 = MAIN.店間移動伝票番号 ");
                strERRQuery.Append(" AND TEMP.店間移動伝票明細番号 = MAIN.店間移動伝票明細番号 ");
                strERRQuery.Append(" THEN 'TRUE' ELSE 'FALSE' ");
                strERRQuery.Append(" END AS DEL_RECORD ");
                strERRQuery.Append(" FROM T_DAY_TENKAN_IDO_DATA_TEMP AS TEMP ");
                strERRQuery.Append(" LEFT JOIN T_DAY_TENKAN_IDO_DATA AS MAIN ");
                strERRQuery.Append(" ON TEMP.店間移動伝票番号 = MAIN.店間移動伝票番号 ");
                strERRQuery.Append(" AND TEMP.店間移動伝票明細番号 = MAIN.店間移動伝票明細番号;");
                dtFaultyTemp.Reset();
                dtFaultyTemp = _getDataTable(strERRQuery.ToString(), myConnection);
                if (dtFaultyTemp.Rows.Count > 0)
                {
                    _replaceData(dtFaultyTemp, myConnection, "店間移動伝票番号・店間移動伝票明細番号が既に取込済みです。");   //Replace & Remove Data in Actual Db Table
                }
                #endregion

                #region "Check for 締日 Check"
                //Get All The Records of Temp TABLE, with New Column DEL_RECORD as Flag.
                //Faulty Records will have DEL_RECORD as 'TRUE'
                strERRQuery.Clear();
                strERRQuery.Append(" SELECT *,CASE ");
                strERRQuery.Append(" WHEN CAST(CONVERT(VARCHAR(10),店間移動日,121) AS DATE) <= (SELECT MAX(月度終了日) FROM M_DENPYOU_SIME_MASTER WHERE 月度締日 IS NOT NULL) ");
                strERRQuery.Append(" THEN 'TRUE' ELSE 'FALSE' ");
                strERRQuery.Append(" END AS DEL_RECORD ");
                strERRQuery.Append(" FROM T_DAY_TENKAN_IDO_DATA_TEMP; ");
                dtFaultyTemp.Reset();
                dtFaultyTemp = _getDataTable(strERRQuery.ToString(), myConnection);
                if (dtFaultyTemp.Rows.Count > 0)
                {
                    _replaceData(dtFaultyTemp, myConnection, "月度締めました。締め日前の店間移動実績日があります。");   //Replace & Remove Data in Actual Db Table
                }
                #endregion

                #region "Check for 棚卸確定日 Check"
                //Get All The Records of Temp TABLE, with New Column DEL_RECORD as Flag.
                //Faulty Records will have DEL_RECORD as 'TRUE'
                strERRQuery.Clear();
                strERRQuery.Append(" SELECT TENKAN.*, CASE ");
                strERRQuery.Append(" WHEN TENKAN.店間移動日 < TANA.棚卸日付 ");
                strERRQuery.Append(" THEN 'TRUE' ELSE 'FALSE' ");
                strERRQuery.Append(" END AS DEL_RECORD ");
                strERRQuery.Append(" FROM T_DAY_TENKAN_IDO_DATA_TEMP AS TENKAN ");
                strERRQuery.Append(" LEFT JOIN (SELECT DISTINCT 店舗コード,MAX(棚卸日付) AS 棚卸日付 FROM M_TANAOROSHI_MASTER WHERE 棚卸確定日 != '1900-01-01' GROUP BY 店舗コード) TANA  ");
                strERRQuery.Append(" ON TENKAN.出庫サイト = TANA.店舗コード ");
                dtFaultyTemp.Reset();
                dtFaultyTemp = _getDataTable(strERRQuery.ToString(), myConnection);
                if (dtFaultyTemp.Rows.Count > 0)
                {
                    _replaceData(dtFaultyTemp, myConnection, "棚卸確定日前の店間移動実績日があります。");   //Replace & Remove Data in Actual Db Table
                }
                #endregion

                #region "Check for 仕入条件 & 買取受託 Check"
                //Get All The Records of Temp TABLE, with New Column DEL_RECORD as Flag.
                //Faulty Records will have DEL_RECORD as 'TRUE'
                strERRQuery.Clear();
                strERRQuery.Append(" SELECT TENKAN.*, ");
                strERRQuery.Append(" CASE WHEN JOKEN.仕入条件 != TENKAN.買取受託 ");
                strERRQuery.Append(" THEN 'TRUE' ELSE 'FALSE' ");
                strERRQuery.Append(" END AS DEL_RECORD ");
                strERRQuery.Append(" FROM T_DAY_TENKAN_IDO_DATA_TEMP AS TENKAN ");
                strERRQuery.Append(" LEFT JOIN (SELECT MST.ＳＫＵコード AS ＳＫＵコード,JR.有効開始日,JR.有効終了日, JR.仕入条件 FROM M_SHIIRE_JOUKEN_RIREKI JR LEFT JOIN M_SHOUHIN_DATA MST ON JR.商品コード = MST.商品コード) AS JOKEN ");
                strERRQuery.Append(" ON JOKEN.ＳＫＵコード = TENKAN.ＳＫＵコード AND ");
                strERRQuery.Append(" TENKAN.店間移動日 BETWEEN JOKEN.有効開始日 AND JOKEN.有効終了日; ");
                dtFaultyTemp.Reset();
                dtFaultyTemp = _getDataTable(strERRQuery.ToString(), myConnection);
                if (dtFaultyTemp.Rows.Count > 0)
                {
                    _replaceData(dtFaultyTemp, myConnection, "店間日付と有効開始日の組み合わせを間違えました。");   //Replace & Remove Data in Actual Db Table
                }
                #endregion

                #region "Check for F.K（仕入先コード、ＳＫＵコード、店舗コード） Check"
                //Get All The Records of Temp TABLE, with New Column DEL_RECORD as Flag.
                //Faulty Records will have DEL_RECORD as 'TRUE'
                strERRQuery.Clear();
                strERRQuery.Append(" SELECT TENKAN.*, CASE  ");
                strERRQuery.Append(" WHEN TENPO.店舗コード IS NULL OR ");
                strERRQuery.Append(" NYUTENPO.店舗コード IS NULL OR ");
                strERRQuery.Append(" SHOHIN.ＳＫＵコード IS NULL OR ");
                strERRQuery.Append(" SIIRESAKI.仕入先コード IS NULL ");
                strERRQuery.Append(" THEN 'TRUE' ELSE 'FALSE' ");
                strERRQuery.Append(" END AS DEL_RECORD ");
                strERRQuery.Append(" FROM T_DAY_TENKAN_IDO_DATA_TEMP AS TENKAN ");
                strERRQuery.Append(" LEFT JOIN M_TENPO_MASTER AS TENPO ");
                strERRQuery.Append(" ON TENKAN.出庫サイト = TENPO.店舗コード ");
                strERRQuery.Append(" LEFT JOIN M_TENPO_MASTER AS NYUTENPO ");
                strERRQuery.Append(" ON TENKAN.入庫サイト = NYUTENPO.店舗コード ");
                strERRQuery.Append(" LEFT JOIN M_SHOUHIN_DATA AS SHOHIN ");
                strERRQuery.Append(" ON TENKAN.ＳＫＵコード = SHOHIN.ＳＫＵコード ");
                strERRQuery.Append(" LEFT JOIN M_SIIRESAKI_MASTER AS SIIRESAKI ");
                strERRQuery.Append(" ON TENKAN.仕入先コード = SIIRESAKI.仕入先コード; ");
                dtFaultyTemp.Reset();
                dtFaultyTemp = _getDataTable(strERRQuery.ToString(), myConnection);
                if (dtFaultyTemp.Rows.Count > 0)
                {
                    _replaceData(dtFaultyTemp, myConnection, "仕入先コード、ＳＫＵコードまたは店舗コードはマスタに存在されていません。");   //Replace & Remove Data in Actual Db Table
                }
                #endregion

                #region "発生日 Should be exact as Y-Day"
                //Get All The Records of Temp TABLE, with New Column DEL_RECORD as Flag.
                //Faulty Records will have DEL_RECORD as 'TRUE'
                strERRQuery.Clear();
                strERRQuery.Append(" SELECT *, CASE");
                strERRQuery.Append(" WHEN CONVERT(VARCHAR(8),発生日付,112) != CONVERT(VARCHAR(8),DATEADD(DAY,-1,GETDATE()),112) ");
                strERRQuery.Append(" THEN 'TRUE' ELSE 'FALSE' ");
                strERRQuery.Append(" END AS DEL_RECORD ");
                strERRQuery.Append(" FROM T_DAY_TENKAN_IDO_DATA_TEMP;");
                dtFaultyTemp.Reset();
                dtFaultyTemp = _getDataTable(strERRQuery.ToString(), myConnection);
                if (dtFaultyTemp.Rows.Count > 0)
                {
                    _replaceData(dtFaultyTemp, myConnection, "発生日を間違えました。");   //Replace & Remove Data in Actual Db Table
                }
                #endregion

                #region "伝票日付 Should not be bigger than Y-Day"
                //Get All The Records of Temp TABLE, with New Column DEL_RECORD as Flag.
                //Faulty Records will have DEL_RECORD as 'TRUE'
                strERRQuery.Clear();
                strERRQuery.Append(" SELECT *,CASE ");
                strERRQuery.Append(" WHEN CONVERT(DATE,店間移動日) > CONVERT(DATE,DATEADD(DAY,-1,GETDATE())) ");
                strERRQuery.Append(" THEN 'TRUE' ELSE 'FALSE' END AS DEL_RECORD ");
                strERRQuery.Append(" FROM T_DAY_TENKAN_IDO_DATA_TEMP;");
                dtFaultyTemp.Reset();
                dtFaultyTemp = _getDataTable(strERRQuery.ToString(), myConnection);
                if (dtFaultyTemp.Rows.Count > 0)
                {
                    _replaceData(dtFaultyTemp, myConnection, "データに将来の店間移動伝票日が存在されています。");   //Replace & Remove Data in Actual Db Table
                }
                #endregion
                Dts.TaskResult = (int)ScriptResults.Success;
            }
            #region Catch/Finally
            catch (Exception ex)
            {
                strERRQuery.Clear();
                strERRQuery.Append("INSERT INTO KANSHI_PACKAGE_ERROR ");
                strERRQuery.Append(" (パッケージコード,データ日付,エラー日時,エラー内容,エラーフラグ) ");
                strERRQuery.Append(" VALUES('G" + Dts.Variables["User::packageCode"].Value.ToString() + "','" + Dts.Variables["User::currentDate"].Value.ToString() + "','" + Dts.Variables["User::sysDate"].Value.ToString() + "','システムエラー:" + ex.Message.ToString().Replace("'", "-") + "','3');");
                _updateInsert(strERRQuery.ToString(), myConnection);
                Dts.TaskResult = (int)ScriptResults.Success;
            }
            finally 
            {
                _connectionClose(myConnection);
                dtFaultyTemp = null;
                strERRQuery = null;
                myConnection = null;
            }
            #endregion
		}
        #endregion

        #region "replace Data"
        //Data Replacement in Actual DB After Test
        private void _replaceData(DataTable dtFaultyTemp, SqlConnection myConnection, string strErrorMsg)
        {
            StringBuilder strERRQuery = new StringBuilder();
            StringBuilder strBuildRow = new StringBuilder();
            DataRow drTemp;
            string strPackageCode = string.Empty;
            int intErrorCount = 0;  //To Count Errors in the DataTable, to avoid its extra TRUNCATION and BULK.
            try
            {
                _connectionOpen(myConnection);
                strPackageCode = Dts.Variables["User::packageCode"].Value.ToString();
                intErrorCount = 0;
                int countRows = dtFaultyTemp.Rows.Count;
                for (int intI = 0; intI < countRows; intI++)
                {
                    #region Report Faulty Records
                    if (dtFaultyTemp.Rows[intI]["DEL_RECORD"].ToString().ToUpper() == "TRUE")
                    {
                        intErrorCount = intErrorCount + 1;
                        //'TRUE' means Faulty SKU Record
                        drTemp = dtFaultyTemp.Rows[intI];
                        strBuildRow.Clear();
                        for (int intJ = 0; intJ < drTemp.Table.Columns.Count-1; intJ++)
                        {
                            strBuildRow.AppendFormat("{0} ", drTemp.ItemArray[intJ]);
                        }
                        strERRQuery.Clear();
                        strERRQuery.Append("INSERT INTO KANSHI_PACKAGE_ERROR ");
                        strERRQuery.Append(" (パッケージコード,データ日付,エラー日時,エラー内容,エラーフラグ) ");
                        strERRQuery.Append(" VALUES('G" + strPackageCode + "','" + Dts.Variables["User::currentDate"].Value.ToString() + "','" + Dts.Variables["User::sysDate"].Value.ToString() + "','" + strBuildRow.ToString() + "。" + strErrorMsg + "','3');");
                        _updateInsert(strERRQuery.ToString(), myConnection);
                        countRows = countRows - 1;
                        intI = intI - 1;
                        dtFaultyTemp.Rows.Remove(drTemp);   //Remove Faulty Records from DataTable Object.
                        dtFaultyTemp.AcceptChanges();    //Commit DataTable Changes.
                    }
                    #endregion
                }
                dtFaultyTemp.Columns.Remove("DEL_RECORD");
                if (intErrorCount > 0)
                {
                    #region "TRUNCATE TEMP Table"
                    //TRUNCATE TEMP Table, to be import New Correct Records
                    strERRQuery.Clear();
                    strERRQuery.Append(" TRUNCATE TABLE " + Dts.Variables["User::checkType"].Value.ToString() + "_TEMP");
                    _updateInsert(strERRQuery.ToString(), myConnection);
                    #endregion
                    #region "Bulk Update Records"
                    //正しいデータテーブルからインポートするためいに。
                    using (SqlBulkCopy bulkCopy = new SqlBulkCopy(myConnection))
                    {
                        bulkCopy.DestinationTableName = Dts.Variables["User::checkType"].Value.ToString() + "_TEMP";   //Assign table name
                        _connectionOpen(myConnection);
                        bulkCopy.BulkCopyTimeout = 600; //Default Timeut 30 Change to 600. in seconds
                        bulkCopy.WriteToServer(dtFaultyTemp);   //Write into Actual table.
                    }
                    #endregion
                }
            }
            #region Catch/Finally
            catch (Exception ex) 
            {
                throw ex;
            }
            finally
            {
                strERRQuery = null;
                dtFaultyTemp = null;
                strBuildRow = null;
                drTemp = null;
                strErrorMsg = null;
                strPackageCode = null;
            }
            #endregion
        }
        #endregion

        #region "Get DataTable"
        //Created On: 08-08-2016
        //Description: Aim to Return DataTable from the Query.
        public DataTable _getDataTable(string strQuery, SqlConnection myConnection)
        {
            StringBuilder strERRQuery = new StringBuilder();
            DataTable objDT = new DataTable();
            SqlCommand myCommand;
            SqlDataAdapter sqlSelectData;
            try
            {
                _connectionOpen(myConnection);
                myCommand = new SqlCommand(strQuery, myConnection);
                myCommand.CommandType = CommandType.Text;
                sqlSelectData = new SqlDataAdapter();
                sqlSelectData.SelectCommand = myCommand;
                myCommand.CommandTimeout = 600; //Increases Query execution timeout.
                sqlSelectData.Fill(objDT);
            }
            #region CATCH/FINALLY
            catch (Exception ex)
            {
                throw ex;
            }
            finally
            {
                strQuery = null;
                myCommand = null;
                sqlSelectData = null;
                strERRQuery = null;
            }
            #endregion
            return objDT;
        }
        #endregion

        #region "Update/Insert Query in Db"
        protected void _updateInsert(string strQuery, SqlConnection myConnection)
        {
            StringBuilder strERRQuery = new StringBuilder();
            SqlCommand myCommand;
            try
            {
                myCommand = new SqlCommand(strQuery, myConnection);
                _connectionOpen(myConnection);
                myCommand.ExecuteNonQuery();
            }
            #region CATCH/FINALLY
            catch (Exception ex)
            {
                throw ex;
            }
            finally
            {
                strERRQuery = null;
                myConnection = null;
                myCommand = null;
            }
            #endregion
        }
        #endregion

        #region Connection Open
        private void _connectionOpen(SqlConnection myConnection)
        {
            try
            {
                if (myConnection.State != ConnectionState.Open)
                {
                    myConnection.Open();
                }
            }
            catch (Exception ex)
            {
                throw ex;
            }
        }
        #endregion

        #region Connection Close
        private void _connectionClose(SqlConnection myConnection)
        {
            try
            {
                if (myConnection.State != ConnectionState.Closed)
                {
                    myConnection.Close();
                }
            }
            catch (Exception ex)
            {
                throw ex;
            }
        }
        #endregion

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
          <ProjectItem
            Name="ST_1c44e397e43c4d7e975ebf0713d2de7b.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?><Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003"><PropertyGroup><ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids><Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration><Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform><ProductVersion>8.0.30703</ProductVersion><SchemaVersion>2.0</SchemaVersion><ProjectGuid>{6f1cd3ad-124c-410c-a3da-0ed5e3468b82}</ProjectGuid><OutputType>Library</OutputType><AppDesignerFolder>Properties</AppDesignerFolder><RootNamespace>ST_ce3ffc09050545a588750b50f21c1788</RootNamespace><AssemblyName>ST_1c44e397e43c4d7e975ebf0713d2de7b</AssemblyName><TargetFrameworkVersion>v4.0</TargetFrameworkVersion><FileAlignment>512</FileAlignment><ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Debug' "><DebugSymbols>true</DebugSymbols><DebugType>full</DebugType><Optimize>false</Optimize><OutputPath>.\bin\Debug\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>DEBUG;TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Release' "><DebugSymbols>false</DebugSymbols><Optimize>true</Optimize><OutputPath>.\bin\Release\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><ItemGroup><Reference Include="System" /><Reference Include="System.Data" /><Reference Include="System.Windows.Forms" /><Reference Include="System.Xml" /><Reference Include="Microsoft.SqlServer.ManagedDTS, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.ScriptTask, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /></ItemGroup><ItemGroup><AppDesigner Include="Properties\" /><Compile Include="Properties\AssemblyInfo.cs"><SubType>Code</SubType></Compile><EmbeddedResource Include="Properties\Resources.resx"><Generator>ResXFileCodeGenerator</Generator><LastGenOutput>Resources.Designer.cs</LastGenOutput></EmbeddedResource><Compile Include="Properties\Resources.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Resources.resx</DependentUpon></Compile><None Include="Properties\Settings.settings"><Generator>SettingsSingleFileGenerator</Generator><LastGenOutput>Settings.Designer.cs</LastGenOutput></None><Compile Include="Properties\Settings.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Settings.settings</DependentUpon></Compile><Compile Include="ScriptMain.cs"><SubType>Code</SubType></Compile></ItemGroup><!-- Include the build rules for a C# project.--><Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" /><ProjectExtensions><VisualStudio><FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}"><ProjectProperties HostName="ScriptTask" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="#HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\VisualStudio\10.0\InstallDir#\devenv.exe" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" /><Host Name="ScriptTask" GeneratedNamespace="$safeprojectname" IconIndex=""></Host><ProjectClient><HostIdentifier>SSIS_ST120</HostIdentifier></ProjectClient></FlavorProperties></VisualStudio></ProjectExtensions></Project>]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>ST_ce3ffc09050545a588750b50f21c1788</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>ST_ce3ffc09050545a588750b50f21c1788</msb:DisplayName>
		<msb:ProjectId>{EE24C7D7-5D12-4340-B8D9-E41721313B68}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_1c44e397e43c4d7e975ebf0713d2de7b.csproj"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_ce3ffc09050545a588750b50f21c1788.Properties.Settings.get_Default():ST_ce3ffc09050545a588750b50f21c1788.Properties.Sett" +
    "ings")]

namespace ST_ce3ffc09050545a588750b50f21c1788.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_ce3ffc09050545a588750b50f21c1788.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_ce3ffc09050545a588750b50f21c1788.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_ce3ffc09050545a588750b50f21c1788.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_ce3ffc09050545a588750b50f21c1788.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_ce3ffc09050545a588750b50f21c1788.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_1c44e397e43c4d7e975ebf0713d2de7b.dll">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
F1kTBREGF1kTBgNvIQAACghvMAAACgNvMQAAChEGF1gTBhEGEQU/ff7//wNvLwAACnIuEgBwbzIA
AAoRBBY+qgAAAAZvHgAACiYGclwSAHACKBYAAApvFwAACnJ+EgBwbxgAAApvGQAACm8aAAAKcp4S
AHAoMwAACm8fAAAKJgIGbxoAAAoEKAsAAAYEczQAAAoTCBEIAigWAAAKbxcAAApyfhIAcG8YAAAK
bxkAAApvGgAACnKeEgBwKDUAAApvNgAACgIEKAwAAAYRCCBYAgAAbzcAAAoRCANvOAAACt4MEQgs
BxEIbzkAAArc3gUTCREJet4PFAoUEAEUCxQMFBADFA3cKgAAQUwAAAIAAABAAgAATQAAAI0CAAAM
AAAAAAAAAAAAAAAVAAAAhgIAAJsCAAAFAAAAJAAAAQIAAAAVAAAAjQIAAKICAAAPAAAAAAAAABsw
AgBTAAAABAAAEXMcAAAKJnMdAAAKCgIEKAwAAAYDBHM6AAAKCwcXbzsAAApzPAAACgwIB289AAAK
ByBYAgAAbz4AAAoIBm8/AAAKJt4DDQl63ggUEAEUCxQM3AYqAAEcAAAAAAwAOEQAAyQAAAECAAwA
PUkACAAAAAAbMAIAKgAAAAUAABFzHAAACiYDBHM6AAAKCgIEKAwAAAYGb0AAAAom3gMLB3reBhQQ
AhQK3CoAAAEcAAAAAAYAGB4AAyQAAAECAAYAHSMABgAAAAAbMAIAFQAAAAYAABEDb0EAAAoXLgYD
b0IAAAreAwoGeioAAAABEAAAAAAAABERAAMkAAABGzABABQAAAAGAAARA29BAAAKLAYDb0MAAAre
AwoGeioBEAAAAAAAABAQAAMkAAABHgIoRAAACiq0AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5SZXNv
dXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9
bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2Vz
LlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAAQlNKQgEAAQAAAAAADAAA
AHY0LjAuMzAzMTkAAAAABQBsAAAAtAUAACN+AAAgBgAAxAgAACNTdHJpbmdzAAAAAOQOAACsEgAA
I1VTAJAhAAAQAAAAI0dVSUQAAACgIQAARAIAACNCbG9iAAAAAAAAAAIAAAFXHaIBCQMAAAD6JTMA
FgAAAQAAAC8AAAAFAAAABgAAAA4AAAAKAAAARAAAAAIAAAAPAAAABgAAAAIAAAADAAAABAAAAAEA
AAAFAAAAAQAAAAEAAAAAAAoAAQAAAAAABgDBALoACgDdAMgADgA9ARQBBgBZAboABgBvAV4BBgCg
AYsBEgArAh8CEgBLAjUCBgAKA/ACBgA1AyMDBgBMAyMDBgBpAyMDBgCIAyMDBgChAyMDBgC6AyMD
BgDVAyMDBgDwAyMDBgAJBCMDBgBCBCIEBgBiBCIEBgC3BKQEBgDUBLoABgDZBLoABgD9BCMDCgAp
BRMFCgBCBRMFBgBXBSIEDgB5BRQBDgCbBRQBFgD0BdQFFgAMBtQFBgA9BjEGEgBeBh8CEgB5Bh8C
BgCtBroABgC0BroAEgDfBh8CEgAgBx8CEgBWBzUCBgCdB7oAEgCxBzUCEgDPB7wHEgDZBx8CEgD1
BzUCEgApCLwHEgBMCLwHEgBZCB8CAAAAAAEAAAAAAAEAAQAAABAAMgA8AAUAAQABAAABEABrADwA
CQADAAUAAQAQAHQAfwANAAQACAADAQAAowAAABEABAAPABEAfwETABEArAEXABEA9gE5AAYGowJl
AFaAqwJoAFaAswJoAFAgAAAAAIMYvAEbAAEAWCAAAAAAkwjCAR8AAQCRIAAAAACTCNYBJAABAJgg
AAAAAJMI4gEpAAEAoCAAAAAAlggGAj0AAgCzIAAAAACGGLwBGwACAKcgAAAAAJEYcgWnAAIAvCAA
AAAAhgAaAhsAAgD4JgAAAACBAFkCRwACAAQqAAAAAIYAZgJQAAUAgCoAAAAAhAB0AlgABwDUKgAA
AACBAIICXwAJAAgrAAAAAIEAkgJfAAoAOCsAAAAAhhi8ARsACwAAAAEAuwIAAAEAwQIAAAIAzgIA
AAMA2wIAAAEA5wIAAAIAzgIAAAEA5wIAAAIAzgIAAAEAzgIAAAEAzgJJALwBdgBRALwBdgBZALwB
dgBhALwBdgBpALwBdgBxALwBdgB5ALwBdgCBALwBdgCJALwBdgCRALwBdgCZALwBewChALwBGwCp
ALwBGwAJALwBGwCxAOsEgACxAAYFhwApALwBjADJALwBmADZALwBGwARALwBGwDhALwBGwAZAK0F
qwDpAP4FsADxABUGtQD5AB4GuwAJACgGvwBBALwBdgABAbwBGwA5ALwBGwABAUsGwwABAVEGyQA5
AFgGGwA5AHAG0AARAZQG1gDpAJ4GewAhAb4GvwAZAcoG2gAZAdIG4AAZAdkG9gAJARUG+QApARUG
AAEZAecGvwAZAe8GBQEpAfsGCwEBAQkHEAEpARYHGAE5ADUHHQEJAUEHIwE5AEgHGwAxAUEHdgAZ
AdIGKgE5AbwBXwAZAdIGMQE5AWIHdgA5AXsHewA5AY8HNwFBAakHGwBJAbwBWABRAeUHVgFhAbwB
GwBhAQQIXQFRARYIewBpATcIZAFRATwI1gBxAWkIgQFxAXMIGwBxAXgIGwAZALwBGwAIABQAbAAI
ABgAcQApAJMAngAuABsA/gEuACMA/gEuAGMAJAIuAAsAjQEuABMA1QEuADMA1QEuACsA/gEuADsA
BAIuAEMA/gEuAFsAGwJDAGsAcQBJAJMAngBhAJsAcQCDAKsAcQCTAOYAPQFqAXgBhwECAAEAAwAD
AAAAbwEvAAAA7gE0AAAAEgJCAAIAAgADAAIAAwAFAAEABAAFAAIABQAHAASAAAABAAAA3Ri1hgAA
AAAAAIAEAAAEAAAAAAAAAAAAAAABALEAAAAAAAQAAAAAAAAAAAAAAAEAugAAAAAADAAAAAAAAAAA
AAAACgD1AAAAAAAEAAAAAAAAAAAAAAABAB8CAAAAAAwAAAAAAAAAAAAAAAoAtQUAAAAAAAAAAAEA
AAB+CAAABQAEAAAAAAAAPE1vZHVsZT4AU1RfMWM0NGUzOTdlNDNjNGQ3ZTk3NWViZjA3MTNkMmRl
N2IuZGxsAFJlc291cmNlcwBTVF9jZTNmZmMwOTA1MDU0NWE1ODg3NTBiNTBmMjFjMTc4OC5Qcm9w
ZXJ0aWVzAFNldHRpbmdzAFNjcmlwdE1haW4AU1RfY2UzZmZjMDkwNTA1NDVhNTg4NzUwYjUwZjIx
YzE3ODgAU2NyaXB0UmVzdWx0cwBtc2NvcmxpYgBTeXN0ZW0AT2JqZWN0AFN5c3RlbS5Db25maWd1
cmF0aW9uAEFwcGxpY2F0aW9uU2V0dGluZ3NCYXNlAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuU2NyaXB0
VGFzawBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5UYXNrcy5TY3JpcHRUYXNrAFZTVEFSVFNjcmlw
dE9iamVjdE1vZGVsQmFzZQBFbnVtAFN5c3RlbS5SZXNvdXJjZXMAUmVzb3VyY2VNYW5hZ2VyAHJl
c291cmNlTWFuAFN5c3RlbS5HbG9iYWxpemF0aW9uAEN1bHR1cmVJbmZvAHJlc291cmNlQ3VsdHVy
ZQAuY3RvcgBnZXRfUmVzb3VyY2VNYW5hZ2VyAGdldF9DdWx0dXJlAHNldF9DdWx0dXJlAEN1bHR1
cmUAZGVmYXVsdEluc3RhbmNlAGdldF9EZWZhdWx0AERlZmF1bHQATWFpbgBTeXN0ZW0uRGF0YQBE
YXRhVGFibGUAU3lzdGVtLkRhdGEuU3FsQ2xpZW50AFNxbENvbm5lY3Rpb24AX3JlcGxhY2VEYXRh
AF9nZXREYXRhVGFibGUAX3VwZGF0ZUluc2VydABfY29ubmVjdGlvbk9wZW4AX2Nvbm5lY3Rpb25D
bG9zZQB2YWx1ZV9fAFN1Y2Nlc3MARmFpbHVyZQB2YWx1ZQBkdEZhdWx0eVRlbXAAbXlDb25uZWN0
aW9uAHN0ckVycm9yTXNnAHN0clF1ZXJ5AFN5c3RlbS5SdW50aW1lLlZlcnNpb25pbmcAVGFyZ2V0
RnJhbWV3b3JrQXR0cmlidXRlAFN5c3RlbS5SZWZsZWN0aW9uAEFzc2VtYmx5VGl0bGVBdHRyaWJ1
dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25BdHRy
aWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBB
c3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFya0F0dHJpYnV0ZQBBc3Nl
bWJseUN1bHR1cmVBdHRyaWJ1dGUAQXNzZW1ibHlWZXJzaW9uQXR0cmlidXRlAFN5c3RlbS5SdW50
aW1lLkNvbXBpbGVyU2VydmljZXMAQ29tcGlsYXRpb25SZWxheGF0aW9uc0F0dHJpYnV0ZQBSdW50
aW1lQ29tcGF0aWJpbGl0eUF0dHJpYnV0ZQBTVF8xYzQ0ZTM5N2U0M2M0ZDdlOTc1ZWJmMDcxM2Qy
ZGU3YgBTeXN0ZW0uRGlhZ25vc3RpY3MARGVidWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBUeXBl
AFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAEFzc2VtYmx5AGdldF9Bc3NlbWJs
eQBTeXN0ZW0uQ29tcG9uZW50TW9kZWwARWRpdG9yQnJvd3NhYmxlQXR0cmlidXRlAEVkaXRvckJy
b3dzYWJsZVN0YXRlAENvbXBpbGVyR2VuZXJhdGVkQXR0cmlidXRlAC5jY3RvcgBTU0lTU2NyaXB0
VGFza0VudHJ5UG9pbnRBdHRyaWJ1dGUAU2NyaXB0T2JqZWN0TW9kZWwAZ2V0X0R0cwBNaWNyb3Nv
ZnQuU3FsU2VydmVyLk1hbmFnZWREVFMATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUnVudGltZQBW
YXJpYWJsZXMAZ2V0X1ZhcmlhYmxlcwBWYXJpYWJsZQBnZXRfSXRlbQBnZXRfVmFsdWUAVG9TdHJp
bmcAU3lzdGVtLlRleHQAU3RyaW5nQnVpbGRlcgBDbGVhcgBBcHBlbmQAUmVzZXQARGF0YVJvd0Nv
bGxlY3Rpb24AZ2V0X1Jvd3MASW50ZXJuYWxEYXRhQ29sbGVjdGlvbkJhc2UAZ2V0X0NvdW50AHNl
dF9UYXNrUmVzdWx0AFN0cmluZwBFeGNlcHRpb24AZ2V0X01lc3NhZ2UAUmVwbGFjZQBDb25jYXQA
RW1wdHkARGF0YVJvdwBUb1VwcGVyAG9wX0VxdWFsaXR5AGdldF9JdGVtQXJyYXkAQXBwZW5kRm9y
bWF0AGdldF9UYWJsZQBEYXRhQ29sdW1uQ29sbGVjdGlvbgBnZXRfQ29sdW1ucwBSZW1vdmUAQWNj
ZXB0Q2hhbmdlcwBTcWxCdWxrQ29weQBzZXRfRGVzdGluYXRpb25UYWJsZU5hbWUAc2V0X0J1bGtD
b3B5VGltZW91dABXcml0ZVRvU2VydmVyAElEaXNwb3NhYmxlAERpc3Bvc2UAU3FsQ29tbWFuZABT
eXN0ZW0uRGF0YS5Db21tb24ARGJDb21tYW5kAENvbW1hbmRUeXBlAHNldF9Db21tYW5kVHlwZQBT
cWxEYXRhQWRhcHRlcgBzZXRfU2VsZWN0Q29tbWFuZABzZXRfQ29tbWFuZFRpbWVvdXQARGJEYXRh
QWRhcHRlcgBGaWxsAEV4ZWN1dGVOb25RdWVyeQBEYkNvbm5lY3Rpb24AQ29ubmVjdGlvblN0YXRl
AGdldF9TdGF0ZQBPcGVuAENsb3NlAFNUX2NlM2ZmYzA5MDUwNTQ1YTU4ODc1MGI1MGYyMWMxNzg4
LlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwAAAAAAcVMAVABfAGMAZQAzAGYAZgBjADAA
OQAwADUAMAA1ADQANQBhADUAOAA4ADcANQAwAGIANQAwAGYAMgAxAGMAMQA3ADgAOAAuAFAAcgBv
AHAAZQByAHQAaQBlAHMALgBSAGUAcwBvAHUAcgBjAGUAcwAALVUAcwBlAHIAOgA6AGMAbwBuAG4A
ZQBjAHQAaQBvAG4AUwB0AHIAaQBuAGcAACUgAFMARQBMAEUAQwBUACAAVABFAE4ASwBBAE4ALgAq
ACwAIAAAcyAAQwBBAFMARQAgAFcASABFAE4AIABTAFUAQgBTAFQAUgBJAE4ARwAoAFQARQBOAEsA
QQBOAC4Al16Tlft51VIdT2h5anX3UywAMQAsADEAKQAgACEAPQAgAEsAQQBOAEoATwAuAB1PaHkt
mABOQWggAAExIABPAFIAIABLAEEATgBKAE8ALgAdT2h5LZgATkFoIABJAFMAIABOAFUATABMACAA
ATUgAFQASABFAE4AIAAnAFQAUgBVAEUAJwAgAEUATABTAEUAIAAnAEYAQQBMAFMARQAnACAAAScg
AEUATgBEACAAQQBTACAARABFAEwAXwBSAEUAQwBPAFIARAAgAABXIABGAFIATwBNACAAVABfAEQA
QQBZAF8AVABFAE4ASwBBAE4AXwBJAEQATwBfAEQAQQBUAEEAXwBUAEUATQBQACAAQQBTACAAVABF
AE4ASwBBAE4AIAAARSAATABFAEYAVAAgAEoATwBJAE4AIABNAF8ASwBBAE4ASgBPAFUAXwBDAE8A
RABFACAAQQBTACAASwBBAE4ASgBPACAAAEEgAE8ATgAgAFQARQBOAEsAQQBOAC4A2FKaW7Mw/DDJ
MCAAPQAgAEsAQQBOAEoATwAuANhSmluzMPwwyTA7ACAAASWXXpOV+3nVUh1PaHluMEhRLZhBaJIw
k5VVkEgwfjBXMF8wAjABISAAUwBFAEwARQBDAFQAIABUAEUATQBQAC4AKgAsACAAAFMgAEMAQQBT
AEUAIABXAEgARQBOACAAVABFAE0AUAAuAJdek5X7edVSHU9oeWp191MgAD0AIABNAEEASQBOAC4A
l16Tlft51VIdT2h5anX3UyAAAU8gAEEATgBEACAAVABFAE0AUAAuAJdek5X7edVSHU9oeQ5mMH1q
dfdTIAA9ACAATQBBAEkATgAuAJdek5X7edVSHU9oeQ5mMH1qdfdTIAABUyAARgBSAE8ATQAgAFQA
XwBEAEEAWQBfAFQARQBOAEsAQQBOAF8ASQBEAE8AXwBEAEEAVABBAF8AVABFAE0AUAAgAEEAUwAg
AFQARQBNAFAAIAAAUyAATABFAEYAVAAgAEoATwBJAE4AIABUAF8ARABBAFkAXwBUAEUATgBLAEEA
TgBfAEkARABPAF8ARABBAFQAQQAgAEEAUwAgAE0AQQBJAE4AIAAARSAATwBOACAAVABFAE0AUAAu
AJdek5X7edVSHU9oeWp191MgAD0AIABNAEEASQBOAC4Al16Tlft51VIdT2h5anX3UyAAAU8gAEEA
TgBEACAAVABFAE0AUAAuAJdek5X7edVSHU9oeQ5mMH1qdfdTIAA9ACAATQBBAEkATgAuAJdek5X7
edVSHU9oeQ5mMH1qdfdTOwABO5dek5X7edVSHU9oeWp191P7MJdek5X7edVSHU9oeQ5mMH1qdfdT
TDDiZWsw1lO8jwhufzBnMFkwAjABHyAAUwBFAEwARQBDAFQAIAAqACwAQwBBAFMARQAgAACA+SAA
VwBIAEUATgAgAEMAQQBTAFQAKABDAE8ATgBWAEUAUgBUACgAVgBBAFIAQwBIAEEAUgAoADEAMAAp
ACwAl16Tlft51VLlZSwAMQAyADEAKQAgAEEAUwAgAEQAQQBUAEUAKQAgADwAPQAgACgAUwBFAEwA
RQBDAFQAIABNAEEAWAAoAAhnpl5CfYZO5WUpACAARgBSAE8ATQAgAE0AXwBEAEUATgBQAFkATwBV
AF8AUwBJAE0ARQBfAE0AQQBTAFQARQBSACAAVwBIAEUAUgBFACAACGemXuB95WUgAEkAUwAgAE4A
TwBUACAATgBVAEwATAApACAAAUUgAEYAUgBPAE0AIABUAF8ARABBAFkAXwBUAEUATgBLAEEATgBf
AEkARABPAF8ARABBAFQAQQBfAFQARQBNAFAAOwAgAAA1CGemXuB9gTB+MFcwXzACMOB9gTDlZU1S
bjCXXpOV+3nVUp9bPn7lZUwwQjCKMH4wWTACMAEvIABTAEUATABFAEMAVAAgAFQARQBOAEsAQQBO
AC4AKgAsACAAQwBBAFMARQAgAAA/IABXAEgARQBOACAAVABFAE4ASwBBAE4ALgCXXpOV+3nVUuVl
IAA8ACAAVABBAE4AQQAuANpoeFPlZdhOIAABgP8gAEwARQBGAFQAIABKAE8ASQBOACAAKABTAEUA
TABFAEMAVAAgAEQASQBTAFQASQBOAEMAVAAgAJdeF4KzMPwwyTAsAE0AQQBYACgA2mh4U+Vl2E4p
ACAAQQBTACAA2mh4U+Vl2E4gAEYAUgBPAE0AIABNAF8AVABBAE4AQQBPAFIATwBTAEgASQBfAE0A
QQBTAFQARQBSACAAVwBIAEUAUgBFACAA2mh4U7p4mlvlZSAAIQA9ACAAJwAxADkAMAAwAC0AMAAx
AC0AMAAxACcAIABHAFIATwBVAFAAIABCAFkAIACXXheCszD8MMkwKQAgAFQAQQBOAEEAIAAgAAE9
IABPAE4AIABUAEUATgBLAEEATgAuAPpRq161MKQwyDAgAD0AIABUAEEATgBBAC4Al14XgrMw/DDJ
MCAAASnaaHhTuniaW+VlTVJuMJdek5X7edVSn1s+fuVlTDBCMIowfjBZMAIwAUsgAEMAQQBTAEUA
IABXAEgARQBOACAASgBPAEsARQBOAC4A1U5lUWFn9k4gACEAPQAgAFQARQBOAEsAQQBOAC4At4zW
U9dTF4ogAAGBQyAATABFAEYAVAAgAEoATwBJAE4AIAAoAFMARQBMAEUAQwBUACAATQBTAFQALgAz
/yv/Nf+zMPwwyTAgAEEAUwAgADP/K/81/7Mw/DDJMCwASgBSAC4ACWe5UouVy1nlZSwASgBSAC4A
CWe5UkJ9hk7lZSwAIABKAFIALgDVTmVRYWf2TiAARgBSAE8ATQAgAE0AXwBTAEgASQBJAFIARQBf
AEoATwBVAEsARQBOAF8AUgBJAFIARQBLAEkAIABKAFIAIABMAEUARgBUACAASgBPAEkATgAgAE0A
XwBTAEgATwBVAEgASQBOAF8ARABBAFQAQQAgAE0AUwBUACAATwBOACAASgBSAC4ARlXBVLMw/DDJ
MCAAPQAgAE0AUwBUAC4ARlXBVLMw/DDJMCkAIABBAFMAIABKAE8ASwBFAE4AIAABSyAATwBOACAA
SgBPAEsARQBOAC4AM/8r/zX/szD8MMkwIAA9ACAAVABFAE4ASwBBAE4ALgAz/yv/Nf+zMPwwyTAg
AEEATgBEACAAAWcgAFQARQBOAEsAQQBOAC4Al16Tlft51VLlZSAAQgBFAFQAVwBFAEUATgAgAEoA
TwBLAEUATgAuAAlnuVKLlctZ5WUgAEEATgBEACAASgBPAEsARQBOAC4ACWe5UkJ9hk7lZTsAIAAB
MZdek5XlZdhOaDAJZ7lSi5XLWeVlbjBEfX8wCFSPMFswkjCTlVWQSDB+MFcwXzACMAExIABTAEUA
TABFAEMAVAAgAFQARQBOAEsAQQBOAC4AKgAsACAAQwBBAFMARQAgACAAADsgAFcASABFAE4AIABU
AEUATgBQAE8ALgCXXheCszD8MMkwIABJAFMAIABOAFUATABMACAATwBSACAAATcgAE4AWQBVAFQA
RQBOAFAATwAuAJdeF4KzMPwwyTAgAEkAUwAgAE4AVQBMAEwAIABPAFIAIAABNSAAUwBIAE8ASABJ
AE4ALgAz/yv/Nf+zMPwwyTAgAEkAUwAgAE4AVQBMAEwAIABPAFIAIAABNSAAUwBJAEkAUgBFAFMA
QQBLAEkALgDVTmVRSFGzMPwwyTAgAEkAUwAgAE4AVQBMAEwAIAABRyAATABFAEYAVAAgAEoATwBJ
AE4AIABNAF8AVABFAE4AUABPAF8ATQBBAFMAVABFAFIAIABBAFMAIABUAEUATgBQAE8AIAAAPyAA
TwBOACAAVABFAE4ASwBBAE4ALgD6UatetTCkMMgwIAA9ACAAVABFAE4AUABPAC4Al14XgrMw/DDJ
MCAAAU0gAEwARQBGAFQAIABKAE8ASQBOACAATQBfAFQARQBOAFAATwBfAE0AQQBTAFQARQBSACAA
QQBTACAATgBZAFUAVABFAE4AUABPACAAAEUgAE8ATgAgAFQARQBOAEsAQQBOAC4AZVGrXrUwpDDI
MCAAPQAgAE4AWQBVAFQARQBOAFAATwAuAJdeF4KzMPwwyTAgAAFJIABMAEUARgBUACAASgBPAEkA
TgAgAE0AXwBTAEgATwBVAEgASQBOAF8ARABBAFQAQQAgAEEAUwAgAFMASABPAEgASQBOACAAAEUg
AE8ATgAgAFQARQBOAEsAQQBOAC4AM/8r/zX/szD8MMkwIAA9ACAAUwBIAE8ASABJAE4ALgAz/yv/
Nf+zMPwwyTAgAAFXIABMAEUARgBUACAASgBPAEkATgAgAE0AXwBTAEkASQBSAEUAUwBBAEsASQBf
AE0AQQBTAFQARQBSACAAQQBTACAAUwBJAEkAUgBFAFMAQQBLAEkAIAAATSAATwBOACAAVABFAE4A
SwBBAE4ALgDVTmVRSFGzMPwwyTAgAD0AIABTAEkASQBSAEUAUwBBAEsASQAuANVOZVFIUbMw/DDJ
MDsAIAABSdVOZVFIUbMw/DDJMAEwM/8r/zX/szD8MMkwfjBfMG8wl14XgrMw/DDJMG8w3jC5ML8w
azBYWyhXVTCMMGYwRDB+MFswkzACMAEfIABTAEUATABFAEMAVAAgACoALAAgAEMAQQBTAEUAAICx
IABXAEgARQBOACAAQwBPAE4AVgBFAFIAVAAoAFYAQQBSAEMASABBAFIAKAA4ACkALAB6dh915WXY
TiwAMQAxADIAKQAgACEAPQAgAEMATwBOAFYARQBSAFQAKABWAEEAUgBDAEgAQQBSACgAOAApACwA
RABBAFQARQBBAEQARAAoAEQAQQBZACwALQAxACwARwBFAFQARABBAFQARQAoACkAKQAsADEAMQAy
ACkAIAABQyAARgBSAE8ATQAgAFQAXwBEAEEAWQBfAFQARQBOAEsAQQBOAF8ASQBEAE8AXwBEAEEA
VABBAF8AVABFAE0AUAA7AAAXenYfdeVlkjCTlVWQSDB+MFcwXzACMAGAiSAAVwBIAEUATgAgAEMA
TwBOAFYARQBSAFQAKABEAEEAVABFACwAl16Tlft51VLlZSkAIAA+ACAAQwBPAE4AVgBFAFIAVAAo
AEQAQQBUAEUALABEAEEAVABFAEEARABEACgARABBAFkALAAtADEALABHAEUAVABEAEEAVABFACgA
KQApACkAIAABWSAAVABIAEUATgAgACcAVABSAFUARQAnACAARQBMAFMARQAgACcARgBBAEwAUwBF
ACcAIABFAE4ARAAgAEEAUwAgAEQARQBMAF8AUgBFAEMATwBSAEQAIAABMccw/DC/MGswBlxlZ24w
l16Tlft51VIdT2h55WVMMFhbKFdVMIwwZjBEMH4wWTACMAFDSQBOAFMARQBSAFQAIABJAE4AVABP
ACAASwBBAE4AUwBIAEkAXwBQAEEAQwBLAEEARwBFAF8ARQBSAFIATwBSACAAAEsgACgA0TDDMLEw
/DC4MLMw/DDJMCwAxzD8ML8w5WXYTiwAqDDpMPww5WVCZiwAqDDpMPwwhVG5WywAqDDpMPww1TDp
MLAwKQAgAAEVIABWAEEATABVAEUAUwAoACcARwABI1UAcwBlAHIAOgA6AHAAYQBjAGsAYQBnAGUA
QwBvAGQAZQAABycALAAnAAEjVQBzAGUAcgA6ADoAYwB1AHIAcgBlAG4AdABEAGEAdABlAAAbVQBz
AGUAcgA6ADoAcwB5AHMARABhAHQAZQAAFycALAAnALcwuTDGMOAwqDDpMPwwOgABAycAAQMtAAEP
JwAsACcAMwAnACkAOwABFUQARQBMAF8AUgBFAEMATwBSAEQAAAlUAFIAVQBFAAAJewAwAH0AIAAA
AwIwASEgAFQAUgBVAE4AQwBBAFQARQAgAFQAQQBCAEwARQAgAAAfVQBzAGUAcgA6ADoAYwBoAGUA
YwBrAFQAeQBwAGUAAAtfAFQARQBNAFAAAAAAvayOKI3AO0mc+t8QXkn6mQAIt3pcVhk04IkIiYRd
zYCAzJEDBhIVAwYSGQMgAAEEAAASFQQAABIZBQABARIZBAgAEhUECAASGQMGEgwEAAASDAQIABIM
CCADARIdEiEOByACEh0OEiEGIAIBDhIhBSABARIhAgYIAwYRFAQAAAAABAEAAAAEIAEBDgQgAQEI
BgABElkRXQQgABJhBiACAQ4SYQQHARIVBSABARFpCAEAAgAAAAAAAwAAAQQgABJ1BCAAEnkFIAES
fRwDIAAcAyAADgUgABKAgQYgARKAgQ4FIAASgIUDIAAIBSACDg4OBQABDh0ODwcGDhIhEoCBEh0S
gJEdDgIGDgYgARKAlQgEIAEcDgUAAgIODgQgAB0cByACEoCBDhwEIAASHQUgABKAmQYgAQESgJUG
AAMODg4OBQACDg4OBSABARIdGAcLEoCBEoCBEoCVDggICAgSgJ0SgJEdDgYgAQERgK0GIAEBEoCl
BSABCBIdDQcEEh0SgKUSgLESgJEIBwISgKUSgJEFIAARgL0FBwESgJFHAQAaLk5FVEZyYW1ld29y
ayxWZXJzaW9uPXY0LjABAFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1lEC5ORVQgRnJhbWV3b3JrIDQo
AQAjU1RfY2UzZmZjMDkwNTA1NDVhNTg4NzUwYjUwZjIxYzE3ODgAAAUBAAAAABYBABFDb3B5cmln
aHQgQCAgMjAxNgAACAEACAAAAAAAHgEAAQBUAhZXcmFwTm9uRXhjZXB0aW9uVGhyb3dzAQAEUAAA
AAAAAAAAAAAeUAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEFAAAAAAAAAAAAAAAABfQ29yRGxs
TWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAQAAAAGAAAgAAA
AAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAAAFhgAACwAwAAAAAA
AAAAAACwAzQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAAvQTv/gAAAQAAAAEA
tYbdGAAAAQC1ht0YPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAABAFYAYQByAEYAaQBs
AGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAAAAAAALAEEAMAAAEA
UwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAA7AIAAAEAMAAwADAAMAAwADQAYgAwAAAAcAAk
AAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAAAFMAVABfAGMAZQAzAGYAZgBjADAA
OQAwADUAMAA1ADQANQBhADUAOAA4ADcANQAwAGIANQAwAGYAMgAxAGMAMQA3ADgAOAAAAEAADwAB
AEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgA2ADMANgA1AC4AMwA0ADQAOAA1AAAA
AABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMAVABfADEAYwA0ADQAZQAzADkANwBl
ADQAMwBjADQAZAA3AGUAOQA3ADUAZQBiAGYAMAA3ADEAMwBkADIAZABlADcAYgAuAGQAbABsAAAA
SAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBvAHAAeQByAGkAZwBoAHQAIABA
ACAAIAAyADAAMQA2AAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBhAG0AZQAAAFMA
VABfADEAYwA0ADQAZQAzADkANwBlADQAMwBjADQAZAA3AGUAOQA3ADUAZQBiAGYAMAA3ADEAMwBk
ADIAZABlADcAYgAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEAbQBlAAAAAABTAFQA
XwBjAGUAMwBmAGYAYwAwADkAMAA1ADAANQA0ADUAYQA1ADgAOAA3ADUAMABiADUAMABmADIAMQBj
ADEANwA4ADgAAABEAA8AAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADYA
MwA2ADUALgAzADQANAA4ADUAAAAAAEgADwABAEEAcwBzAGUAbQBiAGwAeQAgAFYAZQByAHMAaQBv
AG4AAAAxAC4AMAAuADYAMwA2ADUALgAzADQANAA4ADUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABQAAAMAAAAMDAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\方向性を与えます"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:Description="Script Task"
      DTS:DTSID="{B44D982A-5E7B-477B-A729-A011C90171ED}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="方向性を与えます"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_ba310f48a7c74f9482b2fd9a02ba5e22"
          VSTAMajorVersion="3"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadOnlyVariables="User::checkType">
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_ba310f48a7c74f9482b2fd9a02ba5e22")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_ba310f48a7c74f9482b2fd9a02ba5e22")]
[assembly: AssemblyCopyright("Copyright @  2016")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="ST_ba310f48a7c74f9482b2fd9a02ba5e22.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{76f174ac-814c-4173-9b06-d41b45ce815e}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_ba310f48a7c74f9482b2fd9a02ba5e22</RootNamespace>
    <AssemblyName>ST_ba310f48a7c74f9482b2fd9a02ba5e22</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>

  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>

  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
         <Generator>ResXFileCodeGenerator</Generator>
         <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
             <AutoGen>True</AutoGen>
         <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
         <Generator>SettingsSingleFileGenerator</Generator>
         <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
         <AutoGen>True</AutoGen>
         <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
         <SubType>Code</SubType>
    </Compile>
  </ItemGroup>

  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />

  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptTask"
                           HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}"
                           ApplicationType="usd"
                           Language="cs"
                           TemplatesPath=""
                           DebugInfoExeName="#HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\VisualStudio\10.0\InstallDir#\devenv.exe"
                           DebugInfoCommandLine=""
                           DebugInfoWorkingDir=""
                           IconImageList=""/>
        <Host Name="ScriptTask" GeneratedNamespace="$safeprojectname" IconIndex="">
        </Host>
        <ProjectClient>
            <HostIdentifier>SSIS_ST120</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[#region Namespaces

#endregion

namespace ST_ba310f48a7c74f9482b2fd9a02ba5e22
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
		/// <summary>
        /// 作成者：イルファンマンスリー
        /// 説明：Nothing Doint this Object, it will just Give the Decision making flow
        /// for next other Checks on ARROW to other Objects. 'Expression & Constraints' is used on Arrow.
        /// </summary>
		public void Main()
		{
            if (string.IsNullOrEmpty(Dts.Variables["User::checkType"].Value.ToString()))
            {
                //If Decision maker variable is NULL or EMPTY then Set Package as ERROR.
                Dts.TaskResult = (int)ScriptResults.Failure;
            }
            else
            {
                //If decision maker variable is not Blank then make it as success, its arrow will make further decision.
                Dts.TaskResult = (int)ScriptResults.Success;
            }
		}

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>ST_ba310f48a7c74f9482b2fd9a02ba5e22</msb:CodeName>
		<msb:DisplayName>ST_ba310f48a7c74f9482b2fd9a02ba5e22</msb:DisplayName>
		<msb:ProjectId>{2502EC95-0DA0-4866-81B9-819BAC4CE205}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_ba310f48a7c74f9482b2fd9a02ba5e22.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_ba310f48a7c74f9482b2fd9a02ba5e22.Properties.Settings.get_Default():ST_ba310f48a7c74f9482b2fd9a02ba5e22.Properties.Sett" +
    "ings")]

namespace ST_ba310f48a7c74f9482b2fd9a02ba5e22.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_ba310f48a7c74f9482b2fd9a02ba5e22.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_ba310f48a7c74f9482b2fd9a02ba5e22.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_ba310f48a7c74f9482b2fd9a02ba5e22.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_ba310f48a7c74f9482b2fd9a02ba5e22.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_ba310f48a7c74f9482b2fd9a02ba5e22.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_ba310f48a7c74f9482b2fd9a02ba5e22.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAKPSv1cAAAAAAAAAAOAAAiELAQsAABAAAAAIAAAAAAAAHi4A
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAMQtAABXAAAAAEAAAAgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAJA4AAAAgAAAAEAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAAgEAAAAQAAAAAYAAAASAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAGAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAAA
LgAAAAAAAEgAAAACAAUAyCEAAPwLAAABAAAAAAAAABAhAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKA4AAAoqEzACAC0AAAABAAARfgEAAAQtIHIBAABw0AIA
AAIoDwAACm8QAAAKcxEAAAoKBoABAAAEfgEAAAQqGn4CAAAEKh4CgAIAAAQqGn4DAAAEKi5zBgAA
BoADAAAEKh4CKBQAAAoqAAMwAgBAAAAAAAAAAAIoFgAACm8XAAAKcnMAAHBvGAAACm8ZAAAKbxoA
AAooGwAACiwNAigWAAAKF28cAAAKKgIoFgAAChZvHAAACioeAigdAAAKKrQAAADOyu++AQAAAJEA
AABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNpb249NC4w
LjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5
c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFEULQAAABC
U0pCAQABAAAAAAAMAAAAdjQuMC4zMDMxOQAAAAAFAGwAAADIAwAAI34AADQEAADEBQAAI1N0cmlu
Z3MAAAAA+AkAAJQAAAAjVVMAjAoAABAAAAAjR1VJRAAAAJwKAABgAQAAI0Jsb2IAAAAAAAAAAgAA
AVcdogEJAwAAAPolMwAWAAABAAAAHgAAAAUAAAAGAAAACQAAAAEAAAAdAAAAAgAAAA8AAAABAAAA
AgAAAAMAAAAEAAAAAQAAAAQAAAABAAAAAQAAAAAACgABAAAAAAAGAMEAugAKAN0AyAAOAD0BFAEG
AFkBugAGAG8BXgEGAKABiwEGAFcCPQIGAIICcAIGAJkCcAIGALYCcAIGANUCcAIGAO4CcAIGAAcD
cAIGACIDcAIGAD0DcAIGAFYDcAIGAI8DbwMGAK8DbwMGAOADzQMGAP0DugAGAAIEugAGACYEcAIK
AFIEPAQKAGsEPAQGAIAEbwMOAKIEFAEOAMQEFAESAB0F/QQSADUF/QQGAFoFugAAAAAAAQAAAAAA
AQABAAAAEAAyADwABQABAAEAAAEQAGsAPAAJAAMABQABABAAdAB/AA0ABAAIAAMBAACjAAAAEQAE
AAoAEQB/ARMAEQCsARcAEQD2ATkABgYfAkcAVoAnAkoAVoAvAkoAUCAAAAAAgxi8ARsAAQBYIAAA
AACTCMIBHwABAJEgAAAAAJMI1gEkAAEAmCAAAAAAkwjiASkAAQCgIAAAAACWCAYCPQACALMgAAAA
AIYYvAEbAAIApyAAAAAAkRibBIkAAgC8IAAAAACGABoCGwACAAghAAAAAIYYvAEbAAIAAAABADcC
OQC8AVgAQQC8AVgASQC8AVgAUQC8AVgAWQC8AVgAYQC8AVgAaQC8AVgAcQC8AVgAeQC8AVgAgQC8
AVgAiQC8AV0AkQC8ARsAmQC8ARsACQC8ARsAoQAUBGIAoQAvBGkAKQC8AW4AuQC8AXoAyQC8ARsA
EQC8ARsA0QC8ARsAGQDWBI0A2QAnBZIA4QA+BZcA6QBHBZ0ACQBRBaEA8QBhBaUA2QBvBV0AGQC8
ARsACAAUAE4ACAAYAFMAKQCTAIAALgAbABsBLgAjABsBLgBjAEEBLgALAKoALgATAPIALgAzAPIA
LgArABsBLgA7ACEBLgBDABsBLgBbADgBQwBrAFMASQCTAIAAYQCbAFMAgwCrAFMAdQACAAEAAwAD
AAAAbwEvAAAA7gE0AAAAEgJCAAIAAgADAAIAAwAFAAEABAAFAAIABQAHAASAAAABAAAAwhdZZQAA
AAAAAH8AAAAEAAAAAAAAAAAAAAABALEAAAAAAAQAAAAAAAAAAAAAAAEAugAAAAAADAAAAAAAAAAA
AAAACgD1AAAAAAAMAAAAAAAAAAAAAAAKAN4EAAAAAAAAAAABAAAAfgUAAAUABAAAAAA8TW9kdWxl
PgBTVF9iYTMxMGY0OGE3Yzc0Zjk0ODJiMmZkOWEwMmJhNWUyMi5kbGwAUmVzb3VyY2VzAFNUX2Jh
MzEwZjQ4YTdjNzRmOTQ4MmIyZmQ5YTAyYmE1ZTIyLlByb3BlcnRpZXMAU2V0dGluZ3MAU2NyaXB0
TWFpbgBTVF9iYTMxMGY0OGE3Yzc0Zjk0ODJiMmZkOWEwMmJhNWUyMgBTY3JpcHRSZXN1bHRzAG1z
Y29ybGliAFN5c3RlbQBPYmplY3QAU3lzdGVtLkNvbmZpZ3VyYXRpb24AQXBwbGljYXRpb25TZXR0
aW5nc0Jhc2UATWljcm9zb2Z0LlNxbFNlcnZlci5TY3JpcHRUYXNrAE1pY3Jvc29mdC5TcWxTZXJ2
ZXIuRHRzLlRhc2tzLlNjcmlwdFRhc2sAVlNUQVJUU2NyaXB0T2JqZWN0TW9kZWxCYXNlAEVudW0A
U3lzdGVtLlJlc291cmNlcwBSZXNvdXJjZU1hbmFnZXIAcmVzb3VyY2VNYW4AU3lzdGVtLkdsb2Jh
bGl6YXRpb24AQ3VsdHVyZUluZm8AcmVzb3VyY2VDdWx0dXJlAC5jdG9yAGdldF9SZXNvdXJjZU1h
bmFnZXIAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAQ3VsdHVyZQBkZWZhdWx0SW5zdGFuY2UAZ2V0
X0RlZmF1bHQARGVmYXVsdABNYWluAHZhbHVlX18AU3VjY2VzcwBGYWlsdXJlAHZhbHVlAFN5c3Rl
bS5SdW50aW1lLlZlcnNpb25pbmcAVGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRlAFN5c3RlbS5SZWZs
ZWN0aW9uAEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0
ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRl
AEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBBc3Nl
bWJseVRyYWRlbWFya0F0dHJpYnV0ZQBBc3NlbWJseUN1bHR1cmVBdHRyaWJ1dGUAQXNzZW1ibHlW
ZXJzaW9uQXR0cmlidXRlAFN5c3RlbS5SdW50aW1lLkNvbXBpbGVyU2VydmljZXMAQ29tcGlsYXRp
b25SZWxheGF0aW9uc0F0dHJpYnV0ZQBSdW50aW1lQ29tcGF0aWJpbGl0eUF0dHJpYnV0ZQBTeXN0
ZW0uRGlhZ25vc3RpY3MARGVidWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBUeXBlAFJ1bnRpbWVU
eXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAEFzc2VtYmx5AGdldF9Bc3NlbWJseQBTeXN0ZW0u
Q29tcG9uZW50TW9kZWwARWRpdG9yQnJvd3NhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZVN0
YXRlAENvbXBpbGVyR2VuZXJhdGVkQXR0cmlidXRlAC5jY3RvcgBTU0lTU2NyaXB0VGFza0VudHJ5
UG9pbnRBdHRyaWJ1dGUAU2NyaXB0T2JqZWN0TW9kZWwAZ2V0X0R0cwBNaWNyb3NvZnQuU3FsU2Vy
dmVyLk1hbmFnZWREVFMATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUnVudGltZQBWYXJpYWJsZXMA
Z2V0X1ZhcmlhYmxlcwBWYXJpYWJsZQBnZXRfSXRlbQBnZXRfVmFsdWUAVG9TdHJpbmcAU3RyaW5n
AElzTnVsbE9yRW1wdHkAc2V0X1Rhc2tSZXN1bHQAU1RfYmEzMTBmNDhhN2M3NGY5NDgyYjJmZDlh
MDJiYTVlMjIuUHJvcGVydGllcy5SZXNvdXJjZXMucmVzb3VyY2VzAAAAAABxUwBUAF8AYgBhADMA
MQAwAGYANAA4AGEANwBjADcANABmADkANAA4ADIAYgAyAGYAZAA5AGEAMAAyAGIAYQA1AGUAMgAy
AC4AUAByAG8AcABlAHIAdABpAGUAcwAuAFIAZQBzAG8AdQByAGMAZQBzAAAfVQBzAGUAcgA6ADoA
YwBoAGUAYwBrAFQAeQBwAGUAAABXGngxLFPZRKfNkMCUuAdOAAi3elxWGTTgiQiJhF3NgIDMkQMG
EhUDBhIZAyAAAQQAABIVBAAAEhkFAAEBEhkECAASFQQIABIZAwYSDAQAABIMBAgAEgwCBggDBhEU
BAAAAAAEAQAAAAQgAQEOBCABAQgGAAESURFVBCAAElkGIAIBDhJZBAcBEhUFIAEBEWEIAQACAAAA
AAADAAABBCAAEm0EIAAScQUgARJ1HAMgABwDIAAOBAABAg5HAQAaLk5FVEZyYW1ld29yayxWZXJz
aW9uPXY0LjABAFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1lEC5ORVQgRnJhbWV3b3JrIDQoAQAjU1Rf
YmEzMTBmNDhhN2M3NGY5NDgyYjJmZDlhMDJiYTVlMjIAAAUBAAAAABYBABFDb3B5cmlnaHQgQCAg
MjAxNgAACAEACAAAAAAAHgEAAQBUAhZXcmFwTm9uRXhjZXB0aW9uVGhyb3dzAewtAAAAAAAAAAAA
AA4uAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALgAAAAAAAAAAAAAAAAAAAAAAAAAAX0NvckRs
bE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAA
AABIAAAAWEAAALADAAAAAAAAAAAAALADNAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBP
AAAAAAC9BO/+AAABAAAAAQBZZcIXAAABAFllwhc/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAA
RAAAAAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBv
AG4AAAAAAAAAsAQQAwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAADsAgAAAQAwADAA
MAAwADAANABiADAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBU
AF8AYgBhADMAMQAwAGYANAA4AGEANwBjADcANABmADkANAA4ADIAYgAyAGYAZAA5AGEAMAAyAGIA
YQA1AGUAMgAyAAAAQAAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADYAMAA4
ADIALgAyADUAOQA0ADUAAAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBUAF8A
YgBhADMAMQAwAGYANAA4AGEANwBjADcANABmADkANAA4ADIAYgAyAGYAZAA5AGEAMAAyAGIAYQA1
AGUAMgAyAC4AZABsAGwAAABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8A
cAB5AHIAaQBnAGgAdAAgAEAAIAAgADIAMAAxADYAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBp
AGwAZQBuAGEAbQBlAAAAUwBUAF8AYgBhADMAMQAwAGYANAA4AGEANwBjADcANABmADkANAA4ADIA
YgAyAGYAZAA5AGEAMAAyAGIAYQA1AGUAMgAyAC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0
AE4AYQBtAGUAAAAAAFMAVABfAGIAYQAzADEAMABmADQAOABhADcAYwA3ADQAZgA5ADQAOAAyAGIA
MgBmAGQAOQBhADAAMgBiAGEANQBlADIAMgAAAEQADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBp
AG8AbgAAADEALgAwAC4ANgAwADgAMgAuADIANQA5ADQANQAAAAAASAAPAAEAQQBzAHMAZQBtAGIA
bAB5ACAAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4ANgAwADgAMgAuADIANQA5ADQANQAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAwAAAAgPgAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\棚卸伝票明細"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:Description="Script Task"
      DTS:DTSID="{370677B6-02A6-4A9D-93C5-971D227F0741}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="棚卸伝票明細"
      DTS:ThreadHint="14">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_c958390832934113939e6f6bb073bb6d"
          VSTAMajorVersion="3"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadOnlyVariables="User::checkType,User::connectionString,User::currentDate,User::packageCode,User::sysDate">
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_ce3ffc09050545a588750b50f21c1788.Properties.Settings.get_Default():ST_ce3ffc09050545a588750b50f21c1788.Properties.Sett" +
    "ings")]

namespace ST_ce3ffc09050545a588750b50f21c1788.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[
#region Namespaces
using System;
using System.Data;
using System.Data.SqlClient;
using System.Text;
#endregion

namespace ST_ce3ffc09050545a588750b50f21c1788
{
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
    {
        #region "Main Method"
        /// <summary>
        /// 作成者：イルファン　マンスリー
        /// 説明：仕入実績の業務データチェックする。
        /// 作成日：２０１６年０８月０８日
        /// </summary>
        public void Main()
		{
            string strConnection = Dts.Variables["User::connectionString"].Value.ToString();
            SqlConnection myConnection = new SqlConnection(strConnection);
            StringBuilder strERRQuery = new StringBuilder();
            DataTable dtFaultyTemp;
            try
            { 
                dtFaultyTemp = new DataTable();
                _connectionOpen(myConnection);
                #region "Check for 伝票頭一桁 Check"
                //Get All The Records of Temp TABLE, with New Column DEL_RECORD as Flag.
                //Faulty Records will have DEL_RECORD as 'TRUE'
                strERRQuery.Clear();
                strERRQuery.Append(" SELECT *,CASE WHEN SUBSTRING(棚卸伝票番号,1,1) != '6' ");
                strERRQuery.Append(" THEN 'TRUE' ELSE 'FALSE' ");
                strERRQuery.Append(" END AS DEL_RECORD ");
                strERRQuery.Append(" FROM D_TANAOROSHI_DENPYOU_MEISAI_TEMP; ");
                dtFaultyTemp.Reset();
                dtFaultyTemp = _getDataTable(strERRQuery.ToString(), myConnection);
                if (dtFaultyTemp.Rows.Count > 0)
                {
                    _replaceData(dtFaultyTemp, myConnection, "棚卸伝票の先頭桁を間違えました。");   //Replace & Remove Data in Actual Db Table
                }
                #endregion

                #region "Check for 棚卸伝票番号,棚卸伝票明細番号(PK) Check"
                strERRQuery.Clear();
                strERRQuery.Append(" SELECT TEMP.*, ");
                strERRQuery.Append(" CASE WHEN TEMP.棚卸伝票番号 = MAIN.棚卸伝票番号 ");
                strERRQuery.Append(" AND TEMP.棚卸伝票明細番号 = MAIN.棚卸伝票明細番号 ");
                strERRQuery.Append(" THEN 'TRUE' ELSE 'FALSE' ");
                strERRQuery.Append(" END AS DEL_RECORD ");
                strERRQuery.Append(" FROM D_TANAOROSHI_DENPYOU_MEISAI_TEMP AS TEMP ");
                strERRQuery.Append(" LEFT JOIN D_TANAOROSHI_DENPYOU_MEISAI AS MAIN ");
                strERRQuery.Append(" ON TEMP.棚卸伝票番号 = MAIN.棚卸伝票番号 ");
                strERRQuery.Append(" AND TEMP.棚卸伝票明細番号 = MAIN.棚卸伝票明細番号; ");
                dtFaultyTemp.Reset();
                dtFaultyTemp = _getDataTable(strERRQuery.ToString(), myConnection);
                if (dtFaultyTemp.Rows.Count > 0)
                {
                    _replaceData(dtFaultyTemp, myConnection, "棚卸伝票番号・棚卸伝票明細番号が既に取込済みです。");   //Replace & Remove Data in Actual Db Table
                }
                #endregion

                #region "Check for 締日 Check"
                //Get All The Records of Temp TABLE, with New Column DEL_RECORD as Flag.
                //Faulty Records will have DEL_RECORD as 'TRUE'
                strERRQuery.Clear();
                strERRQuery.Append(" SELECT *,CASE ");
                strERRQuery.Append(" WHEN CAST(CONVERT(VARCHAR(10),棚卸伝票日付,121) AS DATE) <= (SELECT MAX(月度終了日) FROM M_DENPYOU_SIME_MASTER WHERE 月度締日 IS NOT NULL) ");
                strERRQuery.Append(" THEN 'TRUE' ELSE 'FALSE' ");
                strERRQuery.Append(" END AS DEL_RECORD ");
                strERRQuery.Append(" FROM D_TANAOROSHI_DENPYOU_MEISAI_TEMP; ");
                dtFaultyTemp.Reset();
                dtFaultyTemp = _getDataTable(strERRQuery.ToString(), myConnection);
                if (dtFaultyTemp.Rows.Count > 0)
                {
                    _replaceData(dtFaultyTemp, myConnection, "月度締めました。締め日前の棚卸伝票日があります。");   //Replace & Remove Data in Actual Db Table
                }
                #endregion

                #region "Check for 棚卸確定日 Check"
                //Get All The Records of Temp TABLE, with New Column DEL_RECORD as Flag.
                //Faulty Records will have DEL_RECORD as 'TRUE'
                strERRQuery.Clear();
                strERRQuery.Append(" SELECT TANAD.*, CASE ");
                strERRQuery.Append(" WHEN TANAD.棚卸伝票日付 < TANA.棚卸日付 ");
                strERRQuery.Append(" THEN 'TRUE' ELSE 'FALSE' ");
                strERRQuery.Append(" END AS DEL_RECORD ");
                strERRQuery.Append(" FROM D_TANAOROSHI_DENPYOU_MEISAI_TEMP AS TANAD ");
                strERRQuery.Append(" LEFT JOIN M_TANAOROSHI_MASTER TANA ");
                strERRQuery.Append(" ON TANAD.店舗コード = TANA.店舗コード ");
                strERRQuery.Append(" AND TANA.棚卸確定日 != '1900-01-01';");
                dtFaultyTemp.Reset();
                dtFaultyTemp = _getDataTable(strERRQuery.ToString(), myConnection);
                if (dtFaultyTemp.Rows.Count > 0)
                {
                    _replaceData(dtFaultyTemp, myConnection, "棚卸確定日前の店間移動実績日があります。");   //Replace & Remove Data in Actual Db Table
                }
                #endregion

                #region "Check for 仕入条件 & 買取受託 Check"
                //Get All The Records of Temp TABLE, with New Column DEL_RECORD as Flag.
                //Faulty Records will have DEL_RECORD as 'TRUE'
                strERRQuery.Clear();
                strERRQuery.Append(" SELECT TANA.*, CASE WHEN JOKEN.仕入条件 = TANA.買取受託 ");
                strERRQuery.Append(" THEN 'FALSE' ELSE 'TRUE' END AS DEL_RECORD ");
                strERRQuery.Append(" FROM D_TANAOROSHI_DENPYOU_MEISAI_TEMP AS TANA ");
                strERRQuery.Append(" LEFT JOIN (SELECT MST.ＳＫＵコード AS ＳＫＵコード,JR.有効開始日,JR.有効終了日, JR.仕入条件 ");
                strERRQuery.Append(" FROM M_SHIIRE_JOUKEN_RIREKI JR LEFT JOIN M_SHOUHIN_DATA MST ");
                strERRQuery.Append(" ON JR.商品コード = MST.商品コード) AS JOKEN ");
                strERRQuery.Append(" ON JOKEN.ＳＫＵコード = TANA.ＳＫＵコード AND ");
                strERRQuery.Append(" TANA.棚卸伝票日付 BETWEEN JOKEN.有効開始日 AND JOKEN.有効終了日; ");
                dtFaultyTemp.Reset();
                dtFaultyTemp = _getDataTable(strERRQuery.ToString(), myConnection);
                if (dtFaultyTemp.Rows.Count > 0)
                {
                    _replaceData(dtFaultyTemp, myConnection, "棚卸日と有効開始日の組み合わせを間違えました。");   //Replace & Remove Data in Actual Db Table
                }
                #endregion

                #region "Check for F.K（仕入先コード、ＳＫＵコード、店舗コード） Check"
                //Get All The Records of Temp TABLE, with New Column DEL_RECORD as Flag.
                //Faulty Records will have DEL_RECORD as 'TRUE'
                strERRQuery.Clear();
                strERRQuery.Append(" SELECT TEMP.*, CASE ");
                strERRQuery.Append(" WHEN SHOHIN.SKUコード IS NULL OR TENPO.店舗コード IS NULL ");
                strERRQuery.Append(" THEN 'TRUE' ELSE 'FALSE' ");
                strERRQuery.Append(" END AS DEL_RECORD ");
                strERRQuery.Append(" FROM D_TANAOROSHI_DENPYOU_MEISAI_TEMP AS TEMP ");
                strERRQuery.Append(" LEFT JOIN M_SHOUHIN_DATA AS SHOHIN ");
                strERRQuery.Append(" ON TEMP.SKUコード = SHOHIN.ＳＫＵコード ");
                strERRQuery.Append(" LEFT JOIN M_TENPO_MASTER AS TENPO ");
                strERRQuery.Append(" ON TEMP.店舗コード = TENPO.店舗コード;");
                dtFaultyTemp.Reset();
                dtFaultyTemp = _getDataTable(strERRQuery.ToString(), myConnection);
                if (dtFaultyTemp.Rows.Count > 0)
                {
                    _replaceData(dtFaultyTemp, myConnection, "仕入先コード、ＳＫＵコードまたは店舗コードはマスタに存在されていません。");   //Replace & Remove Data in Actual Db Table
                }
                #endregion

                #region "伝票日付 Should not be bigger than Y-Day"
                //Get All The Records of Temp TABLE, with New Column DEL_RECORD as Flag.
                //Faulty Records will have DEL_RECORD as 'TRUE'
                strERRQuery.Clear();
                strERRQuery.Append(" SELECT *,CASE ");
                strERRQuery.Append(" WHEN CONVERT(DATE,棚卸伝票日付) > CONVERT(DATE,DATEADD(DAY,-1,GETDATE())) ");
                strERRQuery.Append(" THEN 'TRUE' ELSE 'FALSE' END AS DEL_RECORD ");
                strERRQuery.Append(" FROM D_TANAOROSHI_DENPYOU_MEISAI_TEMP;");
                dtFaultyTemp.Reset();
                dtFaultyTemp = _getDataTable(strERRQuery.ToString(), myConnection);
                if (dtFaultyTemp.Rows.Count > 0)
                {
                    _replaceData(dtFaultyTemp, myConnection, "データに将来の棚卸伝票日が存在されています。");   //Replace & Remove Data in Actual Db Table
                }
                #endregion
                Dts.TaskResult = (int)ScriptResults.Success;
            }
            #region Catch/Finally
            catch (Exception ex)
            {
                strERRQuery.Clear();
                strERRQuery.Append("INSERT INTO KANSHI_PACKAGE_ERROR ");
                strERRQuery.Append(" (パッケージコード,データ日付,エラー日時,エラー内容,エラーフラグ) ");
                strERRQuery.Append(" VALUES('G" + Dts.Variables["User::packageCode"].Value.ToString() + "','" + Dts.Variables["User::currentDate"].Value.ToString() + "','" + Dts.Variables["User::sysDate"].Value.ToString() + "','システムエラー:" + ex.Message.ToString().Replace("'", "-") + "','3');");
                _updateInsert(strERRQuery.ToString(), myConnection);
                Dts.TaskResult = (int)ScriptResults.Success;
            }
            finally 
            {
                _connectionClose(myConnection);
                dtFaultyTemp = null;
                strERRQuery = null;
                myConnection = null;
            }
            #endregion
		}
        #endregion

        #region "replace Data"
        //Data Replacement in Actual DB After Test
        private void _replaceData(DataTable dtFaultyTemp, SqlConnection myConnection, string strErrorMsg)
        {
            StringBuilder strERRQuery = new StringBuilder();
            StringBuilder strBuildRow = new StringBuilder();
            DataRow drTemp;
            string strPackageCode = string.Empty;
            int intErrorCount = 0;  //To Count Errors in the DataTable, to avoid its extra TRUNCATION and BULK.
            try
            {
                _connectionOpen(myConnection);
                strPackageCode = Dts.Variables["User::packageCode"].Value.ToString();
                intErrorCount = 0;
                int countRows = dtFaultyTemp.Rows.Count;
                for (int intI = 0; intI < countRows; intI++)
                {
                    #region Report Faulty Records
                    if (dtFaultyTemp.Rows[intI]["DEL_RECORD"].ToString().ToUpper() == "TRUE")
                    {
                        intErrorCount = intErrorCount + 1;
                        //'TRUE' means Faulty SKU Record
                        drTemp = dtFaultyTemp.Rows[intI];
                        strBuildRow.Clear();
                        for (int intJ = 0; intJ < drTemp.Table.Columns.Count-1; intJ++)
                        {
                            strBuildRow.AppendFormat("{0} ", drTemp.ItemArray[intJ]);
                        }
                        strERRQuery.Clear();
                        strERRQuery.Append("INSERT INTO KANSHI_PACKAGE_ERROR ");
                        strERRQuery.Append(" (パッケージコード,データ日付,エラー日時,エラー内容,エラーフラグ) ");
                        strERRQuery.Append(" VALUES('G" + strPackageCode + "','" + Dts.Variables["User::currentDate"].Value.ToString() + "','" + Dts.Variables["User::sysDate"].Value.ToString() + "','" + strBuildRow.ToString() + "。" + strErrorMsg + "','3');");
                        _updateInsert(strERRQuery.ToString(), myConnection);
                        countRows = countRows - 1;
                        intI = intI - 1;
                        dtFaultyTemp.Rows.Remove(drTemp);   //Remove Faulty Records from DataTable Object.
                        dtFaultyTemp.AcceptChanges();    //Commit DataTable Changes.
                    }
                    #endregion
                }
                dtFaultyTemp.Columns.Remove("DEL_RECORD");
                if (intErrorCount > 0)
                {
                    #region "TRUNCATE TEMP Table"
                    //TRUNCATE TEMP Table, to be import New Correct Records
                    strERRQuery.Clear();
                    strERRQuery.Append(" TRUNCATE TABLE " + Dts.Variables["User::checkType"].Value.ToString() + "_TEMP");
                    _updateInsert(strERRQuery.ToString(), myConnection);
                    #endregion
                    #region "Bulk Update Records"
                    //正しいデータテーブルからインポートするためいに。
                    using (SqlBulkCopy bulkCopy = new SqlBulkCopy(myConnection))
                    {
                        bulkCopy.DestinationTableName = Dts.Variables["User::checkType"].Value.ToString() + "_TEMP";   //Assign table name
                        _connectionOpen(myConnection);
                        bulkCopy.BulkCopyTimeout = 600; //Default Timeut 30 Change to 600. in seconds
                        bulkCopy.WriteToServer(dtFaultyTemp);   //Write into Actual table.
                    }
                    #endregion
                }
            }
            #region Catch/Finally
            catch (Exception ex) 
            {
                throw ex;
            }
            finally
            {
                strERRQuery = null;
                dtFaultyTemp = null;
                strBuildRow = null;
                drTemp = null;
                strErrorMsg = null;
            }
            #endregion
        }
        #endregion

        #region "Get DataTable"
        //Created On: 08-08-2016
        //Description: Aim to Return DataTable from the Query.
        public DataTable _getDataTable(string strQuery, SqlConnection myConnection)
        {
            StringBuilder strERRQuery = new StringBuilder();
            DataTable objDT = new DataTable();
            SqlCommand myCommand;
            SqlDataAdapter sqlSelectData;
            try
            {
                _connectionOpen(myConnection);
                myCommand = new SqlCommand(strQuery, myConnection);
                myCommand.CommandType = CommandType.Text;
                sqlSelectData = new SqlDataAdapter();
                sqlSelectData.SelectCommand = myCommand;
                myCommand.CommandTimeout = 600; //Increases Query execution timeout.
                sqlSelectData.Fill(objDT);
            }
            #region CATCH/FINALLY
            catch (Exception ex)
            {
                throw ex;
            }
            finally
            {
                strQuery = null;
                myCommand = null;
                sqlSelectData = null;
                strERRQuery = null;
            }
            #endregion
            return objDT;
        }
        #endregion

        #region "Update/Insert Query in Db"
        protected void _updateInsert(string strQuery, SqlConnection myConnection)
        {
            StringBuilder strERRQuery = new StringBuilder();
            SqlCommand myCommand;
            try
            {
                myCommand = new SqlCommand(strQuery, myConnection);
                _connectionOpen(myConnection);
                myCommand.ExecuteNonQuery();
            }
            #region CATCH/FINALLY
            catch (Exception ex)
            {
                throw ex;
            }
            finally
            {
                strERRQuery = null;
                myConnection = null;
                myCommand = null;
            }
            #endregion
        }
        #endregion

        #region Connection Open
        private void _connectionOpen(SqlConnection myConnection)
        {
            try
            {
                if (myConnection.State != ConnectionState.Open)
                {
                    myConnection.Open();
                }
            }
            catch (Exception ex)
            {
                throw ex;
            }
        }
        #endregion

        #region Connection Close
        private void _connectionClose(SqlConnection myConnection)
        {
            try
            {
                if (myConnection.State != ConnectionState.Closed)
                {
                    myConnection.Close();
                }
            }
            catch (Exception ex)
            {
                throw ex;
            }
        }
        #endregion

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
          <ProjectItem
            Name="ST_c958390832934113939e6f6bb073bb6d.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?><Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003"><PropertyGroup><ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids><Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration><Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform><ProductVersion>8.0.30703</ProductVersion><SchemaVersion>2.0</SchemaVersion><ProjectGuid>{6f1cd3ad-124c-410c-a3da-0ed5e3468b82}</ProjectGuid><OutputType>Library</OutputType><AppDesignerFolder>Properties</AppDesignerFolder><RootNamespace>ST_ce3ffc09050545a588750b50f21c1788</RootNamespace><AssemblyName>ST_c958390832934113939e6f6bb073bb6d</AssemblyName><TargetFrameworkVersion>v4.0</TargetFrameworkVersion><FileAlignment>512</FileAlignment><ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Debug' "><DebugSymbols>true</DebugSymbols><DebugType>full</DebugType><Optimize>false</Optimize><OutputPath>.\bin\Debug\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>DEBUG;TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Release' "><DebugSymbols>false</DebugSymbols><Optimize>true</Optimize><OutputPath>.\bin\Release\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><ItemGroup><Reference Include="System" /><Reference Include="System.Data" /><Reference Include="System.Windows.Forms" /><Reference Include="System.Xml" /><Reference Include="Microsoft.SqlServer.ManagedDTS, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.ScriptTask, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /></ItemGroup><ItemGroup><AppDesigner Include="Properties\" /><Compile Include="Properties\AssemblyInfo.cs"><SubType>Code</SubType></Compile><EmbeddedResource Include="Properties\Resources.resx"><Generator>ResXFileCodeGenerator</Generator><LastGenOutput>Resources.Designer.cs</LastGenOutput></EmbeddedResource><Compile Include="Properties\Resources.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Resources.resx</DependentUpon></Compile><None Include="Properties\Settings.settings"><Generator>SettingsSingleFileGenerator</Generator><LastGenOutput>Settings.Designer.cs</LastGenOutput></None><Compile Include="Properties\Settings.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Settings.settings</DependentUpon></Compile><Compile Include="ScriptMain.cs"><SubType>Code</SubType></Compile></ItemGroup><!-- Include the build rules for a C# project.--><Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" /><ProjectExtensions><VisualStudio><FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}"><ProjectProperties HostName="ScriptTask" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="#HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\VisualStudio\10.0\InstallDir#\devenv.exe" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" /><Host Name="ScriptTask" GeneratedNamespace="$safeprojectname" IconIndex=""></Host><ProjectClient><HostIdentifier>SSIS_ST120</HostIdentifier></ProjectClient></FlavorProperties></VisualStudio></ProjectExtensions></Project>]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>ST_ce3ffc09050545a588750b50f21c1788</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>ST_ce3ffc09050545a588750b50f21c1788</msb:DisplayName>
		<msb:ProjectId>{EE24C7D7-5D12-4340-B8D9-E41721313B68}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_c958390832934113939e6f6bb073bb6d.csproj"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_ce3ffc09050545a588750b50f21c1788")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_ce3ffc09050545a588750b50f21c1788")]
[assembly: AssemblyCopyright("Copyright @  2016")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_ce3ffc09050545a588750b50f21c1788.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_ce3ffc09050545a588750b50f21c1788.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_ce3ffc09050545a588750b50f21c1788.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_ce3ffc09050545a588750b50f21c1788.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_ce3ffc09050545a588750b50f21c1788.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_c958390832934113939e6f6bb073bb6d.dll">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
OQAACtzeBRMJEQl63g0UChQQARQLFAwUEAPcKkFMAAACAAAAQAIAAE0AAACNAgAADAAAAAAAAAAA
AAAAFQAAAIYCAACbAgAABQAAACQAAAECAAAAFQAAAI0CAACiAgAADQAAAAAAAAAbMAIAUwAAAAQA
ABFzHAAACiZzHQAACgoCBCgMAAAGAwRzOgAACgsHF287AAAKczwAAAoMCAdvPQAACgcgWAIAAG8+
AAAKCAZvPwAACibeAw0Jet4IFBABFAsUDNwGKgABHAAAAAAMADhEAAMkAAABAgAMAD1JAAgAAAAA
GzACACoAAAAFAAARcxwAAAomAwRzOgAACgoCBCgMAAAGBm9AAAAKJt4DCwd63gYUEAIUCtwqAAAB
HAAAAAAGABgeAAMkAAABAgAGAB0jAAYAAAAAGzACABUAAAAGAAARA29BAAAKFy4GA29CAAAK3gMK
BnoqAAAAARAAAAAAAAAREQADJAAAARswAQAUAAAABgAAEQNvQQAACiwGA29DAAAK3gMKBnoqARAA
AAAAAAAQEAADJAAAAR4CKEQAAAoqAAAAALQAAADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNl
cy5SZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0
cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVu
dGltZVJlc291cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFEULQAAABCU0pCAQABAAAAAAAMAAAAdjQu
MC4zMDMxOQAAAAAFAGwAAAC0BQAAI34AACAGAADECAAAI1N0cmluZ3MAAAAA5A4AAHQPAAAjVVMA
WB4AABAAAAAjR1VJRAAAAGgeAABEAgAAI0Jsb2IAAAAAAAAAAgAAAVcdogEJAwAAAPolMwAWAAAB
AAAALwAAAAUAAAAGAAAADgAAAAoAAABEAAAAAgAAAA8AAAAGAAAAAgAAAAMAAAAEAAAAAQAAAAUA
AAABAAAAAQAAAAAACgABAAAAAAAGAMEAugAKAN0AyAAOAD0BFAEGAFkBugAGAG8BXgEGAKABiwES
ACsCHwISAEsCNQIGAAoD8AIGADUDIwMGAEwDIwMGAGkDIwMGAIgDIwMGAKEDIwMGALoDIwMGANUD
IwMGAPADIwMGAAkEIwMGAEIEIgQGAGIEIgQGALcEpAQGANQEugAGANkEugAGAP0EIwMKACkFEwUK
AEIFEwUGAFcFIgQOAHkFFAEOAJsFFAEWAPQF1AUWAAwG1AUGAD0GMQYSAF4GHwISAHkGHwIGAK0G
ugAGALQGugASAN8GHwISACAHHwISAFYHNQIGAJ0HugASALEHNQISAM8HvAcSANkHHwISAPUHNQIS
ACkIvAcSAEwIvAcSAFkIHwIAAAAAAQAAAAAAAQABAAAAEAAyADwABQABAAEAAAEQAGsAPAAJAAMA
BQABABAAdAB/AA0ABAAIAAMBAACjAAAAEQAEAA8AEQB/ARMAEQCsARcAEQD2ATkABgajAmUAVoCr
AmgAVoCzAmgAUCAAAAAAgxi8ARsAAQBYIAAAAACTCMIBHwABAJEgAAAAAJMI1gEkAAEAmCAAAAAA
kwjiASkAAQCgIAAAAACWCAYCPQACALMgAAAAAIYYvAEbAAIApyAAAAAAkRhyBacAAgC8IAAAAACG
ABoCGwACABAmAAAAAIEAWQJHAAIAGCkAAAAAhgBmAlAABQCUKQAAAACEAHQCWAAHAOgpAAAAAIEA
ggJfAAkAHCoAAAAAgQCSAl8ACgBMKgAAAACGGLwBGwALAAAAAQC7AgAAAQDBAgAAAgDOAgAAAwDb
AgAAAQDnAgAAAgDOAgAAAQDnAgAAAgDOAgAAAQDOAgAAAQDOAkkAvAF2AFEAvAF2AFkAvAF2AGEA
vAF2AGkAvAF2AHEAvAF2AHkAvAF2AIEAvAF2AIkAvAF2AJEAvAF2AJkAvAF7AKEAvAEbAKkAvAEb
AAkAvAEbALEA6wSAALEABgWHACkAvAGMAMkAvAGYANkAvAEbABEAvAEbAOEAvAEbABkArQWrAOkA
/gWwAPEAFQa1APkAHga7AAkAKAa/AEEAvAF2AAEBvAEbADkAvAEbAAEBSwbDAAEBUQbJADkAWAYb
ADkAcAbQABEBlAbWAOkAngZ7ACEBvga/ABkBygbaABkB0gbgABkB2Qb2AAkBFQb5ACkBFQYAARkB
5wa/ABkB7wYFASkB+wYLAQEBCQcQASkBFgcYATkANQcdAQkBQQcjATkASAcbADEBQQd2ABkB0gYq
ATkBvAFfABkB0gYxATkBYgd2ADkBewd7ADkBjwc3AUEBqQcbAEkBvAFYAFEB5QdWAWEBvAEbAGEB
BAhdAVEBFgh7AGkBNwhkAVEBPAjWAHEBaQiBAXEBcwgbAHEBeAgbABkAvAEbAAgAFABsAAgAGABx
ACkAkwCeAC4AGwD+AS4AIwD+AS4AYwAkAi4ACwCNAS4AEwDVAS4AMwDVAS4AKwD+AS4AOwAEAi4A
QwD+AS4AWwAbAkMAawBxAEkAkwCeAGEAmwBxAIMAqwBxAJMA5gA9AWoBeAGHAQIAAQADAAMAAABv
AS8AAADuATQAAAASAkIAAgACAAMAAgADAAUAAQAEAAUAAgAFAAcABIAAAAEAAABhGIF0AAAAAAAA
gAQAAAQAAAAAAAAAAAAAAAEAsQAAAAAABAAAAAAAAAAAAAAAAQC6AAAAAAAMAAAAAAAAAAAAAAAK
APUAAAAAAAQAAAAAAAAAAAAAAAEAHwIAAAAADAAAAAAAAAAAAAAACgC1BQAAAAAAAAAAAQAAAH4I
AAAFAAQAAAAAAAA8TW9kdWxlPgBTVF9jOTU4MzkwODMyOTM0MTEzOTM5ZTZmNmJiMDczYmI2ZC5k
bGwAUmVzb3VyY2VzAFNUX2NlM2ZmYzA5MDUwNTQ1YTU4ODc1MGI1MGYyMWMxNzg4LlByb3BlcnRp
ZXMAU2V0dGluZ3MAU2NyaXB0TWFpbgBTVF9jZTNmZmMwOTA1MDU0NWE1ODg3NTBiNTBmMjFjMTc4
OABTY3JpcHRSZXN1bHRzAG1zY29ybGliAFN5c3RlbQBPYmplY3QAU3lzdGVtLkNvbmZpZ3VyYXRp
b24AQXBwbGljYXRpb25TZXR0aW5nc0Jhc2UATWljcm9zb2Z0LlNxbFNlcnZlci5TY3JpcHRUYXNr
AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlRhc2tzLlNjcmlwdFRhc2sAVlNUQVJUU2NyaXB0T2Jq
ZWN0TW9kZWxCYXNlAEVudW0AU3lzdGVtLlJlc291cmNlcwBSZXNvdXJjZU1hbmFnZXIAcmVzb3Vy
Y2VNYW4AU3lzdGVtLkdsb2JhbGl6YXRpb24AQ3VsdHVyZUluZm8AcmVzb3VyY2VDdWx0dXJlAC5j
dG9yAGdldF9SZXNvdXJjZU1hbmFnZXIAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAQ3VsdHVyZQBk
ZWZhdWx0SW5zdGFuY2UAZ2V0X0RlZmF1bHQARGVmYXVsdABNYWluAFN5c3RlbS5EYXRhAERhdGFU
YWJsZQBTeXN0ZW0uRGF0YS5TcWxDbGllbnQAU3FsQ29ubmVjdGlvbgBfcmVwbGFjZURhdGEAX2dl
dERhdGFUYWJsZQBfdXBkYXRlSW5zZXJ0AF9jb25uZWN0aW9uT3BlbgBfY29ubmVjdGlvbkNsb3Nl
AHZhbHVlX18AU3VjY2VzcwBGYWlsdXJlAHZhbHVlAGR0RmF1bHR5VGVtcABteUNvbm5lY3Rpb24A
c3RyRXJyb3JNc2cAc3RyUXVlcnkAU3lzdGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBUYXJnZXRGcmFt
ZXdvcmtBdHRyaWJ1dGUAU3lzdGVtLlJlZmxlY3Rpb24AQXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBB
c3NlbWJseURlc2NyaXB0aW9uQXR0cmlidXRlAEFzc2VtYmx5Q29uZmlndXJhdGlvbkF0dHJpYnV0
ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUAQXNzZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFzc2Vt
Ymx5Q29weXJpZ2h0QXR0cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAEFzc2VtYmx5
Q3VsdHVyZUF0dHJpYnV0ZQBBc3NlbWJseVZlcnNpb25BdHRyaWJ1dGUAU3lzdGVtLlJ1bnRpbWUu
Q29tcGlsZXJTZXJ2aWNlcwBDb21waWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRlAFJ1bnRpbWVD
b21wYXRpYmlsaXR5QXR0cmlidXRlAFNUX2M5NTgzOTA4MzI5MzQxMTM5MzllNmY2YmIwNzNiYjZk
AFN5c3RlbS5EaWFnbm9zdGljcwBEZWJ1Z2dlck5vblVzZXJDb2RlQXR0cmlidXRlAFR5cGUAUnVu
dGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUAQXNzZW1ibHkAZ2V0X0Fzc2VtYmx5AFN5
c3RlbS5Db21wb25lbnRNb2RlbABFZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUARWRpdG9yQnJvd3Nh
YmxlU3RhdGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUALmNjdG9yAFNTSVNTY3JpcHRUYXNr
RW50cnlQb2ludEF0dHJpYnV0ZQBTY3JpcHRPYmplY3RNb2RlbABnZXRfRHRzAE1pY3Jvc29mdC5T
cWxTZXJ2ZXIuTWFuYWdlZERUUwBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5SdW50aW1lAFZhcmlh
YmxlcwBnZXRfVmFyaWFibGVzAFZhcmlhYmxlAGdldF9JdGVtAGdldF9WYWx1ZQBUb1N0cmluZwBT
eXN0ZW0uVGV4dABTdHJpbmdCdWlsZGVyAENsZWFyAEFwcGVuZABSZXNldABEYXRhUm93Q29sbGVj
dGlvbgBnZXRfUm93cwBJbnRlcm5hbERhdGFDb2xsZWN0aW9uQmFzZQBnZXRfQ291bnQAc2V0X1Rh
c2tSZXN1bHQAU3RyaW5nAEV4Y2VwdGlvbgBnZXRfTWVzc2FnZQBSZXBsYWNlAENvbmNhdABFbXB0
eQBEYXRhUm93AFRvVXBwZXIAb3BfRXF1YWxpdHkAZ2V0X0l0ZW1BcnJheQBBcHBlbmRGb3JtYXQA
Z2V0X1RhYmxlAERhdGFDb2x1bW5Db2xsZWN0aW9uAGdldF9Db2x1bW5zAFJlbW92ZQBBY2NlcHRD
aGFuZ2VzAFNxbEJ1bGtDb3B5AHNldF9EZXN0aW5hdGlvblRhYmxlTmFtZQBzZXRfQnVsa0NvcHlU
aW1lb3V0AFdyaXRlVG9TZXJ2ZXIASURpc3Bvc2FibGUARGlzcG9zZQBTcWxDb21tYW5kAFN5c3Rl
bS5EYXRhLkNvbW1vbgBEYkNvbW1hbmQAQ29tbWFuZFR5cGUAc2V0X0NvbW1hbmRUeXBlAFNxbERh
dGFBZGFwdGVyAHNldF9TZWxlY3RDb21tYW5kAHNldF9Db21tYW5kVGltZW91dABEYkRhdGFBZGFw
dGVyAEZpbGwARXhlY3V0ZU5vblF1ZXJ5AERiQ29ubmVjdGlvbgBDb25uZWN0aW9uU3RhdGUAZ2V0
X1N0YXRlAE9wZW4AQ2xvc2UAU1RfY2UzZmZjMDkwNTA1NDVhNTg4NzUwYjUwZjIxYzE3ODguUHJv
cGVydGllcy5SZXNvdXJjZXMucmVzb3VyY2VzAAAAAABxUwBUAF8AYwBlADMAZgBmAGMAMAA5ADAA
NQAwADUANAA1AGEANQA4ADgANwA1ADAAYgA1ADAAZgAyADEAYwAxADcAOAA4AC4AUAByAG8AcABl
AHIAdABpAGUAcwAuAFIAZQBzAG8AdQByAGMAZQBzAAAtVQBzAGUAcgA6ADoAYwBvAG4AbgBlAGMA
dABpAG8AbgBTAHQAcgBpAG4AZwAAYyAAUwBFAEwARQBDAFQAIAAqACwAQwBBAFMARQAgAFcASABF
AE4AIABTAFUAQgBTAFQAUgBJAE4ARwAoANpoeFMdT2h5anX3UywAMQAsADEAKQAgACEAPQAgACcA
NgAnACAAATUgAFQASABFAE4AIAAnAFQAUgBVAEUAJwAgAEUATABTAEUAIAAnAEYAQQBMAFMARQAn
ACAAAScgAEUATgBEACAAQQBTACAARABFAEwAXwBSAEUAQwBPAFIARAAgAABRIABGAFIATwBNACAA
RABfAFQAQQBOAEEATwBSAE8AUwBIAEkAXwBEAEUATgBQAFkATwBVAF8ATQBFAEkAUwBBAEkAXwBU
AEUATQBQADsAIAAAIdpoeFMdT2h5bjBIUS2YQWiSMJOVVZBIMH4wVzBfMAIwASEgAFMARQBMAEUA
QwBUACAAVABFAE0AUAAuACoALAAgAABLIABDAEEAUwBFACAAVwBIAEUATgAgAFQARQBNAFAALgDa
aHhTHU9oeWp191MgAD0AIABNAEEASQBOAC4A2mh4Ux1PaHlqdfdTIAABRyAAQQBOAEQAIABUAEUA
TQBQAC4A2mh4Ux1PaHkOZjB9anX3UyAAPQAgAE0AQQBJAE4ALgDaaHhTHU9oeQ5mMH1qdfdTIAAB
XyAARgBSAE8ATQAgAEQAXwBUAEEATgBBAE8AUgBPAFMASABJAF8ARABFAE4AUABZAE8AVQBfAE0A
RQBJAFMAQQBJAF8AVABFAE0AUAAgAEEAUwAgAFQARQBNAFAAIAAAXyAATABFAEYAVAAgAEoATwBJ
AE4AIABEAF8AVABBAE4AQQBPAFIATwBTAEgASQBfAEQARQBOAFAAWQBPAFUAXwBNAEUASQBTAEEA
SQAgAEEAUwAgAE0AQQBJAE4AIAAAPSAATwBOACAAVABFAE0AUAAuANpoeFMdT2h5anX3UyAAPQAg
AE0AQQBJAE4ALgDaaHhTHU9oeWp191MgAAFJIABBAE4ARAAgAFQARQBNAFAALgDaaHhTHU9oeQ5m
MH1qdfdTIAA9ACAATQBBAEkATgAuANpoeFMdT2h5DmYwfWp191M7ACAAATPaaHhTHU9oeWp191P7
MNpoeFMdT2h5DmYwfWp191NMMOJlazDWU7yPCG5/MGcwWTACMAEfIABTAEUATABFAEMAVAAgACoA
LABDAEEAUwBFACAAAID7IABXAEgARQBOACAAQwBBAFMAVAAoAEMATwBOAFYARQBSAFQAKABWAEEA
UgBDAEgAQQBSACgAMQAwACkALADaaHhTHU9oeeVl2E4sADEAMgAxACkAIABBAFMAIABEAEEAVABF
ACkAIAA8AD0AIAAoAFMARQBMAEUAQwBUACAATQBBAFgAKAAIZ6ZeQn2GTuVlKQAgAEYAUgBPAE0A
IABNAF8ARABFAE4AUABZAE8AVQBfAFMASQBNAEUAXwBNAEEAUwBUAEUAUgAgAFcASABFAFIARQAg
AAhnpl7gfeVlIABJAFMAIABOAE8AVAAgAE4AVQBMAEwAKQAgAAExCGemXuB9gTB+MFcwXzACMOB9
gTDlZU1SbjDaaHhTHU9oeeVlTDBCMIowfjBZMAIwAS0gAFMARQBMAEUAQwBUACAAVABBAE4AQQBE
AC4AKgAsACAAQwBBAFMARQAgAAA/IABXAEgARQBOACAAVABBAE4AQQBEAC4A2mh4Ux1PaHnlZdhO
IAA8ACAAVABBAE4AQQAuANpoeFPlZdhOIAABYSAARgBSAE8ATQAgAEQAXwBUAEEATgBBAE8AUgBP
AFMASABJAF8ARABFAE4AUABZAE8AVQBfAE0ARQBJAFMAQQBJAF8AVABFAE0AUAAgAEEAUwAgAFQA
QQBOAEEARAAgAABJIABMAEUARgBUACAASgBPAEkATgAgAE0AXwBUAEEATgBBAE8AUgBPAFMASABJ
AF8ATQBBAFMAVABFAFIAIABUAEEATgBBACAAADsgAE8ATgAgAFQAQQBOAEEARAAuAJdeF4KzMPww
yTAgAD0AIABUAEEATgBBAC4Al14XgrMw/DDJMCAAAUEgAEEATgBEACAAVABBAE4AQQAuANpoeFO6
eJpb5WUgACEAPQAgACcAMQA5ADAAMAAtADAAMQAtADAAMQAnADsAASnaaHhTuniaW+VlTVJuMJde
k5X7edVSn1s+fuVlTDBCMIowfjBZMAIwAWMgAFMARQBMAEUAQwBUACAAVABBAE4AQQAuACoALAAg
AEMAQQBTAEUAIABXAEgARQBOACAASgBPAEsARQBOAC4A1U5lUWFn9k4gAD0AIABUAEEATgBBAC4A
t4zWU9dTF4ogAAFZIABUAEgARQBOACAAJwBGAEEATABTAEUAJwAgAEUATABTAEUAIAAnAFQAUgBV
AEUAJwAgAEUATgBEACAAQQBTACAARABFAEwAXwBSAEUAQwBPAFIARAAgAAFfIABGAFIATwBNACAA
RABfAFQAQQBOAEEATwBSAE8AUwBIAEkAXwBEAEUATgBQAFkATwBVAF8ATQBFAEkAUwBBAEkAXwBU
AEUATQBQACAAQQBTACAAVABBAE4AQQAgAACAhyAATABFAEYAVAAgAEoATwBJAE4AIAAoAFMARQBM
AEUAQwBUACAATQBTAFQALgAz/yv/Nf+zMPwwyTAgAEEAUwAgADP/K/81/7Mw/DDJMCwASgBSAC4A
CWe5UouVy1nlZSwASgBSAC4ACWe5UkJ9hk7lZSwAIABKAFIALgDVTmVRYWf2TiAAAXsgAEYAUgBP
AE0AIABNAF8AUwBIAEkASQBSAEUAXwBKAE8AVQBLAEUATgBfAFIASQBSAEUASwBJACAASgBSACAA
TABFAEYAVAAgAEoATwBJAE4AIABNAF8AUwBIAE8AVQBIAEkATgBfAEQAQQBUAEEAIABNAFMAVAAg
AABHIABPAE4AIABKAFIALgBGVcFUszD8MMkwIAA9ACAATQBTAFQALgBGVcFUszD8MMkwKQAgAEEA
UwAgAEoATwBLAEUATgAgAAFHIABPAE4AIABKAE8ASwBFAE4ALgAz/yv/Nf+zMPwwyTAgAD0AIABU
AEEATgBBAC4AM/8r/zX/szD8MMkwIABBAE4ARAAgAAFlIABUAEEATgBBAC4A2mh4Ux1PaHnlZdhO
IABCAEUAVABXAEUARQBOACAASgBPAEsARQBOAC4ACWe5UouVy1nlZSAAQQBOAEQAIABKAE8ASwBF
AE4ALgAJZ7lSQn2GTuVlOwAgAAEv2mh4U+VlaDAJZ7lSi5XLWeVlbjBEfX8wCFSPMFswkjCTlVWQ
SDB+MFcwXzACMAErIABTAEUATABFAEMAVAAgAFQARQBNAFAALgAqACwAIABDAEEAUwBFACAAAGcg
AFcASABFAE4AIABTAEgATwBIAEkATgAuAFMASwBVALMw/DDJMCAASQBTACAATgBVAEwATAAgAE8A
UgAgAFQARQBOAFAATwAuAJdeF4KzMPwwyTAgAEkAUwAgAE4AVQBMAEwAIAABSSAATABFAEYAVAAg
AEoATwBJAE4AIABNAF8AUwBIAE8AVQBIAEkATgBfAEQAQQBUAEEAIABBAFMAIABTAEgATwBIAEkA
TgAgAABBIABPAE4AIABUAEUATQBQAC4AUwBLAFUAszD8MMkwIAA9ACAAUwBIAE8ASABJAE4ALgAz
/yv/Nf+zMPwwyTAgAAFHIABMAEUARgBUACAASgBPAEkATgAgAE0AXwBUAEUATgBQAE8AXwBNAEEA
UwBUAEUAUgAgAEEAUwAgAFQARQBOAFAATwAgAAA7IABPAE4AIABUAEUATQBQAC4Al14XgrMw/DDJ
MCAAPQAgAFQARQBOAFAATwAuAJdeF4KzMPwwyTA7AAFJ1U5lUUhRszD8MMkwATAz/yv/Nf+zMPww
yTB+MF8wbzCXXheCszD8MMkwbzDeMLkwvzBrMFhbKFdVMIwwZjBEMH4wWzCTMAIwAYCLIABXAEgA
RQBOACAAQwBPAE4AVgBFAFIAVAAoAEQAQQBUAEUALADaaHhTHU9oeeVl2E4pACAAPgAgAEMATwBO
AFYARQBSAFQAKABEAEEAVABFACwARABBAFQARQBBAEQARAAoAEQAQQBZACwALQAxACwARwBFAFQA
RABBAFQARQAoACkAKQApACAAAVkgAFQASABFAE4AIAAnAFQAUgBVAEUAJwAgAEUATABTAEUAIAAn
AEYAQQBMAFMARQAnACAARQBOAEQAIABBAFMAIABEAEUATABfAFIARQBDAE8AUgBEACAAAU8gAEYA
UgBPAE0AIABEAF8AVABBAE4AQQBPAFIATwBTAEgASQBfAEQARQBOAFAAWQBPAFUAXwBNAEUASQBT
AEEASQBfAFQARQBNAFAAOwAALccw/DC/MGswBlxlZ24w2mh4Ux1PaHnlZUwwWFsoV1UwjDBmMEQw
fjBZMAIwAUNJAE4AUwBFAFIAVAAgAEkATgBUAE8AIABLAEEATgBTAEgASQBfAFAAQQBDAEsAQQBH
AEUAXwBFAFIAUgBPAFIAIAAASyAAKADRMMMwsTD8MLgwszD8MMkwLADHMPwwvzDlZdhOLACoMOkw
/DDlZUJmLACoMOkw/DCFUblbLACoMOkw/DDVMOkwsDApACAAARUgAFYAQQBMAFUARQBTACgAJwBH
AAEjVQBzAGUAcgA6ADoAcABhAGMAawBhAGcAZQBDAG8AZABlAAAHJwAsACcAASNVAHMAZQByADoA
OgBjAHUAcgByAGUAbgB0AEQAYQB0AGUAABtVAHMAZQByADoAOgBzAHkAcwBEAGEAdABlAAAXJwAs
ACcAtzC5MMYw4DCoMOkw/DA6AAEDJwABAy0AAQ8nACwAJwAzACcAKQA7AAEVRABFAEwAXwBSAEUA
QwBPAFIARAAACVQAUgBVAEUAAAl7ADAAfQAgAAADAjABISAAVABSAFUATgBDAEEAVABFACAAVABB
AEIATABFACAAAB9VAHMAZQByADoAOgBjAGgAZQBjAGsAVAB5AHAAZQAAC18AVABFAE0AUAAAj4Cz
UwnUdkiAVWFTNQ5nJAAIt3pcVhk04IkIiYRdzYCAzJEDBhIVAwYSGQMgAAEEAAASFQQAABIZBQAB
ARIZBAgAEhUECAASGQMGEgwEAAASDAQIABIMCCADARIdEiEOByACEh0OEiEGIAIBDhIhBSABARIh
AgYIAwYRFAQAAAAABAEAAAAEIAEBDgQgAQEIBgABElkRXQQgABJhBiACAQ4SYQQHARIVBSABARFp
CAEAAgAAAAAAAwAAAQQgABJ1BCAAEnkFIAESfRwDIAAcAyAADgUgABKAgQYgARKAgQ4FIAASgIUD
IAAIBSACDg4OBQABDh0ODwcGDhIhEoCBEh0SgJEdDgIGDgYgARKAlQgEIAEcDgUAAgIODgQgAB0c
ByACEoCBDhwEIAASHQUgABKAmQYgAQESgJUGAAMODg4OBQACDg4OBSABARIdGAcLEoCBEoCBEoCV
DggICAgSgJ0SgJEdDgYgAQERgK0GIAEBEoClBSABCBIdDQcEEh0SgKUSgLESgJEIBwISgKUSgJEF
IAARgL0FBwESgJFHAQAaLk5FVEZyYW1ld29yayxWZXJzaW9uPXY0LjABAFQOFEZyYW1ld29ya0Rp
c3BsYXlOYW1lEC5ORVQgRnJhbWV3b3JrIDQoAQAjU1RfY2UzZmZjMDkwNTA1NDVhNTg4NzUwYjUw
ZjIxYzE3ODgAAAUBAAAAABYBABFDb3B5cmlnaHQgQCAgMjAxNgAACAEACAAAAAAAHgEAAQBUAhZX
cmFwTm9uRXhjZXB0aW9uVGhyb3dzAQDkSwAAAAAAAAAAAAD+SwAAACAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAA8EsAAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABABAAAAAYAACA
AAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABIAAAAWGAAALADAAAA
AAAAAAAAALADNAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAAAAC9BO/+AAABAAAA
AQCBdGEYAAABAIF0YRg/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAAAAEAVgBhAHIARgBp
AGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4AAAAAAAAAsAQQAwAA
AQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAADsAgAAAQAwADAAMAAwADAANABiADAAAABw
ACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBUAF8AYwBlADMAZgBmAGMA
MAA5ADAANQAwADUANAA1AGEANQA4ADgANwA1ADAAYgA1ADAAZgAyADEAYwAxADcAOAA4AAAAQAAP
AAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADYAMgA0ADEALgAyADkAOAAyADUA
AAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBUAF8AYwA5ADUAOAAzADkAMAA4
ADMAMgA5ADMANAAxADEAMwA5ADMAOQBlADYAZgA2AGIAYgAwADcAMwBiAGIANgBkAC4AZABsAGwA
AABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8AcAB5AHIAaQBnAGgAdAAg
AEAAIAAgADIAMAAxADYAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEAbQBlAAAA
UwBUAF8AYwA5ADUAOAAzADkAMAA4ADMAMgA5ADMANAAxADEAMwA5ADMAOQBlADYAZgA2AGIAYgAw
ADcAMwBiAGIANgBkAC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUAAAAAAFMA
VABfAGMAZQAzAGYAZgBjADAAOQAwADUAMAA1ADQANQBhADUAOAA4ADcANQAwAGIANQAwAGYAMgAx
AGMAMQA3ADgAOAAAAEQADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4A
NgAyADQAMQAuADIAOQA4ADIANQAAAAAASAAPAAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBlAHIAcwBp
AG8AbgAAADEALgAwAC4ANgAyADQAMQAuADIAOQA4ADIANQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAwAAAAQPAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\業務チェックステータスのメール"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:Description="Script Task"
      DTS:DTSID="{6F85FC55-79E1-4C19-9E51-90EF6BFBCCCD}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="業務チェックステータスのメール"
      DTS:ThreadHint="16">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_f3b9c524f8394f62847824ce73cf6703"
          VSTAMajorVersion="3"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadOnlyVariables="User::checkType,User::connectionString,User::currentDate,User::LogFilePath,User::mailFromId,User::mailFromName,User::mailServer,User::packageCode,User::sysDate">
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_f3b9c524f8394f62847824ce73cf6703.Properties.Settings.get_Default():ST_f3b9c524f8394f62847824ce73cf6703.Properties.Sett" +
    "ings")]

namespace ST_f3b9c524f8394f62847824ce73cf6703.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="ST_f3b9c524f8394f62847824ce73cf6703.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{0413ee00-2ad6-447e-bd99-5d5a0c8b6f4c}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_f3b9c524f8394f62847824ce73cf6703</RootNamespace>
    <AssemblyName>ST_f3b9c524f8394f62847824ce73cf6703</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>

  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>

  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
         <Generator>ResXFileCodeGenerator</Generator>
         <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
             <AutoGen>True</AutoGen>
         <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
         <Generator>SettingsSingleFileGenerator</Generator>
         <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
         <AutoGen>True</AutoGen>
         <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
         <SubType>Code</SubType>
    </Compile>
  </ItemGroup>

  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />

  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptTask"
                           HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}"
                           ApplicationType="usd"
                           Language="cs"
                           TemplatesPath=""
                           DebugInfoExeName="#HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\VisualStudio\10.0\InstallDir#\devenv.exe"
                           DebugInfoCommandLine=""
                           DebugInfoWorkingDir=""
                           IconImageList=""/>
        <Host Name="ScriptTask" GeneratedNamespace="$safeprojectname" IconIndex="">
        </Host>
        <ProjectClient>
            <HostIdentifier>SSIS_ST120</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[#region Namespaces
using System;
using System.Data;
using System.Data.SqlClient;
using System.IO;
using System.Net.Mail;
using System.Text;
using System.Net;
#endregion

namespace ST_f3b9c524f8394f62847824ce73cf6703
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
		/// <summary>
        /// Main Package will decide whether the Error been occured or not. 
        /// Only if error is occured then and then only mail will be send to appropriate users.
        /// </summary>
		public void Main()
		{
            string strConnectionString = Dts.Variables["User::connectionString"].Value.ToString();
            SqlConnection myConnection = new SqlConnection(strConnectionString);
            string strGyomType = string.Empty;
            string strPackageCode = string.Empty;
            string strLogFilePath = string.Empty;
            DateTime dtSysDate = Convert.ToDateTime(Dts.Variables["User::sysDate"].Value);   //System date which is generated while package execution started.
            DateTime dtCurDate = Convert.ToDateTime(Dts.Variables["User::currentDate"].Value);   //Data Date of the gyom package to be check
            DataTable dtDetails;
            StringBuilder strBuildQuery = new StringBuilder();
            StringBuilder strBuildErrorLog;
            try
            {
                _connectionOpen(myConnection);
                dtDetails = new DataTable();
                strBuildErrorLog = new StringBuilder();

                strLogFilePath = Dts.Variables["User::LogFilePath"].Value.ToString();
                strGyomType = Dts.Variables["User::checkType"].Value.ToString();
                strPackageCode = Dts.Variables["User::packageCode"].Value.ToString();   //Package Code or id.
                
                #region KANSHI_PACKAGE_ERRORテーブルからエラー内容
                strBuildQuery.Clear();
                strBuildQuery.Append("SELECT パッケージコード,データ日付,エラー日時,エラー内容 ");
                strBuildQuery.AppendLine(" FROM KANSHI_PACKAGE_ERROR ");
                strBuildQuery.AppendLine(" WHERE パッケージコード='G" + strPackageCode + "' AND データ日付='" + dtCurDate + "'; ");
                dtDetails.Reset();
                dtDetails = _getDataTable(strBuildQuery.ToString(), myConnection);
                #region If ERROR Found for same Gyom.
                if (dtDetails.Rows.Count > 0)
                {
                    for (int intI = 0; intI < dtDetails.Rows.Count; intI++)
                    {
                        //strBuildErrorLog.Append(dtDetails.Rows[intI]["パッケージコード"] + " " + dtDetails.Rows[intI]["データ日付"] + " ");
                        strBuildErrorLog.Append(dtDetails.Rows[intI]["エラー内容"] + " " + dtDetails.Rows[intI]["エラー日時"] + Environment.NewLine);
                    }
                    
                    #region Create Log file
                    if (Directory.Exists(strLogFilePath))
                    {
                        if (File.Exists(strLogFilePath + @"\" + strGyomType + "_GYOMCHECK_ERROR_" + dtCurDate.ToString("yyyyMMdd") + ".txt"))
                        {
                            File.Delete(strLogFilePath + @"\" + strGyomType + "_GYOMCHECK_ERROR_" + dtCurDate.ToString("yyyyMMdd") + ".txt");
                        }
                        File.Create(strLogFilePath + @"\" + strGyomType + "_GYOMCHECK_ERROR_" + dtCurDate.ToString("yyyyMMdd") + ".txt").Close();

                        System.IO.StreamWriter file = new System.IO.StreamWriter(strLogFilePath + @"\" + strGyomType + "_GYOMCHECK_ERROR_" + dtCurDate.ToString("yyyyMMdd") + ".txt");
                        file.WriteLine(strBuildErrorLog.ToString());
                        file.Close();
                    }
                    #endregion
                    
                    //Only if ERROR occured send the mail.
                    _sendMail(strGyomType, strPackageCode, dtCurDate, strLogFilePath + @"\" + strGyomType + "_GYOMCHECK_ERROR_" + dtCurDate.ToString("yyyyMMdd") + ".txt", myConnection); //If any Error been found calling mail function.
                }
                #endregion
                #endregion
                
                Dts.TaskResult = (int)ScriptResults.Success;
            }
            #region CATCH/FINALLY
            catch (Exception ex)
            {
                strBuildQuery.Clear();
                strBuildQuery.Append("INSERT INTO ");
                strBuildQuery.Append(" KANSHI_PACKAGE_ERROR([パッケージコード],[データ日付],[エラー日時],[エラー内容],[エラーフラグ]) ");
                strBuildQuery.Append(" VALUES('G" + strPackageCode + "','" + dtCurDate.ToString() + "','" + dtSysDate.ToString() + "','" + ex.Message.Replace("'", "-") + "','3');");
                _updateInsert(strBuildQuery.ToString(), myConnection);
            }
            finally
            {
                _connectionClose(myConnection);
                strConnectionString = null;
                myConnection = null;
                strGyomType = null;
                strPackageCode = null;
                dtDetails = null;
                strBuildQuery = null;
                strBuildErrorLog = null;
            }
            #endregion
        }

        #region "Send Mail"
        /// <summary>
        /// 開発者: イルファン　マンスリー
        /// 説明: This function aim to send mail if error found for same Data date and Gyom Type.
        /// 作成日: 2016-09-05
        /// </summary>
        /// <param name="strGyomType">for which gyom is currently checking </param>
        /// <param name="strPackageCode">Package id</param>
        /// <param name="dtCurDate">Data Date</param>
        /// <param name="dtSysDate">System Date when this package is been started to be execute.</param>
        /// <param name="myConnection"></param>
        private void _sendMail(string strGyomType, string strPackageCode, DateTime dtCurDate, string strLogFullPath, SqlConnection myConnection)
        {
            string strMailFromId = string.Empty;
            string strMailFromName = string.Empty;
            string strMailServer = string.Empty;
            StringBuilder strBuildQuery;
            string strTo = string.Empty;
            MailAddress mailFrom;
            MailMessage mailMsg;
            DataTable dtDetails;
            SmtpClient emailClient;
            try
            {
                _connectionOpen(myConnection);  //Open SQL Connection
                strMailFromId = Dts.Variables["User::mailFromId"].Value.ToString(); //From Which Email-Id mail will go through
                strMailFromName = Dts.Variables["User::mailFromName"].Value.ToString(); //Sender name to show.
                strMailServer = Dts.Variables["User::mailServer"].Value.ToString(); //Server Name/Address to send the mail.
                strBuildQuery = new StringBuilder();
                dtDetails = new DataTable();

                #region Create Mail Body And Send Mail
                emailClient = new SmtpClient(strMailServer);
                emailClient.Port = 587;
                emailClient.Credentials = new NetworkCredential(strMailFromId, "righton0123");
                emailClient.DeliveryMethod = SmtpDeliveryMethod.Network;
                emailClient.EnableSsl = true;
                mailFrom = new MailAddress(strMailFromId, strMailFromName);
                mailMsg = new MailMessage();
                mailMsg.From = mailFrom;

                //Start: 電子メールアドレス,who will recieve the ERROR_Log mail
                strBuildQuery.Clear();
                strBuildQuery.Append("SELECT 電子メール FROM [KANSHI_MAIL_ADDRESS]");
                strBuildQuery.AppendLine("WHERE ユーザグループ='ERROR' AND 削除フラグ='0'");
                dtDetails.Reset();
                dtDetails = _getDataTable(strBuildQuery.ToString(), myConnection);
                strTo = string.Empty;
                if (dtDetails.Rows.Count > 0)
                {
                    strTo = dtDetails.Rows[0]["電子メール"].ToString();
                    dtDetails.Reset(); //リセットデータテーブル。
                }
                //End: 電子メールアドレス,who will recieve the ERROR_Log mail

                //Start: メールボディーにエラーログ内容。
                strBuildQuery.Clear();
                strBuildQuery.Append("本メールは、MINIMDシステムからのお知らせです。<br /> <br />");
                strBuildQuery.Append("【"+strGyomType + "_" + dtCurDate.ToString("yyyyMMdd") + "】の業務チェックでエラーが発生しました。<br />");
                strBuildQuery.Append("エラーの内容とエラーデータが添付ファイルで送りいたします。<br /> <br />");
                strBuildQuery.Append(" ご確認お願い致します。<br /><br />");
                strBuildQuery.Append(" 以上です。<br />");
                strBuildQuery.Append(" 宜しくお願い致します。");
                
                //End: メールボディーとエラーログ内容。
                mailMsg.To.Add(strTo);
                mailMsg.Attachments.Add(new Attachment(strLogFullPath));    //Attachment
                mailMsg.Body = strBuildQuery.ToString();
                mailMsg.BodyEncoding = Encoding.UTF8;
                mailMsg.Subject = "【MINI-MD】業務チェックエラー_" + strGyomType + "_" + dtCurDate.ToString("yyyyMMdd");
                mailMsg.SubjectEncoding = Encoding.UTF8;
                mailMsg.IsBodyHtml = true;
                emailClient.Send(mailMsg);
                #endregion
                Dts.TaskResult = (int)ScriptResults.Success;
            }
            #region "CATCH/FINALLY"
            catch (Exception ex)
            {
                //システムエラーの場合。
                throw ex;
            }
            finally
            {
                strGyomType = null;
                strPackageCode = null;
                strMailFromId = null;
                strMailFromName = null;
                strMailServer = null;
                myConnection = null;
                strBuildQuery = null;
                strTo = null;
                mailFrom = null;
                mailMsg = null;
                dtDetails = null;
                emailClient = null;
            }
            #endregion
        }
        #endregion

        #region "Get DataTable"
        //作成日付: 2016-09-05
        //説明: Aim to Return DataTable from the Query.
        public DataTable _getDataTable(string strQuery, SqlConnection myConnection)
        {
            StringBuilder strERRQuery = new StringBuilder();
            DataTable objDT = new DataTable();
            SqlCommand myCommand;
            SqlDataAdapter sqlSelectData;
            try
            {
                _connectionOpen(myConnection);
                myCommand = new SqlCommand(strQuery, myConnection);
                myCommand.CommandType = CommandType.Text;
                sqlSelectData = new SqlDataAdapter();
                sqlSelectData.SelectCommand = myCommand;
                myCommand.CommandTimeout = 600; //Increases Query execution timeout.
                sqlSelectData.Fill(objDT);
            }
            catch (Exception ex)
            {
                throw ex;
            }
            finally
            {
                strQuery = null;
                myCommand = null;
                sqlSelectData = null;
                strERRQuery = null;
            }
            return objDT;
        }
        #endregion

        #region "Update/Insert Query in Db"
        /// <summary>
        /// 作成日付: 2016-09-05
        /// 説明: Insert/Update Query will be run on specified connection.
        /// </summary>
        protected void _updateInsert(string strQuery, SqlConnection myConnection)
        {
            SqlCommand myCommand;
            try
            {
                _connectionOpen(myConnection);
                myCommand = new SqlCommand(strQuery, myConnection);
                myCommand.ExecuteNonQuery();
                Dts.TaskResult = (int)ScriptResults.Success;
            }
            #region CATCH/FINALLY
            catch (Exception ex)
            {
                //Dts.TaskResult = (int)ScriptResults.Failure;
                throw ex;
            }
            finally
            {
                myCommand = null;
            }
            #endregion
        }
        #endregion

        #region "Connection Open"
        private void _connectionOpen(SqlConnection myConnection)
        {
            try
            {
                if (myConnection.State == ConnectionState.Closed)
                {
                    myConnection.Open();
                }
            }
            catch(Exception ex)
            {
                throw ex;
            }
        }
        #endregion

        #region "Connection Close"
        private void _connectionClose(SqlConnection myConnection)
        {
            try
            {
                if (myConnection.State == ConnectionState.Open)
                {
                    myConnection.Close();
                }
            }
            catch (Exception ex)
            {
                throw ex;
            }
        }
        #endregion

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>ST_f3b9c524f8394f62847824ce73cf6703</msb:CodeName>
		<msb:DisplayName>ST_f3b9c524f8394f62847824ce73cf6703</msb:DisplayName>
		<msb:ProjectId>{C4CD6A87-81C0-4BCD-BBA2-CA445127D4B6}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_f3b9c524f8394f62847824ce73cf6703.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_f3b9c524f8394f62847824ce73cf6703")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_f3b9c524f8394f62847824ce73cf6703")]
[assembly: AssemblyCopyright("Copyright @  2016")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_f3b9c524f8394f62847824ce73cf6703.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_f3b9c524f8394f62847824ce73cf6703.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_f3b9c524f8394f62847824ce73cf6703.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_f3b9c524f8394f62847824ce73cf6703.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_f3b9c524f8394f62847824ce73cf6703.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_f3b9c524f8394f62847824ce73cf6703.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAPKAXFgAAAAAAAAAAOAAAiELAQsAACYAAAAIAAAAAAAAXkQA
AAAgAAAAYAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACgAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAABBEAABLAAAAAGAAAAgEAAAAAAAAAAAAAAAAAAAA
AAAAAIAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAZCQAAAAgAAAAJgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAAgEAAAAYAAAAAYAAAAoAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAIAAAAACAAAALgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAABA
RAAAAAAAAEgAAAACAAUASCoAAMgZAAABAAAAAAAAAJApAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKA4AAAoqEzACAC0AAAABAAARfgEAAAQtIHIBAABw0AIA
AAIoDwAACm8QAAAKcxEAAAoKBoABAAAEfgEAAAQqGn4CAAAEKh4CgAIAAAQqGn4DAAAEKi5zBgAA
BoADAAAEKh4CKBQAAAoqABswCACLBAAAAgAAEQIoFgAACm8XAAAKcnMAAHBvGAAACm8ZAAAKbxoA
AAoKBnMbAAAKC34cAAAKDH4cAAAKDX4cAAAKEwQCKBYAAApvFwAACnKhAABwbxgAAApvGQAACigd
AAAKEwUCKBYAAApvFwAACnK9AABwbxgAAApvGQAACigdAAAKEwZzHgAAChMIAgcoDAAABnMfAAAK
EwdzHgAAChMJAigWAAAKbxcAAApy4QAAcG8YAAAKbxkAAApvGgAAChMEAigWAAAKbxcAAApyBQEA
cG8YAAAKbxkAAApvGgAACgwCKBYAAApvFwAACnIlAQBwbxgAAApvGQAACm8aAAAKDREIbyAAAAom
EQhySQEAcG8hAAAKJhEIco8BAHBvIgAACiYRCBuNAQAAARMNEQ0WcscBAHCiEQ0XCaIRDRhy7QEA
cKIRDRkRBowHAAABohENGnIJAgBwohENKCMAAApvIgAACiYRB28kAAAKAhEIbxoAAAoHKAoAAAYT
BxEHbyUAAApvJgAAChY+HgIAABYTCitnEQkajQEAAAETDhEOFhEHbyUAAAoRCm8nAAAKchECAHBv
KAAACqIRDhdyHQIAcKIRDhgRB28lAAAKEQpvJwAACnIhAgBwbygAAAqiEQ4ZKCkAAAqiEQ4oIwAA
Cm8hAAAKJhEKF1gTChEKEQdvJQAACm8mAAAKMokRBCgqAAAKOUYBAAAcjSEAAAETDxEPFhEEohEP
F3ItAgBwohEPGAiiEQ8ZcjECAHCiEQ8aEgZyVQIAcCgrAAAKohEPG3JnAgBwohEPKCwAAAooLQAA
CixKHI0hAAABExAREBYRBKIREBdyLQIAcKIREBgIohEQGXIxAgBwohEQGhIGclUCAHAoKwAACqIR
EBtyZwIAcKIRECgsAAAKKC4AAAocjSEAAAETERERFhEEohERF3ItAgBwohERGAiiEREZcjECAHCi
EREaEgZyVQIAcCgrAAAKohERG3JnAgBwohERKCwAAAooLwAACm8wAAAKHI0hAAABExIREhYRBKIR
EhdyLQIAcKIREhgIohESGXIxAgBwohESGhIGclUCAHAoKwAACqIREhtyZwIAcKIREigsAAAKczEA
AAoTCxELEQlvGgAACm8yAAAKEQtvMwAACgIICREGHI0hAAABExMRExYRBKIRExdyLQIAcKIRExgI
ohETGXIxAgBwohETGhIGclUCAHAoKwAACqIRExtyZwIAcKIREygsAAAKBygJAAAGAigWAAAKFm80
AAAK3boAAAATDBEIbyAAAAomEQhycQIAcG8hAAAKJhEIcosCAHBvIQAACiYRCB8JjSEAAAETFBEU
FnIUAwBwohEUFwmiERQYcioDAHCiERQZEgb+FgcAAAFvGgAACqIRFBpyKgMAcKIRFBsSBf4WBwAA
AW8aAAAKohEUHHIqAwBwohEUHREMbzUAAApyMgMAcHI2AwBwbzYAAAqiERQecjoDAHCiERQoLAAA
Cm8hAAAKJgIRCG8aAAAKBygLAAAG3gDeGQIHKA0AAAYUChQLFAwUDRQTBxQTCBQTCdwqAEE0AAAA
AAAAgwAAADIDAAC1AwAAugAAAC4AAAECAAAAgwAAAO4DAABxBAAAGQAAAAAAAAAbMAYAiAIAAAMA
ABF+HAAACgp+HAAACgt+HAAACgx+HAAAChMEAg4FKAwAAAYCKBYAAApvFwAACnJKAwBwbxgAAApv
GQAACm8aAAAKCgIoFgAACm8XAAAKcmwDAHBvGAAACm8ZAAAKbxoAAAoLAigWAAAKbxcAAApykgMA
cG8YAAAKbxkAAApvGgAACgxzHgAACg1zHwAAChMHCHM3AAAKEwgRCCBLAgAAbzgAAAoRCAZytAMA
cHM5AAAKbzoAAAoRCBZvOwAAChEIF288AAAKBgdzPQAAChMFcz4AAAoTBhEGEQVvPwAACglvIAAA
CiYJcswDAHBvIQAACiYJchwEAHBvIgAACiYRB28kAAAKAglvGgAACg4FKAoAAAYTB34cAAAKEwQR
B28lAAAKbyYAAAoWMSURB28lAAAKFm8nAAAKcmQEAHBvKAAACm8aAAAKEwQRB28kAAAKCW8gAAAK
JglycAQAcG8hAAAKJgkbjSEAAAETChEKFnLABABwohEKFwOiEQoYcsQEAHCiEQoZDwNyVQIAcCgr
AAAKohEKGnLIBABwohEKKCwAAApvIQAACiYJcv4EAHBvIQAACiYJclQFAHBvIQAACiYJcoYFAHBv
IQAACiYJcqAFAHBvIQAACiYRBm9AAAAKEQRvQQAAChEGb0IAAAoOBHNDAAAKb0QAAAoRBglvGgAA
Cm9FAAAKEQYoRgAACm9HAAAKEQZyugUAcANyxAQAcA8DclUCAHAoKwAACihIAAAKb0kAAAoRBihG
AAAKb0oAAAoRBhdvSwAAChEIEQZvTAAACgIoFgAAChZvNAAACt4FEwkRCXreIRQQARQQAhQKFAsU
DBQQBRQNFBMEFBMFFBMGFBMHFBMI3CpBNAAAAAAAABkAAABGAgAAXwIAAAUAAAAuAAABAgAAABkA
AABNAgAAZgIAACEAAAAAAAAAGzACAFMAAAAEAAARcx4AAAomcx8AAAoKAgQoDAAABgMEc00AAAoL
BxdvTgAACnNPAAAKDAgHb1AAAAoHIFgCAABvUQAACggGb1IAAAom3gMNCXreCBQQARQLFAzcBioA
ARwAAAAADAA4RAADLgAAAQIADAA9SQAIAAAAABswAgAtAAAABQAAEQIEKAwAAAYDBHNNAAAKCgZv
UwAACiYCKBYAAAoWbzQAAAreAwsHet4DFArcKgAAAAEcAAAAAAAAJCQAAy4AAAECAAAAKSkAAwAA
AAAbMAEAFAAAAAYAABEDb1QAAAotBgNvVQAACt4DCgZ6KgEQAAAAAAAAEBAAAy4AAAEbMAIAFQAA
AAYAABEDb1QAAAoXMwYDb1YAAAreAwoGeioAAAABEAAAAAAAABERAAMuAAABHgIoVwAACiq0AAAA
zsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBW
ZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYx
OTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBB
RFBBRFC0AAAAQlNKQgEAAQAAAAAADAAAAHY0LjAuMzAzMTkAAAAABQBsAAAAnAYAACN+AAAIBwAA
JAoAACNTdHJpbmdzAAAAACwRAADkBQAAI1VTABAXAAAQAAAAI0dVSUQAAAAgFwAAqAIAACNCbG9i
AAAAAAAAAAIAAAFXHaIJCQMAAAD6JTMAFgAAAQAAAEAAAAAFAAAABgAAAA4AAAAMAAAAVwAAAAIA
AAAPAAAABgAAAAIAAAADAAAABAAAAAEAAAABAAAABQAAAAEAAAABAAAAAAAKAAEAAAAAAAYAwQC6
AAoA3QDIAA4APQEUAQYAWQG6AAYAbwFeAQYAoAGLAQYAHwK6ABIASgI0AhIAYgIoAgYAKwMRAwYA
VgNEAwYAbQNEAwYAigNEAwYAqQNEAwYAwgNEAwYA2wNEAwYA9gNEAwYAEQREAwYAKgREAwYAYwRD
BAYAgwRDBAYAtAShBAYA0QS6AAYA1gS6AAYA+gREAwoAJgUQBQoAPwUQBQYAVAVDBA4AdgUUAQ4A
mAUUARYA8QXRBRYACQbRBQYALga6AAYAOwa6AAYAWgZOBhIAjQYoAhIAqAYoAhIAzQYoAgYA1Qa6
AAYA9wbtBgYACAftBgYAFAftBgYAJgftBgYAMwftBgYAQAftBgYAZAe6AAoAkgeCBwoAsQemBwoA
wwemBwoA5geCBwoAGgiCBwoAJgiCBwoAOwiCBwoAXAiCBwoAgQiCBwYAqwiMCAYAwQhOBhIAGAk0
AhIANgkjCRIAQAkoAhIAXAk0AhIAkAkjCRIAswkjCRIAwAkoAgAAAAABAAAAAAABAAEAAAAQADIA
PAAFAAEAAQAAARAAawA8AAkAAwAFAAEAEAB0AH8ADQAEAAgAAwEAAKMAAAARAAQADwARAH8BEwAR
AKwBFwARAPYBOQAGBqkCZwBWgLECagBWgLkCagBQIAAAAACDGLwBGwABAFggAAAAAJMIwgEfAAEA
kSAAAAAAkwjWASQAAQCYIAAAAACTCOIBKQABAKAgAAAAAJYIBgI9AAIAsyAAAAAAhhi8ARsAAgCn
IAAAAACRGG8FqQACALwgAAAAAIYAGgIbAAIAiCUAAAAAgQBYAkcAAgBQKAAAAACGAGwCUgAHAMwo
AAAAAIQAegJaAAkAJCkAAAAAgQCIAmEACwBUKQAAAACBAJgCYQAMAIgpAAAAAIYYvAEbAA0AAAAB
AMECAAABAMcCAAACANMCAAADAOICAAAEAOwCAAAFAPsCAAABAAgDAAACAPsCAAABAAgDAAACAPsC
AAABAPsCAAABAPsCUQC8AXgAWQC8AXgAYQC8AXgAaQC8AXgAcQC8AXgAeQC8AXgAgQC8AXgAiQC8
AXgAkQC8AXgAmQC8AXgAoQC8AX0AqQC8ARsAsQC8ARsACQC8ARsAuQDoBIIAuQADBYkAKQC8AY4A
0QC8AZoA4QC8ARsAEQC8ARsA6QC8ARsAGQCqBa0A8QD7BbIA+QASBrcAAQEbBr4ACQAlBsIAQQC8
AXgACQE1BsYAEQFDBskAGQG8ARsASQC8ARsAGQFoBs8AGQFuBtUAGQF1BtUACQGABtwASQCHBhsA
SQCfBuIAKQHDBugAIQESBuwAMQESBvMAOQHhBvgAQQEBB/wAOQAlBgEBCQGABgYBSQEBB/wASQEN
BwwBSQEfBxEBWQEtBxsAYQG8AXgAaQFLB3gAaQEtBxsA8QBVB30AcQFuB8IACQF6BxgBeQG8AXgA
eQGdB30AgQG8AUoBeQHWB1ABeQH5B1cBeQEMCF4BmQG8AUoBoQG8ARsAoQEyCGMBoQFRCGoBqQFY
CHgAoQFxCHABuQG8AXgADABYCH8BoQG4CHgAyQHKCIUBoQHTCIsBCQGABpIBoQHkCHgAoQHwCIsB
oQEECV4BeQETCZoB0QG8AVoA2QFMCbsB6QG8ARsA6QFrCcIB2QF9CX0A8QGeCckB2QGjCegA+QHQ
CeYB+QHaCRsA+QEtBxsAGQC8ARsACAAUAG4ACAAYAHMAKQCTAKAALgAbAGMCLgAjAGMCLgBjAIkC
LgALAPIBLgATADoCLgAzADoCLgArAGMCLgA7AGkCLgBDAGMCLgBbAIACQwBrAHMASQCTAKAAYQCb
AHMAgwCrAHMAlQAeAaEBzwHdAewBAgABAAMAAwAAAG8BLwAAAO4BNAAAABICQgACAAIAAwACAAMA
BQABAAQABQACAAUABwB2AQSAAAABAAAAORhBSwAAAAAAAH8AAAAEAAAAAAAAAAAAAAABALEAAAAA
AAQAAAAAAAAAAAAAAAEAugAAAAAADAAAAAAAAAAAAAAACgD1AAAAAAAEAAAAAAAAAAAAAAABACgC
AAAAAAwAAAAAAAAAAAAAAAoAsgUAAAAAAAAAAAEAAADfCQAABQAEAAAAADxNb2R1bGU+AFNUX2Yz
YjljNTI0ZjgzOTRmNjI4NDc4MjRjZTczY2Y2NzAzLmRsbABSZXNvdXJjZXMAU1RfZjNiOWM1MjRm
ODM5NGY2Mjg0NzgyNGNlNzNjZjY3MDMuUHJvcGVydGllcwBTZXR0aW5ncwBTY3JpcHRNYWluAFNU
X2YzYjljNTI0ZjgzOTRmNjI4NDc4MjRjZTczY2Y2NzAzAFNjcmlwdFJlc3VsdHMAbXNjb3JsaWIA
U3lzdGVtAE9iamVjdABTeXN0ZW0uQ29uZmlndXJhdGlvbgBBcHBsaWNhdGlvblNldHRpbmdzQmFz
ZQBNaWNyb3NvZnQuU3FsU2VydmVyLlNjcmlwdFRhc2sATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMu
VGFza3MuU2NyaXB0VGFzawBWU1RBUlRTY3JpcHRPYmplY3RNb2RlbEJhc2UARW51bQBTeXN0ZW0u
UmVzb3VyY2VzAFJlc291cmNlTWFuYWdlcgByZXNvdXJjZU1hbgBTeXN0ZW0uR2xvYmFsaXphdGlv
bgBDdWx0dXJlSW5mbwByZXNvdXJjZUN1bHR1cmUALmN0b3IAZ2V0X1Jlc291cmNlTWFuYWdlcgBn
ZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQBDdWx0dXJlAGRlZmF1bHRJbnN0YW5jZQBnZXRfRGVmYXVs
dABEZWZhdWx0AE1haW4ARGF0ZVRpbWUAU3lzdGVtLkRhdGEAU3lzdGVtLkRhdGEuU3FsQ2xpZW50
AFNxbENvbm5lY3Rpb24AX3NlbmRNYWlsAERhdGFUYWJsZQBfZ2V0RGF0YVRhYmxlAF91cGRhdGVJ
bnNlcnQAX2Nvbm5lY3Rpb25PcGVuAF9jb25uZWN0aW9uQ2xvc2UAdmFsdWVfXwBTdWNjZXNzAEZh
aWx1cmUAdmFsdWUAc3RyR3lvbVR5cGUAc3RyUGFja2FnZUNvZGUAZHRDdXJEYXRlAHN0ckxvZ0Z1
bGxQYXRoAG15Q29ubmVjdGlvbgBzdHJRdWVyeQBTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nAFRh
cmdldEZyYW1ld29ya0F0dHJpYnV0ZQBTeXN0ZW0uUmVmbGVjdGlvbgBBc3NlbWJseVRpdGxlQXR0
cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUAQXNzZW1ibHlDb25maWd1cmF0aW9u
QXR0cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRyaWJ1
dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1dGUA
QXNzZW1ibHlDdWx0dXJlQXR0cmlidXRlAEFzc2VtYmx5VmVyc2lvbkF0dHJpYnV0ZQBTeXN0ZW0u
UnVudGltZS5Db21waWxlclNlcnZpY2VzAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1dGUA
UnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAU3lzdGVtLkRpYWdub3N0aWNzAERlYnVnZ2Vy
Tm9uVXNlckNvZGVBdHRyaWJ1dGUAVHlwZQBSdW50aW1lVHlwZUhhbmRsZQBHZXRUeXBlRnJvbUhh
bmRsZQBBc3NlbWJseQBnZXRfQXNzZW1ibHkAU3lzdGVtLkNvbXBvbmVudE1vZGVsAEVkaXRvckJy
b3dzYWJsZUF0dHJpYnV0ZQBFZGl0b3JCcm93c2FibGVTdGF0ZQBDb21waWxlckdlbmVyYXRlZEF0
dHJpYnV0ZQAuY2N0b3IAU1NJU1NjcmlwdFRhc2tFbnRyeVBvaW50QXR0cmlidXRlAFNjcmlwdE9i
amVjdE1vZGVsAGdldF9EdHMATWljcm9zb2Z0LlNxbFNlcnZlci5NYW5hZ2VkRFRTAE1pY3Jvc29m
dC5TcWxTZXJ2ZXIuRHRzLlJ1bnRpbWUAVmFyaWFibGVzAGdldF9WYXJpYWJsZXMAVmFyaWFibGUA
Z2V0X0l0ZW0AZ2V0X1ZhbHVlAFRvU3RyaW5nAFN0cmluZwBFbXB0eQBDb252ZXJ0AFRvRGF0ZVRp
bWUAU3lzdGVtLlRleHQAU3RyaW5nQnVpbGRlcgBDbGVhcgBBcHBlbmQAQXBwZW5kTGluZQBDb25j
YXQAUmVzZXQARGF0YVJvd0NvbGxlY3Rpb24AZ2V0X1Jvd3MASW50ZXJuYWxEYXRhQ29sbGVjdGlv
bkJhc2UAZ2V0X0NvdW50AERhdGFSb3cARW52aXJvbm1lbnQAZ2V0X05ld0xpbmUAU3lzdGVtLklP
AERpcmVjdG9yeQBFeGlzdHMARmlsZQBEZWxldGUARmlsZVN0cmVhbQBDcmVhdGUAU3RyZWFtAENs
b3NlAFN0cmVhbVdyaXRlcgBUZXh0V3JpdGVyAFdyaXRlTGluZQBzZXRfVGFza1Jlc3VsdABFeGNl
cHRpb24AZ2V0X01lc3NhZ2UAUmVwbGFjZQBTeXN0ZW0uTmV0Lk1haWwAU210cENsaWVudABzZXRf
UG9ydABTeXN0ZW0uTmV0AE5ldHdvcmtDcmVkZW50aWFsAElDcmVkZW50aWFsc0J5SG9zdABzZXRf
Q3JlZGVudGlhbHMAU210cERlbGl2ZXJ5TWV0aG9kAHNldF9EZWxpdmVyeU1ldGhvZABzZXRfRW5h
YmxlU3NsAE1haWxBZGRyZXNzAE1haWxNZXNzYWdlAHNldF9Gcm9tAE1haWxBZGRyZXNzQ29sbGVj
dGlvbgBnZXRfVG8AQWRkAEF0dGFjaG1lbnRDb2xsZWN0aW9uAGdldF9BdHRhY2htZW50cwBBdHRh
Y2htZW50AFN5c3RlbS5Db2xsZWN0aW9ucy5PYmplY3RNb2RlbABDb2xsZWN0aW9uYDEAc2V0X0Jv
ZHkARW5jb2RpbmcAZ2V0X1VURjgAc2V0X0JvZHlFbmNvZGluZwBzZXRfU3ViamVjdABzZXRfU3Vi
amVjdEVuY29kaW5nAHNldF9Jc0JvZHlIdG1sAFNlbmQAU3FsQ29tbWFuZABTeXN0ZW0uRGF0YS5D
b21tb24ARGJDb21tYW5kAENvbW1hbmRUeXBlAHNldF9Db21tYW5kVHlwZQBTcWxEYXRhQWRhcHRl
cgBzZXRfU2VsZWN0Q29tbWFuZABzZXRfQ29tbWFuZFRpbWVvdXQARGJEYXRhQWRhcHRlcgBGaWxs
AEV4ZWN1dGVOb25RdWVyeQBEYkNvbm5lY3Rpb24AQ29ubmVjdGlvblN0YXRlAGdldF9TdGF0ZQBP
cGVuAFNUX2YzYjljNTI0ZjgzOTRmNjI4NDc4MjRjZTczY2Y2NzAzLlByb3BlcnRpZXMuUmVzb3Vy
Y2VzLnJlc291cmNlcwAAAABxUwBUAF8AZgAzAGIAOQBjADUAMgA0AGYAOAAzADkANABmADYAMgA4
ADQANwA4ADIANABjAGUANwAzAGMAZgA2ADcAMAAzAC4AUAByAG8AcABlAHIAdABpAGUAcwAuAFIA
ZQBzAG8AdQByAGMAZQBzAAAtVQBzAGUAcgA6ADoAYwBvAG4AbgBlAGMAdABpAG8AbgBTAHQAcgBp
AG4AZwAAG1UAcwBlAHIAOgA6AHMAeQBzAEQAYQB0AGUAACNVAHMAZQByADoAOgBjAHUAcgByAGUA
bgB0AEQAYQB0AGUAACNVAHMAZQByADoAOgBMAG8AZwBGAGkAbABlAFAAYQB0AGgAAB9VAHMAZQBy
ADoAOgBjAGgAZQBjAGsAVAB5AHAAZQAAI1UAcwBlAHIAOgA6AHAAYQBjAGsAYQBnAGUAQwBvAGQA
ZQAARVMARQBMAEUAQwBUACAA0TDDMLEw/DC4MLMw/DDJMCwAxzD8ML8w5WXYTiwAqDDpMPww5WVC
ZiwAqDDpMPwwhVG5WyAAATcgAEYAUgBPAE0AIABLAEEATgBTAEgASQBfAFAAQQBDAEsAQQBHAEUA
XwBFAFIAUgBPAFIAIAAAJSAAVwBIAEUAUgBFACAA0TDDMLEw/DC4MLMw/DDJMD0AJwBHAAEbJwAg
AEEATgBEACAAxzD8ML8w5WXYTj0AJwABBycAOwAgAAELqDDpMPwwhVG5WwEDIAAAC6gw6TD8MOVl
QmYBA1wAACNfAEcAWQBPAE0AQwBIAEUAQwBLAF8ARQBSAFIATwBSAF8AABF5AHkAeQB5AE0ATQBk
AGQAAAkuAHQAeAB0AAAZSQBOAFMARQBSAFQAIABJAE4AVABPACAAAICHIABLAEEATgBTAEgASQBf
AFAAQQBDAEsAQQBHAEUAXwBFAFIAUgBPAFIAKABbANEwwzCxMPwwuDCzMPwwyTBdACwAWwDHMPww
vzDlZdhOXQAsAFsAqDDpMPww5WVCZl0ALABbAKgw6TD8MIVRuVtdACwAWwCoMOkw/DDVMOkwsDBd
ACkAIAABFSAAVgBBAEwAVQBFAFMAKAAnAEcAAQcnACwAJwABAycAAQMtAAEPJwAsACcAMwAnACkA
OwABIVUAcwBlAHIAOgA6AG0AYQBpAGwARgByAG8AbQBJAGQAACVVAHMAZQByADoAOgBtAGEAaQBs
AEYAcgBvAG0ATgBhAG0AZQAAIVUAcwBlAHIAOgA6AG0AYQBpAGwAUwBlAHIAdgBlAHIAABdyAGkA
ZwBoAHQAbwBuADAAMQAyADMAAE9TAEUATABFAEMAVAAgAPuWUFvhMPww6zAgAEYAUgBPAE0AIABb
AEsAQQBOAFMASABJAF8ATQBBAEkATABfAEEARABEAFIARQBTAFMAXQABR1cASABFAFIARQAgAOYw
/DC2MLAw6zD8MNcwPQAnAEUAUgBSAE8AUgAnACAAQQBOAEQAIABKUmSW1TDpMLAwPQAnADAAJwAB
C/uWUFvhMPww6zABTyxn4TD8MOswbzABME0ASQBOAEkATQBEALcwuTDGMOAwSzCJMG4wSjDld4kw
WzBnMFkwAjA8AGIAcgAgAC8APgAgADwAYgByACAALwA+AAEDEDABA18AADURMG4wbWnZUsEwpzDD
MK8wZzCoMOkw/DBMMHp2H3VXMH4wVzBfMAIwPABiAHIAIAAvAD4AAVWoMOkw/DBuMIVRuVtoMKgw
6TD8MMcw/DC/MEww+23YTtUwoTCkMOswZzABkIowRDBfMFcwfjBZMAIwPABiAHIAIAAvAD4AIAA8
AGIAcgAgAC8APgABMSAAVDC6eI2KSjBYmEQw9IFXMH4wWTACMDwAYgByACAALwA+ADwAYgByACAA
LwA+AAEZIADlTgpOZzBZMAIwPABiAHIAIAAvAD4AARkgAJxbVzBPMEowWJhEMPSBVzB+MFkwAjAB
JxAwTQBJAE4ASQAtAE0ARAARMG1p2VLBMKcwwzCvMKgw6TD8MF8AAQAAlT09L8CNj0Kl92DzetNg
egAIt3pcVhk04IkIiYRdzYCAzJEDBhIVAwYSGQMgAAEEAAASFQQAABIZBQABARIZBAgAEhUECAAS
GQMGEgwEAAASDAQIABIMCiAFAQ4OER0OEiEHIAISJQ4SIQYgAgEOEiEFIAEBEiECBggDBhEUBAAA
AAAEAQAAAAQgAQEOBCABAQgGAAESXRFhBCAAEmUGIAIBDhJlBAcBEhUFIAEBEW0IAQACAAAAAAAD
AAABBCAAEnkEIAASfQYgARKAgRwDIAAcAyAADgIGDgUAAREdHAUgABKAjQYgARKAjQ4FAAEOHRwF
IAASgJEDIAAIBiABEoCZCAQgARwOAwAADgQAAQIOBCABDg4FAAEOHQ4EAAEBDgYAARKAqQ4FIAIO
Dg4rBxUOEiEODg4RHREdEiUSgI0SgI0IEoCxEoC5HRwdHB0OHQ4dDh0OHQ4dDgUgAgEODgYgAQES
gMUGIAEBEYDJBCABAQIGIAEBEoDNBSAAEoDVBSAAEoDZCBUSgOEBEoDdBSABARMABQAAEoDlBiAB
ARKA5QcABA4ODg4OBiABARKA0RkHCw4ODhKAjQ4SgM0SgNESJRKAvRKAuR0OBiABARGA8QYgAQES
gOkFIAEIEiUNBwQSJRKA6RKA9RKAuQgHAhKA6RKAuQUgABGBAQUHARKAuUcBABouTkVURnJhbWV3
b3JrLFZlcnNpb249djQuMAEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUQLk5FVCBGcmFtZXdvcmsg
NCgBACNTVF9mM2I5YzUyNGY4Mzk0ZjYyODQ3ODI0Y2U3M2NmNjcwMwAABQEAAAAAFgEAEUNvcHly
aWdodCBAICAyMDE2AAAIAQAIAAAAAAAeAQABAFQCFldyYXBOb25FeGNlcHRpb25UaHJvd3MBOEQA
AAAAAAAAAAAATkQAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEBEAAAAAAAAAABfQ29yRGxsTWFp
bgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAQAAAA
GAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAAAFhgAACw
AwAAAAAAAAAAAACwAzQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAAvQTv/gAA
AQAAAAEAQUs5GAAAAQBBSzkYPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAABAFYAYQBy
AEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAAAAAAALAE
EAMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAA7AIAAAEAMAAwADAAMAAwADQAYgAw
AAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAAAFMAVABfAGYAMwBiADkA
YwA1ADIANABmADgAMwA5ADQAZgA2ADIAOAA0ADcAOAAyADQAYwBlADcAMwBjAGYANgA3ADAAMwAA
AEAADwABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgA2ADIAMAAxAC4AMQA5ADIA
NgA1AAAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMAVABfAGYAMwBiADkAYwA1
ADIANABmADgAMwA5ADQAZgA2ADIAOAA0ADcAOAAyADQAYwBlADcAMwBjAGYANgA3ADAAMwAuAGQA
bABsAAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBvAHAAeQByAGkAZwBo
AHQAIABAACAAIAAyADAAMQA2AAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBhAG0A
ZQAAAFMAVABfAGYAMwBiADkAYwA1ADIANABmADgAMwA5ADQAZgA2ADIAOAA0ADcAOAAyADQAYwBl
ADcAMwBjAGYANgA3ADAAMwAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEAbQBlAAAA
AABTAFQAXwBmADMAYgA5AGMANQAyADQAZgA4ADMAOQA0AGYANgAyADgANAA3ADgAMgA0AGMAZQA3
ADMAYwBmADYANwAwADMAAABEAA8AAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAxAC4A
MAAuADYAMgAwADEALgAxADkAMgA2ADUAAAAAAEgADwABAEEAcwBzAGUAbQBiAGwAeQAgAFYAZQBy
AHMAaQBvAG4AAAAxAC4AMAAuADYAMgAwADEALgAxADkAMgA2ADUAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAMAAAAYDQAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\調整伝票明細"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:Description="Script Task"
      DTS:DTSID="{D7F48198-6A4A-4BFF-BB1B-BEBB19918958}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="調整伝票明細"
      DTS:ThreadHint="12">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_24cc93c5ce094adb9bb48363976c1632"
          VSTAMajorVersion="3"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadOnlyVariables="User::checkType,User::connectionString,User::currentDate,User::packageCode,User::sysDate">
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_ce3ffc09050545a588750b50f21c1788")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_ce3ffc09050545a588750b50f21c1788")]
[assembly: AssemblyCopyright("Copyright @  2016")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[
#region Namespaces
using System;
using System.Data;
using System.Data.SqlClient;
using System.Text;
#endregion

namespace ST_ce3ffc09050545a588750b50f21c1788
{
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
    {
        #region "Main Method"
        /// <summary>
        /// 作成者：イルファン　マンスリー
        /// 説明：仕入条件履歴データの業務チェックする。
        /// 作成日：2016年11月17日
        /// </summary>
        public void Main()
		{
            string strConnection = Dts.Variables["User::connectionString"].Value.ToString();
            SqlConnection myConnection = new SqlConnection(strConnection);
            StringBuilder strERRQuery = new StringBuilder();
            DataTable dtFaultyTemp;
            try
            { 
                dtFaultyTemp = new DataTable();
                _connectionOpen(myConnection);
                
                #region "伝票日付 Should not be bigger than Y-day"
                //Get All The Records of Temp TABLE, with New Column DEL_RECORD as Flag.
                //Faulty Records will have DEL_RECORD as 'TRUE'
                strERRQuery.Clear();
                strERRQuery.Append(" SELECT *,CASE ");
                strERRQuery.Append(" WHEN CONVERT(DATE,調整伝票日付) > CONVERT(DATE,DATEADD(DAY,-1,GETDATE())) ");
                strERRQuery.Append(" THEN 'TRUE' ELSE 'FALSE' END AS DEL_RECORD ");
                strERRQuery.Append(" FROM D_CHOUSEI_DENPYOU_MEISAI_TEMP; ");
                dtFaultyTemp.Reset();
                dtFaultyTemp = _getDataTable(strERRQuery.ToString(), myConnection);
                if (dtFaultyTemp.Rows.Count > 0)
                {
                    _replaceData(dtFaultyTemp, myConnection, "データに将来の調整伝票日が存在されています。");   //Replace & Remove Data in Actual Db Table
                }
                #endregion

                #region "伝票日付 Should not be smaller than its 締め日"
                //Get All The Records of Temp TABLE, with New Column DEL_RECORD as Flag.
                //Faulty Records will have DEL_RECORD as 'TRUE'
                strERRQuery.Clear();
                strERRQuery.Append(" SELECT *, CASE ");
                strERRQuery.Append(" WHEN CAST(CONVERT(VARCHAR(10),調整伝票日付,121) AS DATE) <= (SELECT MAX(月度終了日) FROM M_DENPYOU_SIME_MASTER WHERE 月度締日 IS NOT NULL) ");
                strERRQuery.Append(" THEN 'TRUE' ELSE 'FALSE' ");
                strERRQuery.Append(" END AS DEL_RECORD FROM D_CHOUSEI_DENPYOU_MEISAI_TEMP; ");
                dtFaultyTemp.Reset();
                dtFaultyTemp = _getDataTable(strERRQuery.ToString(), myConnection);
                if (dtFaultyTemp.Rows.Count > 0)
                {
                    _replaceData(dtFaultyTemp, myConnection, "月度締めました。締め日前の調整伝票日があります。");   //Replace & Remove Data in Actual Db Table
                }
                #endregion

                #region "伝票番号 & 伝票明細番号 pair should not be exists in Arrived temp table"
                //Get All The Records of Temp TABLE, with New Column DEL_RECORD as Flag.
                //Faulty Records will have DEL_RECORD as 'TRUE'
                strERRQuery.Clear();
                strERRQuery.Append(" SELECT TEMP.*, ");
                strERRQuery.Append(" CASE WHEN TEMP.調整伝票番号 = MAIN.調整伝票番号 AND TEMP.調整伝票明細番号 = MAIN.調整伝票明細番号 ");
                strERRQuery.Append(" THEN 'TRUE' ELSE 'FALSE' END AS DEL_RECORD ");
                strERRQuery.Append(" FROM D_CHOUSEI_DENPYOU_MEISAI_TEMP AS TEMP ");
                strERRQuery.Append(" LEFT JOIN D_CHOUSEI_DENPYOU_MEISAI AS MAIN ");
                strERRQuery.Append(" ON MAIN.調整伝票番号 = TEMP.調整伝票番号 ");
                strERRQuery.Append(" AND MAIN.調整伝票明細番号 = TEMP.調整伝票明細番号 ");
                dtFaultyTemp.Reset();
                dtFaultyTemp = _getDataTable(strERRQuery.ToString(), myConnection);
                if (dtFaultyTemp.Rows.Count > 0)
                {
                    _replaceData(dtFaultyTemp, myConnection, "調整伝票番号・調整伝票明細番号が既に取込済みです。");   //Replace & Remove Data in Actual Db Table
                }
                #endregion

                Dts.TaskResult = (int)ScriptResults.Success;
            }
            #region Catch/Finally
            catch (Exception ex)
            {
                strERRQuery.Clear();
                strERRQuery.Append("INSERT INTO KANSHI_PACKAGE_ERROR ");
                strERRQuery.Append(" (パッケージコード,データ日付,エラー日時,エラー内容,エラーフラグ) ");
                strERRQuery.Append(" VALUES('G" + Dts.Variables["User::packageCode"].Value.ToString() + "','" + Dts.Variables["User::currentDate"].Value.ToString() + "','" + Dts.Variables["User::sysDate"].Value.ToString() + "','システムエラー:" + ex.Message.ToString().Replace("'", "-") + "','3');");
                _updateInsert(strERRQuery.ToString(), myConnection);
                Dts.TaskResult = (int)ScriptResults.Success;
            }
            finally 
            {
                _connectionClose(myConnection);
                dtFaultyTemp = null;
                strERRQuery = null;
                myConnection = null;
            }
            #endregion
		}
        #endregion

        #region "replace Data"
        //Data Replacement in Actual DB After Test
        private void _replaceData(DataTable dtFaultyTemp, SqlConnection myConnection, string strErrorMsg)
        {
            StringBuilder strERRQuery = new StringBuilder();
            StringBuilder strBuildRow = new StringBuilder();
            DataRow drTemp;
            string strPackageCode = string.Empty;
            int intErrorCount = 0;  //To Count Errors in the DataTable, to avoid its extra TRUNCATION and BULK.
            try
            {
                _connectionOpen(myConnection);
                strPackageCode = Dts.Variables["User::packageCode"].Value.ToString();
                intErrorCount = 0;
                int countRows = dtFaultyTemp.Rows.Count;
                for (int intI = 0; intI < countRows; intI++)
                {
                    #region Report Faulty Records
                    if (dtFaultyTemp.Rows[intI]["DEL_RECORD"].ToString().ToUpper() == "TRUE")
                    {
                        intErrorCount = intErrorCount + 1;
                        //'TRUE' means Faulty SKU Record
                        drTemp = dtFaultyTemp.Rows[intI];
                        strBuildRow.Clear();
                        for (int intJ = 0; intJ < drTemp.Table.Columns.Count-1; intJ++)
                        {
                            strBuildRow.AppendFormat("{0} ", drTemp.ItemArray[intJ]);
                        }
                        strERRQuery.Clear();
                        strERRQuery.Append("INSERT INTO KANSHI_PACKAGE_ERROR ");
                        strERRQuery.Append(" (パッケージコード,データ日付,エラー日時,エラー内容,エラーフラグ) ");
                        strERRQuery.Append(" VALUES('G" + strPackageCode + "','" + Dts.Variables["User::currentDate"].Value.ToString() + "','" + Dts.Variables["User::sysDate"].Value.ToString() + "','" + strBuildRow.ToString() + "。" + strErrorMsg + "','3');");
                        _updateInsert(strERRQuery.ToString(), myConnection);
                        countRows = countRows - 1;
                        intI = intI - 1;
                        dtFaultyTemp.Rows.Remove(drTemp);   //Remove Faulty Records from DataTable Object.
                        dtFaultyTemp.AcceptChanges();    //Commit DataTable Changes.
                    }
                    #endregion
                }
                dtFaultyTemp.Columns.Remove("DEL_RECORD");
                if (intErrorCount > 0)
                {
                    #region "TRUNCATE TEMP Table"
                    //TRUNCATE TEMP Table, to be import New Correct Records
                    strERRQuery.Clear();
                    strERRQuery.Append(" TRUNCATE TABLE " + Dts.Variables["User::checkType"].Value.ToString() + "_TEMP");
                    _updateInsert(strERRQuery.ToString(), myConnection);
                    #endregion
                    #region "Bulk Update Records"
                    //正しいデータテーブルからインポートするためいに。
                    using (SqlBulkCopy bulkCopy = new SqlBulkCopy(myConnection))
                    {
                        bulkCopy.DestinationTableName = Dts.Variables["User::checkType"].Value.ToString() + "_TEMP";   //Assign table name
                        _connectionOpen(myConnection);
                        bulkCopy.BulkCopyTimeout = 600; //Default Timeut 30 Change to 600. in seconds
                        bulkCopy.WriteToServer(dtFaultyTemp);   //Write into Actual table.
                    }
                    #endregion
                }
            }
            #region Catch/Finally
            catch (Exception ex) 
            {
                throw ex;
            }
            finally
            {
                strERRQuery = null;
                dtFaultyTemp = null;
                strBuildRow = null;
                drTemp = null;
                strErrorMsg = null;
                strPackageCode = null;
            }
            #endregion
        }
        #endregion

        #region "Get DataTable"
        //Created On: 08-08-2016
        //Description: Aim to Return DataTable from the Query.
        public DataTable _getDataTable(string strQuery, SqlConnection myConnection)
        {
            StringBuilder strERRQuery = new StringBuilder();
            DataTable objDT = new DataTable();
            SqlCommand myCommand;
            SqlDataAdapter sqlSelectData;
            try
            {
                _connectionOpen(myConnection);
                myCommand = new SqlCommand(strQuery, myConnection);
                myCommand.CommandType = CommandType.Text;
                sqlSelectData = new SqlDataAdapter();
                sqlSelectData.SelectCommand = myCommand;
                myCommand.CommandTimeout = 600; //Increases Query execution timeout.
                sqlSelectData.Fill(objDT);
            }
            #region CATCH/FINALLY
            catch (Exception ex)
            {
                throw ex;
            }
            finally
            {
                strQuery = null;
                myCommand = null;
                sqlSelectData = null;
                strERRQuery = null;
            }
            #endregion
            return objDT;
        }
        #endregion

        #region "Update/Insert Query in Db"
        protected void _updateInsert(string strQuery, SqlConnection myConnection)
        {
            StringBuilder strERRQuery = new StringBuilder();
            SqlCommand myCommand;
            try
            {
                myCommand = new SqlCommand(strQuery, myConnection);
                _connectionOpen(myConnection);
                myCommand.ExecuteNonQuery();
            }
            #region CATCH/FINALLY
            catch (Exception ex)
            {
                throw ex;
            }
            finally
            {
                strERRQuery = null;
                myConnection = null;
                myCommand = null;
            }
            #endregion
        }
        #endregion

        #region Connection Open
        private void _connectionOpen(SqlConnection myConnection)
        {
            try
            {
                if (myConnection.State != ConnectionState.Open)
                {
                    myConnection.Open();
                }
            }
            catch (Exception ex)
            {
                throw ex;
            }
        }
        #endregion

        #region Connection Close
        private void _connectionClose(SqlConnection myConnection)
        {
            try
            {
                if (myConnection.State != ConnectionState.Closed)
                {
                    myConnection.Close();
                }
            }
            catch (Exception ex)
            {
                throw ex;
            }
        }
        #endregion

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_ce3ffc09050545a588750b50f21c1788.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_ce3ffc09050545a588750b50f21c1788.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_ce3ffc09050545a588750b50f21c1788.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_ce3ffc09050545a588750b50f21c1788.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_ce3ffc09050545a588750b50f21c1788.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>ST_ce3ffc09050545a588750b50f21c1788</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>ST_ce3ffc09050545a588750b50f21c1788</msb:DisplayName>
		<msb:ProjectId>{EE24C7D7-5D12-4340-B8D9-E41721313B68}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_24cc93c5ce094adb9bb48363976c1632.csproj"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_ce3ffc09050545a588750b50f21c1788.Properties.Settings.get_Default():ST_ce3ffc09050545a588750b50f21c1788.Properties.Sett" +
    "ings")]

namespace ST_ce3ffc09050545a588750b50f21c1788.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="ST_24cc93c5ce094adb9bb48363976c1632.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?><Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003"><PropertyGroup><ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids><Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration><Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform><ProductVersion>8.0.30703</ProductVersion><SchemaVersion>2.0</SchemaVersion><ProjectGuid>{6f1cd3ad-124c-410c-a3da-0ed5e3468b82}</ProjectGuid><OutputType>Library</OutputType><AppDesignerFolder>Properties</AppDesignerFolder><RootNamespace>ST_ce3ffc09050545a588750b50f21c1788</RootNamespace><AssemblyName>ST_24cc93c5ce094adb9bb48363976c1632</AssemblyName><TargetFrameworkVersion>v4.0</TargetFrameworkVersion><FileAlignment>512</FileAlignment><ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Debug' "><DebugSymbols>true</DebugSymbols><DebugType>full</DebugType><Optimize>false</Optimize><OutputPath>.\bin\Debug\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>DEBUG;TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Release' "><DebugSymbols>false</DebugSymbols><Optimize>true</Optimize><OutputPath>.\bin\Release\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><ItemGroup><Reference Include="System" /><Reference Include="System.Data" /><Reference Include="System.Windows.Forms" /><Reference Include="System.Xml" /><Reference Include="Microsoft.SqlServer.ManagedDTS, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.ScriptTask, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /></ItemGroup><ItemGroup><AppDesigner Include="Properties\" /><Compile Include="Properties\AssemblyInfo.cs"><SubType>Code</SubType></Compile><EmbeddedResource Include="Properties\Resources.resx"><Generator>ResXFileCodeGenerator</Generator><LastGenOutput>Resources.Designer.cs</LastGenOutput></EmbeddedResource><Compile Include="Properties\Resources.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Resources.resx</DependentUpon></Compile><None Include="Properties\Settings.settings"><Generator>SettingsSingleFileGenerator</Generator><LastGenOutput>Settings.Designer.cs</LastGenOutput></None><Compile Include="Properties\Settings.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Settings.settings</DependentUpon></Compile><Compile Include="ScriptMain.cs"><SubType>Code</SubType></Compile></ItemGroup><!-- Include the build rules for a C# project.--><Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" /><ProjectExtensions><VisualStudio><FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}"><ProjectProperties HostName="ScriptTask" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="#HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\VisualStudio\10.0\InstallDir#\devenv.exe" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" /><Host Name="ScriptTask" GeneratedNamespace="$safeprojectname" IconIndex=""></Host><ProjectClient><HostIdentifier>SSIS_ST120</HostIdentifier></ProjectClient></FlavorProperties></VisualStudio></ProjectExtensions></Project>]]></ProjectItem>
          <BinaryItem
            Name="ST_24cc93c5ce094adb9bb48363976c1632.dll">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
AApvGgAACqIRChxyBAcAcKIRCh0HbxoAAAqiEQoecqYHAHCiEQofCQWiEQofCnJsBwBwohEKKCYA
AApvHwAACiYCBm8aAAAKBCgLAAAGEQUXWRMFEQYXWRMGA28hAAAKCG8wAAAKA28xAAAKEQYXWBMG
EQYRBT99/v//A28vAAAKcnwHAHBvMgAAChEEFj6qAAAABm8eAAAKJgZyqgcAcAIoFgAACm8XAAAK
cswHAHBvGAAACm8ZAAAKbxoAAApy7AcAcCgzAAAKbx8AAAomAgZvGgAACgQoCwAABgRzNAAAChMI
EQgCKBYAAApvFwAACnLMBwBwbxgAAApvGQAACm8aAAAKcuwHAHAoNQAACm82AAAKAgQoDAAABhEI
IFgCAABvNwAAChEIA284AAAK3gwRCCwHEQhvOQAACtzeBRMJEQl63g8UChQQARQLFAwUEAMUDdwq
AABBTAAAAgAAAEACAABNAAAAjQIAAAwAAAAAAAAAAAAAABUAAACGAgAAmwIAAAUAAAAkAAABAgAA
ABUAAACNAgAAogIAAA8AAAAAAAAAGzACAFMAAAAEAAARcxwAAAomcx0AAAoKAgQoDAAABgMEczoA
AAoLBxdvOwAACnM8AAAKDAgHbz0AAAoHIFgCAABvPgAACggGbz8AAAom3gMNCXreCBQQARQLFAzc
BioAARwAAAAADAA4RAADJAAAAQIADAA9SQAIAAAAABswAgAqAAAABQAAEXMcAAAKJgMEczoAAAoK
AgQoDAAABgZvQAAACibeAwsHet4GFBACFArcKgAAARwAAAAABgAYHgADJAAAAQIABgAdIwAGAAAA
ABswAgAVAAAABgAAEQNvQQAAChcuBgNvQgAACt4DCgZ6KgAAAAEQAAAAAAAAEREAAyQAAAEbMAEA
FAAAAAYAABEDb0EAAAosBgNvQwAACt4DCgZ6KgEQAAAAAAAAEBAAAyQAAAEeAihEAAAKKrQAAADO
yu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIsIFZl
cnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5
MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAAAAAAAAAAUEFE
UEFEULQAAABCU0pCAQABAAAAAAAMAAAAdjQuMC4zMDMxOQAAAAAFAGwAAAC0BQAAI34AACAGAADE
CAAAI1N0cmluZ3MAAAAA5A4AAPgHAAAjVVMA3BYAABAAAAAjR1VJRAAAAOwWAABEAgAAI0Jsb2IA
AAAAAAAAAgAAAVcdogEJAwAAAPolMwAWAAABAAAALwAAAAUAAAAGAAAADgAAAAoAAABEAAAAAgAA
AA8AAAAGAAAAAgAAAAMAAAAEAAAAAQAAAAUAAAABAAAAAQAAAAAACgABAAAAAAAGAMEAugAKAN0A
yAAOAD0BFAEGAFkBugAGAG8BXgEGAKABiwESACsCHwISAEsCNQIGAAoD8AIGADUDIwMGAEwDIwMG
AGkDIwMGAIgDIwMGAKEDIwMGALoDIwMGANUDIwMGAPADIwMGAAkEIwMGAEIEIgQGAGIEIgQGALcE
pAQGANQEugAGANkEugAGAP0EIwMKACkFEwUKAEIFEwUGAFcFIgQOAHkFFAEOAJsFFAEWAPQF1AUW
AAwG1AUGAD0GMQYSAF4GHwISAHkGHwIGAK0GugAGALQGugASAN8GHwISACAHHwISAFYHNQIGAJ0H
ugASALEHNQISAM8HvAcSANkHHwISAPUHNQISACkIvAcSAEwIvAcSAFkIHwIAAAAAAQAAAAAAAQAB
AAAAEAAyADwABQABAAEAAAEQAGsAPAAJAAMABQABABAAdAB/AA0ABAAIAAMBAACjAAAAEQAEAA8A
EQB/ARMAEQCsARcAEQD2ATkABgajAmUAVoCrAmgAVoCzAmgAUCAAAAAAgxi8ARsAAQBYIAAAAACT
CMIBHwABAJEgAAAAAJMI1gEkAAEAmCAAAAAAkwjiASkAAQCgIAAAAACWCAYCPQACALMgAAAAAIYY
vAEbAAIApyAAAAAAkRhyBacAAgC8IAAAAACGABoCGwACALgjAAAAAIEAWQJHAAIAxCYAAAAAhgBm
AlAABQBAJwAAAACEAHQCWAAHAJQnAAAAAIEAggJfAAkAyCcAAAAAgQCSAl8ACgD4JwAAAACGGLwB
GwALAAAAAQC7AgAAAQDBAgAAAgDOAgAAAwDbAgAAAQDnAgAAAgDOAgAAAQDnAgAAAgDOAgAAAQDO
AgAAAQDOAkkAvAF2AFEAvAF2AFkAvAF2AGEAvAF2AGkAvAF2AHEAvAF2AHkAvAF2AIEAvAF2AIkA
vAF2AJEAvAF2AJkAvAF7AKEAvAEbAKkAvAEbAAkAvAEbALEA6wSAALEABgWHACkAvAGMAMkAvAGY
ANkAvAEbABEAvAEbAOEAvAEbABkArQWrAOkA/gWwAPEAFQa1APkAHga7AAkAKAa/AEEAvAF2AAEB
vAEbADkAvAEbAAEBSwbDAAEBUQbJADkAWAYbADkAcAbQABEBlAbWAOkAngZ7ACEBvga/ABkBygba
ABkB0gbgABkB2Qb2AAkBFQb5ACkBFQYAARkB5wa/ABkB7wYFASkB+wYLAQEBCQcQASkBFgcYATkA
NQcdAQkBQQcjATkASAcbADEBQQd2ABkB0gYqATkBvAFfABkB0gYxATkBYgd2ADkBewd7ADkBjwc3
AUEBqQcbAEkBvAFYAFEB5QdWAWEBvAEbAGEBBAhdAVEBFgh7AGkBNwhkAVEBPAjWAHEBaQiBAXEB
cwgbAHEBeAgbABkAvAEbAAgAFABsAAgAGABxACkAkwCeAC4AGwD+AS4AIwD+AS4AYwAkAi4ACwCN
AS4AEwDVAS4AMwDVAS4AKwD+AS4AOwAEAi4AQwD+AS4AWwAbAkMAawBxAEkAkwCeAGEAmwBxAIMA
qwBxAJMA5gA9AWoBeAGHAQIAAQADAAMAAABvAS8AAADuATQAAAASAkIAAgACAAMAAgADAAUAAQAE
AAUAAgAFAAcABIAAAAEAAABMGNpKAAAAAAAAgAQAAAQAAAAAAAAAAAAAAAEAsQAAAAAABAAAAAAA
AAAAAAAAAQC6AAAAAAAMAAAAAAAAAAAAAAAKAPUAAAAAAAQAAAAAAAAAAAAAAAEAHwIAAAAADAAA
AAAAAAAAAAAACgC1BQAAAAAAAAAAAQAAAH4IAAAFAAQAAAAAAAA8TW9kdWxlPgBTVF8yNGNjOTNj
NWNlMDk0YWRiOWJiNDgzNjM5NzZjMTYzMi5kbGwAUmVzb3VyY2VzAFNUX2NlM2ZmYzA5MDUwNTQ1
YTU4ODc1MGI1MGYyMWMxNzg4LlByb3BlcnRpZXMAU2V0dGluZ3MAU2NyaXB0TWFpbgBTVF9jZTNm
ZmMwOTA1MDU0NWE1ODg3NTBiNTBmMjFjMTc4OABTY3JpcHRSZXN1bHRzAG1zY29ybGliAFN5c3Rl
bQBPYmplY3QAU3lzdGVtLkNvbmZpZ3VyYXRpb24AQXBwbGljYXRpb25TZXR0aW5nc0Jhc2UATWlj
cm9zb2Z0LlNxbFNlcnZlci5TY3JpcHRUYXNrAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlRhc2tz
LlNjcmlwdFRhc2sAVlNUQVJUU2NyaXB0T2JqZWN0TW9kZWxCYXNlAEVudW0AU3lzdGVtLlJlc291
cmNlcwBSZXNvdXJjZU1hbmFnZXIAcmVzb3VyY2VNYW4AU3lzdGVtLkdsb2JhbGl6YXRpb24AQ3Vs
dHVyZUluZm8AcmVzb3VyY2VDdWx0dXJlAC5jdG9yAGdldF9SZXNvdXJjZU1hbmFnZXIAZ2V0X0N1
bHR1cmUAc2V0X0N1bHR1cmUAQ3VsdHVyZQBkZWZhdWx0SW5zdGFuY2UAZ2V0X0RlZmF1bHQARGVm
YXVsdABNYWluAFN5c3RlbS5EYXRhAERhdGFUYWJsZQBTeXN0ZW0uRGF0YS5TcWxDbGllbnQAU3Fs
Q29ubmVjdGlvbgBfcmVwbGFjZURhdGEAX2dldERhdGFUYWJsZQBfdXBkYXRlSW5zZXJ0AF9jb25u
ZWN0aW9uT3BlbgBfY29ubmVjdGlvbkNsb3NlAHZhbHVlX18AU3VjY2VzcwBGYWlsdXJlAHZhbHVl
AGR0RmF1bHR5VGVtcABteUNvbm5lY3Rpb24Ac3RyRXJyb3JNc2cAc3RyUXVlcnkAU3lzdGVtLlJ1
bnRpbWUuVmVyc2lvbmluZwBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUAU3lzdGVtLlJlZmxlY3Rp
b24AQXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0cmlidXRlAEFz
c2VtYmx5Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUAQXNz
ZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmlidXRlAEFzc2VtYmx5
VHJhZGVtYXJrQXR0cmlidXRlAEFzc2VtYmx5Q3VsdHVyZUF0dHJpYnV0ZQBBc3NlbWJseVZlcnNp
b25BdHRyaWJ1dGUAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBDb21waWxhdGlvblJl
bGF4YXRpb25zQXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAFNUXzI0Y2M5
M2M1Y2UwOTRhZGI5YmI0ODM2Mzk3NmMxNjMyAFN5c3RlbS5EaWFnbm9zdGljcwBEZWJ1Z2dlck5v
blVzZXJDb2RlQXR0cmlidXRlAFR5cGUAUnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5k
bGUAQXNzZW1ibHkAZ2V0X0Fzc2VtYmx5AFN5c3RlbS5Db21wb25lbnRNb2RlbABFZGl0b3JCcm93
c2FibGVBdHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxlU3RhdGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRy
aWJ1dGUALmNjdG9yAFNTSVNTY3JpcHRUYXNrRW50cnlQb2ludEF0dHJpYnV0ZQBTY3JpcHRPYmpl
Y3RNb2RlbABnZXRfRHRzAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuTWFuYWdlZERUUwBNaWNyb3NvZnQu
U3FsU2VydmVyLkR0cy5SdW50aW1lAFZhcmlhYmxlcwBnZXRfVmFyaWFibGVzAFZhcmlhYmxlAGdl
dF9JdGVtAGdldF9WYWx1ZQBUb1N0cmluZwBTeXN0ZW0uVGV4dABTdHJpbmdCdWlsZGVyAENsZWFy
AEFwcGVuZABSZXNldABEYXRhUm93Q29sbGVjdGlvbgBnZXRfUm93cwBJbnRlcm5hbERhdGFDb2xs
ZWN0aW9uQmFzZQBnZXRfQ291bnQAc2V0X1Rhc2tSZXN1bHQAU3RyaW5nAEV4Y2VwdGlvbgBnZXRf
TWVzc2FnZQBSZXBsYWNlAENvbmNhdABFbXB0eQBEYXRhUm93AFRvVXBwZXIAb3BfRXF1YWxpdHkA
Z2V0X0l0ZW1BcnJheQBBcHBlbmRGb3JtYXQAZ2V0X1RhYmxlAERhdGFDb2x1bW5Db2xsZWN0aW9u
AGdldF9Db2x1bW5zAFJlbW92ZQBBY2NlcHRDaGFuZ2VzAFNxbEJ1bGtDb3B5AHNldF9EZXN0aW5h
dGlvblRhYmxlTmFtZQBzZXRfQnVsa0NvcHlUaW1lb3V0AFdyaXRlVG9TZXJ2ZXIASURpc3Bvc2Fi
bGUARGlzcG9zZQBTcWxDb21tYW5kAFN5c3RlbS5EYXRhLkNvbW1vbgBEYkNvbW1hbmQAQ29tbWFu
ZFR5cGUAc2V0X0NvbW1hbmRUeXBlAFNxbERhdGFBZGFwdGVyAHNldF9TZWxlY3RDb21tYW5kAHNl
dF9Db21tYW5kVGltZW91dABEYkRhdGFBZGFwdGVyAEZpbGwARXhlY3V0ZU5vblF1ZXJ5AERiQ29u
bmVjdGlvbgBDb25uZWN0aW9uU3RhdGUAZ2V0X1N0YXRlAE9wZW4AQ2xvc2UAU1RfY2UzZmZjMDkw
NTA1NDVhNTg4NzUwYjUwZjIxYzE3ODguUHJvcGVydGllcy5SZXNvdXJjZXMucmVzb3VyY2VzAAAA
AABxUwBUAF8AYwBlADMAZgBmAGMAMAA5ADAANQAwADUANAA1AGEANQA4ADgANwA1ADAAYgA1ADAA
ZgAyADEAYwAxADcAOAA4AC4AUAByAG8AcABlAHIAdABpAGUAcwAuAFIAZQBzAG8AdQByAGMAZQBz
AAAtVQBzAGUAcgA6ADoAYwBvAG4AbgBlAGMAdABpAG8AbgBTAHQAcgBpAG4AZwAAHyAAUwBFAEwA
RQBDAFQAIAAqACwAQwBBAFMARQAgAACAiyAAVwBIAEUATgAgAEMATwBOAFYARQBSAFQAKABEAEEA
VABFACwAv4p0ZR1PaHnlZdhOKQAgAD4AIABDAE8ATgBWAEUAUgBUACgARABBAFQARQAsAEQAQQBU
AEUAQQBEAEQAKABEAEEAWQAsAC0AMQAsAEcARQBUAEQAQQBUAEUAKAApACkAKQAgAAFZIABUAEgA
RQBOACAAJwBUAFIAVQBFACcAIABFAEwAUwBFACAAJwBGAEEATABTAEUAJwAgAEUATgBEACAAQQBT
ACAARABFAEwAXwBSAEUAQwBPAFIARAAgAAFLIABGAFIATwBNACAARABfAEMASABPAFUAUwBFAEkA
XwBEAEUATgBQAFkATwBVAF8ATQBFAEkAUwBBAEkAXwBUAEUATQBQADsAIAAALccw/DC/MGswBlxl
Z24wv4p0ZR1PaHnlZUwwWFsoV1UwjDBmMEQwfjBZMAIwASEgAFMARQBMAEUAQwBUACAAKgAsACAA
QwBBAFMARQAgAACA+yAAVwBIAEUATgAgAEMAQQBTAFQAKABDAE8ATgBWAEUAUgBUACgAVgBBAFIA
QwBIAEEAUgAoADEAMAApACwAv4p0ZR1PaHnlZdhOLAAxADIAMQApACAAQQBTACAARABBAFQARQAp
ACAAPAA9ACAAKABTAEUATABFAEMAVAAgAE0AQQBYACgACGemXkJ9hk7lZSkAIABGAFIATwBNACAA
TQBfAEQARQBOAFAAWQBPAFUAXwBTAEkATQBFAF8ATQBBAFMAVABFAFIAIABXAEgARQBSAEUAIAAI
Z6Ze4H3lZSAASQBTACAATgBPAFQAIABOAFUATABMACkAIAABNSAAVABIAEUATgAgACcAVABSAFUA
RQAnACAARQBMAFMARQAgACcARgBBAEwAUwBFACcAIAABbyAARQBOAEQAIABBAFMAIABEAEUATABf
AFIARQBDAE8AUgBEACAARgBSAE8ATQAgAEQAXwBDAEgATwBVAFMARQBJAF8ARABFAE4AUABZAE8A
VQBfAE0ARQBJAFMAQQBJAF8AVABFAE0AUAA7ACAAADEIZ6Ze4H2BMH4wVzBfMAIw4H2BMOVlTVJu
ML+KdGUdT2h55WVMMEIwijB+MFkwAjABISAAUwBFAEwARQBDAFQAIABUAEUATQBQAC4AKgAsACAA
AICPIABDAEEAUwBFACAAVwBIAEUATgAgAFQARQBNAFAALgC/inRlHU9oeWp191MgAD0AIABNAEEA
SQBOAC4Av4p0ZR1PaHlqdfdTIABBAE4ARAAgAFQARQBNAFAALgC/inRlHU9oeQ5mMH1qdfdTIAA9
ACAATQBBAEkATgAuAL+KdGUdT2h5DmYwfWp191MgAAFZIABGAFIATwBNACAARABfAEMASABPAFUA
UwBFAEkAXwBEAEUATgBQAFkATwBVAF8ATQBFAEkAUwBBAEkAXwBUAEUATQBQACAAQQBTACAAVABF
AE0AUAAgAABZIABMAEUARgBUACAASgBPAEkATgAgAEQAXwBDAEgATwBVAFMARQBJAF8ARABFAE4A
UABZAE8AVQBfAE0ARQBJAFMAQQBJACAAQQBTACAATQBBAEkATgAgAAA9IABPAE4AIABNAEEASQBO
AC4Av4p0ZR1PaHlqdfdTIAA9ACAAVABFAE0AUAAuAL+KdGUdT2h5anX3UyAAAUcgAEEATgBEACAA
TQBBAEkATgAuAL+KdGUdT2h5DmYwfWp191MgAD0AIABUAEUATQBQAC4Av4p0ZR1PaHkOZjB9anX3
UyAAATO/inRlHU9oeWp191P7ML+KdGUdT2h5DmYwfWp191NMMOJlazDWU7yPCG5/MGcwWTACMAFD
SQBOAFMARQBSAFQAIABJAE4AVABPACAASwBBAE4AUwBIAEkAXwBQAEEAQwBLAEEARwBFAF8ARQBS
AFIATwBSACAAAEsgACgA0TDDMLEw/DC4MLMw/DDJMCwAxzD8ML8w5WXYTiwAqDDpMPww5WVCZiwA
qDDpMPwwhVG5WywAqDDpMPww1TDpMLAwKQAgAAEVIABWAEEATABVAEUAUwAoACcARwABI1UAcwBl
AHIAOgA6AHAAYQBjAGsAYQBnAGUAQwBvAGQAZQAABycALAAnAAEjVQBzAGUAcgA6ADoAYwB1AHIA
cgBlAG4AdABEAGEAdABlAAAbVQBzAGUAcgA6ADoAcwB5AHMARABhAHQAZQAAFycALAAnALcwuTDG
MOAwqDDpMPwwOgABAycAAQMtAAEPJwAsACcAMwAnACkAOwABFUQARQBMAF8AUgBFAEMATwBSAEQA
AAlUAFIAVQBFAAAJewAwAH0AIAAAAwIwASEgAFQAUgBVAE4AQwBBAFQARQAgAFQAQQBCAEwARQAg
AAAfVQBzAGUAcgA6ADoAYwBoAGUAYwBrAFQAeQBwAGUAAAtfAFQARQBNAFAAAEGUg1M3KztNlkxi
ghq5Q44ACLd6XFYZNOCJCImEXc2AgMyRAwYSFQMGEhkDIAABBAAAEhUEAAASGQUAAQESGQQIABIV
BAgAEhkDBhIMBAAAEgwECAASDAggAwESHRIhDgcgAhIdDhIhBiACAQ4SIQUgAQESIQIGCAMGERQE
AAAAAAQBAAAABCABAQ4EIAEBCAYAARJZEV0EIAASYQYgAgEOEmEEBwESFQUgAQERaQgBAAIAAAAA
AAMAAAEEIAASdQQgABJ5BSABEn0cAyAAHAMgAA4FIAASgIEGIAESgIEOBSAAEoCFAyAACAUgAg4O
DgUAAQ4dDg8HBg4SIRKAgRIdEoCRHQ4CBg4GIAESgJUIBCABHA4FAAICDg4EIAAdHAcgAhKAgQ4c
BCAAEh0FIAASgJkGIAEBEoCVBgADDg4ODgUAAg4ODgUgAQESHRgHCxKAgRKAgRKAlQ4ICAgIEoCd
EoCRHQ4GIAEBEYCtBiABARKApQUgAQgSHQ0HBBIdEoClEoCxEoCRCAcCEoClEoCRBSAAEYC9BQcB
EoCRRwEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC4wAQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFt
ZRAuTkVUIEZyYW1ld29yayA0KAEAI1NUX2NlM2ZmYzA5MDUwNTQ1YTU4ODc1MGI1MGYyMWMxNzg4
AAAFAQAAAAAWAQARQ29weXJpZ2h0IEAgIDIwMTYAAAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4
Y2VwdGlvblRocm93cwEAEEIAAAAAAAAAAAAALkIAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAACBC
AAAAAAAAAAAAAAAAAAAAAF9Db3JEbGxNYWluAG1zY29yZWUuZGxsAAAAAAD/JQAgABAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAEAAA
ABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgAAABYYAAA
sAMAAAAAAAAAAAAAsAM0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAAAL0E7/4A
AAEAAAABANpKTBgAAAEA2kpMGD8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAAAQBWAGEA
cgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAAAAAAAACw
BBADAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAAOwCAAABADAAMAAwADAAMAA0AGIA
MAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABTAFQAXwBjAGUAMwBm
AGYAYwAwADkAMAA1ADAANQA0ADUAYQA1ADgAOAA3ADUAMABiADUAMABmADIAMQBjADEANwA4ADgA
AABAAA8AAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4ANgAyADIAMAAuADEAOQAx
ADYAMgAAAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAFQAXwAyADQAYwBjADkA
MwBjADUAYwBlADAAOQA0AGEAZABiADkAYgBiADQAOAAzADYAMwA5ADcANgBjADEANgAzADIALgBk
AGwAbAAAAEgAEgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBwAHkAcgBpAGcA
aAB0ACAAQAAgACAAMgAwADEANgAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBt
AGUAAABTAFQAXwAyADQAYwBjADkAMwBjADUAYwBlADAAOQA0AGEAZABiADkAYgBiADQAOAAzADYA
MwA5ADcANgBjADEANgAzADIALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAA
AAAAUwBUAF8AYwBlADMAZgBmAGMAMAA5ADAANQAwADUANAA1AGEANQA4ADgANwA1ADAAYgA1ADAA
ZgAyADEAYwAxADcAOAA4AAAARAAPAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAu
ADAALgA2ADIAMgAwAC4AMQA5ADEANgAyAAAAAABIAA8AAQBBAHMAcwBlAG0AYgBsAHkAIABWAGUA
cgBzAGkAbwBuAAAAMQAuADAALgA2ADIAMgAwAC4AMQA5ADEANgAyAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAADAAAAEAyAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\返品実績"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:Description="Script Task"
      DTS:DTSID="{8E45A614-B071-401F-829A-0E9384AA0DA1}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="返品実績"
      DTS:ThreadHint="11">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_dcd091a5e1e8488f8e675f10e1790320"
          VSTAMajorVersion="3"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadOnlyVariables="User::checkType,User::connectionString,User::currentDate,User::packageCode,User::sysDate">
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_ce3ffc09050545a588750b50f21c1788.Properties.Settings.get_Default():ST_ce3ffc09050545a588750b50f21c1788.Properties.Sett" +
    "ings")]

namespace ST_ce3ffc09050545a588750b50f21c1788.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="ST_dcd091a5e1e8488f8e675f10e1790320.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?><Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003"><PropertyGroup><ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids><Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration><Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform><ProductVersion>8.0.30703</ProductVersion><SchemaVersion>2.0</SchemaVersion><ProjectGuid>{6f1cd3ad-124c-410c-a3da-0ed5e3468b82}</ProjectGuid><OutputType>Library</OutputType><AppDesignerFolder>Properties</AppDesignerFolder><RootNamespace>ST_ce3ffc09050545a588750b50f21c1788</RootNamespace><AssemblyName>ST_dcd091a5e1e8488f8e675f10e1790320</AssemblyName><TargetFrameworkVersion>v4.0</TargetFrameworkVersion><FileAlignment>512</FileAlignment><ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Debug' "><DebugSymbols>true</DebugSymbols><DebugType>full</DebugType><Optimize>false</Optimize><OutputPath>.\bin\Debug\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>DEBUG;TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Release' "><DebugSymbols>false</DebugSymbols><Optimize>true</Optimize><OutputPath>.\bin\Release\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><ItemGroup><Reference Include="System" /><Reference Include="System.Data" /><Reference Include="System.Windows.Forms" /><Reference Include="System.Xml" /><Reference Include="Microsoft.SqlServer.ManagedDTS, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.ScriptTask, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /></ItemGroup><ItemGroup><AppDesigner Include="Properties\" /><Compile Include="Properties\AssemblyInfo.cs"><SubType>Code</SubType></Compile><EmbeddedResource Include="Properties\Resources.resx"><Generator>ResXFileCodeGenerator</Generator><LastGenOutput>Resources.Designer.cs</LastGenOutput></EmbeddedResource><Compile Include="Properties\Resources.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Resources.resx</DependentUpon></Compile><None Include="Properties\Settings.settings"><Generator>SettingsSingleFileGenerator</Generator><LastGenOutput>Settings.Designer.cs</LastGenOutput></None><Compile Include="Properties\Settings.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Settings.settings</DependentUpon></Compile><Compile Include="ScriptMain.cs"><SubType>Code</SubType></Compile></ItemGroup><!-- Include the build rules for a C# project.--><Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" /><ProjectExtensions><VisualStudio><FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}"><ProjectProperties HostName="ScriptTask" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="#HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\VisualStudio\10.0\InstallDir#\devenv.exe" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" /><Host Name="ScriptTask" GeneratedNamespace="$safeprojectname" IconIndex=""></Host><ProjectClient><HostIdentifier>SSIS_ST120</HostIdentifier></ProjectClient></FlavorProperties></VisualStudio></ProjectExtensions></Project>]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[
#region Namespaces
using System;
using System.Data;
using System.Data.SqlClient;
using System.Text;
#endregion

namespace ST_ce3ffc09050545a588750b50f21c1788
{
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
    {
        #region "Main Method"
        /// <summary>
        /// 作成者：イルファン　マンスリー
        /// 説明：仕入実績の業務データチェックする。
        /// 作成日：２０１６年０８月０８日
        /// </summary>
        public void Main()
		{
            string strConnection = Dts.Variables["User::connectionString"].Value.ToString();
            SqlConnection myConnection = new SqlConnection(strConnection);
            StringBuilder strERRQuery = new StringBuilder();
            DataTable dtFaultyTemp;
            try
            { 
                dtFaultyTemp = new DataTable();
                _connectionOpen(myConnection);
                #region "Check for 伝票頭一桁 Check"
                //Get All The Records of Temp TABLE, with New Column DEL_RECORD as Flag.
                //Faulty Records will have DEL_RECORD as 'TRUE'
                strERRQuery.Clear();
                strERRQuery.Append(" SELECT HENPIN.*, ");
                strERRQuery.Append(" CASE WHEN SUBSTRING(HENPIN.返品伝票番号,1,1) != KANJO.伝票頭一桁 ");
                strERRQuery.Append(" OR KANJO.伝票頭一桁 IS NULL ");
                strERRQuery.Append(" THEN 'TRUE' ELSE 'FALSE' ");
                strERRQuery.Append(" END AS DEL_RECORD ");
                strERRQuery.Append(" FROM T_DAY_SKU_HENPIN_JISSEKI_TEMP AS HENPIN ");
                strERRQuery.Append(" LEFT JOIN M_KANJOU_CODE AS KANJO ");
                strERRQuery.Append(" ON HENPIN.勘定コード = KANJO.勘定コード; ");
                dtFaultyTemp.Reset();
                dtFaultyTemp = _getDataTable(strERRQuery.ToString(), myConnection);
                if (dtFaultyTemp.Rows.Count > 0)
                {
                    _replaceData(dtFaultyTemp, myConnection, "返品実績伝票の先頭桁を間違えました。");   //Replace & Remove Data in Actual Db Table
                }
                #endregion

                #region "Check for 返品伝票番号,返品伝票明細番号(PK) Check"
                strERRQuery.Clear();
                strERRQuery.Append(" SELECT TEMP.*, ");
                strERRQuery.Append(" CASE WHEN TEMP.返品伝票番号 = MAIN.返品伝票番号 ");
                strERRQuery.Append(" AND TEMP.返品伝票明細番号 = MAIN.返品伝票明細番号 ");
                strERRQuery.Append(" THEN 'TRUE' ELSE 'FALSE' ");
                strERRQuery.Append(" END AS DEL_RECORD ");
                strERRQuery.Append(" FROM T_DAY_SKU_HENPIN_JISSEKI_TEMP AS TEMP ");
                strERRQuery.Append(" LEFT JOIN T_DAY_SKU_HENPIN_JISSEKI AS MAIN ");
                strERRQuery.Append(" ON TEMP.返品伝票番号 = MAIN.返品伝票番号 ");
                strERRQuery.Append(" AND TEMP.返品伝票明細番号 = MAIN.返品伝票明細番号;");
                dtFaultyTemp.Reset();
                dtFaultyTemp = _getDataTable(strERRQuery.ToString(), myConnection);
                if (dtFaultyTemp.Rows.Count > 0)
                {
                    _replaceData(dtFaultyTemp, myConnection, "返品伝票番号・返品伝票明細番号が既に取込済みです。");   //Replace & Remove Data in Actual Db Table
                }
                #endregion

                #region "Check for 訂正元購買伝票番号 Check"
                //Get All The Records of Temp TABLE, with New Column DEL_RECORD as Flag.
                //Faulty Records will have DEL_RECORD as 'TRUE'
                strERRQuery.Clear();
                strERRQuery.Append(" SELECT *, CASE ");
                strERRQuery.Append(" WHEN 勘定コード IN ('971','972','973','974') ");
                strERRQuery.Append(" THEN CASE WHEN LEN(訂正元購買伝票番号) = 10 THEN 'FALSE' ELSE 'TRUE' END ");
                strERRQuery.Append(" ELSE 'FALSE'  END AS DEL_RECORD ");
                strERRQuery.Append(" FROM T_DAY_SKU_HENPIN_JISSEKI_TEMP;");
                dtFaultyTemp.Reset();
                dtFaultyTemp = _getDataTable(strERRQuery.ToString(), myConnection);
                if (dtFaultyTemp.Rows.Count > 0)
                {
                    _replaceData(dtFaultyTemp, myConnection, "訂正元購買伝票番号チェックでエラーが発生しました。");   //Replace & Remove Data in Actual Db Table
                }
                #endregion

                #region "Check for 締日 Check"
                //Get All The Records of Temp TABLE, with New Column DEL_RECORD as Flag.
                //Faulty Records will have DEL_RECORD as 'TRUE'
                strERRQuery.Clear();
                strERRQuery.Append(" SELECT *, CASE ");
                strERRQuery.Append(" WHEN CAST(CONVERT(VARCHAR(10),返品日付,121) AS DATE) <= (SELECT MAX(月度終了日) FROM M_DENPYOU_SIME_MASTER WHERE 月度締日 IS NOT NULL) ");
                strERRQuery.Append(" THEN 'TRUE' ELSE 'FALSE' ");
                strERRQuery.Append(" END AS DEL_RECORD ");
                strERRQuery.Append(" FROM T_DAY_SKU_HENPIN_JISSEKI_TEMP; ");
                dtFaultyTemp.Reset();
                dtFaultyTemp = _getDataTable(strERRQuery.ToString(), myConnection);
                if (dtFaultyTemp.Rows.Count > 0)
                {
                    _replaceData(dtFaultyTemp, myConnection, "月度締めました。締め日前の返品実績日があります。");   //Replace & Remove Data in Actual Db Table
                }
                #endregion

                #region "Check for 棚卸確定日 Check"
                //Get All The Records of Temp TABLE, with New Column DEL_RECORD as Flag.
                //Faulty Records will have DEL_RECORD as 'TRUE'
                strERRQuery.Clear();
                strERRQuery.Append(" SELECT HENPIN.*, CASE ");
                strERRQuery.Append(" WHEN HENPIN.返品日付 < TANA.棚卸日付  ");
                strERRQuery.Append(" THEN 'TRUE' ELSE 'FALSE'  ");
                strERRQuery.Append(" END AS DEL_RECORD  ");
                strERRQuery.Append(" FROM T_DAY_SKU_HENPIN_JISSEKI_TEMP AS HENPIN ");
                strERRQuery.Append(" LEFT JOIN (SELECT DISTINCT 店舗コード,MAX(棚卸日付) AS 棚卸日付 FROM M_TANAOROSHI_MASTER WHERE 棚卸確定日 != '1900-01-01' GROUP BY 店舗コード) TANA  ");
                strERRQuery.Append(" ON HENPIN.返品サイト = TANA.店舗コード ");
                dtFaultyTemp.Reset();
                dtFaultyTemp = _getDataTable(strERRQuery.ToString(), myConnection);
                if (dtFaultyTemp.Rows.Count > 0)
                {
                    _replaceData(dtFaultyTemp, myConnection, "棚卸確定日前の返品実績日があります。");   //Replace & Remove Data in Actual Db Table
                }
                #endregion

                #region "Check for 仕入条件 & 買取受託 Check"
                //Get All The Records of Temp TABLE, with New Column DEL_RECORD as Flag.
                //Faulty Records will have DEL_RECORD as 'TRUE'
                strERRQuery.Clear();
                strERRQuery.Append(" SELECT HENPIN.*, CASE ");
                strERRQuery.Append(" WHEN JOKEN.仕入条件 != HENPIN.買取受託 ");
                strERRQuery.Append(" THEN 'TRUE' ELSE 'FALSE' ");
                strERRQuery.Append(" END AS DEL_RECORD ");
                strERRQuery.Append(" FROM T_DAY_SKU_HENPIN_JISSEKI_TEMP AS HENPIN ");
                strERRQuery.Append(" LEFT JOIN (SELECT MST.ＳＫＵコード AS ＳＫＵコード,JR.有効開始日,JR.有効終了日, JR.仕入条件 ");
                strERRQuery.Append(" FROM M_SHIIRE_JOUKEN_RIREKI JR LEFT JOIN M_SHOUHIN_DATA MST ");
                strERRQuery.Append(" ON JR.商品コード = MST.商品コード) AS JOKEN ");
                strERRQuery.Append(" ON JOKEN.ＳＫＵコード = HENPIN.ＳＫＵコード ");
                strERRQuery.Append(" AND HENPIN.返品日付 BETWEEN JOKEN.有効開始日 AND JOKEN.有効終了日; ");
                dtFaultyTemp.Reset();
                dtFaultyTemp = _getDataTable(strERRQuery.ToString(), myConnection);
                if (dtFaultyTemp.Rows.Count > 0)
                {
                    _replaceData(dtFaultyTemp, myConnection, "返品実績日と有効開始日の組み合わせを間違えました。");   //Replace & Remove Data in Actual Db Table
                }
                #endregion

                #region "Check for F.K（仕入先コード、ＳＫＵコード、店舗コード） Check"
                //Get All The Records of Temp TABLE, with New Column DEL_RECORD as Flag.
                //Faulty Records will have DEL_RECORD as 'TRUE'
                strERRQuery.Clear();
                strERRQuery.Append(" SELECT HENPIN.*, CASE ");
                strERRQuery.Append(" WHEN TENPO.店舗コード IS NULL OR ");
                strERRQuery.Append(" SHOHIN.ＳＫＵコード IS NULL OR　");
                strERRQuery.Append(" SIIRESAKI.仕入先コード IS NULL　");
                strERRQuery.Append(" THEN 'TRUE' ELSE 'FALSE'　");
                strERRQuery.Append(" END AS DEL_RECORD　");
                strERRQuery.Append(" FROM T_DAY_SKU_HENPIN_JISSEKI_TEMP AS HENPIN　");
                strERRQuery.Append(" LEFT JOIN M_TENPO_MASTER AS TENPO　");
                strERRQuery.Append(" ON HENPIN.返品サイト = TENPO.店舗コード　");
                strERRQuery.Append(" LEFT JOIN M_SHOUHIN_DATA AS SHOHIN　");
                strERRQuery.Append(" ON HENPIN.ＳＫＵコード = SHOHIN.ＳＫＵコード　");
                strERRQuery.Append(" LEFT JOIN M_SIIRESAKI_MASTER AS SIIRESAKI　");
                strERRQuery.Append(" ON HENPIN.仕入先コード = SIIRESAKI.仕入先コード;　");
                dtFaultyTemp.Reset();
                dtFaultyTemp = _getDataTable(strERRQuery.ToString(), myConnection);
                if (dtFaultyTemp.Rows.Count > 0)
                {
                    _replaceData(dtFaultyTemp, myConnection, "仕入先コード、ＳＫＵコードまたは店舗コードはマスタに存在されていません。");   //Replace & Remove Data in Actual Db Table
                }
                #endregion

                #region "発生日 Should be exact as Y-Day"
                //Get All The Records of Temp TABLE, with New Column DEL_RECORD as Flag.
                //Faulty Records will have DEL_RECORD as 'TRUE'
                strERRQuery.Clear();
                strERRQuery.Append(" SELECT *, CASE");
                strERRQuery.Append(" WHEN CONVERT(VARCHAR(8),発生日付,112) != CONVERT(VARCHAR(8),DATEADD(DAY,-1,GETDATE()),112) ");
                strERRQuery.Append(" THEN 'TRUE' ELSE 'FALSE'");
                strERRQuery.Append(" END AS DEL_RECORD ");
                strERRQuery.Append(" FROM T_DAY_SKU_HENPIN_JISSEKI_TEMP;");
                dtFaultyTemp.Reset();
                dtFaultyTemp = _getDataTable(strERRQuery.ToString(), myConnection);
                if (dtFaultyTemp.Rows.Count > 0)
                {
                    _replaceData(dtFaultyTemp, myConnection, "発生日を間違えました。");   //Replace & Remove Data in Actual Db Table
                }
                #endregion

                #region "伝票日付 Should not be bigger than Y-Day"
                //Get All The Records of Temp TABLE, with New Column DEL_RECORD as Flag.
                //Faulty Records will have DEL_RECORD as 'TRUE'
                strERRQuery.Clear();
                strERRQuery.Append(" SELECT *,CASE ");
                strERRQuery.Append(" WHEN CONVERT(DATE,返品日付) > CONVERT(DATE,DATEADD(DAY,-1,GETDATE())) ");
                strERRQuery.Append(" THEN 'TRUE' ELSE 'FALSE' END AS DEL_RECORD ");
                strERRQuery.Append(" FROM T_DAY_SKU_HENPIN_JISSEKI_TEMP; ");
                dtFaultyTemp.Reset();
                dtFaultyTemp = _getDataTable(strERRQuery.ToString(), myConnection);
                if (dtFaultyTemp.Rows.Count > 0)
                {
                    _replaceData(dtFaultyTemp, myConnection, "データに将来の返品伝票日が存在されています。");   //Replace & Remove Data in Actual Db Table
                }
                #endregion
                Dts.TaskResult = (int)ScriptResults.Success;
            }
            #region Catch/Finally
            catch (Exception ex)
            {
                strERRQuery.Clear();
                strERRQuery.Append("INSERT INTO KANSHI_PACKAGE_ERROR ");
                strERRQuery.Append(" (パッケージコード,データ日付,エラー日時,エラー内容,エラーフラグ) ");
                strERRQuery.Append(" VALUES('G" + Dts.Variables["User::packageCode"].Value.ToString() + "','" + Dts.Variables["User::currentDate"].Value.ToString() + "','" + Dts.Variables["User::sysDate"].Value.ToString() + "','システムエラー:" + ex.Message.ToString().Replace("'", "-") + "','3');");
                _updateInsert(strERRQuery.ToString(), myConnection);
                Dts.TaskResult = (int)ScriptResults.Success;
            }
            finally 
            {
                _connectionClose(myConnection);
                dtFaultyTemp = null;
                strERRQuery = null;
                myConnection = null;
            }
            #endregion
		}
        #endregion

        #region "replace Data"
        //Data Replacement in Actual DB After Test
        private void _replaceData(DataTable dtFaultyTemp, SqlConnection myConnection, string strErrorMsg)
        {
            StringBuilder strERRQuery = new StringBuilder();
            StringBuilder strBuildRow = new StringBuilder();
            DataRow drTemp;
            string strPackageCode = string.Empty;
            int intErrorCount = 0;  //To Count Errors in the DataTable, to avoid its extra TRUNCATION and BULK.
            try
            {
                _connectionOpen(myConnection);
                strPackageCode = Dts.Variables["User::packageCode"].Value.ToString();
                intErrorCount = 0;
                int countRows = dtFaultyTemp.Rows.Count;
                for (int intI = 0; intI < countRows; intI++)
                {
                    #region Report Faulty Records
                    if (dtFaultyTemp.Rows[intI]["DEL_RECORD"].ToString().ToUpper() == "TRUE")
                    {
                        intErrorCount = intErrorCount + 1;
                        //'TRUE' means Faulty SKU Record
                        drTemp = dtFaultyTemp.Rows[intI];
                        strBuildRow.Clear();
                        for (int intJ = 0; intJ < drTemp.Table.Columns.Count-1; intJ++)
                        {
                            strBuildRow.AppendFormat("{0} ", drTemp.ItemArray[intJ]);
                        }
                        strERRQuery.Clear();
                        strERRQuery.Append("INSERT INTO KANSHI_PACKAGE_ERROR ");
                        strERRQuery.Append(" (パッケージコード,データ日付,エラー日時,エラー内容,エラーフラグ) ");
                        strERRQuery.Append(" VALUES('G" + strPackageCode + "','" + Dts.Variables["User::currentDate"].Value.ToString() + "','" + Dts.Variables["User::sysDate"].Value.ToString() + "','" + strBuildRow.ToString() + "。" + strErrorMsg + "','3');");
                        _updateInsert(strERRQuery.ToString(), myConnection);
                        countRows = countRows - 1;
                        intI = intI - 1;
                        dtFaultyTemp.Rows.Remove(drTemp);   //Remove Faulty Records from DataTable Object.
                        dtFaultyTemp.AcceptChanges();    //Commit DataTable Changes.
                    }
                    #endregion
                }
                dtFaultyTemp.Columns.Remove("DEL_RECORD");
                if (intErrorCount > 0)
                {
                    #region "TRUNCATE TEMP Table"
                    //TRUNCATE TEMP Table, to be import New Correct Records
                    strERRQuery.Clear();
                    strERRQuery.Append(" TRUNCATE TABLE " + Dts.Variables["User::checkType"].Value.ToString() + "_TEMP");
                    _updateInsert(strERRQuery.ToString(), myConnection);
                    #endregion
                    #region "BULK Update Records"
                    //正しいデータテーブルからインポートするためいに。
                    using (SqlBulkCopy bulkCopy = new SqlBulkCopy(myConnection))
                    {
                        bulkCopy.DestinationTableName = Dts.Variables["User::checkType"].Value.ToString() + "_TEMP";   //Assign table name
                        _connectionOpen(myConnection);
                        bulkCopy.BulkCopyTimeout = 600; //Default Timeut 30 Change to 600. in seconds
                        bulkCopy.WriteToServer(dtFaultyTemp);   //Write into Actual table.
                    }
                    #endregion
                }
            }
            #region Catch/Finally
            catch (Exception ex) 
            {
                throw ex;
            }
            finally
            {
                strERRQuery = null;
                dtFaultyTemp = null;
                strBuildRow = null;
                drTemp = null;
                strErrorMsg = null;
                strPackageCode = null;
            }
            #endregion
        }
        #endregion

        #region "Get DataTable"
        //Created On: 08-08-2016
        //Description: Aim to Return DataTable from the Query.
        public DataTable _getDataTable(string strQuery, SqlConnection myConnection)
        {
            StringBuilder strERRQuery = new StringBuilder();
            DataTable objDT = new DataTable();
            SqlCommand myCommand;
            SqlDataAdapter sqlSelectData;
            string strPackageCode = string.Empty;
            try
            {
                _connectionOpen(myConnection);
                strPackageCode = Dts.Variables["User::packageCode"].Value.ToString();
                myCommand = new SqlCommand(strQuery, myConnection);
                myCommand.CommandType = CommandType.Text;
                sqlSelectData = new SqlDataAdapter();
                sqlSelectData.SelectCommand = myCommand;
                myCommand.CommandTimeout = 600; //Increases Query execution timeout.
                sqlSelectData.Fill(objDT);
            }
            #region CATCH/FINALLY
            catch (Exception ex)
            {
                throw ex;
            }
            finally
            {
                strQuery = null;
                myCommand = null;
                sqlSelectData = null;
                strERRQuery = null;
                strPackageCode = null;
            }
            #endregion
            return objDT;
        }
        #endregion

        #region "Update/Insert Query in Db"
        protected void _updateInsert(string strQuery, SqlConnection myConnection)
        {
            StringBuilder strERRQuery = new StringBuilder();
            SqlCommand myCommand;
            try
            {
                _connectionOpen(myConnection);
                myCommand = new SqlCommand(strQuery, myConnection);
                myCommand.ExecuteNonQuery();
            }
            #region CATCH/FINALLY
            catch (Exception ex)
            {
                throw ex;
            }
            finally
            {
                strERRQuery = null;
                myConnection = null;
                myCommand = null;
            }
            #endregion
        }
        #endregion

        #region Connection Open
        private void _connectionOpen(SqlConnection myConnection)
        {
            try
            {
                if (myConnection.State != ConnectionState.Open)
                {
                    myConnection.Open();
                }
            }
            catch (Exception ex)
            {
                throw ex;
            }
        }
        #endregion

        #region Connection Close
        private void _connectionClose(SqlConnection myConnection)
        {
            try
            {
                if (myConnection.State != ConnectionState.Closed)
                {
                    myConnection.Close();
                }
            }
            catch (Exception ex)
            {
                throw ex;
            }
        }
        #endregion

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>ST_ce3ffc09050545a588750b50f21c1788</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>ST_ce3ffc09050545a588750b50f21c1788</msb:DisplayName>
		<msb:ProjectId>{EE24C7D7-5D12-4340-B8D9-E41721313B68}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_dcd091a5e1e8488f8e675f10e1790320.csproj"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_ce3ffc09050545a588750b50f21c1788")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_ce3ffc09050545a588750b50f21c1788")]
[assembly: AssemblyCopyright("Copyright @  2016")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_ce3ffc09050545a588750b50f21c1788.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_ce3ffc09050545a588750b50f21c1788.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_ce3ffc09050545a588750b50f21c1788.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_ce3ffc09050545a588750b50f21c1788.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_ce3ffc09050545a588750b50f21c1788.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_dcd091a5e1e8488f8e675f10e1790320.dll">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
AigWAAAKbxcAAApyiRMAcG8YAAAKbxkAAApvGgAACqIRChxyXRMAcKIRCh0HbxoAAAqiEQoecv8T
AHCiEQofCQWiEQofCnLFEwBwohEKKCYAAApvHwAACiYCBm8aAAAKBCgLAAAGEQUXWRMFEQYXWRMG
A28hAAAKCG8wAAAKA28xAAAKEQYXWBMGEQYRBT99/v//A28vAAAKctUTAHBvMgAAChEEFj6qAAAA
Bm8eAAAKJgZyAxQAcAIoFgAACm8XAAAKciUUAHBvGAAACm8ZAAAKbxoAAApyRRQAcCgzAAAKbx8A
AAomAgZvGgAACgQoCwAABgRzNAAAChMIEQgCKBYAAApvFwAACnIlFABwbxgAAApvGQAACm8aAAAK
ckUUAHAoNQAACm82AAAKAgQoDAAABhEIIFgCAABvNwAAChEIA284AAAK3gwRCCwHEQhvOQAACtze
BRMJEQl63g8UChQQARQLFAwUEAMUDdwqAABBTAAAAgAAAEACAABNAAAAjQIAAAwAAAAAAAAAAAAA
ABUAAACGAgAAmwIAAAUAAAAkAAABAgAAABUAAACNAgAAogIAAA8AAAAAAAAAGzACAHkAAAAEAAAR
cxwAAAomcx0AAAoKficAAAomAgQoDAAABgIoFgAACm8XAAAKcjkTAHBvGAAACm8ZAAAKbxoAAAom
AwRzOgAACgsHF287AAAKczwAAAoMCAdvPQAACgcgWAIAAG8+AAAKCAZvPwAACibeAw0Jet4IFBAB
FAsUDNwGKgAAAAEcAAAAABIAWGoAAyQAAAECABIAXW8ACAAAAAAbMAIAKgAAAAUAABFzHAAACiYC
BCgMAAAGAwRzOgAACgoGb0AAAAom3gMLB3reBhQQAhQK3CoAAAEcAAAAAAYAGB4AAyQAAAECAAYA
HSMABgAAAAAbMAIAFQAAAAYAABEDb0EAAAoXLgYDb0IAAAreAwoGeioAAAABEAAAAAAAABERAAMk
AAABGzABABQAAAAGAAARA29BAAAKLAYDb0MAAAreAwoGeioBEAAAAAAAABAQAAMkAAABHgIoRAAA
Ciq0AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29y
bGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3
YTVjNTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAA
AAAAAFBBRFBBRFC0AAAAQlNKQgEAAQAAAAAADAAAAHY0LjAuMzAzMTkAAAAABQBsAAAAtAUAACN+
AAAgBgAAxAgAACNTdHJpbmdzAAAAAOQOAABUFAAAI1VTADgjAAAQAAAAI0dVSUQAAABIIwAARAIA
ACNCbG9iAAAAAAAAAAIAAAFXHaIBCQMAAAD6JTMAFgAAAQAAAC8AAAAFAAAABgAAAA4AAAAKAAAA
RAAAAAIAAAAPAAAABgAAAAIAAAADAAAABAAAAAEAAAAFAAAAAQAAAAEAAAAAAAoAAQAAAAAABgDB
ALoACgDdAMgADgA9ARQBBgBZAboABgBvAV4BBgCgAYsBEgArAh8CEgBLAjUCBgAKA/ACBgA1AyMD
BgBMAyMDBgBpAyMDBgCIAyMDBgChAyMDBgC6AyMDBgDVAyMDBgDwAyMDBgAJBCMDBgBCBCIEBgBi
BCIEBgC3BKQEBgDUBLoABgDZBLoABgD9BCMDCgApBRMFCgBCBRMFBgBXBSIEDgB5BRQBDgCbBRQB
FgD0BdQFFgAMBtQFBgA9BjEGEgBeBh8CEgB5Bh8CBgCtBroABgC0BroAEgDfBh8CEgAgBx8CEgBW
BzUCBgCdB7oAEgCxBzUCEgDPB7wHEgDZBx8CEgD1BzUCEgApCLwHEgBMCLwHEgBZCB8CAAAAAAEA
AAAAAAEAAQAAABAAMgA8AAUAAQABAAABEABrADwACQADAAUAAQAQAHQAfwANAAQACAADAQAAowAA
ABEABAAPABEAfwETABEArAEXABEA9gE5AAYGowJlAFaAqwJoAFaAswJoAFAgAAAAAIMYvAEbAAEA
WCAAAAAAkwjCAR8AAQCRIAAAAACTCNYBJAABAJggAAAAAJMI4gEpAAEAoCAAAAAAlggGAj0AAgCz
IAAAAACGGLwBGwACAKcgAAAAAJEYcgWnAAIAvCAAAAAAhgAaAhsAAgBgJwAAAACBAFkCRwACAGwq
AAAAAIYAZgJQAAUAECsAAAAAhAB0AlgABwBkKwAAAACBAIICXwAJAJgrAAAAAIEAkgJfAAoAyCsA
AAAAhhi8ARsACwAAAAEAuwIAAAEAwQIAAAIAzgIAAAMA2wIAAAEA5wIAAAIAzgIAAAEA5wIAAAIA
zgIAAAEAzgIAAAEAzgJJALwBdgBRALwBdgBZALwBdgBhALwBdgBpALwBdgBxALwBdgB5ALwBdgCB
ALwBdgCJALwBdgCRALwBdgCZALwBewChALwBGwCpALwBGwAJALwBGwCxAOsEgACxAAYFhwApALwB
jADJALwBmADZALwBGwARALwBGwDhALwBGwAZAK0FqwDpAP4FsADxABUGtQD5AB4GuwAJACgGvwBB
ALwBdgABAbwBGwA5ALwBGwABAUsGwwABAVEGyQA5AFgGGwA5AHAG0AARAZQG1gDpAJ4GewAhAb4G
vwAZAcoG2gAZAdIG4AAZAdkG9gAJARUG+QApARUGAAEZAecGvwAZAe8GBQEpAfsGCwEBAQkHEAEp
ARYHGAE5ADUHHQEJAUEHIwE5AEgHGwAxAUEHdgAZAdIGKgE5AbwBXwAZAdIGMQE5AWIHdgA5AXsH
ewA5AY8HNwFBAakHGwBJAbwBWABRAeUHVgFhAbwBGwBhAQQIXQFRARYIewBpATcIZAFRATwI1gBx
AWkIgQFxAXMIGwBxAXgIGwAZALwBGwAIABQAbAAIABgAcQApAJMAngAuABsA/gEuACMA/gEuAGMA
JAIuAAsAjQEuABMA1QEuADMA1QEuACsA/gEuADsABAIuAEMA/gEuAFsAGwJDAGsAcQBJAJMAngBh
AJsAcQCDAKsAcQCTAOYAPQFqAXgBhwECAAEAAwADAAAAbwEvAAAA7gE0AAAAEgJCAAIAAgADAAIA
AwAFAAEABAAFAAIABQAHAASAAAABAAAAYRgudAAAAAAAAIAEAAAEAAAAAAAAAAAAAAABALEAAAAA
AAQAAAAAAAAAAAAAAAEAugAAAAAADAAAAAAAAAAAAAAACgD1AAAAAAAEAAAAAAAAAAAAAAABAB8C
AAAAAAwAAAAAAAAAAAAAAAoAtQUAAAAAAAAAAAEAAAB+CAAABQAEAAAAAAAAPE1vZHVsZT4AU1Rf
ZGNkMDkxYTVlMWU4NDg4ZjhlNjc1ZjEwZTE3OTAzMjAuZGxsAFJlc291cmNlcwBTVF9jZTNmZmMw
OTA1MDU0NWE1ODg3NTBiNTBmMjFjMTc4OC5Qcm9wZXJ0aWVzAFNldHRpbmdzAFNjcmlwdE1haW4A
U1RfY2UzZmZjMDkwNTA1NDVhNTg4NzUwYjUwZjIxYzE3ODgAU2NyaXB0UmVzdWx0cwBtc2Nvcmxp
YgBTeXN0ZW0AT2JqZWN0AFN5c3RlbS5Db25maWd1cmF0aW9uAEFwcGxpY2F0aW9uU2V0dGluZ3NC
YXNlAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuU2NyaXB0VGFzawBNaWNyb3NvZnQuU3FsU2VydmVyLkR0
cy5UYXNrcy5TY3JpcHRUYXNrAFZTVEFSVFNjcmlwdE9iamVjdE1vZGVsQmFzZQBFbnVtAFN5c3Rl
bS5SZXNvdXJjZXMAUmVzb3VyY2VNYW5hZ2VyAHJlc291cmNlTWFuAFN5c3RlbS5HbG9iYWxpemF0
aW9uAEN1bHR1cmVJbmZvAHJlc291cmNlQ3VsdHVyZQAuY3RvcgBnZXRfUmVzb3VyY2VNYW5hZ2Vy
AGdldF9DdWx0dXJlAHNldF9DdWx0dXJlAEN1bHR1cmUAZGVmYXVsdEluc3RhbmNlAGdldF9EZWZh
dWx0AERlZmF1bHQATWFpbgBTeXN0ZW0uRGF0YQBEYXRhVGFibGUAU3lzdGVtLkRhdGEuU3FsQ2xp
ZW50AFNxbENvbm5lY3Rpb24AX3JlcGxhY2VEYXRhAF9nZXREYXRhVGFibGUAX3VwZGF0ZUluc2Vy
dABfY29ubmVjdGlvbk9wZW4AX2Nvbm5lY3Rpb25DbG9zZQB2YWx1ZV9fAFN1Y2Nlc3MARmFpbHVy
ZQB2YWx1ZQBkdEZhdWx0eVRlbXAAbXlDb25uZWN0aW9uAHN0ckVycm9yTXNnAHN0clF1ZXJ5AFN5
c3RlbS5SdW50aW1lLlZlcnNpb25pbmcAVGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRlAFN5c3RlbS5S
ZWZsZWN0aW9uAEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJp
YnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmli
dXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBB
c3NlbWJseVRyYWRlbWFya0F0dHJpYnV0ZQBBc3NlbWJseUN1bHR1cmVBdHRyaWJ1dGUAQXNzZW1i
bHlWZXJzaW9uQXR0cmlidXRlAFN5c3RlbS5SdW50aW1lLkNvbXBpbGVyU2VydmljZXMAQ29tcGls
YXRpb25SZWxheGF0aW9uc0F0dHJpYnV0ZQBSdW50aW1lQ29tcGF0aWJpbGl0eUF0dHJpYnV0ZQBT
VF9kY2QwOTFhNWUxZTg0ODhmOGU2NzVmMTBlMTc5MDMyMABTeXN0ZW0uRGlhZ25vc3RpY3MARGVi
dWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBUeXBlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVG
cm9tSGFuZGxlAEFzc2VtYmx5AGdldF9Bc3NlbWJseQBTeXN0ZW0uQ29tcG9uZW50TW9kZWwARWRp
dG9yQnJvd3NhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZVN0YXRlAENvbXBpbGVyR2VuZXJh
dGVkQXR0cmlidXRlAC5jY3RvcgBTU0lTU2NyaXB0VGFza0VudHJ5UG9pbnRBdHRyaWJ1dGUAU2Ny
aXB0T2JqZWN0TW9kZWwAZ2V0X0R0cwBNaWNyb3NvZnQuU3FsU2VydmVyLk1hbmFnZWREVFMATWlj
cm9zb2Z0LlNxbFNlcnZlci5EdHMuUnVudGltZQBWYXJpYWJsZXMAZ2V0X1ZhcmlhYmxlcwBWYXJp
YWJsZQBnZXRfSXRlbQBnZXRfVmFsdWUAVG9TdHJpbmcAU3lzdGVtLlRleHQAU3RyaW5nQnVpbGRl
cgBDbGVhcgBBcHBlbmQAUmVzZXQARGF0YVJvd0NvbGxlY3Rpb24AZ2V0X1Jvd3MASW50ZXJuYWxE
YXRhQ29sbGVjdGlvbkJhc2UAZ2V0X0NvdW50AHNldF9UYXNrUmVzdWx0AFN0cmluZwBFeGNlcHRp
b24AZ2V0X01lc3NhZ2UAUmVwbGFjZQBDb25jYXQARW1wdHkARGF0YVJvdwBUb1VwcGVyAG9wX0Vx
dWFsaXR5AGdldF9JdGVtQXJyYXkAQXBwZW5kRm9ybWF0AGdldF9UYWJsZQBEYXRhQ29sdW1uQ29s
bGVjdGlvbgBnZXRfQ29sdW1ucwBSZW1vdmUAQWNjZXB0Q2hhbmdlcwBTcWxCdWxrQ29weQBzZXRf
RGVzdGluYXRpb25UYWJsZU5hbWUAc2V0X0J1bGtDb3B5VGltZW91dABXcml0ZVRvU2VydmVyAElE
aXNwb3NhYmxlAERpc3Bvc2UAU3FsQ29tbWFuZABTeXN0ZW0uRGF0YS5Db21tb24ARGJDb21tYW5k
AENvbW1hbmRUeXBlAHNldF9Db21tYW5kVHlwZQBTcWxEYXRhQWRhcHRlcgBzZXRfU2VsZWN0Q29t
bWFuZABzZXRfQ29tbWFuZFRpbWVvdXQARGJEYXRhQWRhcHRlcgBGaWxsAEV4ZWN1dGVOb25RdWVy
eQBEYkNvbm5lY3Rpb24AQ29ubmVjdGlvblN0YXRlAGdldF9TdGF0ZQBPcGVuAENsb3NlAFNUX2Nl
M2ZmYzA5MDUwNTQ1YTU4ODc1MGI1MGYyMWMxNzg4LlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291
cmNlcwAAAAAAcVMAVABfAGMAZQAzAGYAZgBjADAAOQAwADUAMAA1ADQANQBhADUAOAA4ADcANQAw
AGIANQAwAGYAMgAxAGMAMQA3ADgAOAAuAFAAcgBvAHAAZQByAHQAaQBlAHMALgBSAGUAcwBvAHUA
cgBjAGUAcwAALVUAcwBlAHIAOgA6AGMAbwBuAG4AZQBjAHQAaQBvAG4AUwB0AHIAaQBuAGcAACUg
AFMARQBMAEUAQwBUACAASABFAE4AUABJAE4ALgAqACwAIAAAbyAAQwBBAFMARQAgAFcASABFAE4A
IABTAFUAQgBTAFQAUgBJAE4ARwAoAEgARQBOAFAASQBOAC4A1I/BVB1PaHlqdfdTLAAxACwAMQAp
ACAAIQA9ACAASwBBAE4ASgBPAC4AHU9oeS2YAE5BaCAAATEgAE8AUgAgAEsAQQBOAEoATwAuAB1P
aHktmABOQWggAEkAUwAgAE4AVQBMAEwAIAABNSAAVABIAEUATgAgACcAVABSAFUARQAnACAARQBM
AFMARQAgACcARgBBAEwAUwBFACcAIAABJyAARQBOAEQAIABBAFMAIABEAEUATABfAFIARQBDAE8A
UgBEACAAAF0gAEYAUgBPAE0AIABUAF8ARABBAFkAXwBTAEsAVQBfAEgARQBOAFAASQBOAF8ASgBJ
AFMAUwBFAEsASQBfAFQARQBNAFAAIABBAFMAIABIAEUATgBQAEkATgAgAABFIABMAEUARgBUACAA
SgBPAEkATgAgAE0AXwBLAEEATgBKAE8AVQBfAEMATwBEAEUAIABBAFMAIABLAEEATgBKAE8AIAAA
QSAATwBOACAASABFAE4AUABJAE4ALgDYUppbszD8MMkwIAA9ACAASwBBAE4ASgBPAC4A2FKaW7Mw
/DDJMDsAIAABJdSPwVSfWz5+HU9oeW4wSFEtmEFokjCTlVWQSDB+MFcwXzACMAEhIABTAEUATABF
AEMAVAAgAFQARQBNAFAALgAqACwAIAAASyAAQwBBAFMARQAgAFcASABFAE4AIABUAEUATQBQAC4A
1I/BVB1PaHlqdfdTIAA9ACAATQBBAEkATgAuANSPwVQdT2h5anX3UyAAAUcgAEEATgBEACAAVABF
AE0AUAAuANSPwVQdT2h5DmYwfWp191MgAD0AIABNAEEASQBOAC4A1I/BVB1PaHkOZjB9anX3UyAA
AVkgAEYAUgBPAE0AIABUAF8ARABBAFkAXwBTAEsAVQBfAEgARQBOAFAASQBOAF8ASgBJAFMAUwBF
AEsASQBfAFQARQBNAFAAIABBAFMAIABUAEUATQBQACAAAFkgAEwARQBGAFQAIABKAE8ASQBOACAA
VABfAEQAQQBZAF8AUwBLAFUAXwBIAEUATgBQAEkATgBfAEoASQBTAFMARQBLAEkAIABBAFMAIABN
AEEASQBOACAAAD0gAE8ATgAgAFQARQBNAFAALgDUj8FUHU9oeWp191MgAD0AIABNAEEASQBOAC4A
1I/BVB1PaHlqdfdTIAABRyAAQQBOAEQAIABUAEUATQBQAC4A1I/BVB1PaHkOZjB9anX3UyAAPQAg
AE0AQQBJAE4ALgDUj8FUHU9oeQ5mMH1qdfdTOwABM9SPwVQdT2h5anX3U/sw1I/BVB1PaHkOZjB9
anX3U0ww4mVrMNZTvI8Ibn8wZzBZMAIwASEgAFMARQBMAEUAQwBUACAAKgAsACAAQwBBAFMARQAg
AABTIABXAEgARQBOACAA2FKaW7Mw/DDJMCAASQBOACAAKAAnADkANwAxACcALAAnADkANwAyACcA
LAAnADkANwAzACcALAAnADkANwA0ACcAKQAgAAGAgyAAVABIAEUATgAgAEMAQQBTAEUAIABXAEgA
RQBOACAATABFAE4AKAACimNrQ1H8jLeMHU9oeWp191MpACAAPQAgADEAMAAgAFQASABFAE4AIAAn
AEYAQQBMAFMARQAnACAARQBMAFMARQAgACcAVABSAFUARQAnACAARQBOAEQAIAABQyAARQBMAFMA
RQAgACcARgBBAEwAUwBFACcAIAAgAEUATgBEACAAQQBTACAARABFAEwAXwBSAEUAQwBPAFIARAAg
AAFJIABGAFIATwBNACAAVABfAEQAQQBZAF8AUwBLAFUAXwBIAEUATgBQAEkATgBfAEoASQBTAFMA
RQBLAEkAXwBUAEUATQBQADsAADMCimNrQ1H8jLeMHU9oeWp191PBMKcwwzCvMGcwqDDpMPwwTDB6
dh91VzB+MFcwXzACMAGA9yAAVwBIAEUATgAgAEMAQQBTAFQAKABDAE8ATgBWAEUAUgBUACgAVgBB
AFIAQwBIAEEAUgAoADEAMAApACwA1I/BVOVl2E4sADEAMgAxACkAIABBAFMAIABEAEEAVABFACkA
IAA8AD0AIAAoAFMARQBMAEUAQwBUACAATQBBAFgAKAAIZ6ZeQn2GTuVlKQAgAEYAUgBPAE0AIABN
AF8ARABFAE4AUABZAE8AVQBfAFMASQBNAEUAXwBNAEEAUwBUAEUAUgAgAFcASABFAFIARQAgAAhn
pl7gfeVlIABJAFMAIABOAE8AVAAgAE4AVQBMAEwAKQAgAAFLIABGAFIATwBNACAAVABfAEQAQQBZ
AF8AUwBLAFUAXwBIAEUATgBQAEkATgBfAEoASQBTAFMARQBLAEkAXwBUAEUATQBQADsAIAAAMQhn
pl7gfYEwfjBXMF8wAjDgfYEw5WVNUm4w1I/BVJ9bPn7lZUwwQjCKMH4wWTACMAEvIABTAEUATABF
AEMAVAAgAEgARQBOAFAASQBOAC4AKgAsACAAQwBBAFMARQAgAAA/IABXAEgARQBOACAASABFAE4A
UABJAE4ALgDUj8FU5WXYTiAAPAAgAFQAQQBOAEEALgDaaHhT5WXYTiAAIAABNyAAVABIAEUATgAg
ACcAVABSAFUARQAnACAARQBMAFMARQAgACcARgBBAEwAUwBFACcAIAAgAAEpIABFAE4ARAAgAEEA
UwAgAEQARQBMAF8AUgBFAEMATwBSAEQAIAAgAACA/yAATABFAEYAVAAgAEoATwBJAE4AIAAoAFMA
RQBMAEUAQwBUACAARABJAFMAVABJAE4AQwBUACAAl14XgrMw/DDJMCwATQBBAFgAKADaaHhT5WXY
TikAIABBAFMAIADaaHhT5WXYTiAARgBSAE8ATQAgAE0AXwBUAEEATgBBAE8AUgBPAFMASABJAF8A
TQBBAFMAVABFAFIAIABXAEgARQBSAEUAIADaaHhTuniaW+VlIAAhAD0AIAAnADEAOQAwADAALQAw
ADEALQAwADEAJwAgAEcAUgBPAFUAUAAgAEIAWQAgAJdeF4KzMPwwyTApACAAVABBAE4AQQAgACAA
AT0gAE8ATgAgAEgARQBOAFAASQBOAC4A1I/BVLUwpDDIMCAAPQAgAFQAQQBOAEEALgCXXheCszD8
MMkwIAABJdpoeFO6eJpb5WVNUm4w1I/BVJ9bPn7lZUwwQjCKMH4wWTACMAFBIABXAEgARQBOACAA
SgBPAEsARQBOAC4A1U5lUWFn9k4gACEAPQAgAEgARQBOAFAASQBOAC4At4zWU9dTF4ogAAGAhyAA
TABFAEYAVAAgAEoATwBJAE4AIAAoAFMARQBMAEUAQwBUACAATQBTAFQALgAz/yv/Nf+zMPwwyTAg
AEEAUwAgADP/K/81/7Mw/DDJMCwASgBSAC4ACWe5UouVy1nlZSwASgBSAC4ACWe5UkJ9hk7lZSwA
IABKAFIALgDVTmVRYWf2TiAAAXsgAEYAUgBPAE0AIABNAF8AUwBIAEkASQBSAEUAXwBKAE8AVQBL
AEUATgBfAFIASQBSAEUASwBJACAASgBSACAATABFAEYAVAAgAEoATwBJAE4AIABNAF8AUwBIAE8A
VQBIAEkATgBfAEQAQQBUAEEAIABNAFMAVAAgAABHIABPAE4AIABKAFIALgBGVcFUszD8MMkwIAA9
ACAATQBTAFQALgBGVcFUszD8MMkwKQAgAEEAUwAgAEoATwBLAEUATgAgAAFDIABPAE4AIABKAE8A
SwBFAE4ALgAz/yv/Nf+zMPwwyTAgAD0AIABIAEUATgBQAEkATgAuADP/K/81/7Mw/DDJMCAAAW0g
AEEATgBEACAASABFAE4AUABJAE4ALgDUj8FU5WXYTiAAQgBFAFQAVwBFAEUATgAgAEoATwBLAEUA
TgAuAAlnuVKLlctZ5WUgAEEATgBEACAASgBPAEsARQBOAC4ACWe5UkJ9hk7lZTsAIAABM9SPwVSf
Wz5+5WVoMAlnuVKLlctZ5WVuMER9fzAIVI8wWzCSMJOVVZBIMH4wVzBfMAIwATsgAFcASABFAE4A
IABUAEUATgBQAE8ALgCXXheCszD8MMkwIABJAFMAIABOAFUATABMACAATwBSACAAATUgAFMASABP
AEgASQBOAC4AM/8r/zX/szD8MMkwIABJAFMAIABOAFUATABMACAATwBSAAAwATUgAFMASQBJAFIA
RQBTAEEASwBJAC4A1U5lUUhRszD8MMkwIABJAFMAIABOAFUATABMAAAwATUgAFQASABFAE4AIAAn
AFQAUgBVAEUAJwAgAEUATABTAEUAIAAnAEYAQQBMAFMARQAnAAAwAScgAEUATgBEACAAQQBTACAA
RABFAEwAXwBSAEUAQwBPAFIARAAAMAFdIABGAFIATwBNACAAVABfAEQAQQBZAF8AUwBLAFUAXwBI
AEUATgBQAEkATgBfAEoASQBTAFMARQBLAEkAXwBUAEUATQBQACAAQQBTACAASABFAE4AUABJAE4A
ADABRyAATABFAEYAVAAgAEoATwBJAE4AIABNAF8AVABFAE4AUABPAF8ATQBBAFMAVABFAFIAIABB
AFMAIABUAEUATgBQAE8AADABPyAATwBOACAASABFAE4AUABJAE4ALgDUj8FUtTCkMMgwIAA9ACAA
VABFAE4AUABPAC4Al14XgrMw/DDJMAAwAUkgAEwARQBGAFQAIABKAE8ASQBOACAATQBfAFMASABP
AFUASABJAE4AXwBEAEEAVABBACAAQQBTACAAUwBIAE8ASABJAE4AADABRSAATwBOACAASABFAE4A
UABJAE4ALgAz/yv/Nf+zMPwwyTAgAD0AIABTAEgATwBIAEkATgAuADP/K/81/7Mw/DDJMAAwAVcg
AEwARQBGAFQAIABKAE8ASQBOACAATQBfAFMASQBJAFIARQBTAEEASwBJAF8ATQBBAFMAVABFAFIA
IABBAFMAIABTAEkASQBSAEUAUwBBAEsASQAAMAFNIABPAE4AIABIAEUATgBQAEkATgAuANVOZVFI
UbMw/DDJMCAAPQAgAFMASQBJAFIARQBTAEEASwBJAC4A1U5lUUhRszD8MMkwOwAAMAFJ1U5lUUhR
szD8MMkwATAz/yv/Nf+zMPwwyTB+MF8wbzCXXheCszD8MMkwbzDeMLkwvzBrMFhbKFdVMIwwZjBE
MH4wWzCTMAIwAR8gAFMARQBMAEUAQwBUACAAKgAsACAAQwBBAFMARQAAgLEgAFcASABFAE4AIABD
AE8ATgBWAEUAUgBUACgAVgBBAFIAQwBIAEEAUgAoADgAKQAsAHp2H3XlZdhOLAAxADEAMgApACAA
IQA9ACAAQwBPAE4AVgBFAFIAVAAoAFYAQQBSAEMASABBAFIAKAA4ACkALABEAEEAVABFAEEARABE
ACgARABBAFkALAAtADEALABHAEUAVABEAEEAVABFACgAKQApACwAMQAxADIAKQAgAAEzIABUAEgA
RQBOACAAJwBUAFIAVQBFACcAIABFAEwAUwBFACAAJwBGAEEATABTAEUAJwABF3p2H3XlZZIwk5VV
kEgwfjBXMF8wAjABHyAAUwBFAEwARQBDAFQAIAAqACwAQwBBAFMARQAgAACAhyAAVwBIAEUATgAg
AEMATwBOAFYARQBSAFQAKABEAEEAVABFACwA1I/BVOVl2E4pACAAPgAgAEMATwBOAFYARQBSAFQA
KABEAEEAVABFACwARABBAFQARQBBAEQARAAoAEQAQQBZACwALQAxACwARwBFAFQARABBAFQARQAo
ACkAKQApACAAAVkgAFQASABFAE4AIAAnAFQAUgBVAEUAJwAgAEUATABTAEUAIAAnAEYAQQBMAFMA
RQAnACAARQBOAEQAIABBAFMAIABEAEUATABfAFIARQBDAE8AUgBEACAAAS3HMPwwvzBrMAZcZWdu
MNSPwVQdT2h55WVMMFhbKFdVMIwwZjBEMH4wWTACMAFDSQBOAFMARQBSAFQAIABJAE4AVABPACAA
SwBBAE4AUwBIAEkAXwBQAEEAQwBLAEEARwBFAF8ARQBSAFIATwBSACAAAEsgACgA0TDDMLEw/DC4
MLMw/DDJMCwAxzD8ML8w5WXYTiwAqDDpMPww5WVCZiwAqDDpMPwwhVG5WywAqDDpMPww1TDpMLAw
KQAgAAEVIABWAEEATABVAEUAUwAoACcARwABI1UAcwBlAHIAOgA6AHAAYQBjAGsAYQBnAGUAQwBv
AGQAZQAABycALAAnAAEjVQBzAGUAcgA6ADoAYwB1AHIAcgBlAG4AdABEAGEAdABlAAAbVQBzAGUA
cgA6ADoAcwB5AHMARABhAHQAZQAAFycALAAnALcwuTDGMOAwqDDpMPwwOgABAycAAQMtAAEPJwAs
ACcAMwAnACkAOwABFUQARQBMAF8AUgBFAEMATwBSAEQAAAlUAFIAVQBFAAAJewAwAH0AIAAAAwIw
ASEgAFQAUgBVAE4AQwBBAFQARQAgAFQAQQBCAEwARQAgAAAfVQBzAGUAcgA6ADoAYwBoAGUAYwBr
AFQAeQBwAGUAAAtfAFQARQBNAFAAAAAAAPc5yXnPagpHvKkZpe26kZMACLd6XFYZNOCJCImEXc2A
gMyRAwYSFQMGEhkDIAABBAAAEhUEAAASGQUAAQESGQQIABIVBAgAEhkDBhIMBAAAEgwECAASDAgg
AwESHRIhDgcgAhIdDhIhBiACAQ4SIQUgAQESIQIGCAMGERQEAAAAAAQBAAAABCABAQ4EIAEBCAYA
ARJZEV0EIAASYQYgAgEOEmEEBwESFQUgAQERaQgBAAIAAAAAAAMAAAEEIAASdQQgABJ5BSABEn0c
AyAAHAMgAA4FIAASgIEGIAESgIEOBSAAEoCFAyAACAUgAg4ODgUAAQ4dDg8HBg4SIRKAgRIdEoCR
HQ4CBg4GIAESgJUIBCABHA4FAAICDg4EIAAdHAcgAhKAgQ4cBCAAEh0FIAASgJkGIAEBEoCVBgAD
Dg4ODgUAAg4ODgUgAQESHRgHCxKAgRKAgRKAlQ4ICAgIEoCdEoCRHQ4GIAEBEYCtBiABARKApQUg
AQgSHQ0HBBIdEoClEoCxEoCRCAcCEoClEoCRBSAAEYC9BQcBEoCRRwEAGi5ORVRGcmFtZXdvcmss
VmVyc2lvbj12NC4wAQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRAuTkVUIEZyYW1ld29yayA0KAEA
I1NUX2NlM2ZmYzA5MDUwNTQ1YTU4ODc1MGI1MGYyMWMxNzg4AAAFAQAAAAAWAQARQ29weXJpZ2h0
IEAgIDIwMTYAAAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEAPFIAAAAA
AAAAAAAAXlIAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFBSAAAAAAAAAAAAAAAAAAAAAAAAAABf
Q29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABABAAAAAYAACAAAAA
AAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABIAAAAWGAAALADAAAAAAAA
AAAAALADNAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAAAAC9BO/+AAABAAAAAQAu
dGEYAAABAC50YRg/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAAAAEAVgBhAHIARgBpAGwA
ZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4AAAAAAAAAsAQQAwAAAQBT
AHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAADsAgAAAQAwADAAMAAwADAANABiADAAAABwACQA
AQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBUAF8AYwBlADMAZgBmAGMAMAA5
ADAANQAwADUANAA1AGEANQA4ADgANwA1ADAAYgA1ADAAZgAyADEAYwAxADcAOAA4AAAAQAAPAAEA
RgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADYAMgA0ADEALgAyADkANwA0ADIAAAAA
AHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBUAF8AZABjAGQAMAA5ADEAYQA1AGUA
MQBlADgANAA4ADgAZgA4AGUANgA3ADUAZgAxADAAZQAxADcAOQAwADMAMgAwAC4AZABsAGwAAABI
ABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8AcAB5AHIAaQBnAGgAdAAgAEAA
IAAgADIAMAAxADYAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEAbQBlAAAAUwBU
AF8AZABjAGQAMAA5ADEAYQA1AGUAMQBlADgANAA4ADgAZgA4AGUANgA3ADUAZgAxADAAZQAxADcA
OQAwADMAMgAwAC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUAAAAAAFMAVABf
AGMAZQAzAGYAZgBjADAAOQAwADUAMAA1ADQANQBhADUAOAA4ADcANQAwAGIANQAwAGYAMgAxAGMA
MQA3ADgAOAAAAEQADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4ANgAy
ADQAMQAuADIAOQA3ADQAMgAAAAAASAAPAAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBlAHIAcwBpAG8A
bgAAADEALgAwAC4ANgAyADQAMQAuADIAOQA3ADQAMgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFAAAAwAAABwMgAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\集約実績"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:Description="Script Task"
      DTS:DTSID="{BB51BEBA-6383-4185-B508-2B481086A7B8}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="集約実績"
      DTS:ThreadHint="10">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_4a44c5c97b7a4e3c9e15a0252c135c7b"
          VSTAMajorVersion="3"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadOnlyVariables="User::checkType,User::connectionString,User::currentDate,User::packageCode,User::sysDate">
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_ce3ffc09050545a588750b50f21c1788.Properties.Settings.get_Default():ST_ce3ffc09050545a588750b50f21c1788.Properties.Sett" +
    "ings")]

namespace ST_ce3ffc09050545a588750b50f21c1788.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[
#region Namespaces
using System;
using System.Data;
using System.Data.SqlClient;
using System.Text;
#endregion

namespace ST_ce3ffc09050545a588750b50f21c1788
{
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
    {
        #region "Main Method"
        /// <summary>
        /// 作成者：イルファン　マンスリー
        /// 説明：仕入実績の業務データチェックする。
        /// 作成日：２０１６年０８月０８日
        /// </summary>
        public void Main()
		{
            string strConnection = Dts.Variables["User::connectionString"].Value.ToString();
            SqlConnection myConnection = new SqlConnection(strConnection);
            StringBuilder strERRQuery = new StringBuilder();
            DataTable dtFaultyTemp;
            try
            { 
                dtFaultyTemp = new DataTable();
                _connectionOpen(myConnection);
                #region "Check for 伝票頭一桁 Check"
                //Get All The Records of Temp TABLE, with New Column DEL_RECORD as Flag.
                //Faulty Records will have DEL_RECORD as 'TRUE'
                strERRQuery.Clear();
                strERRQuery.Append(" SELECT SHUYAKU.*, ");
                strERRQuery.Append(" CASE WHEN SUBSTRING(SHUYAKU.集約伝票番号,1,1) != KANJO.伝票頭一桁 ");
                strERRQuery.Append(" OR KANJO.伝票頭一桁 IS NULL ");
                strERRQuery.Append(" THEN 'TRUE' ELSE 'FALSE' ");
                strERRQuery.Append(" END AS DEL_RECORD ");
                strERRQuery.Append(" FROM T_DAY_TEN_SHUUYAKU_JISSEKI_TEMP AS SHUYAKU ");
                strERRQuery.Append(" LEFT JOIN M_KANJOU_CODE AS KANJO ");
                strERRQuery.Append(" ON SHUYAKU.勘定コード = KANJO.勘定コード; ");
                dtFaultyTemp.Reset();
                dtFaultyTemp = _getDataTable(strERRQuery.ToString(), myConnection);
                if (dtFaultyTemp.Rows.Count > 0)
                {
                    _replaceData(dtFaultyTemp, myConnection, "集約実績伝票の先頭桁を間違えました。");   //Replace & Remove Data in Actual Db Table
                }
                #endregion

                #region "Check for 集約伝票番号,集約伝票明細番号(PK) Check"
                strERRQuery.Clear();
                strERRQuery.Append(" SELECT TEMP.*, ");
                strERRQuery.Append(" CASE WHEN TEMP.集約伝票番号 = MAIN.集約伝票番号 ");
                strERRQuery.Append(" AND TEMP.集約伝票明細番号 = MAIN.集約伝票明細番号 ");
                strERRQuery.Append(" THEN 'TRUE' ELSE 'FALSE' ");
                strERRQuery.Append(" END AS DEL_RECORD ");
                strERRQuery.Append(" FROM T_DAY_TEN_SHUUYAKU_JISSEKI_TEMP AS TEMP ");
                strERRQuery.Append(" LEFT JOIN T_DAY_TEN_SHUUYAKU_JISSEKI AS MAIN ");
                strERRQuery.Append(" ON TEMP.集約伝票番号 = MAIN.集約伝票番号 ");
                strERRQuery.Append(" AND TEMP.集約伝票明細番号 = MAIN.集約伝票明細番号; ");
                dtFaultyTemp.Reset();
                dtFaultyTemp = _getDataTable(strERRQuery.ToString(), myConnection);
                if (dtFaultyTemp.Rows.Count > 0)
                {
                    _replaceData(dtFaultyTemp, myConnection, "集約伝票番号・集約伝票明細番号が既に取込済みです。");   //Replace & Remove Data in Actual Db Table
                }
                #endregion

                #region "Check for 締日 Check"
                //Get All The Records of Temp TABLE, with New Column DEL_RECORD as Flag.
                //Faulty Records will have DEL_RECORD as 'TRUE'
                strERRQuery.Clear();
                strERRQuery.Append(" SELECT *,CASE ");
                strERRQuery.Append(" WHEN CAST(CONVERT(VARCHAR(10),集約実績日,121) AS DATE) <= (SELECT MAX(月度終了日) FROM M_DENPYOU_SIME_MASTER WHERE 月度締日 IS NOT NULL) ");
                strERRQuery.Append(" THEN 'TRUE' ELSE 'FALSE' ");
                strERRQuery.Append(" END AS DEL_RECORD ");
                strERRQuery.Append(" FROM T_DAY_TEN_SHUUYAKU_JISSEKI_TEMP;");
                dtFaultyTemp.Reset();
                dtFaultyTemp = _getDataTable(strERRQuery.ToString(), myConnection);
                if (dtFaultyTemp.Rows.Count > 0)
                {
                    _replaceData(dtFaultyTemp, myConnection, "月度締めました。締め日前の集約実績日があります。");   //Replace & Remove Data in Actual Db Table
                }
                #endregion

                #region "Check for 棚卸確定日 Check"
                //Get All The Records of Temp TABLE, with New Column DEL_RECORD as Flag.
                //Faulty Records will have DEL_RECORD as 'TRUE'
                strERRQuery.Clear();
                strERRQuery.Append(" SELECT SHUYAKU.*,  CASE ");
                strERRQuery.Append(" WHEN SHUYAKU.集約実績日 < TANA.棚卸日付  ");
                strERRQuery.Append(" THEN 'TRUE' ELSE 'FALSE' ");
                strERRQuery.Append(" END AS DEL_RECORD ");
                strERRQuery.Append(" FROM T_DAY_TEN_SHUUYAKU_JISSEKI_TEMP AS SHUYAKU ");
                strERRQuery.Append(" LEFT JOIN (SELECT DISTINCT 店舗コード,MAX(棚卸日付) AS 棚卸日付 FROM M_TANAOROSHI_MASTER WHERE 棚卸確定日 != '1900-01-01' GROUP BY 店舗コード) TANA  ");
                strERRQuery.Append(" ON SHUYAKU.出庫サイト = TANA.店舗コード ");
                dtFaultyTemp.Reset();
                dtFaultyTemp = _getDataTable(strERRQuery.ToString(), myConnection);
                if (dtFaultyTemp.Rows.Count > 0)
                {
                    _replaceData(dtFaultyTemp, myConnection, "棚卸確定日前の集約実績日があります。");   //Replace & Remove Data in Actual Db Table
                }
                #endregion

                #region "Check for 仕入条件 & 買取受託 Check"
                //Get All The Records of Temp TABLE, with New Column DEL_RECORD as Flag.
                //Faulty Records will have DEL_RECORD as 'TRUE'
                strERRQuery.Clear();
                strERRQuery.Append(" SELECT SHUYAKU.*, ");
                strERRQuery.Append(" CASE WHEN JOKEN.仕入条件 != SHUYAKU.買取受託 ");
                strERRQuery.Append(" THEN 'TRUE' ELSE 'FALSE' ");
                strERRQuery.Append(" END AS DEL_RECORD ");
                strERRQuery.Append(" FROM T_DAY_TEN_SHUUYAKU_JISSEKI_TEMP AS SHUYAKU ");
                strERRQuery.Append(" LEFT JOIN (SELECT MST.ＳＫＵコード AS ＳＫＵコード,JR.有効開始日,JR.有効終了日, JR.仕入条件 FROM M_SHIIRE_JOUKEN_RIREKI JR LEFT JOIN M_SHOUHIN_DATA MST ON JR.商品コード = MST.商品コード) AS JOKEN ");
                strERRQuery.Append(" ON JOKEN.ＳＫＵコード = SHUYAKU.ＳＫＵコード AND ");
                strERRQuery.Append(" SHUYAKU.集約実績日 BETWEEN JOKEN.有効開始日 AND JOKEN.有効終了日;");
                dtFaultyTemp.Reset();
                dtFaultyTemp = _getDataTable(strERRQuery.ToString(), myConnection);
                if (dtFaultyTemp.Rows.Count > 0)
                {
                    _replaceData(dtFaultyTemp, myConnection, "集約実績日と有効開始日の組み合わせを間違えました。");   //Replace & Remove Data in Actual Db Table
                }
                #endregion

                #region "Check for F.K（仕入先コード、ＳＫＵコード、店舗コード） Check"
                //Get All The Records of Temp TABLE, with New Column DEL_RECORD as Flag.
                //Faulty Records will have DEL_RECORD as 'TRUE'
                strERRQuery.Clear();
                strERRQuery.Append(" SELECT SHUYAKU.*, CASE  ");
                strERRQuery.Append(" WHEN TENPO.店舗コード IS NULL OR ");
                strERRQuery.Append(" NYUTENPO.店舗コード IS NULL OR  ");
                strERRQuery.Append(" SHOHIN.ＳＫＵコード IS NULL OR  ");
                strERRQuery.Append(" SIIRESAKI.仕入先コード IS NULL  ");
                strERRQuery.Append(" THEN 'TRUE' ELSE 'FALSE' ");
                strERRQuery.Append(" END AS DEL_RECORD ");
                strERRQuery.Append(" FROM T_DAY_TEN_SHUUYAKU_JISSEKI_TEMP AS SHUYAKU ");
                strERRQuery.Append(" LEFT JOIN M_TENPO_MASTER AS TENPO  ");
                strERRQuery.Append(" ON SHUYAKU.出庫サイト = TENPO.店舗コード ");
                strERRQuery.Append(" LEFT JOIN M_TENPO_MASTER AS NYUTENPO  ");
                strERRQuery.Append(" ON SHUYAKU.入庫サイト = NYUTENPO.店舗コード ");
                strERRQuery.Append(" LEFT JOIN M_SHOUHIN_DATA AS SHOHIN ");
                strERRQuery.Append(" ON SHUYAKU.ＳＫＵコード = SHOHIN.ＳＫＵコード ");
                strERRQuery.Append(" LEFT JOIN M_SIIRESAKI_MASTER AS SIIRESAKI ");
                strERRQuery.Append(" ON SHUYAKU.仕入先コード = SIIRESAKI.仕入先コード; ");
                dtFaultyTemp.Reset();
                dtFaultyTemp = _getDataTable(strERRQuery.ToString(), myConnection);
                if (dtFaultyTemp.Rows.Count > 0)
                {
                    _replaceData(dtFaultyTemp, myConnection, "仕入先コード、ＳＫＵコードまたは店舗コードはマスタに存在されていません。");   //Replace & Remove Data in Actual Db Table
                }
                #endregion

                #region "発生日 Should be exact as Y-Day"
                //Get All The Records of Temp TABLE, with New Column DEL_RECORD as Flag.
                //Faulty Records will have DEL_RECORD as 'TRUE'
                strERRQuery.Clear();
                strERRQuery.Append(" SELECT *, CASE");
                strERRQuery.Append(" WHEN CONVERT(VARCHAR(8),発生日付,112) != CONVERT(VARCHAR(8),DATEADD(DAY,-1,GETDATE()),112) ");
                strERRQuery.Append(" THEN 'TRUE' ELSE 'FALSE' ");
                strERRQuery.Append(" END AS DEL_RECORD ");
                strERRQuery.Append(" FROM T_DAY_TEN_SHUUYAKU_JISSEKI_TEMP;");
                dtFaultyTemp.Reset();
                dtFaultyTemp = _getDataTable(strERRQuery.ToString(), myConnection);
                if (dtFaultyTemp.Rows.Count > 0)
                {
                    _replaceData(dtFaultyTemp, myConnection, "発生日を間違えました。");   //Replace & Remove Data in Actual Db Table
                }
                #endregion

                #region "伝票日付 Should not be bigger than Y-Day"
                //Get All The Records of Temp TABLE, with New Column DEL_RECORD as Flag.
                //Faulty Records will have DEL_RECORD as 'TRUE'
                strERRQuery.Clear();
                strERRQuery.Append(" SELECT *,CASE ");
                strERRQuery.Append(" WHEN CONVERT(DATE,集約実績日) > CONVERT(DATE,DATEADD(DAY,-1,GETDATE())) ");
                strERRQuery.Append(" THEN 'TRUE' ELSE 'FALSE' END AS DEL_RECORD ");
                strERRQuery.Append(" FROM T_DAY_TEN_SHUUYAKU_JISSEKI_TEMP; ");
                dtFaultyTemp.Reset();
                dtFaultyTemp = _getDataTable(strERRQuery.ToString(), myConnection);
                if (dtFaultyTemp.Rows.Count > 0)
                {
                    _replaceData(dtFaultyTemp, myConnection, "データに将来の集約伝票日が存在されています。");   //Replace & Remove Data in Actual Db Table
                }
                #endregion
                Dts.TaskResult = (int)ScriptResults.Success;
            }
            #region Catch/Finally
            catch (Exception ex)
            {
                strERRQuery.Clear();
                strERRQuery.Append("INSERT INTO KANSHI_PACKAGE_ERROR ");
                strERRQuery.Append(" (パッケージコード,データ日付,エラー日時,エラー内容,エラーフラグ) ");
                strERRQuery.Append(" VALUES('G" + Dts.Variables["User::packageCode"].Value.ToString() + "','" + Dts.Variables["User::currentDate"].Value.ToString() + "','" + Dts.Variables["User::sysDate"].Value.ToString() + "','システムエラー:" + ex.Message.ToString().Replace("'", "-") + "','3');");
                _updateInsert(strERRQuery.ToString(), myConnection);
                Dts.TaskResult = (int)ScriptResults.Success;
            }
            finally 
            {
                _connectionClose(myConnection);
                dtFaultyTemp = null;
                strERRQuery = null;
                myConnection = null;
            }
            #endregion
		}
        #endregion

        #region "replace Data"
        //Data Replacement in Actual DB After Test
        private void _replaceData(DataTable dtFaultyTemp, SqlConnection myConnection, string strErrorMsg)
        {
            StringBuilder strERRQuery = new StringBuilder();
            StringBuilder strBuildRow = new StringBuilder();
            DataRow drTemp;
            string strPackageCode = string.Empty;
            int intErrorCount = 0;  //To Count Errors in the DataTable, to avoid its extra TRUNCATION and BULK.
            try
            {
                _connectionOpen(myConnection);
                strPackageCode = Dts.Variables["User::packageCode"].Value.ToString();
                intErrorCount = 0;
                int countRows = dtFaultyTemp.Rows.Count;
                for (int intI = 0; intI < countRows; intI++)
                {
                    #region Report Faulty Records
                    if (dtFaultyTemp.Rows[intI]["DEL_RECORD"].ToString().ToUpper() == "TRUE")
                    {
                        intErrorCount = intErrorCount + 1;
                        //'TRUE' means Faulty SKU Record
                        drTemp = dtFaultyTemp.Rows[intI];
                        strBuildRow.Clear();
                        for (int intJ = 0; intJ < drTemp.Table.Columns.Count-1; intJ++)
                        {
                            strBuildRow.AppendFormat("{0} ", drTemp.ItemArray[intJ]);
                        }
                        strERRQuery.Clear();
                        strERRQuery.Append("INSERT INTO KANSHI_PACKAGE_ERROR ");
                        strERRQuery.Append(" (パッケージコード,データ日付,エラー日時,エラー内容,エラーフラグ) ");
                        strERRQuery.Append(" VALUES('G" + strPackageCode + "','" + Dts.Variables["User::currentDate"].Value.ToString() + "','" + Dts.Variables["User::sysDate"].Value.ToString() + "','" + strBuildRow.ToString() + "。" + strErrorMsg + "','3');");
                        _updateInsert(strERRQuery.ToString(), myConnection);
                        countRows = countRows - 1;
                        intI = intI - 1;
                        dtFaultyTemp.Rows.Remove(drTemp);   //Remove Faulty Records from DataTable Object.
                        dtFaultyTemp.AcceptChanges();    //Commit DataTable Changes.
                    }
                    #endregion
                }
                dtFaultyTemp.Columns.Remove("DEL_RECORD");
                if (intErrorCount > 0)
                {
                    #region "TRUNCATE TEMP Table"
                    //TRUNCATE TEMP Table, to be import New Correct Records
                    strERRQuery.Clear();
                    strERRQuery.Append(" TRUNCATE TABLE " + Dts.Variables["User::checkType"].Value.ToString() + "_TEMP");
                    _updateInsert(strERRQuery.ToString(), myConnection);
                    #endregion
                    #region "Bulk Update Records"
                    //正しいデータテーブルからインポートするためいに。
                    using (SqlBulkCopy bulkCopy = new SqlBulkCopy(myConnection))
                    {
                        bulkCopy.DestinationTableName = Dts.Variables["User::checkType"].Value.ToString() + "_TEMP";   //Assign table name
                        _connectionOpen(myConnection);
                        bulkCopy.BulkCopyTimeout = 600; //Default Timeut 30 Change to 600. in seconds
                        bulkCopy.WriteToServer(dtFaultyTemp);   //Write into Actual table.
                    }
                    #endregion
                }
            }
            #region Catch/Finally
            catch (Exception ex) 
            {
                throw ex;
            }
            finally
            {
                strErrorMsg = null;
                strERRQuery = null;
                dtFaultyTemp = null;
                strBuildRow = null;
                drTemp = null;
                strPackageCode = null;
            }
            #endregion
        }
        #endregion

        #region "Get DataTable"
        //Created On: 08-08-2016
        //Description: Aim to Return DataTable from the Query.
        public DataTable _getDataTable(string strQuery, SqlConnection myConnection)
        {
            StringBuilder strERRQuery = new StringBuilder();
            DataTable objDT = new DataTable();
            SqlCommand myCommand;
            SqlDataAdapter sqlSelectData;
            try
            {
                _connectionOpen(myConnection);
                myCommand = new SqlCommand(strQuery, myConnection);
                myCommand.CommandType = CommandType.Text;
                sqlSelectData = new SqlDataAdapter();
                sqlSelectData.SelectCommand = myCommand;
                myCommand.CommandTimeout = 600; //Increases Query execution timeout.
                sqlSelectData.Fill(objDT);
            }
            #region CATCH/FINALLY
            catch (Exception ex)
            {
                throw ex;
            }
            finally
            {
                strQuery = null;
                myCommand = null;
                sqlSelectData = null;
                strERRQuery = null;
            }
            #endregion
            return objDT;
        }
        #endregion

        #region "Update/Insert Query in Db"
        protected void _updateInsert(string strQuery, SqlConnection myConnection)
        {
            StringBuilder strERRQuery = new StringBuilder();
            SqlCommand myCommand;
            try
            {
                myCommand = new SqlCommand(strQuery, myConnection);
                _connectionOpen(myConnection);
                myCommand.ExecuteNonQuery();
            }
            #region CATCH/FINALLY
            catch (Exception ex)
            {
                throw ex;
            }
            finally
            {
                strERRQuery = null;
                myConnection = null;
                myCommand = null;
            }
            #endregion
        }
        #endregion

        #region Connection Open
        private void _connectionOpen(SqlConnection myConnection)
        {
            try
            {
                if (myConnection.State != ConnectionState.Open)
                {
                    myConnection.Open();
                }
            }
            catch (Exception ex)
            {
                throw ex;
            }
        }
        #endregion

        #region Connection Close
        private void _connectionClose(SqlConnection myConnection)
        {
            try
            {
                if (myConnection.State != ConnectionState.Closed)
                {
                    myConnection.Close();
                }
            }
            catch (Exception ex)
            {
                throw ex;
            }
        }
        #endregion

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
          <ProjectItem
            Name="ST_4a44c5c97b7a4e3c9e15a0252c135c7b.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?><Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003"><PropertyGroup><ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids><Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration><Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform><ProductVersion>8.0.30703</ProductVersion><SchemaVersion>2.0</SchemaVersion><ProjectGuid>{6f1cd3ad-124c-410c-a3da-0ed5e3468b82}</ProjectGuid><OutputType>Library</OutputType><AppDesignerFolder>Properties</AppDesignerFolder><RootNamespace>ST_ce3ffc09050545a588750b50f21c1788</RootNamespace><AssemblyName>ST_4a44c5c97b7a4e3c9e15a0252c135c7b</AssemblyName><TargetFrameworkVersion>v4.0</TargetFrameworkVersion><FileAlignment>512</FileAlignment><ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Debug' "><DebugSymbols>true</DebugSymbols><DebugType>full</DebugType><Optimize>false</Optimize><OutputPath>.\bin\Debug\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>DEBUG;TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Release' "><DebugSymbols>false</DebugSymbols><Optimize>true</Optimize><OutputPath>.\bin\Release\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><ItemGroup><Reference Include="System" /><Reference Include="System.Data" /><Reference Include="System.Windows.Forms" /><Reference Include="System.Xml" /><Reference Include="Microsoft.SqlServer.ManagedDTS, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.ScriptTask, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /></ItemGroup><ItemGroup><AppDesigner Include="Properties\" /><Compile Include="Properties\AssemblyInfo.cs"><SubType>Code</SubType></Compile><EmbeddedResource Include="Properties\Resources.resx"><Generator>ResXFileCodeGenerator</Generator><LastGenOutput>Resources.Designer.cs</LastGenOutput></EmbeddedResource><Compile Include="Properties\Resources.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Resources.resx</DependentUpon></Compile><None Include="Properties\Settings.settings"><Generator>SettingsSingleFileGenerator</Generator><LastGenOutput>Settings.Designer.cs</LastGenOutput></None><Compile Include="Properties\Settings.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Settings.settings</DependentUpon></Compile><Compile Include="ScriptMain.cs"><SubType>Code</SubType></Compile></ItemGroup><!-- Include the build rules for a C# project.--><Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" /><ProjectExtensions><VisualStudio><FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}"><ProjectProperties HostName="ScriptTask" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="#HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\VisualStudio\10.0\InstallDir#\devenv.exe" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" /><Host Name="ScriptTask" GeneratedNamespace="$safeprojectname" IconIndex=""></Host><ProjectClient><HostIdentifier>SSIS_ST120</HostIdentifier></ProjectClient></FlavorProperties></VisualStudio></ProjectExtensions></Project>]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>ST_ce3ffc09050545a588750b50f21c1788</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>ST_ce3ffc09050545a588750b50f21c1788</msb:DisplayName>
		<msb:ProjectId>{EE24C7D7-5D12-4340-B8D9-E41721313B68}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_4a44c5c97b7a4e3c9e15a0252c135c7b.csproj"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_ce3ffc09050545a588750b50f21c1788")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_ce3ffc09050545a588750b50f21c1788")]
[assembly: AssemblyCopyright("Copyright @  2016")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_ce3ffc09050545a588750b50f21c1788.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_ce3ffc09050545a588750b50f21c1788.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_ce3ffc09050545a588750b50f21c1788.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_ce3ffc09050545a588750b50f21c1788.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_ce3ffc09050545a588750b50f21c1788.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_4a44c5c97b7a4e3c9e15a0252c135c7b.dll">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
F1kTBREGF1kTBgNvIQAACghvMAAACgNvMQAAChEGF1gTBhEGEQU/ff7//wNvLwAACnJWEgBwbzIA
AAoRBBY+qgAAAAZvHgAACiYGcoQSAHACKBYAAApvFwAACnKmEgBwbxgAAApvGQAACm8aAAAKcsYS
AHAoMwAACm8fAAAKJgIGbxoAAAoEKAsAAAYEczQAAAoTCBEIAigWAAAKbxcAAApyphIAcG8YAAAK
bxkAAApvGgAACnLGEgBwKDUAAApvNgAACgIEKAwAAAYRCCBYAgAAbzcAAAoRCANvOAAACt4MEQgs
BxEIbzkAAArc3gUTCREJet4PFBADFAoUEAEUCxQMFA3cKgAAQUwAAAIAAABAAgAATQAAAI0CAAAM
AAAAAAAAAAAAAAAVAAAAhgIAAJsCAAAFAAAAJAAAAQIAAAAVAAAAjQIAAKICAAAPAAAAAAAAABsw
AgBTAAAABAAAEXMcAAAKJnMdAAAKCgIEKAwAAAYDBHM6AAAKCwcXbzsAAApzPAAACgwIB289AAAK
ByBYAgAAbz4AAAoIBm8/AAAKJt4DDQl63ggUEAEUCxQM3AYqAAEcAAAAAAwAOEQAAyQAAAECAAwA
PUkACAAAAAAbMAIAKgAAAAUAABFzHAAACiYDBHM6AAAKCgIEKAwAAAYGb0AAAAom3gMLB3reBhQQ
AhQK3CoAAAEcAAAAAAYAGB4AAyQAAAECAAYAHSMABgAAAAAbMAIAFQAAAAYAABEDb0EAAAoXLgYD
b0IAAAreAwoGeioAAAABEAAAAAAAABERAAMkAAABGzABABQAAAAGAAARA29BAAAKLAYDb0MAAAre
AwoGeioBEAAAAAAAABAQAAMkAAABHgIoRAAACiq0AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5SZXNv
dXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9
bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2Vz
LlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAAQlNKQgEAAQAAAAAADAAA
AHY0LjAuMzAzMTkAAAAABQBsAAAAtAUAACN+AAAgBgAAxAgAACNTdHJpbmdzAAAAAOQOAADUEgAA
I1VTALghAAAQAAAAI0dVSUQAAADIIQAARAIAACNCbG9iAAAAAAAAAAIAAAFXHaIBCQMAAAD6JTMA
FgAAAQAAAC8AAAAFAAAABgAAAA4AAAAKAAAARAAAAAIAAAAPAAAABgAAAAIAAAADAAAABAAAAAEA
AAAFAAAAAQAAAAEAAAAAAAoAAQAAAAAABgDBALoACgDdAMgADgA9ARQBBgBZAboABgBvAV4BBgCg
AYsBEgArAh8CEgBLAjUCBgAKA/ACBgA1AyMDBgBMAyMDBgBpAyMDBgCIAyMDBgChAyMDBgC6AyMD
BgDVAyMDBgDwAyMDBgAJBCMDBgBCBCIEBgBiBCIEBgC3BKQEBgDUBLoABgDZBLoABgD9BCMDCgAp
BRMFCgBCBRMFBgBXBSIEDgB5BRQBDgCbBRQBFgD0BdQFFgAMBtQFBgA9BjEGEgBeBh8CEgB5Bh8C
BgCtBroABgC0BroAEgDfBh8CEgAgBx8CEgBWBzUCBgCdB7oAEgCxBzUCEgDPB7wHEgDZBx8CEgD1
BzUCEgApCLwHEgBMCLwHEgBZCB8CAAAAAAEAAAAAAAEAAQAAABAAMgA8AAUAAQABAAABEABrADwA
CQADAAUAAQAQAHQAfwANAAQACAADAQAAowAAABEABAAPABEAfwETABEArAEXABEA9gE5AAYGowJl
AFaAqwJoAFaAswJoAFAgAAAAAIMYvAEbAAEAWCAAAAAAkwjCAR8AAQCRIAAAAACTCNYBJAABAJgg
AAAAAJMI4gEpAAEAoCAAAAAAlggGAj0AAgCzIAAAAACGGLwBGwACAKcgAAAAAJEYcgWnAAIAvCAA
AAAAhgAaAhsAAgD4JgAAAACBAFkCRwACAAQqAAAAAIYAZgJQAAUAgCoAAAAAhAB0AlgABwDUKgAA
AACBAIICXwAJAAgrAAAAAIEAkgJfAAoAOCsAAAAAhhi8ARsACwAAAAEAuwIAAAEAwQIAAAIAzgIA
AAMA2wIAAAEA5wIAAAIAzgIAAAEA5wIAAAIAzgIAAAEAzgIAAAEAzgJJALwBdgBRALwBdgBZALwB
dgBhALwBdgBpALwBdgBxALwBdgB5ALwBdgCBALwBdgCJALwBdgCRALwBdgCZALwBewChALwBGwCp
ALwBGwAJALwBGwCxAOsEgACxAAYFhwApALwBjADJALwBmADZALwBGwARALwBGwDhALwBGwAZAK0F
qwDpAP4FsADxABUGtQD5AB4GuwAJACgGvwBBALwBdgABAbwBGwA5ALwBGwABAUsGwwABAVEGyQA5
AFgGGwA5AHAG0AARAZQG1gDpAJ4GewAhAb4GvwAZAcoG2gAZAdIG4AAZAdkG9gAJARUG+QApARUG
AAEZAecGvwAZAe8GBQEpAfsGCwEBAQkHEAEpARYHGAE5ADUHHQEJAUEHIwE5AEgHGwAxAUEHdgAZ
AdIGKgE5AbwBXwAZAdIGMQE5AWIHdgA5AXsHewA5AY8HNwFBAakHGwBJAbwBWABRAeUHVgFhAbwB
GwBhAQQIXQFRARYIewBpATcIZAFRATwI1gBxAWkIgQFxAXMIGwBxAXgIGwAZALwBGwAIABQAbAAI
ABgAcQApAJMAngAuABsA/gEuACMA/gEuAGMAJAIuAAsAjQEuABMA1QEuADMA1QEuACsA/gEuADsA
BAIuAEMA/gEuAFsAGwJDAGsAcQBJAJMAngBhAJsAcQCDAKsAcQCTAOYAPQFqAXgBhwECAAEAAwAD
AAAAbwEvAAAA7gE0AAAAEgJCAAIAAgADAAIAAwAFAAEABAAFAAIABQAHAASAAAABAAAA3RiehQAA
AAAAAIAEAAAEAAAAAAAAAAAAAAABALEAAAAAAAQAAAAAAAAAAAAAAAEAugAAAAAADAAAAAAAAAAA
AAAACgD1AAAAAAAEAAAAAAAAAAAAAAABAB8CAAAAAAwAAAAAAAAAAAAAAAoAtQUAAAAAAAAAAAEA
AAB+CAAABQAEAAAAAAAAPE1vZHVsZT4AU1RfNGE0NGM1Yzk3YjdhNGUzYzllMTVhMDI1MmMxMzVj
N2IuZGxsAFJlc291cmNlcwBTVF9jZTNmZmMwOTA1MDU0NWE1ODg3NTBiNTBmMjFjMTc4OC5Qcm9w
ZXJ0aWVzAFNldHRpbmdzAFNjcmlwdE1haW4AU1RfY2UzZmZjMDkwNTA1NDVhNTg4NzUwYjUwZjIx
YzE3ODgAU2NyaXB0UmVzdWx0cwBtc2NvcmxpYgBTeXN0ZW0AT2JqZWN0AFN5c3RlbS5Db25maWd1
cmF0aW9uAEFwcGxpY2F0aW9uU2V0dGluZ3NCYXNlAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuU2NyaXB0
VGFzawBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5UYXNrcy5TY3JpcHRUYXNrAFZTVEFSVFNjcmlw
dE9iamVjdE1vZGVsQmFzZQBFbnVtAFN5c3RlbS5SZXNvdXJjZXMAUmVzb3VyY2VNYW5hZ2VyAHJl
c291cmNlTWFuAFN5c3RlbS5HbG9iYWxpemF0aW9uAEN1bHR1cmVJbmZvAHJlc291cmNlQ3VsdHVy
ZQAuY3RvcgBnZXRfUmVzb3VyY2VNYW5hZ2VyAGdldF9DdWx0dXJlAHNldF9DdWx0dXJlAEN1bHR1
cmUAZGVmYXVsdEluc3RhbmNlAGdldF9EZWZhdWx0AERlZmF1bHQATWFpbgBTeXN0ZW0uRGF0YQBE
YXRhVGFibGUAU3lzdGVtLkRhdGEuU3FsQ2xpZW50AFNxbENvbm5lY3Rpb24AX3JlcGxhY2VEYXRh
AF9nZXREYXRhVGFibGUAX3VwZGF0ZUluc2VydABfY29ubmVjdGlvbk9wZW4AX2Nvbm5lY3Rpb25D
bG9zZQB2YWx1ZV9fAFN1Y2Nlc3MARmFpbHVyZQB2YWx1ZQBkdEZhdWx0eVRlbXAAbXlDb25uZWN0
aW9uAHN0ckVycm9yTXNnAHN0clF1ZXJ5AFN5c3RlbS5SdW50aW1lLlZlcnNpb25pbmcAVGFyZ2V0
RnJhbWV3b3JrQXR0cmlidXRlAFN5c3RlbS5SZWZsZWN0aW9uAEFzc2VtYmx5VGl0bGVBdHRyaWJ1
dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25BdHRy
aWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBB
c3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFya0F0dHJpYnV0ZQBBc3Nl
bWJseUN1bHR1cmVBdHRyaWJ1dGUAQXNzZW1ibHlWZXJzaW9uQXR0cmlidXRlAFN5c3RlbS5SdW50
aW1lLkNvbXBpbGVyU2VydmljZXMAQ29tcGlsYXRpb25SZWxheGF0aW9uc0F0dHJpYnV0ZQBSdW50
aW1lQ29tcGF0aWJpbGl0eUF0dHJpYnV0ZQBTVF80YTQ0YzVjOTdiN2E0ZTNjOWUxNWEwMjUyYzEz
NWM3YgBTeXN0ZW0uRGlhZ25vc3RpY3MARGVidWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBUeXBl
AFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAEFzc2VtYmx5AGdldF9Bc3NlbWJs
eQBTeXN0ZW0uQ29tcG9uZW50TW9kZWwARWRpdG9yQnJvd3NhYmxlQXR0cmlidXRlAEVkaXRvckJy
b3dzYWJsZVN0YXRlAENvbXBpbGVyR2VuZXJhdGVkQXR0cmlidXRlAC5jY3RvcgBTU0lTU2NyaXB0
VGFza0VudHJ5UG9pbnRBdHRyaWJ1dGUAU2NyaXB0T2JqZWN0TW9kZWwAZ2V0X0R0cwBNaWNyb3Nv
ZnQuU3FsU2VydmVyLk1hbmFnZWREVFMATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUnVudGltZQBW
YXJpYWJsZXMAZ2V0X1ZhcmlhYmxlcwBWYXJpYWJsZQBnZXRfSXRlbQBnZXRfVmFsdWUAVG9TdHJp
bmcAU3lzdGVtLlRleHQAU3RyaW5nQnVpbGRlcgBDbGVhcgBBcHBlbmQAUmVzZXQARGF0YVJvd0Nv
bGxlY3Rpb24AZ2V0X1Jvd3MASW50ZXJuYWxEYXRhQ29sbGVjdGlvbkJhc2UAZ2V0X0NvdW50AHNl
dF9UYXNrUmVzdWx0AFN0cmluZwBFeGNlcHRpb24AZ2V0X01lc3NhZ2UAUmVwbGFjZQBDb25jYXQA
RW1wdHkARGF0YVJvdwBUb1VwcGVyAG9wX0VxdWFsaXR5AGdldF9JdGVtQXJyYXkAQXBwZW5kRm9y
bWF0AGdldF9UYWJsZQBEYXRhQ29sdW1uQ29sbGVjdGlvbgBnZXRfQ29sdW1ucwBSZW1vdmUAQWNj
ZXB0Q2hhbmdlcwBTcWxCdWxrQ29weQBzZXRfRGVzdGluYXRpb25UYWJsZU5hbWUAc2V0X0J1bGtD
b3B5VGltZW91dABXcml0ZVRvU2VydmVyAElEaXNwb3NhYmxlAERpc3Bvc2UAU3FsQ29tbWFuZABT
eXN0ZW0uRGF0YS5Db21tb24ARGJDb21tYW5kAENvbW1hbmRUeXBlAHNldF9Db21tYW5kVHlwZQBT
cWxEYXRhQWRhcHRlcgBzZXRfU2VsZWN0Q29tbWFuZABzZXRfQ29tbWFuZFRpbWVvdXQARGJEYXRh
QWRhcHRlcgBGaWxsAEV4ZWN1dGVOb25RdWVyeQBEYkNvbm5lY3Rpb24AQ29ubmVjdGlvblN0YXRl
AGdldF9TdGF0ZQBPcGVuAENsb3NlAFNUX2NlM2ZmYzA5MDUwNTQ1YTU4ODc1MGI1MGYyMWMxNzg4
LlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwAAAAAAcVMAVABfAGMAZQAzAGYAZgBjADAA
OQAwADUAMAA1ADQANQBhADUAOAA4ADcANQAwAGIANQAwAGYAMgAxAGMAMQA3ADgAOAAuAFAAcgBv
AHAAZQByAHQAaQBlAHMALgBSAGUAcwBvAHUAcgBjAGUAcwAALVUAcwBlAHIAOgA6AGMAbwBuAG4A
ZQBjAHQAaQBvAG4AUwB0AHIAaQBuAGcAACcgAFMARQBMAEUAQwBUACAAUwBIAFUAWQBBAEsAVQAu
ACoALAAgAABxIABDAEEAUwBFACAAVwBIAEUATgAgAFMAVQBCAFMAVABSAEkATgBHACgAUwBIAFUA
WQBBAEsAVQAuAMaWBH0dT2h5anX3UywAMQAsADEAKQAgACEAPQAgAEsAQQBOAEoATwAuAB1PaHkt
mABOQWggAAExIABPAFIAIABLAEEATgBKAE8ALgAdT2h5LZgATkFoIABJAFMAIABOAFUATABMACAA
ATUgAFQASABFAE4AIAAnAFQAUgBVAEUAJwAgAEUATABTAEUAIAAnAEYAQQBMAFMARQAnACAAAScg
AEUATgBEACAAQQBTACAARABFAEwAXwBSAEUAQwBPAFIARAAgAABjIABGAFIATwBNACAAVABfAEQA
QQBZAF8AVABFAE4AXwBTAEgAVQBVAFkAQQBLAFUAXwBKAEkAUwBTAEUASwBJAF8AVABFAE0AUAAg
AEEAUwAgAFMASABVAFkAQQBLAFUAIAAARSAATABFAEYAVAAgAEoATwBJAE4AIABNAF8ASwBBAE4A
SgBPAFUAXwBDAE8ARABFACAAQQBTACAASwBBAE4ASgBPACAAAEMgAE8ATgAgAFMASABVAFkAQQBL
AFUALgDYUppbszD8MMkwIAA9ACAASwBBAE4ASgBPAC4A2FKaW7Mw/DDJMDsAIAABJcaWBH2fWz5+
HU9oeW4wSFEtmEFokjCTlVWQSDB+MFcwXzACMAEhIABTAEUATABFAEMAVAAgAFQARQBNAFAALgAq
ACwAIAAASyAAQwBBAFMARQAgAFcASABFAE4AIABUAEUATQBQAC4AxpYEfR1PaHlqdfdTIAA9ACAA
TQBBAEkATgAuAMaWBH0dT2h5anX3UyAAAUcgAEEATgBEACAAVABFAE0AUAAuAMaWBH0dT2h5DmYw
fWp191MgAD0AIABNAEEASQBOAC4AxpYEfR1PaHkOZjB9anX3UyAAAV0gAEYAUgBPAE0AIABUAF8A
RABBAFkAXwBUAEUATgBfAFMASABVAFUAWQBBAEsAVQBfAEoASQBTAFMARQBLAEkAXwBUAEUATQBQ
ACAAQQBTACAAVABFAE0AUAAgAABdIABMAEUARgBUACAASgBPAEkATgAgAFQAXwBEAEEAWQBfAFQA
RQBOAF8AUwBIAFUAVQBZAEEASwBVAF8ASgBJAFMAUwBFAEsASQAgAEEAUwAgAE0AQQBJAE4AIAAA
PSAATwBOACAAVABFAE0AUAAuAMaWBH0dT2h5anX3UyAAPQAgAE0AQQBJAE4ALgDGlgR9HU9oeWp1
91MgAAFJIABBAE4ARAAgAFQARQBNAFAALgDGlgR9HU9oeQ5mMH1qdfdTIAA9ACAATQBBAEkATgAu
AMaWBH0dT2h5DmYwfWp191M7ACAAATPGlgR9HU9oeWp191P7MMaWBH0dT2h5DmYwfWp191NMMOJl
azDWU7yPCG5/MGcwWTACMAEfIABTAEUATABFAEMAVAAgACoALABDAEEAUwBFACAAAID5IABXAEgA
RQBOACAAQwBBAFMAVAAoAEMATwBOAFYARQBSAFQAKABWAEEAUgBDAEgAQQBSACgAMQAwACkALADG
lgR9n1s+fuVlLAAxADIAMQApACAAQQBTACAARABBAFQARQApACAAPAA9ACAAKABTAEUATABFAEMA
VAAgAE0AQQBYACgACGemXkJ9hk7lZSkAIABGAFIATwBNACAATQBfAEQARQBOAFAAWQBPAFUAXwBT
AEkATQBFAF8ATQBBAFMAVABFAFIAIABXAEgARQBSAEUAIAAIZ6Ze4H3lZSAASQBTACAATgBPAFQA
IABOAFUATABMACkAIAABTSAARgBSAE8ATQAgAFQAXwBEAEEAWQBfAFQARQBOAF8AUwBIAFUAVQBZ
AEEASwBVAF8ASgBJAFMAUwBFAEsASQBfAFQARQBNAFAAOwAAMQhnpl7gfYEwfjBXMF8wAjDgfYEw
5WVNUm4wxpYEfZ9bPn7lZUwwQjCKMH4wWTACMAEzIABTAEUATABFAEMAVAAgAFMASABVAFkAQQBL
AFUALgAqACwAIAAgAEMAQQBTAEUAIAAAQyAAVwBIAEUATgAgAFMASABVAFkAQQBLAFUALgDGlgR9
n1s+fuVlIAA8ACAAVABBAE4AQQAuANpoeFPlZdhOIAAgAAGA/yAATABFAEYAVAAgAEoATwBJAE4A
IAAoAFMARQBMAEUAQwBUACAARABJAFMAVABJAE4AQwBUACAAl14XgrMw/DDJMCwATQBBAFgAKADa
aHhT5WXYTikAIABBAFMAIADaaHhT5WXYTiAARgBSAE8ATQAgAE0AXwBUAEEATgBBAE8AUgBPAFMA
SABJAF8ATQBBAFMAVABFAFIAIABXAEgARQBSAEUAIADaaHhTuniaW+VlIAAhAD0AIAAnADEAOQAw
ADAALQAwADEALQAwADEAJwAgAEcAUgBPAFUAUAAgAEIAWQAgAJdeF4KzMPwwyTApACAAVABBAE4A
QQAgACAAAT8gAE8ATgAgAFMASABVAFkAQQBLAFUALgD6UatetTCkMMgwIAA9ACAAVABBAE4AQQAu
AJdeF4KzMPwwyTAgAAEl2mh4U7p4mlvlZU1SbjDGlgR9n1s+fuVlTDBCMIowfjBZMAIwAU0gAEMA
QQBTAEUAIABXAEgARQBOACAASgBPAEsARQBOAC4A1U5lUWFn9k4gACEAPQAgAFMASABVAFkAQQBL
AFUALgC3jNZT11MXiiAAAYFDIABMAEUARgBUACAASgBPAEkATgAgACgAUwBFAEwARQBDAFQAIABN
AFMAVAAuADP/K/81/7Mw/DDJMCAAQQBTACAAM/8r/zX/szD8MMkwLABKAFIALgAJZ7lSi5XLWeVl
LABKAFIALgAJZ7lSQn2GTuVlLAAgAEoAUgAuANVOZVFhZ/ZOIABGAFIATwBNACAATQBfAFMASABJ
AEkAUgBFAF8ASgBPAFUASwBFAE4AXwBSAEkAUgBFAEsASQAgAEoAUgAgAEwARQBGAFQAIABKAE8A
SQBOACAATQBfAFMASABPAFUASABJAE4AXwBEAEEAVABBACAATQBTAFQAIABPAE4AIABKAFIALgBG
VcFUszD8MMkwIAA9ACAATQBTAFQALgBGVcFUszD8MMkwKQAgAEEAUwAgAEoATwBLAEUATgAgAAFN
IABPAE4AIABKAE8ASwBFAE4ALgAz/yv/Nf+zMPwwyTAgAD0AIABTAEgAVQBZAEEASwBVAC4AM/8r
/zX/szD8MMkwIABBAE4ARAAgAAFnIABTAEgAVQBZAEEASwBVAC4AxpYEfZ9bPn7lZSAAQgBFAFQA
VwBFAEUATgAgAEoATwBLAEUATgAuAAlnuVKLlctZ5WUgAEEATgBEACAASgBPAEsARQBOAC4ACWe5
UkJ9hk7lZTsAATPGlgR9n1s+fuVlaDAJZ7lSi5XLWeVlbjBEfX8wCFSPMFswkjCTlVWQSDB+MFcw
XzACMAEzIABTAEUATABFAEMAVAAgAFMASABVAFkAQQBLAFUALgAqACwAIABDAEEAUwBFACAAIAAA
OyAAVwBIAEUATgAgAFQARQBOAFAATwAuAJdeF4KzMPwwyTAgAEkAUwAgAE4AVQBMAEwAIABPAFIA
IAABOSAATgBZAFUAVABFAE4AUABPAC4Al14XgrMw/DDJMCAASQBTACAATgBVAEwATAAgAE8AUgAg
ACAAATcgAFMASABPAEgASQBOAC4AM/8r/zX/szD8MMkwIABJAFMAIABOAFUATABMACAATwBSACAA
IAABNyAAUwBJAEkAUgBFAFMAQQBLAEkALgDVTmVRSFGzMPwwyTAgAEkAUwAgAE4AVQBMAEwAIAAg
AAFJIABMAEUARgBUACAASgBPAEkATgAgAE0AXwBUAEUATgBQAE8AXwBNAEEAUwBUAEUAUgAgAEEA
UwAgAFQARQBOAFAATwAgACAAAEEgAE8ATgAgAFMASABVAFkAQQBLAFUALgD6UatetTCkMMgwIAA9
ACAAVABFAE4AUABPAC4Al14XgrMw/DDJMCAAAU8gAEwARQBGAFQAIABKAE8ASQBOACAATQBfAFQA
RQBOAFAATwBfAE0AQQBTAFQARQBSACAAQQBTACAATgBZAFUAVABFAE4AUABPACAAIAAARyAATwBO
ACAAUwBIAFUAWQBBAEsAVQAuAGVRq161MKQwyDAgAD0AIABOAFkAVQBUAEUATgBQAE8ALgCXXheC
szD8MMkwIAABSSAATABFAEYAVAAgAEoATwBJAE4AIABNAF8AUwBIAE8AVQBIAEkATgBfAEQAQQBU
AEEAIABBAFMAIABTAEgATwBIAEkATgAgAABHIABPAE4AIABTAEgAVQBZAEEASwBVAC4AM/8r/zX/
szD8MMkwIAA9ACAAUwBIAE8ASABJAE4ALgAz/yv/Nf+zMPwwyTAgAAFXIABMAEUARgBUACAASgBP
AEkATgAgAE0AXwBTAEkASQBSAEUAUwBBAEsASQBfAE0AQQBTAFQARQBSACAAQQBTACAAUwBJAEkA
UgBFAFMAQQBLAEkAIAAATyAATwBOACAAUwBIAFUAWQBBAEsAVQAuANVOZVFIUbMw/DDJMCAAPQAg
AFMASQBJAFIARQBTAEEASwBJAC4A1U5lUUhRszD8MMkwOwAgAAFJ1U5lUUhRszD8MMkwATAz/yv/
Nf+zMPwwyTB+MF8wbzCXXheCszD8MMkwbzDeMLkwvzBrMFhbKFdVMIwwZjBEMH4wWzCTMAIwAR8g
AFMARQBMAEUAQwBUACAAKgAsACAAQwBBAFMARQAAgLEgAFcASABFAE4AIABDAE8ATgBWAEUAUgBU
ACgAVgBBAFIAQwBIAEEAUgAoADgAKQAsAHp2H3XlZdhOLAAxADEAMgApACAAIQA9ACAAQwBPAE4A
VgBFAFIAVAAoAFYAQQBSAEMASABBAFIAKAA4ACkALABEAEEAVABFAEEARABEACgARABBAFkALAAt
ADEALABHAEUAVABEAEEAVABFACgAKQApACwAMQAxADIAKQAgAAEXenYfdeVlkjCTlVWQSDB+MFcw
XzACMAGAiSAAVwBIAEUATgAgAEMATwBOAFYARQBSAFQAKABEAEEAVABFACwAxpYEfZ9bPn7lZSkA
IAA+ACAAQwBPAE4AVgBFAFIAVAAoAEQAQQBUAEUALABEAEEAVABFAEEARABEACgARABBAFkALAAt
ADEALABHAEUAVABEAEEAVABFACgAKQApACkAIAABWSAAVABIAEUATgAgACcAVABSAFUARQAnACAA
RQBMAFMARQAgACcARgBBAEwAUwBFACcAIABFAE4ARAAgAEEAUwAgAEQARQBMAF8AUgBFAEMATwBS
AEQAIAABTyAARgBSAE8ATQAgAFQAXwBEAEEAWQBfAFQARQBOAF8AUwBIAFUAVQBZAEEASwBVAF8A
SgBJAFMAUwBFAEsASQBfAFQARQBNAFAAOwAgAAAtxzD8ML8wazAGXGVnbjDGlgR9HU9oeeVlTDBY
WyhXVTCMMGYwRDB+MFkwAjABQ0kATgBTAEUAUgBUACAASQBOAFQATwAgAEsAQQBOAFMASABJAF8A
UABBAEMASwBBAEcARQBfAEUAUgBSAE8AUgAgAABLIAAoANEwwzCxMPwwuDCzMPwwyTAsAMcw/DC/
MOVl2E4sAKgw6TD8MOVlQmYsAKgw6TD8MIVRuVssAKgw6TD8MNUw6TCwMCkAIAABFSAAVgBBAEwA
VQBFAFMAKAAnAEcAASNVAHMAZQByADoAOgBwAGEAYwBrAGEAZwBlAEMAbwBkAGUAAAcnACwAJwAB
I1UAcwBlAHIAOgA6AGMAdQByAHIAZQBuAHQARABhAHQAZQAAG1UAcwBlAHIAOgA6AHMAeQBzAEQA
YQB0AGUAABcnACwAJwC3MLkwxjDgMKgw6TD8MDoAAQMnAAEDLQABDycALAAnADMAJwApADsAARVE
AEUATABfAFIARQBDAE8AUgBEAAAJVABSAFUARQAACXsAMAB9ACAAAAMCMAEhIABUAFIAVQBOAEMA
QQBUAEUAIABUAEEAQgBMAEUAIAAAH1UAcwBlAHIAOgA6AGMAaABlAGMAawBUAHkAcABlAAALXwBU
AEUATQBQAAAAACVVUC+FZolJtGZBJ7iWK0MACLd6XFYZNOCJCImEXc2AgMyRAwYSFQMGEhkDIAAB
BAAAEhUEAAASGQUAAQESGQQIABIVBAgAEhkDBhIMBAAAEgwECAASDAggAwESHRIhDgcgAhIdDhIh
BiACAQ4SIQUgAQESIQIGCAMGERQEAAAAAAQBAAAABCABAQ4EIAEBCAYAARJZEV0EIAASYQYgAgEO
EmEEBwESFQUgAQERaQgBAAIAAAAAAAMAAAEEIAASdQQgABJ5BSABEn0cAyAAHAMgAA4FIAASgIEG
IAESgIEOBSAAEoCFAyAACAUgAg4ODgUAAQ4dDg8HBg4SIRKAgRIdEoCRHQ4CBg4GIAESgJUIBCAB
HA4FAAICDg4EIAAdHAcgAhKAgQ4cBCAAEh0FIAASgJkGIAEBEoCVBgADDg4ODgUAAg4ODgUgAQES
HRgHCxKAgRKAgRKAlQ4ICAgIEoCdEoCRHQ4GIAEBEYCtBiABARKApQUgAQgSHQ0HBBIdEoClEoCx
EoCRCAcCEoClEoCRBSAAEYC9BQcBEoCRRwEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC4wAQBU
DhRGcmFtZXdvcmtEaXNwbGF5TmFtZRAuTkVUIEZyYW1ld29yayA0KAEAI1NUX2NlM2ZmYzA5MDUw
NTQ1YTU4ODc1MGI1MGYyMWMxNzg4AAAFAQAAAAAWAQARQ29weXJpZ2h0IEAgIDIwMTYAAAgBAAgA
AAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEALFAAAAAAAAAAAAAATlAAAAAgAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAEBQAAAAAAAAAAAAAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2Nv
cmVlLmRsbAAAAAAA/yUAIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAQAAAAGAAAgAAA
AAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAAAFhgAACwAwAAAAAA
AAAAAACwAzQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAAvQTv/gAAAQAAAAEA
noXdGAAAAQCehd0YPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAABAFYAYQByAEYAaQBs
AGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAAAAAAALAEEAMAAAEA
UwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAA7AIAAAEAMAAwADAAMAAwADQAYgAwAAAAcAAk
AAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAAAFMAVABfAGMAZQAzAGYAZgBjADAA
OQAwADUAMAA1ADQANQBhADUAOAA4ADcANQAwAGIANQAwAGYAMgAxAGMAMQA3ADgAOAAAAEAADwAB
AEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgA2ADMANgA1AC4AMwA0ADIAMAA2AAAA
AABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMAVABfADQAYQA0ADQAYwA1AGMAOQA3
AGIANwBhADQAZQAzAGMAOQBlADEANQBhADAAMgA1ADIAYwAxADMANQBjADcAYgAuAGQAbABsAAAA
SAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBvAHAAeQByAGkAZwBoAHQAIABA
ACAAIAAyADAAMQA2AAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBhAG0AZQAAAFMA
VABfADQAYQA0ADQAYwA1AGMAOQA3AGIANwBhADQAZQAzAGMAOQBlADEANQBhADAAMgA1ADIAYwAx
ADMANQBjADcAYgAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEAbQBlAAAAAABTAFQA
XwBjAGUAMwBmAGYAYwAwADkAMAA1ADAANQA0ADUAYQA1ADgAOAA3ADUAMABiADUAMABmADIAMQBj
ADEANwA4ADgAAABEAA8AAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADYA
MwA2ADUALgAzADQAMgAwADYAAAAAAEgADwABAEEAcwBzAGUAbQBiAGwAeQAgAFYAZQByAHMAaQBv
AG4AAAAxAC4AMAAuADYAMwA2ADUALgAzADQAMgAwADYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABQAAAMAAAAYDAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{DEFFEE97-9B2A-4E63-9E6F-3A5BE9054670}"
      DTS:EvalOp="3"
      DTS:Expression="@[User::checkType] == &quot;M_SHOUHIN_DATA&quot;"
      DTS:From="Package\方向性を与えます"
      DTS:ObjectName="Constraint"
      DTS:To="Package\商品マスタチェック" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 1]"
      DTS:CreationName=""
      DTS:DTSID="{3042316F-FE27-47A0-8EB2-64BEA29AB4F0}"
      DTS:EvalOp="3"
      DTS:Expression="@[User::checkType] == &quot;M_GENKA_RIREKI&quot;"
      DTS:From="Package\方向性を与えます"
      DTS:ObjectName="Constraint 1"
      DTS:To="Package\原価履歴マスタチェック" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 10]"
      DTS:CreationName=""
      DTS:DTSID="{5C9CA352-315C-4707-8439-6A1CC6759EEF}"
      DTS:EvalOp="3"
      DTS:Expression="@[User::checkType] == &quot;D_KAIKEI_DENPYOU_MEISAI&quot;"
      DTS:From="Package\方向性を与えます"
      DTS:ObjectName="Constraint 10"
      DTS:To="Package\会計伝票明細" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 11]"
      DTS:CreationName=""
      DTS:DTSID="{596A05F3-B699-4C34-B9C3-D7FC6A7D29D0}"
      DTS:EvalOp="3"
      DTS:Expression="@[User::checkType] == &quot;D_URIAGE_DENPYOU_MEISAI&quot;"
      DTS:From="Package\方向性を与えます"
      DTS:ObjectName="Constraint 11"
      DTS:To="Package\売上伝票明細" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 12]"
      DTS:CreationName=""
      DTS:DTSID="{1CEDB24E-4FFC-456B-BC63-B12900436772}"
      DTS:EvalOp="3"
      DTS:Expression="@[User::checkType] == &quot;D_BAIHEN_DENPYOU_MEISAI&quot;"
      DTS:From="Package\方向性を与えます"
      DTS:ObjectName="Constraint 12"
      DTS:To="Package\売変伝票明細" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 13]"
      DTS:CreationName=""
      DTS:DTSID="{313DF106-E410-42D1-8DD9-C7BFE191F731}"
      DTS:EvalOp="1"
      DTS:Expression="@[User::checkType] == &quot;M_SHIIRE_JOUKEN_RIREKI&quot;"
      DTS:From="Package\方向性を与えます"
      DTS:ObjectName="Constraint 13"
      DTS:To="Package\仕入条件履歴" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 14]"
      DTS:CreationName=""
      DTS:DTSID="{3ED6182E-8623-4459-ABEF-56A98CB21AA0}"
      DTS:From="Package\商品マスタチェック"
      DTS:ObjectName="Constraint 14"
      DTS:To="Package\業務チェックステータスのメール" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 15]"
      DTS:CreationName=""
      DTS:DTSID="{184F6D07-49A1-4DCA-90B3-BDFEF22428A6}"
      DTS:From="Package\原価履歴マスタチェック"
      DTS:ObjectName="Constraint 15"
      DTS:To="Package\業務チェックステータスのメール" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 16]"
      DTS:CreationName=""
      DTS:DTSID="{170B2E2E-BB3C-4C54-B7BC-7347F4BF1771}"
      DTS:From="Package\売価履歴マスタチェック"
      DTS:ObjectName="Constraint 16"
      DTS:To="Package\業務チェックステータスのメール" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 17]"
      DTS:CreationName=""
      DTS:DTSID="{1A977B55-7780-4985-BEEB-DAF71054BDE9}"
      DTS:From="Package\仕入実績"
      DTS:ObjectName="Constraint 17"
      DTS:To="Package\業務チェックステータスのメール" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 18]"
      DTS:CreationName=""
      DTS:DTSID="{41EF6C7A-B99B-438C-9FDA-6D07ECB0E005}"
      DTS:From="Package\返品実績"
      DTS:ObjectName="Constraint 18"
      DTS:To="Package\業務チェックステータスのメール" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 19]"
      DTS:CreationName=""
      DTS:DTSID="{F102CCF5-1DA7-4A83-B309-A28AEA4A3AEB}"
      DTS:From="Package\出荷実績"
      DTS:ObjectName="Constraint 19"
      DTS:To="Package\業務チェックステータスのメール" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 2]"
      DTS:CreationName=""
      DTS:DTSID="{891BB214-B26A-46E5-8EA5-DDDA0B4BE78E}"
      DTS:EvalOp="3"
      DTS:Expression="@[User::checkType] == &quot;M_BAIKA_RIREKI&quot;"
      DTS:From="Package\方向性を与えます"
      DTS:ObjectName="Constraint 2"
      DTS:To="Package\売価履歴マスタチェック" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 20]"
      DTS:CreationName=""
      DTS:DTSID="{3B924F3B-1105-4107-A4DB-58BC1228E906}"
      DTS:From="Package\集約実績"
      DTS:ObjectName="Constraint 20"
      DTS:To="Package\業務チェックステータスのメール" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 21]"
      DTS:CreationName=""
      DTS:DTSID="{80EADA7F-F745-49E9-84CB-46BC2ABC6BAE}"
      DTS:From="Package\倉庫間移動"
      DTS:ObjectName="Constraint 21"
      DTS:To="Package\業務チェックステータスのメール" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 22]"
      DTS:CreationName=""
      DTS:DTSID="{7CD7918A-8163-492A-A5D7-E5B2655B5A75}"
      DTS:From="Package\店間移動"
      DTS:ObjectName="Constraint 22"
      DTS:To="Package\業務チェックステータスのメール" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 23]"
      DTS:CreationName=""
      DTS:DTSID="{F4DFC511-39D0-451C-A54B-AF24555C144C}"
      DTS:From="Package\棚卸伝票明細"
      DTS:ObjectName="Constraint 23"
      DTS:To="Package\業務チェックステータスのメール" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 24]"
      DTS:CreationName=""
      DTS:DTSID="{F294E850-803E-40EC-832C-52C51E426703}"
      DTS:From="Package\会計伝票明細"
      DTS:ObjectName="Constraint 24"
      DTS:To="Package\業務チェックステータスのメール" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 25]"
      DTS:CreationName=""
      DTS:DTSID="{D2428A3B-D917-4725-82BB-89ED6E8D857D}"
      DTS:From="Package\売上伝票明細"
      DTS:ObjectName="Constraint 25"
      DTS:To="Package\業務チェックステータスのメール" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 26]"
      DTS:CreationName=""
      DTS:DTSID="{21271058-AFCE-4BB8-9827-BF81EC6171FA}"
      DTS:From="Package\売変伝票明細"
      DTS:ObjectName="Constraint 26"
      DTS:To="Package\業務チェックステータスのメール" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 27]"
      DTS:CreationName=""
      DTS:DTSID="{A41D1939-D9ED-40CF-AC0E-05B1190D4A70}"
      DTS:From="Package\仕入条件履歴"
      DTS:ObjectName="Constraint 27"
      DTS:To="Package\業務チェックステータスのメール" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 28]"
      DTS:CreationName=""
      DTS:DTSID="{C11A015D-683E-4713-BDD9-FBB4C7573F65}"
      DTS:EvalOp="1"
      DTS:Expression="@[User::checkType] == &quot;D_CHOUSEI_DENPYOU_MEISAI&quot;"
      DTS:From="Package\方向性を与えます"
      DTS:ObjectName="Constraint 28"
      DTS:To="Package\調整伝票明細" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 29]"
      DTS:CreationName=""
      DTS:DTSID="{4F4386FE-7A4E-4C06-BC9B-F698E39960A6}"
      DTS:From="Package\調整伝票明細"
      DTS:ObjectName="Constraint 29"
      DTS:To="Package\業務チェックステータスのメール" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 3]"
      DTS:CreationName=""
      DTS:DTSID="{3FEDD70C-FAEA-4829-96C7-DAF9FF999780}"
      DTS:EvalOp="3"
      DTS:Expression="@[User::checkType] == &quot;T_DAY_SKU_SIIRE_JISSEKI&quot;"
      DTS:From="Package\方向性を与えます"
      DTS:ObjectName="Constraint 3"
      DTS:To="Package\仕入実績" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 30]"
      DTS:CreationName=""
      DTS:DTSID="{093DD877-F6B8-4723-9AC4-4B83C8BD9BB5}"
      DTS:EvalOp="3"
      DTS:Expression="@[User::checkType] == &quot;T_DAY_TEN_REGI_SEISAN&quot;"
      DTS:From="Package\方向性を与えます"
      DTS:ObjectName="Constraint 30"
      DTS:To="Package\レジ精算" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 31]"
      DTS:CreationName=""
      DTS:DTSID="{46528CB7-32F6-4E5B-8BD0-8DD238FFC4DB}"
      DTS:From="Package\レジ精算"
      DTS:ObjectName="Constraint 31"
      DTS:To="Package\業務チェックステータスのメール" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 4]"
      DTS:CreationName=""
      DTS:DTSID="{4958D50B-C0B3-4E07-BEA8-CF10B696EC01}"
      DTS:EvalOp="3"
      DTS:Expression="@[User::checkType] == &quot;T_DAY_SKU_HENPIN_JISSEKI&quot;"
      DTS:From="Package\方向性を与えます"
      DTS:ObjectName="Constraint 4"
      DTS:To="Package\返品実績" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 5]"
      DTS:CreationName=""
      DTS:DTSID="{F8924D18-65E0-47C1-8D4D-94BF7131BF30}"
      DTS:EvalOp="3"
      DTS:Expression="@[User::checkType] == &quot;T_DAY_TEN_SHUKKA_JISSEKI&quot;"
      DTS:From="Package\方向性を与えます"
      DTS:ObjectName="Constraint 5"
      DTS:To="Package\出荷実績" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 6]"
      DTS:CreationName=""
      DTS:DTSID="{615797AC-6399-445F-9DB4-3A63DB842478}"
      DTS:EvalOp="3"
      DTS:Expression="@[User::checkType] == &quot;T_DAY_TEN_SHUUYAKU_JISSEKI&quot;"
      DTS:From="Package\方向性を与えます"
      DTS:ObjectName="Constraint 6"
      DTS:To="Package\集約実績" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 7]"
      DTS:CreationName=""
      DTS:DTSID="{6270C705-6CA8-4C08-BD01-8B20259936D1}"
      DTS:EvalOp="3"
      DTS:Expression="@[User::checkType] == &quot;T_DAY_SOUKOKAN_IDO_DATA&quot;"
      DTS:From="Package\方向性を与えます"
      DTS:ObjectName="Constraint 7"
      DTS:To="Package\倉庫間移動" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 8]"
      DTS:CreationName=""
      DTS:DTSID="{BC91768C-3486-4463-B3A7-3001A2352D98}"
      DTS:EvalOp="3"
      DTS:Expression="@[User::checkType] == &quot;T_DAY_TENKAN_IDO_DATA&quot;"
      DTS:From="Package\方向性を与えます"
      DTS:ObjectName="Constraint 8"
      DTS:To="Package\店間移動" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 9]"
      DTS:CreationName=""
      DTS:DTSID="{74982771-8F20-41D0-B427-29DA46FA8EDB}"
      DTS:EvalOp="3"
      DTS:Expression="@[User::checkType] == &quot;D_TANAOROSHI_DENPYOU_MEISAI&quot;"
      DTS:From="Package\方向性を与えます"
      DTS:ObjectName="Constraint 9"
      DTS:To="Package\棚卸伝票明細" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="sql12">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="128" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="117,42"
          Id="Package\レジ精算"
          TopLeft="846,472" />
        <NodeLayout
          Size="143,42"
          Id="Package\会計伝票明細"
          TopLeft="710,352" />
        <NodeLayout
          Size="211,42"
          Id="Package\業務チェックステータスのメール"
          TopLeft="504,668" />
        <NodeLayout
          Size="175,42"
          Id="Package\原価履歴マスタチェック"
          TopLeft="194,228" />
        <NodeLayout
          Size="122,42"
          Id="Package\仕入実績"
          TopLeft="598,229" />
        <NodeLayout
          Size="143,42"
          Id="Package\仕入条件履歴"
          TopLeft="885,348" />
        <NodeLayout
          Size="122,42"
          Id="Package\集約実績"
          TopLeft="1052,229" />
        <NodeLayout
          Size="122,42"
          Id="Package\出荷実績"
          TopLeft="902,228" />
        <NodeLayout
          Size="154,42"
          Id="Package\商品マスタチェック"
          TopLeft="30,228" />
        <NodeLayout
          Size="132,42"
          Id="Package\倉庫間移動"
          TopLeft="189,353" />
        <NodeLayout
          Size="143,42"
          Id="Package\棚卸伝票明細"
          TopLeft="524,351" />
        <NodeLayout
          Size="143,42"
          Id="Package\調整伝票明細"
          TopLeft="245,478" />
        <NodeLayout
          Size="122,42"
          Id="Package\店間移動"
          TopLeft="359.25,353.25" />
        <NodeLayout
          Size="176,42"
          Id="Package\売価履歴マスタチェック"
          TopLeft="388,230" />
        <NodeLayout
          Size="143,42"
          Id="Package\売上伝票明細"
          TopLeft="441,478" />
        <NodeLayout
          Size="143,42"
          Id="Package\売変伝票明細"
          TopLeft="650,475" />
        <NodeLayout
          Size="122,42"
          Id="Package\返品実績"
          TopLeft="757,230" />
        <NodeLayout
          Size="157,42"
          Id="Package\方向性を与えます"
          TopLeft="536,60" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="564.833333333333,102">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-457.833333333333,126"
              Start="0,0"
              End="-457.833333333333,118.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,29.8478260869566" />
                  <mssgle:CubicBezierSegment
                    Point1="0,29.8478260869566"
                    Point2="0,33.8478260869566"
                    Point3="-4,33.8478260869566" />
                  <mssgle:LineSegment
                    End="-453.833333333333,33.8478260869566" />
                  <mssgle:CubicBezierSegment
                    Point1="-453.833333333333,33.8478260869566"
                    Point2="-457.833333333333,33.8478260869566"
                    Point3="-457.833333333333,37.8478260869566" />
                  <mssgle:LineSegment
                    End="-457.833333333333,118.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-236.916666666666,38.8478260869566,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 1]"
          TopLeft="571.928571428571,102">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-290.428571428571,126"
              Start="0,0"
              End="-290.428571428571,118.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,35.561797752809" />
                  <mssgle:CubicBezierSegment
                    Point1="0,35.561797752809"
                    Point2="0,39.561797752809"
                    Point3="-4,39.561797752809" />
                  <mssgle:LineSegment
                    End="-286.428571428571,39.561797752809" />
                  <mssgle:CubicBezierSegment
                    Point1="-286.428571428571,39.561797752809"
                    Point2="-290.428571428571,39.561797752809"
                    Point3="-290.428571428571,43.561797752809" />
                  <mssgle:LineSegment
                    End="-290.428571428571,118.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-153.214285714285,44.561797752809,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 10]"
          TopLeft="639.333333333333,102">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="142.166666666667,250"
              Start="0,0"
              End="142.166666666667,242.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,97.5132408575031" />
                  <mssgle:CubicBezierSegment
                    Point1="0,97.5132408575031"
                    Point2="0,101.513240857503"
                    Point3="4,101.513240857503" />
                  <mssgle:LineSegment
                    End="138.166666666667,101.513240857503" />
                  <mssgle:CubicBezierSegment
                    Point1="138.166666666667,101.513240857503"
                    Point2="142.166666666667,101.513240857503"
                    Point3="142.166666666667,105.513240857503" />
                  <mssgle:LineSegment
                    End="142.166666666667,242.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="23.1875,113.175248419151,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 11]"
          TopLeft="605.1875,102">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-92.6875,376"
              Start="0,0"
              End="-92.6875,368.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,172.145577655523" />
                  <mssgle:CubicBezierSegment
                    Point1="0,172.145577655523"
                    Point2="0,176.145577655523"
                    Point3="-4,176.145577655523" />
                  <mssgle:LineSegment
                    End="-88.6875,176.145577655523" />
                  <mssgle:CubicBezierSegment
                    Point1="-88.6875,176.145577655523"
                    Point2="-92.6875,176.145577655523"
                    Point3="-92.6875,180.145577655523" />
                  <mssgle:LineSegment
                    End="-92.6875,368.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-54.34375,181.145577655523,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 12]"
          TopLeft="633.125,102">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="88.375,373"
              Start="0,0"
              End="88.375,365.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,157.397470641373" />
                  <mssgle:CubicBezierSegment
                    Point1="0,157.397470641373"
                    Point2="0,161.397470641373"
                    Point3="4,161.397470641373" />
                  <mssgle:LineSegment
                    End="84.375,161.397470641373" />
                  <mssgle:CubicBezierSegment
                    Point1="84.375,161.397470641373"
                    Point2="88.375,161.397470641373"
                    Point3="88.375,165.397470641373" />
                  <mssgle:LineSegment
                    End="88.375,365.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="36.1875,166.397470641373,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 13]"
          TopLeft="659.2,102">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="297.3,246"
              Start="0,0"
              End="297.3,238.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,70.0409617097061" />
                  <mssgle:CubicBezierSegment
                    Point1="0,70.0409617097061"
                    Point2="0,74.0409617097061"
                    Point3="4,74.0409617097061" />
                  <mssgle:LineSegment
                    End="293.3,74.0409617097061" />
                  <mssgle:CubicBezierSegment
                    Point1="293.3,74.0409617097061"
                    Point2="297.3,74.0409617097061"
                    Point3="297.3,78.0409617097061" />
                  <mssgle:LineSegment
                    End="297.3,238.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="96.71875,76.1409168081494,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 14]"
          TopLeft="107,270">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="413.6875,398"
              Start="0,0"
              End="413.6875,390.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,339.643989769821" />
                  <mssgle:CubicBezierSegment
                    Point1="0,339.643989769821"
                    Point2="0,343.643989769821"
                    Point3="4,343.643989769821" />
                  <mssgle:LineSegment
                    End="409.6875,343.643989769821" />
                  <mssgle:CubicBezierSegment
                    Point1="409.6875,343.643989769821"
                    Point2="413.6875,343.643989769821"
                    Point3="413.6875,347.643989769821" />
                  <mssgle:LineSegment
                    End="413.6875,390.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 15]"
          TopLeft="281.5,270">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="264.5625,398"
              Start="0,0"
              End="264.5625,390.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,280.550614146548" />
                  <mssgle:CubicBezierSegment
                    Point1="0,280.550614146548"
                    Point2="0,284.550614146548"
                    Point3="4,284.550614146548" />
                  <mssgle:LineSegment
                    End="260.5625,284.550614146548" />
                  <mssgle:CubicBezierSegment
                    Point1="260.5625,284.550614146548"
                    Point2="264.5625,284.550614146548"
                    Point3="264.5625,288.550614146548" />
                  <mssgle:LineSegment
                    End="264.5625,390.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 16]"
          TopLeft="476,272">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="108.125,396"
              Start="0,0"
              End="108.125,388.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,221.066666666667" />
                  <mssgle:CubicBezierSegment
                    Point1="0,221.066666666667"
                    Point2="0,225.066666666667"
                    Point3="4,225.066666666667" />
                  <mssgle:LineSegment
                    End="104.125,225.066666666667" />
                  <mssgle:CubicBezierSegment
                    Point1="104.125,225.066666666667"
                    Point2="108.125,225.066666666667"
                    Point3="108.125,229.066666666667" />
                  <mssgle:LineSegment
                    End="108.125,388.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 17]"
          TopLeft="659,271">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-36.8125,397"
              Start="0,0"
              End="-36.8125,389.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,207.199495745351" />
                  <mssgle:CubicBezierSegment
                    Point1="0,207.199495745351"
                    Point2="0,211.199495745351"
                    Point3="-4,211.199495745351" />
                  <mssgle:LineSegment
                    End="-32.8125,211.199495745351" />
                  <mssgle:CubicBezierSegment
                    Point1="-32.8125,211.199495745351"
                    Point2="-36.8125,211.199495745351"
                    Point3="-36.8125,215.199495745351" />
                  <mssgle:LineSegment
                    End="-36.8125,389.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 18]"
          TopLeft="818,272">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-170.4375,396"
              Start="0,0"
              End="-170.4375,388.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,237.578604987351" />
                  <mssgle:CubicBezierSegment
                    Point1="0,237.578604987351"
                    Point2="0,241.578604987351"
                    Point3="-4,241.578604987351" />
                  <mssgle:LineSegment
                    End="-166.4375,241.578604987351" />
                  <mssgle:CubicBezierSegment
                    Point1="-166.4375,241.578604987351"
                    Point2="-170.4375,241.578604987351"
                    Point3="-170.4375,245.578604987351" />
                  <mssgle:LineSegment
                    End="-170.4375,388.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 19]"
          TopLeft="963,270">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-277.375,398"
              Start="0,0"
              End="-277.375,390.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,307.317886932345" />
                  <mssgle:CubicBezierSegment
                    Point1="0,307.317886932345"
                    Point2="0,311.317886932345"
                    Point3="-4,311.317886932345" />
                  <mssgle:LineSegment
                    End="-273.375,311.317886932345" />
                  <mssgle:CubicBezierSegment
                    Point1="-273.375,311.317886932345"
                    Point2="-277.375,311.317886932345"
                    Point3="-277.375,315.317886932345" />
                  <mssgle:LineSegment
                    End="-277.375,390.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 2]"
          TopLeft="603.857142857143,102">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-127.857142857143,128"
              Start="0,0"
              End="-127.857142857143,120.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,55.3460224499756" />
                  <mssgle:CubicBezierSegment
                    Point1="0,55.3460224499756"
                    Point2="0,59.3460224499756"
                    Point3="-4,59.3460224499756" />
                  <mssgle:LineSegment
                    End="-123.857142857143,59.3460224499756" />
                  <mssgle:CubicBezierSegment
                    Point1="-123.857142857143,59.3460224499756"
                    Point2="-127.857142857143,59.3460224499756"
                    Point3="-127.857142857143,63.3460224499756" />
                  <mssgle:LineSegment
                    End="-127.857142857143,120.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-71.9285714285715,64.3460224499756,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 20]"
          TopLeft="1113,271">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-414.6875,397"
              Start="0,0"
              End="-414.6875,389.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,338.780562659847" />
                  <mssgle:CubicBezierSegment
                    Point1="0,338.780562659847"
                    Point2="0,342.780562659847"
                    Point3="-4,342.780562659847" />
                  <mssgle:LineSegment
                    End="-410.6875,342.780562659847" />
                  <mssgle:CubicBezierSegment
                    Point1="-410.6875,342.780562659847"
                    Point2="-414.6875,342.780562659847"
                    Point3="-414.6875,346.780562659847" />
                  <mssgle:LineSegment
                    End="-414.6875,389.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 21]"
          TopLeft="255,395">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="278.375,273"
              Start="0,0"
              End="278.375,265.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,209.542168674699" />
                  <mssgle:CubicBezierSegment
                    Point1="0,209.542168674699"
                    Point2="0,213.542168674699"
                    Point3="4,213.542168674699" />
                  <mssgle:LineSegment
                    End="274.375,213.542168674699" />
                  <mssgle:CubicBezierSegment
                    Point1="274.375,213.542168674699"
                    Point2="278.375,213.542168674699"
                    Point3="278.375,217.542168674699" />
                  <mssgle:LineSegment
                    End="278.375,265.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 22]"
          TopLeft="420.25,395.25">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="138.5,272.75"
              Start="0,0"
              End="138.5,265.25">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,175.563962558502" />
                  <mssgle:CubicBezierSegment
                    Point1="0,175.563962558502"
                    Point2="0,179.563962558502"
                    Point3="4,179.563962558502" />
                  <mssgle:LineSegment
                    End="134.5,179.563962558502" />
                  <mssgle:CubicBezierSegment
                    Point1="134.5,179.563962558502"
                    Point2="138.5,179.563962558502"
                    Point3="138.5,183.563962558502" />
                  <mssgle:LineSegment
                    End="138.5,265.25" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 23]"
          TopLeft="596.15625,393">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,275"
              Start="0,0"
              End="0,267.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,267.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 24]"
          TopLeft="781.5,394">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-146.625,274"
              Start="0,0"
              End="-146.625,266.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,151.727946127946" />
                  <mssgle:CubicBezierSegment
                    Point1="0,151.727946127946"
                    Point2="0,155.727946127946"
                    Point3="-4,155.727946127946" />
                  <mssgle:LineSegment
                    End="-142.625,155.727946127946" />
                  <mssgle:CubicBezierSegment
                    Point1="-142.625,155.727946127946"
                    Point2="-146.625,155.727946127946"
                    Point3="-146.625,159.727946127946" />
                  <mssgle:LineSegment
                    End="-146.625,266.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 25]"
          TopLeft="512.5,520">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="84.3125,148"
              Start="0,0"
              End="84.3125,140.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,74.7343208320202" />
                  <mssgle:CubicBezierSegment
                    Point1="0,74.7343208320202"
                    Point2="0,78.7343208320202"
                    Point3="4,78.7343208320202" />
                  <mssgle:LineSegment
                    End="80.3125,78.7343208320202" />
                  <mssgle:CubicBezierSegment
                    Point1="80.3125,78.7343208320202"
                    Point2="84.3125,78.7343208320202"
                    Point3="84.3125,82.7343208320202" />
                  <mssgle:LineSegment
                    End="84.3125,140.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 26]"
          TopLeft="721.5,517">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-86.625,151"
              Start="0,0"
              End="-86.625,143.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,81.8208754208754" />
                  <mssgle:CubicBezierSegment
                    Point1="0,81.8208754208754"
                    Point2="0,85.8208754208754"
                    Point3="-4,85.8208754208754" />
                  <mssgle:LineSegment
                    End="-82.625,85.8208754208754" />
                  <mssgle:CubicBezierSegment
                    Point1="-82.625,85.8208754208754"
                    Point2="-86.625,85.8208754208754"
                    Point3="-86.625,89.8208754208754" />
                  <mssgle:LineSegment
                    End="-86.625,143.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 27]"
          TopLeft="956.5,390">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-283.5625,278"
              Start="0,0"
              End="-283.5625,270.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,194.756459127488" />
                  <mssgle:CubicBezierSegment
                    Point1="0,194.756459127488"
                    Point2="0,198.756459127488"
                    Point3="-4,198.756459127488" />
                  <mssgle:LineSegment
                    End="-279.5625,198.756459127488" />
                  <mssgle:CubicBezierSegment
                    Point1="-279.5625,198.756459127488"
                    Point2="-283.5625,198.756459127488"
                    Point3="-283.5625,202.756459127488" />
                  <mssgle:LineSegment
                    End="-283.5625,270.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 28]"
          TopLeft="577.25,102">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-260.75,376"
              Start="0,0"
              End="-260.75,368.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,125.519832985386" />
                  <mssgle:CubicBezierSegment
                    Point1="0,125.519832985386"
                    Point2="0,129.519832985386"
                    Point3="-4,129.519832985386" />
                  <mssgle:LineSegment
                    End="-256.75,129.519832985386" />
                  <mssgle:CubicBezierSegment
                    Point1="-256.75,129.519832985386"
                    Point2="-260.75,129.519832985386"
                    Point3="-260.75,133.519832985386" />
                  <mssgle:LineSegment
                    End="-260.75,368.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-138.375,134.519832985386,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 29]"
          TopLeft="316.5,520">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="242.25,148"
              Start="0,0"
              End="242.25,140.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,93.4352574102964" />
                  <mssgle:CubicBezierSegment
                    Point1="0,93.4352574102964"
                    Point2="0,97.4352574102964"
                    Point3="4,97.4352574102964" />
                  <mssgle:LineSegment
                    End="238.25,97.4352574102964" />
                  <mssgle:CubicBezierSegment
                    Point1="238.25,97.4352574102964"
                    Point2="242.25,97.4352574102964"
                    Point3="242.25,101.435257410296" />
                  <mssgle:LineSegment
                    End="242.25,140.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 3]"
          TopLeft="625.142857142857,102">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="33.8571428571429,127"
              Start="0,0"
              End="33.8571428571429,119.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,54.8823816495852" />
                  <mssgle:CubicBezierSegment
                    Point1="0,54.8823816495852"
                    Point2="0,58.8823816495852"
                    Point3="4,58.8823816495852" />
                  <mssgle:LineSegment
                    End="29.8571428571429,58.8823816495852" />
                  <mssgle:CubicBezierSegment
                    Point1="29.8571428571429,58.8823816495852"
                    Point2="33.8571428571429,58.8823816495852"
                    Point3="33.8571428571429,62.8823816495852" />
                  <mssgle:LineSegment
                    End="33.8571428571429,119.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="8.92857142857145,63.8823816495852,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 30]"
          TopLeft="653.941176470588,102">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="250.558823529412,370"
              Start="0,0"
              End="250.558823529412,362.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,118.932199149362" />
                  <mssgle:CubicBezierSegment
                    Point1="0,118.932199149362"
                    Point2="0,122.932199149362"
                    Point3="4,122.932199149362" />
                  <mssgle:LineSegment
                    End="246.558823529412,122.932199149362" />
                  <mssgle:CubicBezierSegment
                    Point1="246.558823529412,122.932199149362"
                    Point2="250.558823529412,122.932199149362"
                    Point3="250.558823529412,126.932199149362" />
                  <mssgle:LineSegment
                    End="250.558823529412,362.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="117.279411764706,127.932199149362,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 31]"
          TopLeft="904.5,514">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-241.264705882353,154"
              Start="0,0"
              End="-241.264705882353,146.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,99.3098933981672" />
                  <mssgle:CubicBezierSegment
                    Point1="0,99.3098933981672"
                    Point2="0,103.309893398167"
                    Point3="-4,103.309893398167" />
                  <mssgle:LineSegment
                    End="-237.264705882353,103.309893398167" />
                  <mssgle:CubicBezierSegment
                    Point1="-237.264705882353,103.309893398167"
                    Point2="-241.264705882353,103.309893398167"
                    Point3="-241.264705882353,107.309893398167" />
                  <mssgle:LineSegment
                    End="-241.264705882353,146.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 4]"
          TopLeft="646.428571428571,102">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="171.571428571429,128"
              Start="0,0"
              End="171.571428571429,120.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,43.6619074814392" />
                  <mssgle:CubicBezierSegment
                    Point1="0,43.6619074814392"
                    Point2="0,47.6619074814392"
                    Point3="4,47.6619074814392" />
                  <mssgle:LineSegment
                    End="167.571428571429,47.6619074814392" />
                  <mssgle:CubicBezierSegment
                    Point1="167.571428571429,47.6619074814392"
                    Point2="171.571428571429,47.6619074814392"
                    Point3="171.571428571429,51.6619074814392" />
                  <mssgle:LineSegment
                    End="171.571428571429,120.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="77.7857142857145,52.6619074814392,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 5]"
          TopLeft="667.714285714286,102">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="295.285714285714,126"
              Start="0,0"
              End="295.285714285714,118.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,26.6978664831384" />
                  <mssgle:CubicBezierSegment
                    Point1="0,26.6978664831384"
                    Point2="0,30.6978664831384"
                    Point3="4,30.6978664831384" />
                  <mssgle:LineSegment
                    End="291.285714285714,30.6978664831384" />
                  <mssgle:CubicBezierSegment
                    Point1="291.285714285714,30.6978664831384"
                    Point2="295.285714285714,30.6978664831384"
                    Point3="295.285714285714,34.6978664831384" />
                  <mssgle:LineSegment
                    End="295.285714285714,118.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="139.642857142857,35.6978664831384,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 6]"
          TopLeft="678.357142857143,102">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="434.642857142857,127"
              Start="0,0"
              End="434.642857142857,119.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,15.965490797546" />
                  <mssgle:CubicBezierSegment
                    Point1="0,15.965490797546"
                    Point2="0,19.965490797546"
                    Point3="4,19.965490797546" />
                  <mssgle:LineSegment
                    End="430.642857142857,19.965490797546" />
                  <mssgle:CubicBezierSegment
                    Point1="430.642857142857,19.965490797546"
                    Point2="434.642857142857,19.965490797546"
                    Point3="434.642857142857,23.965490797546" />
                  <mssgle:LineSegment
                    End="434.642857142857,119.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="209.321428571428,24.965490797546,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 7]"
          TopLeft="559.866666666667,102">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-304.866666666667,251"
              Start="0,0"
              End="-304.866666666667,243.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,54.5203516769782" />
                  <mssgle:CubicBezierSegment
                    Point1="0,54.5203516769782"
                    Point2="0,58.5203516769782"
                    Point3="-4,58.5203516769782" />
                  <mssgle:LineSegment
                    End="-300.866666666667,58.5203516769782" />
                  <mssgle:CubicBezierSegment
                    Point1="-300.866666666667,58.5203516769782"
                    Point2="-304.866666666667,58.5203516769782"
                    Point3="-304.866666666667,62.5203516769782" />
                  <mssgle:LineSegment
                    End="-304.866666666667,243.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-202.8125,61.1569839307787,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 8]"
          TopLeft="579.733333333333,102">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-159.483333333333,251.25"
              Start="0,0"
              End="-159.483333333333,243.75">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,85.8936460321789" />
                  <mssgle:CubicBezierSegment
                    Point1="0,85.8936460321789"
                    Point2="0,89.8936460321789"
                    Point3="-4,89.8936460321789" />
                  <mssgle:LineSegment
                    End="-155.483333333333,89.8936460321789" />
                  <mssgle:CubicBezierSegment
                    Point1="-155.483333333333,89.8936460321789"
                    Point2="-159.483333333333,89.8936460321789"
                    Point3="-159.483333333333,93.8936460321789" />
                  <mssgle:LineSegment
                    End="-159.483333333333,243.75" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-129.5,91.5474947807933,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 9]"
          TopLeft="609.533333333333,102">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-14.0333333333333,249"
              Start="0,0"
              End="-14.0333333333333,241.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,116.4327998246" />
                  <mssgle:CubicBezierSegment
                    Point1="0,116.4327998246"
                    Point2="0,120.4327998246"
                    Point3="-4,120.4327998246" />
                  <mssgle:LineSegment
                    End="-10.0333333333333,120.4327998246" />
                  <mssgle:CubicBezierSegment
                    Point1="-10.0333333333333,120.4327998246"
                    Point2="-14.0333333333333,120.4327998246"
                    Point3="-14.0333333333333,124.4327998246" />
                  <mssgle:LineSegment
                    End="-14.0333333333333,241.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-55.84375,121.649597968684,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <AnnotationLayout
          Text="作成人：Irfan Mansuri&#xA;説明：This Package aim to Check various 業務 checks."
          ParentId="Package"
          FontInfo="{assembly:Null}"
          Size="345,54"
          Id="e963b260-842d-4a76-8604-cd0866e01046"
          TopLeft="823,15" />
        <AnnotationLayout
          Text="何もしていません、方向のみ"
          ParentId="Package"
          FontInfo="{assembly:Null}"
          Size="174,39"
          Id="cc1e133a-0c01-475d-8aaa-a0824c1fd26c"
          TopLeft="531,28" />
        <AnnotationLayout
          Text="商品マスタのＴＥＭＰテーブル&#xA;のデータチェック"
          ParentId="Package"
          FontInfo="{assembly:Null}"
          Size="199,54"
          Id="bdafa2e6-708b-44ab-beeb-99fb29cc6820"
          TopLeft="18,178" />
        <AnnotationLayout
          Text="原価履歴マスタのＦＫチェック"
          ParentId="Package"
          FontInfo="{assembly:Null}"
          Size="199,39"
          Id="5fe6381f-bac9-4f4d-a366-87a9c4f999b1"
          TopLeft="187,195" />
        <AnnotationLayout
          Text="売価履歴マスタのＦＫチェック"
          ParentId="Package"
          FontInfo="{assembly:Null}"
          Size="171,39"
          Id="bace8bdf-3231-4b49-8a50-09a0f0325eaf"
          TopLeft="381,198" />
        <AnnotationLayout
          Text="仕入実績の業務チェック"
          ParentId="Package"
          FontInfo="{assembly:Null}"
          Size="145,39"
          Id="8f6d977f-0521-4e69-8557-8818887d83e8"
          TopLeft="583,198" />
        <AnnotationLayout
          Text="返品実績の業務チェック"
          ParentId="Package"
          FontInfo="{assembly:Null}"
          Size="159,39"
          Id="a473bbc3-364f-490b-b2f2-acb0c2277883"
          TopLeft="742,198" />
        <AnnotationLayout
          Text="出荷実績の業務チェック"
          ParentId="Package"
          FontInfo="{assembly:Null}"
          Size="144,39"
          Id="c3291940-4272-4f62-911d-24a06f59db57"
          TopLeft="886,196" />
        <AnnotationLayout
          Text="集約実績の業務チェック"
          ParentId="Package"
          FontInfo="{assembly:Null}"
          Size="144,39"
          Id="2abb51c5-249a-4056-8874-2562ea306c9d"
          TopLeft="1039,195" />
        <AnnotationLayout
          Text="倉庫間移動業務チェック"
          ParentId="Package"
          FontInfo="{assembly:Null}"
          Size="146,39"
          Id="2035a082-2ec7-4fb3-8e45-60f9028036a5"
          TopLeft="175,319" />
        <AnnotationLayout
          Text="店間移動業務チェック"
          ParentId="Package"
          FontInfo="{assembly:Null}"
          Size="134,39"
          Id="5b91c017-3639-4c28-aaa1-e6391f1c9f1e"
          TopLeft="350,320" />
        <AnnotationLayout
          Text="棚卸伝票データの業務チェック"
          ParentId="Package"
          FontInfo="{assembly:Null}"
          Size="177,39"
          Id="d74ed344-00a0-4a92-b036-43879967896a"
          TopLeft="506,319" />
        <AnnotationLayout
          Text="会計伝票データの業務チェック"
          ParentId="Package"
          FontInfo="{assembly:Null}"
          Size="178,39"
          Id="96e4eaf2-9c53-4013-91eb-b359245cbf7b"
          TopLeft="702,314" />
        <AnnotationLayout
          Text="売上伝票データの業務チェック"
          ParentId="Package"
          FontInfo="{assembly:Null}"
          Size="171,39"
          Id="0d83b1a8-fcbc-4045-8ff9-15101ee4df87"
          TopLeft="429,446" />
        <AnnotationLayout
          Text="売変伝票データの業務チェック"
          ParentId="Package"
          FontInfo="{assembly:Null}"
          Size="176,39"
          Id="d87e1647-e939-4500-9e6b-e5abb6af23d7"
          TopLeft="641,445.25" />
        <AnnotationLayout
          Text="業務チェックでエラーが発生する場合"
          ParentId="Package"
          FontInfo="{assembly:Null}"
          Size="202,39"
          Id="6b5c1aa3-e4c0-4b25-9e34-78407320e5ab"
          TopLeft="505,699" />
        <AnnotationLayout
          Text="仕入条件履歴データの業務チェック"
          ParentId="Package"
          FontInfo="{assembly:Null}"
          Size="204,39"
          Id="6c647419-6b9d-42cd-aa89-88d3b5dd64cf"
          TopLeft="879,312" />
        <AnnotationLayout
          Text="調整伝票データの業務チェック"
          ParentId="Package"
          FontInfo="{assembly:Null}"
          Size="169,54"
          Id="cd7938ae-bfa3-42a0-87a4-94d11aa86fc0"
          TopLeft="234,448" />
      </GraphLayout>
    </LayoutInfo>
  </Package>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>