<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="7/17/2015 4:42:10 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="WIN03"
  DTS:CreatorName="WIN03\Administrator"
  DTS:DTSID="{66417D45-D24D-48CB-946B-C164591923F8}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="12.0.5000.0"
  DTS:LocaleID="1041"
  DTS:ObjectName="999_KANSHI_FTP_PUT_PACKAGE"
  DTS:PackageType="5"
  DTS:VersionBuild="310"
  DTS:VersionGUID="{B5DA1414-5A1F-4494-8042-F8E1EB4BEB92}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{003F9EB4-CBDE-4996-8BC8-80A1A9A5EDC1}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="connectionString">
      <DTS:VariableValue
        DTS:DataType="8">Persist Security Info=False;User ID=sa;Initial Catalog=mini_md_db;Password=Minimd@0123;Data Source=10.130.105.16,1435</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{37EC9BE2-8B68-4B21-82F0-BCC39C8D94D3}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="errFilePath">
      <DTS:VariableValue
        DTS:DataType="8">D:\public\IM_FILES\FTP_Err</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{BB80950E-8D40-4FA2-8640-F7E516390F50}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="errorCount">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{7A74B50D-B91F-4969-9E3D-48650D178B62}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="errorNaiyou">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{FEBD2C62-DF76-4CEA-A109-D73424401F39}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="mailFromId">
      <DTS:VariableValue
        DTS:DataType="8">irfan@usindia.com</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{564319BF-76D5-4868-BB9B-0AD6A8AB13FB}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="mailFromName">
      <DTS:VariableValue
        DTS:DataType="8">Irfan Mansuri</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{10771FEA-0F8B-4579-AF6E-52DB09644896}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="mailId">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{EF1E2DF2-A087-450A-8186-EDE77C3C2E7D}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="mailServer">
      <DTS:VariableValue
        DTS:DataType="8">122.169.107.93</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{247AEAEB-0B34-4FFE-AD84-7728B65990A8}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="pkgEndTime">
      <DTS:VariableValue
        DTS:DataType="8">10:30</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{F83FDC85-1910-467D-B9C4-9482462347CE}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="sleepMinutes">
      <DTS:VariableValue
        DTS:DataType="3">10</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{552C3433-24F9-4C32-9FD6-F8DE1A2400AF}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="waitFlag">
      <DTS:VariableValue
        DTS:DataType="11">-1</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\CHECK FTP PUT STATUS (IF FTP PUT STATUS IS 未 THEN CREATE AND UPLOAD ERROR FILE)"
      DTS:CreationName="STOCK:FORLOOP"
      DTS:Description="For ループ コンテナ"
      DTS:DTSID="{1E0B7F37-67E3-4D67-B791-322FE8EACF8D}"
      DTS:EvalExpression="@[User::waitFlag]==True"
      DTS:ExecutableType="STOCK:FORLOOP"
      DTS:LocaleID="-1"
      DTS:MaxConcurrent="1"
      DTS:ObjectName="CHECK FTP PUT STATUS (IF FTP PUT STATUS IS 未 THEN CREATE AND UPLOAD ERROR FILE)">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\CHECK FTP PUT STATUS (IF FTP PUT STATUS IS 未 THEN CREATE AND UPLOAD ERROR FILE)\エラーログのファイル作成"
          DTS:CreationName="Microsoft.ScriptTask"
          DTS:Description="スクリプト タスク"
          DTS:DTSID="{6B2B5C9F-14E5-46F2-8C32-407878457EE4}"
          DTS:ExecutableType="Microsoft.ScriptTask"
          DTS:LocaleID="1041"
          DTS:MaxErrorCount="50"
          DTS:ObjectName="エラーログのファイル作成"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_9476a2ac3a28457288ad91c0df7f7e9b"
              VSTAMajorVersion="3"
              VSTAMinorVersion="0"
              Language="CSharp"
              ReadOnlyVariables="User::connectionString,User::errFilePath,User::pkgEndTime"
              ReadWriteVariables="User::errorCount,User::errorNaiyou,User::mailId,User::waitFlag">
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="st_9476a2ac3a28457288ad91c0df7f7e9b.csproj"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="utf-16"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <!-- This section defines project-level properties.

       Configuration - Specifies whether the default configuration is Release or Debug.
       Platform - Specifies what CPU the output of this project can run on.
       OutputType - Must be "Library" for VSTA.
       NoStandardLibraries - Set to "false" for VSTA.
       RootNamespace - In C#, this specifies the namespace given to new files.
                       In Visual Basic, all objects are wrapped in this namespace at runtime.
       AssemblyName - Name of the output assembly.
  -->
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <OutputType>Library</OutputType>
    <NoStandardLibraries>false</NoStandardLibraries>
    <RootNamespace>ST_1894468ddc3d4ad895634229ebb6cde7.csproj</RootNamespace>
    <AssemblyName>st_9476a2ac3a28457288ad91c0df7f7e9b</AssemblyName>
    <ProjectGuid>{016B3105-1E0E-4782-B297-91B8D3998008}</ProjectGuid>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <!-- This section defines properties that are set when the "Debug" configuration is
       selected.

       DebugSymbols - If true, create symbols (.pdb). If false, do not create symbols.
       Optimize - If true, optimize the build output. If false, do not optimize.
       OutputPath - Output path of the project relative to the project file.
       EnableUnmanagedDebugging - If true, starting the debugger will attach both managed and unmanaged debuggers.
       DefineConstants - Constants defined for the preprocessor.
       Warning Level - Warning level for the compiler.
  -->
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <!-- This section defines properties that are set when the "Release" configuration is
       selected.

       DebugSymbols - If true, create symbols (.pdb). If false, do not create symbols.
       Optimize - If true, optimize the build output. If false, do not optimize.
       OutputPath - Output path of the project relative to the project file.
       EnableUnmanagedDebugging - If true, starting the debugger will attach both managed and unmanaged debuggers.
       DefineConstants - Constants defined for the preprocessor.
       Warning Level - Warning level for the compiler.
  -->
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <!-- This section enables pre- and post-build steps. However,
       it is recommended that MSBuild tasks be used instead of these properties.
  -->
  <PropertyGroup>
    <PreBuildEvent></PreBuildEvent>
    <PostBuildEvent></PostBuildEvent>
  </PropertyGroup>
  <!-- This sections specifies references for the project. -->
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=12.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=12.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <!-- This section defines the user source files that are part of the
       project.

       Compile - Specifies a source file to compile.
       EmbeddedResource - Specifies a .resx file for embedded resources.
       None - Specifies a file that is not to be passed to the compiler (for instance,
              a text file or XML file).
       AppDesigner - Specifies the directory where the application properties files can
                     be found.
  -->
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
    <!-- Include the default configuration information and metadata files for the add-in.
         These files are copied to the build output directory when the project is
         built, and the path to the configuration file is passed to add-in on the command
         line when debugging.
    -->
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="" />
        <Host Name="SSIS_ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST120</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[using System;
using System.Data;
using System.Data.SqlClient;
using System.IO;
using System.Text;

namespace ST_1894468ddc3d4ad895634229ebb6cde7.csproj
{
    [Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
    public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
    {

        #region VSTA generated code
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

        #region "Main Method"
        /// <summary>
        /// 作成人:　イルファンマンスリー
        /// 説明: This Create the Error Log file to read by its KANSHI PACKAGE(Automatically).
        /// File name will predefined & this name will be red by KANSHI PACKAGE.
        /// File will Contain ERROR CONTENT inside.
        /// 作成日付: 2016-06-30.
        /// </summary>
        public void Main()
        {
            string strConnectionString = Dts.Variables["connectionString"].Value.ToString();
            SqlConnection myConnection = new SqlConnection(strConnectionString);
            StringBuilder strBuildQuery = new StringBuilder();
            DataTable objDtChecksPkg;
            string strPkgid;
            string strPkgErrorNaiyou;
            DataTable dtTemp;
            string strCurrentTime = string.Empty;
            try
            {
                objDtChecksPkg = new DataTable();
                dtTemp = new DataTable();
                #region Get Mail Address If ERROR
                //Set Mail Address for Next Object
                strBuildQuery.Clear();
                strBuildQuery.Append("SELECT 電子メール ");
                strBuildQuery.Append(" FROM KANSHI_MAIL_ADDRESS ");
                strBuildQuery.Append(" WHERE ユーザグループ='FTP-PUT';");
                objDtChecksPkg.Reset();
                objDtChecksPkg = _getDataTable(strBuildQuery.ToString(),myConnection);
                Dts.Variables["User::mailId"].Value = objDtChecksPkg.Rows[0]["電子メール"].ToString();
                #endregion
                #region Check PKG executed or not
                strBuildQuery.Clear();
                strBuildQuery.Append("SELECT ");
                strBuildQuery.Append("* ");
                strBuildQuery.Append("FROM ");
                strBuildQuery.Append("KANSHI_PKG_TRN_DETAILS ");
                strBuildQuery.Append("WHERE ");
                strBuildQuery.Append("削除フラグ = 'false' ");
                strBuildQuery.Append(" AND ");
                strBuildQuery.Append(" 実行ステータス<>'済' AND エラーファイル作成='未';");
                #endregion
                objDtChecksPkg.Reset(); //Reset DataTable to Re-Use it.
                objDtChecksPkg = _getDataTable(strBuildQuery.ToString(), myConnection);    //Retrieve DataTable.

                strCurrentTime = DateTime.Now.ToString("HH:mm"); //Current Time so that Expire time can be decide
                #region Check Whether Package's execution time End or Not
                if (strCurrentTime.CompareTo(Dts.Variables["User::pkgEndTime"].Value.ToString()) >= 0) //WHEN TIME's UP.
                {
                    //Set flag to not continue further execution. Timer time set in Variable
                    Dts.Variables["waitFlag"].Value = false;
                }
                #endregion
                else
                {
                    #region If package remained to execute
                    if (objDtChecksPkg.Rows.Count > 0)
                    {
                        #region Get pkg id
                        //Query To Get All the packages which faced the error & FTP_PUT status is still '未'
                        strBuildQuery.Clear();  //Clear Old string to Re-Use same object.
                        strBuildQuery.Append("SELECT ");
                        strBuildQuery.Append("DISTINCT trn.パッケージコード  ");
                        strBuildQuery.Append("FROM ");
                        strBuildQuery.Append("KANSHI_PKG_TRN_DETAILS as trn  ");
                        strBuildQuery.Append("LEFT JOIN  ");
                        strBuildQuery.Append("KANSHI_PACKAGE_ERROR as err  ");
                        strBuildQuery.Append("ON ");
                        strBuildQuery.Append("err.パッケージコード = trn.パッケージコード  ");
                        strBuildQuery.Append(" AND ");
                        strBuildQuery.Append(" err.データ日付 = trn.インポート日 ");
                        strBuildQuery.Append(" WHERE  ");
                        strBuildQuery.Append(" trn.実行ステータス='エラー' ");
                        strBuildQuery.Append(" AND ");
                        strBuildQuery.Append(" trn.エラーファイル作成='未' ");
                        strBuildQuery.Append(" AND ");
                        strBuildQuery.Append(" trn.削除フラグ='false'; ");
                        objDtChecksPkg.Reset(); //Reset DataTable object to re-use.
                        objDtChecksPkg = _getDataTable(strBuildQuery.ToString(), myConnection);    //Retrieve DataTable
                        #endregion
                        if (objDtChecksPkg.Rows.Count > 0)
                        {
                            for (int intI = 0; intI <= objDtChecksPkg.Rows.Count - 1; intI++)
                            {
                                strPkgid = objDtChecksPkg.Rows[intI]["パッケージコード"].ToString();
                                strPkgErrorNaiyou = string.Empty;
                                strBuildQuery.Clear();
                                strBuildQuery.Append(" SELECT err.エラー内容");
                                strBuildQuery.Append(" FROM KANSHI_PKG_TRN_DETAILS AS trn ");
                                strBuildQuery.Append(" LEFT JOIN KANSHI_PACKAGE_ERROR AS err ");
                                strBuildQuery.Append(" ON err.パッケージコード = trn.パッケージコード ");
                                strBuildQuery.Append(" AND err.データ日付 = trn.インポート日 ");
                                strBuildQuery.Append(" WHERE trn.実行ステータス = 'エラー' ");
                                strBuildQuery.Append(" AND trn.エラーファイル作成 = '未' ");
                                strBuildQuery.Append(" AND trn.削除フラグ = 'false' AND trn.パッケージコード='" + strPkgid + "'; ");
                                dtTemp.Reset();
                                dtTemp = _getDataTable(strBuildQuery.ToString(), myConnection);
                                for (int intJ = 0; intJ <= dtTemp.Rows.Count - 1; intJ++)
                                {
                                    strPkgErrorNaiyou = strPkgErrorNaiyou + @"\n" + dtTemp.Rows[intJ]["エラー内容"].ToString();
                                }
                                //create error file
                                _createErrorFile(strPkgid, strPkgErrorNaiyou, myConnection);
                                Dts.Variables["waitFlag"].Value = true;
                                strPkgid = string.Empty;    //Reset for next loop
                                strPkgErrorNaiyou = string.Empty;   //Reset for next loop
                            }
                        }
                        else
                        {
                            Dts.Variables["waitFlag"].Value = true;
                        }
                    }
                    else
                    {
                        Dts.Variables["waitFlag"].Value = false;
                    }
                    #endregion
                }
                Dts.TaskResult = (int)ScriptResults.Success;
            }
            #region CATCH/FINALLY
            catch (Exception ex)
            {
                Dts.Variables["errorCount"].Value = (int)Dts.Variables["errorCount"].Value + 1;
                Dts.Variables["errorNaiyou"].Value = ex.Message;
                Dts.Variables["waitFlag"].Value = true;
                Dts.TaskResult = (int)ScriptResults.Success;
            }
            finally
            {
                strConnectionString = null;
                myConnection = null;
                strBuildQuery = null;
                objDtChecksPkg = null;
                strPkgid = null;
                strPkgErrorNaiyou = null;
            }
            #endregion
        }
        #endregion

        #region "Create error file"
        public void _createErrorFile(string strPackageId, string strPackageError, SqlConnection myConnection)
        {
            string strFtpFileName = string.Empty;
            string strLocalPath = Dts.Variables["errFilePath"].Value.ToString();
            DataTable objDTFtpDetail;
            StringBuilder strBuildQry = new StringBuilder();
            #region Select FTP Data
            strBuildQry.Append(" SELECT ");
            strBuildQry.Append(" エラーファイル名");
            strBuildQry.Append(" FROM ");
            strBuildQry.Append(" KANSHI_PKG_MST_FTP_DETAILS ");
            strBuildQry.Append(" WHERE ");
            strBuildQry.Append(" パッケージコード = '" + strPackageId + "' ");
            strBuildQry.Append(" AND 削除フラグ = 'false';");
            #endregion
            try
            {
                objDTFtpDetail = new DataTable();
                objDTFtpDetail = _getDataTable(strBuildQry.ToString(), myConnection);    //Retrieve DataTable
                #region File Save
                if (objDTFtpDetail.Rows.Count == 1)
                {
                    #region Create Error file
                    strFtpFileName = objDTFtpDetail.Rows[0]["エラーファイル名"].ToString();  //Local File name to be create
                    strFtpFileName = strLocalPath + @"\" + strFtpFileName;
                    // Check if folder already exist if not create
                    if (!Directory.Exists(strLocalPath))
                    {
                        Directory.CreateDirectory(strLocalPath);
                    }
                    // Check if file already exists. If yes, delete it. 
                    if (File.Exists(strFtpFileName))
                    {
                        File.Delete(strFtpFileName);
                    }
                    // Create a new file 
                    using (FileStream fs = File.Create(strFtpFileName))
                    {
                        // Add some text to file
                        Byte[] title = new UTF8Encoding(true).GetBytes(strPackageError);
                        fs.Write(title, 0, title.Length);
                    }
                    #endregion
                    //upload file
                    _changeFtpStatus(strPackageId);
                }
                #endregion
            }
            #region CATCH/FINALLY
            catch (Exception ex)
            {
                throw ex;
            }
            finally
            {
                strPackageId = null;
                strPackageError = null;
                strFtpFileName = null;
                strLocalPath = null;
                objDTFtpDetail = null;
                strBuildQry = null;
            }
            #endregion
        }        
        #endregion

        #region "Change package ftp put status"
        public void _changeFtpStatus(string strPackageId)
        {
            StringBuilder strBuildQuery = new StringBuilder();
            #region Insert ftp put status
            strBuildQuery.Append("UPDATE ");
            strBuildQuery.Append(" KANSHI_PKG_TRN_DETAILS ");
            strBuildQuery.Append(" SET エラーファイル作成 ='済' ");
            strBuildQuery.Append(" WHERE ");
            strBuildQuery.Append(" パッケージコード='" + strPackageId + "' ");
            strBuildQuery.Append(" AND (実行ステータス='エラー'  OR 実行ステータス='済') ");
            strBuildQuery.Append(" AND	エラーファイル作成='未' ");
            strBuildQuery.Append(" AND	削除フラグ='false';");
            #endregion
            try
            {
                _updateInsert(strBuildQuery.ToString());
            }
            catch (Exception ex)
            {
                throw ex;
            }
            finally
            {
                strBuildQuery = null;
                strPackageId = null;
            }
        }
        #endregion

        #region "Update/Insert Query in Db"
        protected void _updateInsert(string strQuery)
        {
            string strConnection = Dts.Variables["User::connectionString"].Value.ToString();
            StringBuilder strERRQuery = new StringBuilder();
            SqlConnection myConnection = new SqlConnection(strConnection);
            SqlCommand myCommand;
            try
            {
                myCommand = new SqlCommand(strQuery, myConnection);
                if (myConnection.State == ConnectionState.Closed)
                {
                    myConnection.Open();
                }
                myCommand.ExecuteNonQuery();
            }
            #region CATCH/FINALLY
            catch (Exception ex)
            {
                Dts.TaskResult = (int)ScriptResults.Failure;
            }
            finally
            {
                if (myConnection.State == ConnectionState.Open)
                {
                    myConnection.Close();
                }
                strERRQuery = null;
                myConnection = null;
                myCommand = null;
            }
            #endregion
        }
        #endregion

        #region "Get DataTable"
        /// <summary>
        /// 作成人:　イルファンマンスリー
        /// 説明: Retrieve DataTable object.
        /// 作成日付: 2016-06-30.
        /// </summary>
        public DataTable _getDataTable(string strQuery, SqlConnection myConnection)
        {
            DataTable objDT = new DataTable();
            SqlCommand myCommand;
            SqlDataAdapter sqlAdap;
            try
            {
                if (myConnection.State == ConnectionState.Closed)
                {
                    myConnection.Open();
                }
                myCommand = new SqlCommand(strQuery, myConnection);
                myCommand.CommandType = CommandType.Text;
                sqlAdap = new SqlDataAdapter();
                sqlAdap.SelectCommand = myCommand;
                sqlAdap.Fill(objDT);
            }
            catch (Exception ex)
            {
                myConnection.Close();
                Dts.TaskResult = (int)ScriptResults.Failure;
                throw ex;
            }
            finally
            {
                if (myConnection.State == ConnectionState.Open)
                {
                    myConnection.Close();
                }
                strQuery = null;
                myConnection = null;
                myCommand = null;
                sqlAdap = null;
            }
            return objDT;
        }
        #endregion
    }
}]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>st_9476a2ac3a28457288ad91c0df7f7e9b</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>st_9476a2ac3a28457288ad91c0df7f7e9b</msb:DisplayName>
		<msb:ProjectId>{676EC580-8A38-459D-AE7A-54AC39913867}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="st_9476a2ac3a28457288ad91c0df7f7e9b.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "ST_1894468ddc3d4ad895634229ebb6cde7.csproj.Properties.Settings.get_Default():ST_1894468ddc3d4ad895634229ebb6cde7.csproj.Properties.Sett" +
    "ings")]

namespace ST_1894468ddc3d4ad895634229ebb6cde7.csproj.Properties
{


    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase
    {

        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();

        public static Settings Default
        {
            get
            {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_1894468ddc3d4ad895634229ebb6cde7.csproj")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("right-on")]
[assembly: AssemblyProduct("ST_1894468ddc3d4ad895634229ebb6cde7.csproj")]
[assembly: AssemblyCopyright("Copyright @ right-on 2015")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     このコードはツールによって生成されました。
//     ランタイム バージョン:2.0.50727.5472
//
//     このファイルへの変更は、以下の状況下で不正な動作の原因になったり、
//     コードが再生成されるときに損失したりします。
// </auto-generated>
//------------------------------------------------------------------------------

namespace ST_1894468ddc3d4ad895634229ebb6cde7.csproj.Properties {
    using System;
    
    
    /// <summary>
    ///   ローカライズされた文字列などを検索するための、厳密に型指定されたリソース クラスです。
    /// </summary>
    // このクラスは StronglyTypedResourceBuilder クラスが ResGen
    // または Visual Studio のようなツールを使用して自動生成されました。
    // メンバを追加または削除するには、.ResX ファイルを編集して、/str オプションと共に
    // ResGen を実行し直すか、または VS プロジェクトをビルドし直します。
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "2.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   このクラスで使用されているキャッシュされた ResourceManager インスタンスを返します。
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_1894468ddc3d4ad895634229ebb6cde7.csproj.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   厳密に型指定されたこのリソース クラスを使用して、すべての検索リソースに対し、
        ///   現在のスレッドの CurrentUICulture プロパティをオーバーライドします。
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <BinaryItem
                Name="st_9476a2ac3a28457288ad91c0df7f7e9b.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAERQb1gAAAAAAAAAAOAAAiELAQsAACYAAAAIAAAAAAAADkUA
AAAgAAAAYAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACgAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAALhEAABTAAAAAGAAAHAEAAAAAAAAAAAAAAAAAAAA
AAAAAIAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAFCUAAAAgAAAAJgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAHAEAAAAYAAAAAYAAAAoAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAIAAAAACAAAALgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAADw
RAAAAAAAAEgAAAACAAUACCoAALAaAAABAAAAAAAAAFApAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKBAAAAoqEzACADMAAAABAAARfgEAAAQUKBEAAAosIHIB
AABw0AIAAAIoEgAACm8TAAAKcxQAAAoKBoABAAAEfgEAAAQqGn4CAAAEKh4CgAIAAAQqGn4DAAAE
Ki5zBgAABoADAAAEKh4CKBYAAAoqAAAAGzAEANkEAAACAAARAigYAAAKbxkAAApygQAAcG8aAAAK
bxsAAApvHAAACgoGcx0AAAoLcx4AAAoMfh8AAAoTB3MgAAAKDXMgAAAKEwYIbyEAAAomCHKjAABw
byIAAAomCHK/AABwbyIAAAomCHL1AABwbyIAAAomCW8jAAAKAghvHAAACgcoDAAABg0CKBgAAApv
GQAACnIpAQBwbxoAAAoJbyQAAAoWbyUAAApyQwEAcG8mAAAKbxwAAApvJwAACghvIQAACiYIck8B
AHBvIgAACiYIcl8BAHBvIgAACiYIcmUBAHBvIgAACiYIcnEBAHBvIgAACiYIcqEBAHBvIgAACiYI
cq8BAHBvIgAACiYIctEBAHBvIgAACiYIct0BAHBvIgAACiYJbyMAAAoCCG8cAAAKBygMAAAGDSgo
AAAKEwsSC3IfAgBwKCkAAAoTBxEHAigYAAAKbxkAAApyKwIAcG8aAAAKbxsAAApvHAAACm8qAAAK
FjIlAigYAAAKbxkAAApyTQIAcG8aAAAKFowmAAABbycAAAo4kgIAAAlvJAAACm8rAAAKFj5hAgAA
CG8hAAAKJghyTwEAcG8iAAAKJghyXwIAcG8iAAAKJghyZQEAcG8iAAAKJghyjwIAcG8iAAAKJghy
zwIAcG8iAAAKJghy5wIAcG8iAAAKJghyIwMAcG8iAAAKJghyKwMAcG8iAAAKJghy0QEAcG8iAAAK
JghyZwMAcG8iAAAKJghymQMAcG8iAAAKJghyqwMAcG8iAAAKJghy0QEAcG8iAAAKJghy0wMAcG8i
AAAKJghy0QEAcG8iAAAKJghy+wMAcG8iAAAKJglvIwAACgIIbxwAAAoHKAwAAAYNCW8kAAAKbysA
AAoWPlMBAAAWEwg4NQEAAAlvJAAAChEIbyUAAApyJQQAcG8mAAAKbxwAAAoTBH4fAAAKEwUIbyEA
AAomCHI3BABwbyIAAAomCHJbBABwbyIAAAomCHKlBABwbyIAAAomCHL1BABwbyIAAAomCHI3BQBw
byIAAAomCHJxBQBwbyIAAAomCHKpBQBwbyIAAAomCHLdBQBwEQRyNQYAcCgsAAAKbyIAAAomEQZv
IwAACgIIbxwAAAoHKAwAAAYTBhYTCSsxEQVyPQYAcBEGbyQAAAoRCW8lAAAKckMGAHBvJgAACm8c
AAAKKCwAAAoTBREJF1gTCREJEQZvJAAACm8rAAAKF1kxvQIRBBEFBygJAAAGAigYAAAKbxkAAApy
TQIAcG8aAAAKF4wmAAABbycAAAp+HwAAChMEfh8AAAoTBREIF1gTCBEICW8kAAAKbysAAAoXWT63
/v//K0ICKBgAAApvGQAACnJNAgBwbxoAAAoXjCYAAAFvJwAACisgAigYAAAKbxkAAApyTQIAcG8a
AAAKFowmAAABbycAAAoCKBgAAAoWby0AAArdkQAAABMKAigYAAAKbxkAAApyTwYAcG8aAAAKAigY
AAAKbxkAAApyTwYAcG8aAAAKbxsAAAqlKAAAARdYjCgAAAFvJwAACgIoGAAACm8ZAAAKcmUGAHBv
GgAAChEKby4AAApvJwAACgIoGAAACm8ZAAAKck0CAHBvGgAACheMJgAAAW8nAAAKAigYAAAKFm8t
AAAK3gDeDxQKFAsUDBQNFBMEFBMF3CoAAABBNAAAAAAAADQAAAACBAAANgQAAJEAAAApAAABAgAA
ADQAAACVBAAAyQQAAA8AAAAAAAAAGzAEAEUBAAADAAARfh8AAAoKAigYAAAKbxkAAApyfQYAcG8a
AAAKbxsAAApvHAAACgtzHgAACg0JcpUGAHBvIgAACiYJcqcGAHBvIgAACiYJcrsGAHBvIgAACiYJ
cskGAHBvIgAACiYJcgMHAHBvIgAACiYJchMHAHADci8HAHAoLAAACm8iAAAKJglyNQcAcG8iAAAK
JnMgAAAKDAIJbxwAAAoFKAwAAAYMCG8kAAAKbysAAAoXM38IbyQAAAoWbyUAAApyYQcAcG8mAAAK
bxwAAAoKB3JzBwBwBigsAAAKCgcoLwAACi0HBygwAAAKJgYoMQAACiwGBigyAAAKBigzAAAKEwQX
czQAAAoEbzUAAAoTBREEEQUWEQWOaW82AAAK3gwRBCwHEQRvNwAACtwCAygKAAAG3gUTBhEGet4P
FBABFBACFAoUCxQMFA3cKgAAAAEoAAACAPsAHhkBDAAAAAAAAIsAoy4BBSkAAAECAIsAqjUBDwAA
AAAbMAQAiwAAAAQAABFzHgAACgoGcncHAHBvIgAACiYGcocHAHBvIgAACiYGcrkHAHBvIgAACiYG
cgMHAHBvIgAACiYGcuMHAHADci8HAHAoLAAACm8iAAAKJgZy+wcAcG8iAAAKJgZyRwgAcG8iAAAK
JgZybwgAcG8iAAAKJgIGbxwAAAooCwAABt4DCwd63gYUChQQAdwqAAEcAAAAAHEADn8AAykAAAEC
AHEAE4QABgAAAAAbMAIAcgAAAAUAABECKBgAAApvGQAACnKXCABwbxoAAApvGwAACm8cAAAKCnMe
AAAKJgZzHQAACgsDB3M4AAAKDAdvOQAACi0GB286AAAKCG87AAAKJt4PJgIoGAAAChdvLQAACt4A
3hQHbzkAAAoXMwYHbzwAAAoUCxQM3CoAAAEcAAAAAC0AH0wADykAAAECAC0AMF0AFAAAAAAbMAIA
bQAAAAYAABFzIAAACgoEbzkAAAotBgRvOgAACgMEczgAAAoLBxdvPQAACnM+AAAKDAgHbz8AAAoI
Bm9AAAAKJt4VDQRvPAAACgIoGAAAChdvLQAACgl63hoEbzkAAAoXMwYEbzwAAAoUEAEUEAIUCxQM
3AYqAAAAARwAAAAABgA0OgAVKQAAAQIABgBLUQAaAAAAAB4CKEEAAAoqAAAAALQAAADOyu++AQAA
AJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNpb249
NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5
I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFEULQA
AABCU0pCAQABAAAAAAAMAAAAdjQuMC4zMDMxOQAAAAAFAGwAAADIBQAAI34AADQGAAD0CAAAI1N0
cmluZ3MAAAAAKA8AAMgIAAAjVVMA8BcAABAAAAAjR1VJRAAAAAAYAACwAgAAI0Jsb2IAAAAAAAAA
AgAAAVcdogEJAwAAAPolMwAWAAABAAAAOAAAAAUAAAAGAAAADQAAAAgAAABBAAAAAgAAABEAAAAG
AAAAAgAAAAMAAAAEAAAAAQAAAAUAAAABAAAAAQAAAAAACgABAAAAAAAGAM8AyAAKAOsA1gAOAEsB
IgEGAGcByAAGAH0BbAEGAK4BmQESAE8COQISAI0CLQIGABAD9gIGADsDKQMGAFIDKQMGAG8DKQMG
AI4DKQMGAKcDKQMGAMADKQMGANsDKQMGAPYDKQMGAA8EKQMGAEgEKAQGAGgEKAQKAMIEqgQGAOwE
2QQGAAkFKAQGADQFyAAGADkFyAAGAF0FKQMKAIkFcwUKAKIFcwUOAL4FIgEOAOAFIgEWADkGGQYW
AFEGGQYGAIIGdgYGAJAGyAASALAGLQISAMsGLQIGAN0GyAAGAPgGyAASAAAHLQIGADsHyAAGAEEH
yAAGAGEHVwcGAHIHVwcGAJAHVwcGAJwHVwcGAK4HdgYGALsHdgYGAM0HVwcGANoHyAASAO4HOQIS
AAwI+QcSABkILQISADgI+QcSAFgILQISAHQIOQISAJUI+QcAAAAAAQAAAAAAAQABAAAAEAAyADwA
BQABAAEAAAEQAHIAPAAJAAMABQABABAAewCGAA0ABAAIAAMBAACxAAAAEQAEAA4AEQCNARMAEQC6
ARcAEQAEAjkABgalAlwAVoCtAl8AVoC1Al8AUCAAAAAAgxjKARsAAQBYIAAAAACTCNABHwABAJcg
AAAAAJMI5AEkAAEAniAAAAAAkwjwASkAAQCmIAAAAACWCBQCPQACALkgAAAAAIYYygEbAAIArSAA
AAAAkRi3BeYAAgDEIAAAAACGACgCGwACAOAlAAAAAIYAXQJHAAIAXCcAAAAAhgBuAk8ABQAQKAAA
AACEAH8CTwAGAKwoAAAAAIYAlwJUAAcARCkAAAAAhhjKARsACQAAAAEAvQIAAAEAwwIAAAIA0AIA
AAMA4AIAAAEAwwIAAAEA7QIAAAEA7QIAAAIA4AJJAMoBTwBRAMoBTwBZAMoBTwBhAMoBTwBpAMoB
TwBxAMoBTwB5AMoBTwCBAMoBTwCJAMoBTwCRAMoBTwCZAMoBbQChAMoBGwCpAMoBcgCxAMoBGwC5
AMoBGwAJAMoBGwAJACQFuQDBAEsFvwDBAGYFxgApAMoBywDZAMoB1wARAMoBGwDpAMoBGwAZAPIF
6gDxAEMG7wD5AFoG9AABAWMG+wAJAG0G/wA5AMoBTwAJAcoBGwARAZcGAwFBAMoBGwAJAZ0GBgEJ
AaMGDAFBAKoGGwBBAMIGEwEZAVoGGQEhAVoGIAEBAdMGJQEpAeYGKgEpAW0GMAERAe4GNQE5ARsH
OgERASUHPgHxACwHbQBJAUsH/wBRAWsHXQFRAYAHYgFhAWsHXQFhAZUHaQFhAacHbgFxAcoBdQF5
AcQHegGBAdQHgAGJAeYHGwCRAcoBowGZASkIqgGZATMIGwCpAUIIOgGZAVIIGwCpAWQIuQG5AcoB
GwC5AYMIwAHBAaMIxwEZAMoBGwAIABQAYwAIABgAaAApAKsA3QAuABMAIwIuABsAUwIuAGMAjwIu
AAsA2wEuACMAUwIuACsAWQIuADMAIwIuADsAZwIuAEMAUwIuAFsAhgJDAHMAaABDAHsAaABDAGsA
eABJAKsA3QBhAHsAaACDALsAaADSAEUBiAGaAbABzQECAAEAAwADAAAAfQEvAAAA/AE0AAAAIAJC
AAIAAgADAAIAAwAFAAEABAAFAAIABQAHAASAAAABAAAARxhqeAAAAAAAAIYEAAAEAAAAAAAAAAAA
AAABAL8AAAAAAAQAAAAAAAAAAAAAAAEAyAAAAAAADAAAAAAAAAAAAAAACgADAQAAAAAEAAAAAAAA
AAAAAAABAC0CAAAAAAwAAAAAAAAAAAAAAAoA+gUAAAAAAAAAAAEAAACoCAAABQAEAAAAADxNb2R1
bGU+AHN0Xzk0NzZhMmFjM2EyODQ1NzI4OGFkOTFjMGRmN2Y3ZTliLmRsbABSZXNvdXJjZXMAU1Rf
MTg5NDQ2OGRkYzNkNGFkODk1NjM0MjI5ZWJiNmNkZTcuY3Nwcm9qLlByb3BlcnRpZXMAU2V0dGlu
Z3MAU2NyaXB0TWFpbgBTVF8xODk0NDY4ZGRjM2Q0YWQ4OTU2MzQyMjllYmI2Y2RlNy5jc3Byb2oA
U2NyaXB0UmVzdWx0cwBtc2NvcmxpYgBTeXN0ZW0AT2JqZWN0AFN5c3RlbS5Db25maWd1cmF0aW9u
AEFwcGxpY2F0aW9uU2V0dGluZ3NCYXNlAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuU2NyaXB0VGFzawBN
aWNyb3NvZnQuU3FsU2VydmVyLkR0cy5UYXNrcy5TY3JpcHRUYXNrAFZTVEFSVFNjcmlwdE9iamVj
dE1vZGVsQmFzZQBFbnVtAFN5c3RlbS5SZXNvdXJjZXMAUmVzb3VyY2VNYW5hZ2VyAHJlc291cmNl
TWFuAFN5c3RlbS5HbG9iYWxpemF0aW9uAEN1bHR1cmVJbmZvAHJlc291cmNlQ3VsdHVyZQAuY3Rv
cgBnZXRfUmVzb3VyY2VNYW5hZ2VyAGdldF9DdWx0dXJlAHNldF9DdWx0dXJlAEN1bHR1cmUAZGVm
YXVsdEluc3RhbmNlAGdldF9EZWZhdWx0AERlZmF1bHQATWFpbgBTeXN0ZW0uRGF0YQBTeXN0ZW0u
RGF0YS5TcWxDbGllbnQAU3FsQ29ubmVjdGlvbgBfY3JlYXRlRXJyb3JGaWxlAF9jaGFuZ2VGdHBT
dGF0dXMAX3VwZGF0ZUluc2VydABEYXRhVGFibGUAX2dldERhdGFUYWJsZQB2YWx1ZV9fAFN1Y2Nl
c3MARmFpbHVyZQB2YWx1ZQBzdHJQYWNrYWdlSWQAc3RyUGFja2FnZUVycm9yAG15Q29ubmVjdGlv
bgBzdHJRdWVyeQBTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nAFRhcmdldEZyYW1ld29ya0F0dHJp
YnV0ZQBTeXN0ZW0uUmVmbGVjdGlvbgBBc3NlbWJseVRpdGxlQXR0cmlidXRlAEFzc2VtYmx5RGVz
Y3JpcHRpb25BdHRyaWJ1dGUAQXNzZW1ibHlDb25maWd1cmF0aW9uQXR0cmlidXRlAEFzc2VtYmx5
Q29tcGFueUF0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRyaWJ1dGUAQXNzZW1ibHlDb3B5cmln
aHRBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1dGUAQXNzZW1ibHlDdWx0dXJlQXR0
cmlidXRlAEFzc2VtYmx5VmVyc2lvbkF0dHJpYnV0ZQBTeXN0ZW0uUnVudGltZS5Db21waWxlclNl
cnZpY2VzAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1dGUAUnVudGltZUNvbXBhdGliaWxp
dHlBdHRyaWJ1dGUAc3RfOTQ3NmEyYWMzYTI4NDU3Mjg4YWQ5MWMwZGY3ZjdlOWIAU3lzdGVtLkNv
ZGVEb20uQ29tcGlsZXIAR2VuZXJhdGVkQ29kZUF0dHJpYnV0ZQBTeXN0ZW0uRGlhZ25vc3RpY3MA
RGVidWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBDb21waWxlckdlbmVyYXRlZEF0dHJpYnV0ZQBS
ZWZlcmVuY2VFcXVhbHMAVHlwZQBSdW50aW1lVHlwZUhhbmRsZQBHZXRUeXBlRnJvbUhhbmRsZQBB
c3NlbWJseQBnZXRfQXNzZW1ibHkAU3lzdGVtLkNvbXBvbmVudE1vZGVsAEVkaXRvckJyb3dzYWJs
ZUF0dHJpYnV0ZQBFZGl0b3JCcm93c2FibGVTdGF0ZQAuY2N0b3IAU1NJU1NjcmlwdFRhc2tFbnRy
eVBvaW50QXR0cmlidXRlAFNjcmlwdE9iamVjdE1vZGVsAGdldF9EdHMATWljcm9zb2Z0LlNxbFNl
cnZlci5NYW5hZ2VkRFRTAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlJ1bnRpbWUAVmFyaWFibGVz
AGdldF9WYXJpYWJsZXMAVmFyaWFibGUAZ2V0X0l0ZW0AZ2V0X1ZhbHVlAFRvU3RyaW5nAFN5c3Rl
bS5UZXh0AFN0cmluZ0J1aWxkZXIAU3RyaW5nAEVtcHR5AENsZWFyAEFwcGVuZABSZXNldABEYXRh
Um93Q29sbGVjdGlvbgBnZXRfUm93cwBEYXRhUm93AHNldF9WYWx1ZQBEYXRlVGltZQBnZXRfTm93
AENvbXBhcmVUbwBCb29sZWFuAEludGVybmFsRGF0YUNvbGxlY3Rpb25CYXNlAGdldF9Db3VudABD
b25jYXQAc2V0X1Rhc2tSZXN1bHQASW50MzIARXhjZXB0aW9uAGdldF9NZXNzYWdlAFN5c3RlbS5J
TwBEaXJlY3RvcnkARXhpc3RzAERpcmVjdG9yeUluZm8AQ3JlYXRlRGlyZWN0b3J5AEZpbGUARGVs
ZXRlAEZpbGVTdHJlYW0AQ3JlYXRlAFVURjhFbmNvZGluZwBFbmNvZGluZwBHZXRCeXRlcwBTdHJl
YW0AV3JpdGUASURpc3Bvc2FibGUARGlzcG9zZQBTcWxDb21tYW5kAFN5c3RlbS5EYXRhLkNvbW1v
bgBEYkNvbm5lY3Rpb24AQ29ubmVjdGlvblN0YXRlAGdldF9TdGF0ZQBPcGVuAERiQ29tbWFuZABF
eGVjdXRlTm9uUXVlcnkAQ2xvc2UAQ29tbWFuZFR5cGUAc2V0X0NvbW1hbmRUeXBlAFNxbERhdGFB
ZGFwdGVyAHNldF9TZWxlY3RDb21tYW5kAERiRGF0YUFkYXB0ZXIARmlsbABTVF8xODk0NDY4ZGRj
M2Q0YWQ4OTU2MzQyMjllYmI2Y2RlNy5jc3Byb2ouUHJvcGVydGllcy5SZXNvdXJjZXMucmVzb3Vy
Y2VzAAAAAH9TAFQAXwAxADgAOQA0ADQANgA4AGQAZABjADMAZAA0AGEAZAA4ADkANQA2ADMANAAy
ADIAOQBlAGIAYgA2AGMAZABlADcALgBjAHMAcAByAG8AagAuAFAAcgBvAHAAZQByAHQAaQBlAHMA
LgBSAGUAcwBvAHUAcgBjAGUAcwAAIWMAbwBuAG4AZQBjAHQAaQBvAG4AUwB0AHIAaQBuAGcAABtT
AEUATABFAEMAVAAgAPuWUFvhMPww6zAgAAE1IABGAFIATwBNACAASwBBAE4AUwBIAEkAXwBNAEEA
SQBMAF8AQQBEAEQAUgBFAFMAUwAgAAAzIABXAEgARQBSAEUAIADmMPwwtjCwMOsw/DDXMD0AJwBG
AFQAUAAtAFAAVQBUACcAOwABGVUAcwBlAHIAOgA6AG0AYQBpAGwASQBkAAAL+5ZQW+Ew/DDrMAEP
UwBFAEwARQBDAFQAIAAABSoAIAAAC0YAUgBPAE0AIAAAL0sAQQBOAFMASABJAF8AUABLAEcAXwBU
AFIATgBfAEQARQBUAEEASQBMAFMAIAAADVcASABFAFIARQAgAAAhSlJkltUw6TCwMCAAPQAgACcA
ZgBhAGwAcwBlACcAIAABCyAAQQBOAEQAIAAAQSAAn1tMiLkwxjD8ML8wuTA8AD4AJwAIbicAIABB
AE4ARAAgAKgw6TD8MNUwoTCkMOswXE8QYj0AJwAqZycAOwABC0gASAA6AG0AbQAAIVUAcwBlAHIA
OgA6AHAAawBnAEUAbgBkAFQAaQBtAGUAABF3AGEAaQB0AEYAbABhAGcAAC9EAEkAUwBUAEkATgBD
AFQAIAB0AHIAbgAuANEwwzCxMPwwuDCzMPwwyTAgACAAAT9LAEEATgBTAEgASQBfAFAASwBHAF8A
VABSAE4AXwBEAEUAVABBAEkATABTACAAYQBzACAAdAByAG4AIAAgAAAXTABFAEYAVAAgAEoATwBJ
AE4AIAAgAAA7SwBBAE4AUwBIAEkAXwBQAEEAQwBLAEEARwBFAF8ARQBSAFIATwBSACAAYQBzACAA
ZQByAHIAIAAgAAAHTwBOACAAADtlAHIAcgAuANEwwzCxMPwwuDCzMPwwyTAgAD0AIAB0AHIAbgAu
ANEwwzCxMPwwuDCzMPwwyTAgACAAATEgAGUAcgByAC4AxzD8ML8w5WXYTiAAPQAgAHQAcgBuAC4A
pDDzMN0w/DDIMOVlIAABESAAVwBIAEUAUgBFACAAIAAAJyAAdAByAG4ALgCfW0yIuTDGMPwwvzC5
MD0AJwCoMOkw/DAnACAAAScgAHQAcgBuAC4AqDDpMPww1TChMKQw6zBcTxBiPQAnACpnJwAgAAEp
IAB0AHIAbgAuAEpSZJbVMOkwsDA9ACcAZgBhAGwAcwBlACcAOwAgAAER0TDDMLEw/DC4MLMw/DDJ
MAEjIABTAEUATABFAEMAVAAgAGUAcgByAC4AqDDpMPwwhVG5WwFJIABGAFIATwBNACAASwBBAE4A
UwBIAEkAXwBQAEsARwBfAFQAUgBOAF8ARABFAFQAQQBJAEwAUwAgAEEAUwAgAHQAcgBuACAAAE8g
AEwARQBGAFQAIABKAE8ASQBOACAASwBBAE4AUwBIAEkAXwBQAEEAQwBLAEEARwBFAF8ARQBSAFIA
TwBSACAAQQBTACAAZQByAHIAIAAAQSAATwBOACAAZQByAHIALgDRMMMwsTD8MLgwszD8MMkwIAA9
ACAAdAByAG4ALgDRMMMwsTD8MLgwszD8MMkwIAABOSAAQQBOAEQAIABlAHIAcgAuAMcw/DC/MOVl
2E4gAD0AIAB0AHIAbgAuAKQw8zDdMPwwyDDlZSAAATcgAFcASABFAFIARQAgAHQAcgBuAC4An1tM
iLkwxjD8ML8wuTAgAD0AIAAnAKgw6TD8MCcAIAABMyAAQQBOAEQAIAB0AHIAbgAuAKgw6TD8MNUw
oTCkMOswXE8QYiAAPQAgACcAKmcnACAAAVcgAEEATgBEACAAdAByAG4ALgBKUmSW1TDpMLAwIAA9
ACAAJwBmAGEAbABzAGUAJwAgAEEATgBEACAAdAByAG4ALgDRMMMwsTD8MLgwszD8MMkwPQAnAAEH
JwA7ACAAAQVcAG4AAAuoMOkw/DCFUblbARVlAHIAcgBvAHIAQwBvAHUAbgB0AAAXZQByAHIAbwBy
AE4AYQBpAHkAbwB1AAAXZQByAHIARgBpAGwAZQBQAGEAdABoAAARIABTAEUATABFAEMAVAAgAAAT
IACoMOkw/DDVMKEwpDDrMA1UAQ0gAEYAUgBPAE0AIAAAOSAASwBBAE4AUwBIAEkAXwBQAEsARwBf
AE0AUwBUAF8ARgBUAFAAXwBEAEUAVABBAEkATABTACAAAA8gAFcASABFAFIARQAgAAAbIADRMMMw
sTD8MLgwszD8MMkwIAA9ACAAJwABBScAIAABKyAAQQBOAEQAIABKUmSW1TDpMLAwIAA9ACAAJwBm
AGEAbABzAGUAJwA7AAERqDDpMPww1TChMKQw6zANVAEDXAAAD1UAUABEAEEAVABFACAAADEgAEsA
QQBOAFMASABJAF8AUABLAEcAXwBUAFIATgBfAEQARQBUAEEASQBMAFMAIAAAKSAAUwBFAFQAIACo
MOkw/DDVMKEwpDDrMFxPEGIgAD0AJwAIbicAIAABFyAA0TDDMLEw/DC4MLMw/DDJMD0AJwABSyAA
QQBOAEQAIAAoAJ9bTIi5MMYw/DC/MLkwPQAnAKgw6TD8MCcAIAAgAE8AUgAgAJ9bTIi5MMYw/DC/
MLkwPQAnAAhuJwApACAAAScgAEEATgBEAAkAqDDpMPww1TChMKQw6zBcTxBiPQAnACpnJwAgAAEn
IABBAE4ARAAJAEpSZJbVMOkwsDA9ACcAZgBhAGwAcwBlACcAOwABLVUAcwBlAHIAOgA6AGMAbwBu
AG4AZQBjAHQAaQBvAG4AUwB0AHIAaQBuAGcAAAAAAFFOwbG88uhKj9Is2Q6fKMsACLd6XFYZNOCJ
CImEXc2AgMyRAwYSFQMGEhkDIAABBAAAEhUEAAASGQUAAQESGQQIABIVBAgAEhkDBhIMBAAAEgwE
CAASDAcgAwEODhIdBCABAQ4HIAISIQ4SHQIGCAMGERQEAAAAAAQBAAAABCABAQgFIAIBDg5AAQAz
U3lzdGVtLlJlc291cmNlcy5Ub29scy5TdHJvbmdseVR5cGVkUmVzb3VyY2VCdWlsZGVyBzIuMC4w
LjAAAAUAAgIcHAYAARJhEWUEIAASaQYgAgEOEmkEBwESFQUgAQERcQgBAAIAAAAAAAMAAAEEIAAS
eQQgABJ9BiABEoCBHAMgABwDIAAOAgYOBSAAEoCFBiABEoCFDgUgABKAjQYgARKAkQgEIAEcDgQg
AQEcBQAAEYCVBCABDg4EIAEIDgMgAAgGAAMODg4OFwcMDhIdEoCFEiEODhIhDggIEoClEYCVBAAB
Ag4GAAESgK0OBAABAQ4GAAESgLUOBCABAQIFIAEdBQ4HIAMBHQUICBEHBw4OEiESgIUSgLUdBRKA
pQgHAhKAhRKApQYgAgEOEh0FIAARgNEIBwMOEh0SgMkGIAEBEYDZBiABARKAyQUgAQgSIQ0HBBIh
EoDJEoDdEoClRwEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC4wAQBUDhRGcmFtZXdvcmtEaXNw
bGF5TmFtZRAuTkVUIEZyYW1ld29yayA0LwEAKlNUXzE4OTQ0NjhkZGMzZDRhZDg5NTYzNDIyOWVi
YjZjZGU3LmNzcHJvagAABQEAAAAADQEACHJpZ2h0LW9uAAAeAQAZQ29weXJpZ2h0IEAgcmlnaHQt
b24gMjAxNQAACAEACAAAAAAAHgEAAQBUAhZXcmFwTm9uRXhjZXB0aW9uVGhyb3dzAQAA4EQAAAAA
AAAAAAAA/kQAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPBEAAAAAAAAAAAAAAAAAAAAAF9Db3JE
bGxNYWluAG1zY29yZWUuZGxsAAAAAAD/JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAQAAAA
GAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAAAFhgAAAU
BAAAAAAAAAAAAAAUBDQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAAvQTv/gAA
AQAAAAEAanhHGAAAAQBqeEcYPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAABAFYAYQBy
AEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAAAAAAALAE
dAMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAUAMAAAEAMAAwADAAMAAwADQAYgAw
AAAANAAJAAEAQwBvAG0AcABhAG4AeQBOAGEAbQBlAAAAAAByAGkAZwBoAHQALQBvAG4AAAAAAIAA
KwABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABTAFQAXwAxADgAOQA0ADQANgA4
AGQAZABjADMAZAA0AGEAZAA4ADkANQA2ADMANAAyADIAOQBlAGIAYgA2AGMAZABlADcALgBjAHMA
cAByAG8AagAAAAAAQAAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADYAMgAx
ADUALgAzADAAOAAyADYAAAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAcwB0AF8A
OQA0ADcANgBhADIAYQBjADMAYQAyADgANAA1ADcAMgA4ADgAYQBkADkAMQBjADAAZABmADcAZgA3
AGUAOQBiAC4AZABsAGwAAABYABoAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8A
cAB5AHIAaQBnAGgAdAAgAEAAIAByAGkAZwBoAHQALQBvAG4AIAAyADAAMQA1AAAAeAAoAAEATwBy
AGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBhAG0AZQAAAHMAdABfADkANAA3ADYAYQAyAGEAYwAzAGEA
MgA4ADQANQA3ADIAOAA4AGEAZAA5ADEAYwAwAGQAZgA3AGYANwBlADkAYgAuAGQAbABsAAAAeAAr
AAEAUAByAG8AZAB1AGMAdABOAGEAbQBlAAAAAABTAFQAXwAxADgAOQA0ADQANgA4AGQAZABjADMA
ZAA0AGEAZAA4ADkANQA2ADMANAAyADIAOQBlAGIAYgA2AGMAZABlADcALgBjAHMAcAByAG8AagAA
AAAARAAPAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgA2ADIAMQA1AC4A
MwAwADgAMgA2AAAAAABIAA8AAQBBAHMAcwBlAG0AYgBsAHkAIABWAGUAcgBzAGkAbwBuAAAAMQAu
ADAALgA2ADIAMQA1AC4AMwAwADgAMgA2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAMAAAAEDUAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\CHECK FTP PUT STATUS (IF FTP PUT STATUS IS 未 THEN CREATE AND UPLOAD ERROR FILE)\ファイルを待っています(SLEEP)"
          DTS:CreationName="Microsoft.ScriptTask"
          DTS:Description="スクリプト タスク"
          DTS:DTSID="{91C8BC06-0A6F-4CBE-B4C0-030239548F14}"
          DTS:ExecutableType="Microsoft.ScriptTask"
          DTS:LocaleID="1041"
          DTS:ObjectName="ファイルを待っています(SLEEP)"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_39f1e85ec9c54a8b9d4e05b9f93238de"
              VSTAMajorVersion="3"
              VSTAMinorVersion="0"
              Language="CSharp"
              ReadOnlyVariables="User::errorCount,User::errorNaiyou,User::mailId,System::PackageName,User::sleepMinutes"
              ReadWriteVariables="User::mailFromId,User::mailFromName,User::mailServer">
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "ST_9bef6c4deafb424fb02adfd298797f2f.csproj.Properties.Settings.get_Default():ST_9bef6c4deafb424fb02adfd298797f2f.csproj.Properties.Sett" +
    "ings")]

namespace ST_9bef6c4deafb424fb02adfd298797f2f.csproj.Properties
{


    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase
    {

        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();

        public static Settings Default
        {
            get
            {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[using System;
using System.Net;
using System.Net.Mail;
using System.Text;

namespace ST_9bef6c4deafb424fb02adfd298797f2f.csproj
{
    [Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
    public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
    {

        #region VSTA generated code
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

        public void Main()
        {
            // TODO: Add your code here
            int intErrorCount = (int)Dts.Variables["errorCount"].Value;
            double min = Convert.ToDouble(Dts.Variables["sleepMinutes"].Value) * 60;
            
            //if(intErrorCount >= 5)
            //{
            //    sendMsg();
            //}

            int ms = Convert.ToInt32(min * 1000);
            System.Threading.Thread.Sleep(ms);
            Dts.TaskResult = (int)ScriptResults.Success;
        }

        #region send error count mail
        //public void sendMsg()
        //{
        //    StringBuilder ObjSB = null;
        //    string strMailId = Dts.Variables["mailId"].Value.ToString();
        //    string strErrorNaiyou = Dts.Variables["errorNaiyou"].Value.ToString();
        //    string strMailFromId = Dts.Variables["User::mailFromId"].Value.ToString();
        //    string strMailFromName = Dts.Variables["User::mailFromName"].Value.ToString();
        //    string strMailServer = Dts.Variables["User::mailServer"].Value.ToString();
        //    String PackageName = (String)Dts.Variables["System::PackageName"].Value;
        //    try
        //    {
        //        SmtpClient client = new SmtpClient(strMailServer);
        //        client.Port = 587;
        //        client.Credentials = new NetworkCredential(strMailFromId, "righton0123");
        //        client.DeliveryMethod = SmtpDeliveryMethod.Network;
        //        client.EnableSsl = true;
        //        //client.Credentials = new NetworkCredential("edi", "tani_gami");
        //        MailAddress AddFrom = new MailAddress(strMailFromId, strMailFromName);
        //        MailMessage Msg = new MailMessage();
        //        Msg.From = AddFrom;

        //        ObjSB = new StringBuilder();
        //        ObjSB.Append("MINI-MD運用窓口ご担当者各位、");
        //        ObjSB.Append("<BR/><BR/>");
        //        ObjSB.Append("MINI-MDシステムでFTP　PUTパッケージでエラーのお知らせです。");
        //        ObjSB.Append("<BR/><BR/>");
        //        ObjSB.Append("■トラブル内容 ");
        //        ObjSB.Append("<BR/>");
        //        ObjSB.Append("MINI-MD " + PackageName + " でエラーが発生しました。" + DateTime.Now);
        //        ObjSB.Append("<BR/>");
        //        ObjSB.Append(strErrorNaiyou);
        //        ObjSB.Append("<BR/><BR/>");
        //        ObjSB.Append("以上です。");
        //        Msg.To.Add(strMailId);
        //        Msg.Body = ObjSB.ToString();
        //        Msg.BodyEncoding = Encoding.UTF8;
        //        Msg.Subject = "【MINI-MD】FTP PUTパッケージでエラーのお知らせ_" + DateTime.Now;
        //        ObjSB.Append("<BR/>");
        //        Msg.SubjectEncoding = Encoding.UTF8;
        //        Msg.IsBodyHtml = true;
        //        client.Send(Msg);
        //    }
        //    catch(Exception ex)
        //    {
        //        throw ex;
        //    }
        //}
        #endregion
    }
}]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>st_39f1e85ec9c54a8b9d4e05b9f93238de</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>st_39f1e85ec9c54a8b9d4e05b9f93238de</msb:DisplayName>
		<msb:ProjectId>{9BA10E90-D28D-42B3-AEB4-2A23D00A77BE}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="st_39f1e85ec9c54a8b9d4e05b9f93238de.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_9bef6c4deafb424fb02adfd298797f2f.csproj")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("right-on")]
[assembly: AssemblyProduct("ST_9bef6c4deafb424fb02adfd298797f2f.csproj")]
[assembly: AssemblyCopyright("Copyright @ right-on 2015")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="st_39f1e85ec9c54a8b9d4e05b9f93238de.csproj"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="utf-16"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <!-- This section defines project-level properties.

       Configuration - Specifies whether the default configuration is Release or Debug.
       Platform - Specifies what CPU the output of this project can run on.
       OutputType - Must be "Library" for VSTA.
       NoStandardLibraries - Set to "false" for VSTA.
       RootNamespace - In C#, this specifies the namespace given to new files.
                       In Visual Basic, all objects are wrapped in this namespace at runtime.
       AssemblyName - Name of the output assembly.
  -->
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <OutputType>Library</OutputType>
    <NoStandardLibraries>false</NoStandardLibraries>
    <RootNamespace>ST_9bef6c4deafb424fb02adfd298797f2f.csproj</RootNamespace>
    <AssemblyName>st_39f1e85ec9c54a8b9d4e05b9f93238de</AssemblyName>
    <ProjectGuid>{A4661C1F-125F-4970-B713-B0F00A02410E}</ProjectGuid>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <!-- This section defines properties that are set when the "Debug" configuration is
       selected.

       DebugSymbols - If true, create symbols (.pdb). If false, do not create symbols.
       Optimize - If true, optimize the build output. If false, do not optimize.
       OutputPath - Output path of the project relative to the project file.
       EnableUnmanagedDebugging - If true, starting the debugger will attach both managed and unmanaged debuggers.
       DefineConstants - Constants defined for the preprocessor.
       Warning Level - Warning level for the compiler.
  -->
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <!-- This section defines properties that are set when the "Release" configuration is
       selected.

       DebugSymbols - If true, create symbols (.pdb). If false, do not create symbols.
       Optimize - If true, optimize the build output. If false, do not optimize.
       OutputPath - Output path of the project relative to the project file.
       EnableUnmanagedDebugging - If true, starting the debugger will attach both managed and unmanaged debuggers.
       DefineConstants - Constants defined for the preprocessor.
       Warning Level - Warning level for the compiler.
  -->
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <!-- This section enables pre- and post-build steps. However,
       it is recommended that MSBuild tasks be used instead of these properties.
  -->
  <PropertyGroup>
    <PreBuildEvent></PreBuildEvent>
    <PostBuildEvent></PostBuildEvent>
  </PropertyGroup>
  <!-- This sections specifies references for the project. -->
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=12.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=12.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <!-- This section defines the user source files that are part of the
       project.

       Compile - Specifies a source file to compile.
       EmbeddedResource - Specifies a .resx file for embedded resources.
       None - Specifies a file that is not to be passed to the compiler (for instance,
              a text file or XML file).
       AppDesigner - Specifies the directory where the application properties files can
                     be found.
  -->
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
    <!-- Include the default configuration information and metadata files for the add-in.
         These files are copied to the build output directory when the project is
         built, and the path to the configuration file is passed to add-in on the command
         line when debugging.
    -->
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="" />
        <Host Name="SSIS_ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST120</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "ST_9bef6c4deafb424fb02adfd298797f2f.csproj.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "ST_9bef6c4deafb424fb02adfd298797f2f.csproj.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "ST_9bef6c4deafb424fb02adfd298797f2f.csproj.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_9bef6c4deafb424fb02adfd298797f2f.csproj.Properties
{


    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources
    {

        private static global::System.Resources.ResourceManager resourceMan;

        private static global::System.Globalization.CultureInfo resourceCulture;

        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources()
        {
        }

        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager
        {
            get
            {
                if ((resourceMan == null))
                {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_9bef6c4deafb424fb02adfd298797f2f.csproj.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }

        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture
        {
            get
            {
                return resourceCulture;
            }
            set
            {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <BinaryItem
                Name="st_39f1e85ec9c54a8b9d4e05b9f93238de.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAMjXWVgAAAAAAAAAAOAAAiELAQsAABAAAAAIAAAAAAAA/i4A
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAKguAABTAAAAAEAAAHAEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAABA8AAAAgAAAAEAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAHAEAAAAQAAAAAYAAAASAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAGAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAADg
LgAAAAAAAEgAAAACAAUA+CEAALAMAAABAAAAAAAAAEAhAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKA4AAAoqEzACAC0AAAABAAARfgEAAAQtIHIBAABw0AIA
AAIoDwAACm8QAAAKcxEAAAoKBoABAAAEfgEAAAQqGn4CAAAEKh4CgAIAAAQqGn4DAAAEKi5zBgAA
BoADAAAEKh4CKBQAAAoqABMwAgBuAAAAAgAAEQIoFgAACm8XAAAKcoEAAHBvGAAACm8ZAAAKpR4A
AAEmAigWAAAKbxcAAApylwAAcG8YAAAKbxkAAAooGgAACiMAAAAAAABOQFoKBiMAAAAAAECPQFoo
GwAACgsHKBwAAAoCKBYAAAoWbx0AAAoqHgIoHgAACioAALQAAADOyu++AQAAAJEAAABsU3lzdGVt
LlJlc291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3Vs
dHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNv
dXJjZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFEULQAAABCU0pCAQABAAAA
AAAMAAAAdjQuMC4zMDMxOQAAAAAFAGwAAADcAwAAI34AAEgEAAAcBgAAI1N0cmluZ3MAAAAAZAoA
ALQAAAAjVVMAGAsAABAAAAAjR1VJRAAAACgLAACIAQAAI0Jsb2IAAAAAAAAAAgAAAVcdogEJAwAA
APolMwAWAAABAAAAIAAAAAUAAAAGAAAACQAAAAEAAAAeAAAAAgAAAA8AAAACAAAAAgAAAAMAAAAE
AAAAAQAAAAQAAAABAAAAAQAAAAAACgABAAAAAAAGAM8AyAAKAOsA1gAOAEsBIgEGAGcByAAGAH0B
bAEGAK4BmQEGAGUCSwIGAJACfgIGAKcCfgIGAMQCfgIGAOMCfgIGAPwCfgIGABUDfgIGADADfgIG
AEsDfgIGAGQDfgIGAJ0DfQMGAL0DfQMGABIE/wMGAC8EyAAGADQEyAAGAFgEfgIKAIQEbgQKAJ0E
bgQGALIEfQMOANQEIgEOAPYEIgESAE8FLwUSAGcFLwUGAIMFyAAGAIkFyAAGALMFogUAAAAAAQAA
AAAAAQABAAAAEAAyADwABQABAAEAAAEQAHIAPAAJAAMABQABABAAewCGAA0ABAAIAAMBAACxAAAA
EQAEAAoAEQCNARMAEQC6ARcAEQAEAjkABgYtAkcAVoA1AkoAVoA9AkoAUCAAAAAAgxjKARsAAQBY
IAAAAACTCNABHwABAJEgAAAAAJMI5AEkAAEAmCAAAAAAkwjwASkAAQCgIAAAAACWCBQCPQACALMg
AAAAAIYYygEbAAIApyAAAAAAkRjNBIkAAgC8IAAAAACGACgCGwACADYhAAAAAIYYygEbAAIAAAAB
AEUCOQDKAVgAQQDKAVgASQDKAVgAUQDKAVgAWQDKAVgAYQDKAVgAaQDKAVgAcQDKAVgAeQDKAVgA
gQDKAVgAiQDKAV0AkQDKARsAmQDKARsACQDKARsAoQBGBGIAoQBhBGkAKQDKAW4AuQDKAXoAyQDK
ARsAEQDKARsA0QDKARsAGQAIBY0A2QBZBZIA4QBwBZcA6QB5BZ0A+QCRBaEA+QCaBaYAAQG6BasA
2QDABV0AGQDKARsACAAUAE4ACAAYAFMAKQCTAIAALgAbAC0BLgAjAC0BLgBjAGkBLgALALUALgAT
AP0ALgAzAP0ALgArADMBLgA7AEEBLgBDAC0BLgBbAGABQwBrAFMASQCTAIAAYQCbAFMAgwCrAFMA
dQCwAAIAAQADAAMAAAB9AS8AAAD8ATQAAAAgAkIAAgACAAMAAgADAAUAAQAEAAUAAgAFAAcABIAA
AAEAAAA3GCxIAAAAAAAA2wMAAAQAAAAAAAAAAAAAAAEAvwAAAAAABAAAAAAAAAAAAAAAAQDIAAAA
AAAMAAAAAAAAAAAAAAAKAAMBAAAAAAwAAAAAAAAAAAAAAAoAEAUAAAAAAAAAAAEAAADPBQAABQAE
AAAAADxNb2R1bGU+AHN0XzM5ZjFlODVlYzljNTRhOGI5ZDRlMDViOWY5MzIzOGRlLmRsbABSZXNv
dXJjZXMAU1RfOWJlZjZjNGRlYWZiNDI0ZmIwMmFkZmQyOTg3OTdmMmYuY3Nwcm9qLlByb3BlcnRp
ZXMAU2V0dGluZ3MAU2NyaXB0TWFpbgBTVF85YmVmNmM0ZGVhZmI0MjRmYjAyYWRmZDI5ODc5N2Yy
Zi5jc3Byb2oAU2NyaXB0UmVzdWx0cwBtc2NvcmxpYgBTeXN0ZW0AT2JqZWN0AFN5c3RlbS5Db25m
aWd1cmF0aW9uAEFwcGxpY2F0aW9uU2V0dGluZ3NCYXNlAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuU2Ny
aXB0VGFzawBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5UYXNrcy5TY3JpcHRUYXNrAFZTVEFSVFNj
cmlwdE9iamVjdE1vZGVsQmFzZQBFbnVtAFN5c3RlbS5SZXNvdXJjZXMAUmVzb3VyY2VNYW5hZ2Vy
AHJlc291cmNlTWFuAFN5c3RlbS5HbG9iYWxpemF0aW9uAEN1bHR1cmVJbmZvAHJlc291cmNlQ3Vs
dHVyZQAuY3RvcgBnZXRfUmVzb3VyY2VNYW5hZ2VyAGdldF9DdWx0dXJlAHNldF9DdWx0dXJlAEN1
bHR1cmUAZGVmYXVsdEluc3RhbmNlAGdldF9EZWZhdWx0AERlZmF1bHQATWFpbgB2YWx1ZV9fAFN1
Y2Nlc3MARmFpbHVyZQB2YWx1ZQBTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nAFRhcmdldEZyYW1l
d29ya0F0dHJpYnV0ZQBTeXN0ZW0uUmVmbGVjdGlvbgBBc3NlbWJseVRpdGxlQXR0cmlidXRlAEFz
c2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUAQXNzZW1ibHlDb25maWd1cmF0aW9uQXR0cmlidXRl
AEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRyaWJ1dGUAQXNzZW1i
bHlDb3B5cmlnaHRBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1dGUAQXNzZW1ibHlD
dWx0dXJlQXR0cmlidXRlAEFzc2VtYmx5VmVyc2lvbkF0dHJpYnV0ZQBTeXN0ZW0uUnVudGltZS5D
b21waWxlclNlcnZpY2VzAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1dGUAUnVudGltZUNv
bXBhdGliaWxpdHlBdHRyaWJ1dGUAc3RfMzlmMWU4NWVjOWM1NGE4YjlkNGUwNWI5ZjkzMjM4ZGUA
U3lzdGVtLkRpYWdub3N0aWNzAERlYnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUAVHlwZQBSdW50
aW1lVHlwZUhhbmRsZQBHZXRUeXBlRnJvbUhhbmRsZQBBc3NlbWJseQBnZXRfQXNzZW1ibHkAU3lz
dGVtLkNvbXBvbmVudE1vZGVsAEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBFZGl0b3JCcm93c2Fi
bGVTdGF0ZQBDb21waWxlckdlbmVyYXRlZEF0dHJpYnV0ZQAuY2N0b3IAU1NJU1NjcmlwdFRhc2tF
bnRyeVBvaW50QXR0cmlidXRlAFNjcmlwdE9iamVjdE1vZGVsAGdldF9EdHMATWljcm9zb2Z0LlNx
bFNlcnZlci5NYW5hZ2VkRFRTAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlJ1bnRpbWUAVmFyaWFi
bGVzAGdldF9WYXJpYWJsZXMAVmFyaWFibGUAZ2V0X0l0ZW0AZ2V0X1ZhbHVlAEludDMyAENvbnZl
cnQAVG9Eb3VibGUAVG9JbnQzMgBTeXN0ZW0uVGhyZWFkaW5nAFRocmVhZABTbGVlcABzZXRfVGFz
a1Jlc3VsdABTVF85YmVmNmM0ZGVhZmI0MjRmYjAyYWRmZDI5ODc5N2YyZi5jc3Byb2ouUHJvcGVy
dGllcy5SZXNvdXJjZXMucmVzb3VyY2VzAAAAAAB/UwBUAF8AOQBiAGUAZgA2AGMANABkAGUAYQBm
AGIANAAyADQAZgBiADAAMgBhAGQAZgBkADIAOQA4ADcAOQA3AGYAMgBmAC4AYwBzAHAAcgBvAGoA
LgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMAABVlAHIAcgBvAHIAQwBv
AHUAbgB0AAAZcwBsAGUAZQBwAE0AaQBuAHUAdABlAHMAAAAAAMVgwXzYJUlMvy44jAAJCFkACLd6
XFYZNOCJCImEXc2AgMyRAwYSFQMGEhkDIAABBAAAEhUEAAASGQUAAQESGQQIABIVBAgAEhkDBhIM
BAAAEgwECAASDAIGCAMGERQEAAAAAAQBAAAABCABAQ4EIAEBCAYAARJREVUEIAASWQYgAgEOElkE
BwESFQUgAQERYQgBAAIAAAAAAAMAAAEEIAASbQQgABJxBSABEnUcAyAAHAQAAQ0cBAABCA0EAAEB
CAQHAg0IRwEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC4wAQBUDhRGcmFtZXdvcmtEaXNwbGF5
TmFtZRAuTkVUIEZyYW1ld29yayA0LwEAKlNUXzliZWY2YzRkZWFmYjQyNGZiMDJhZGZkMjk4Nzk3
ZjJmLmNzcHJvagAABQEAAAAADQEACHJpZ2h0LW9uAAAeAQAZQ29weXJpZ2h0IEAgcmlnaHQtb24g
MjAxNQAACAEACAAAAAAAHgEAAQBUAhZXcmFwTm9uRXhjZXB0aW9uVGhyb3dzAdAuAAAAAAAAAAAA
AO4uAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAADgLgAAAAAAAAAAAAAAAAAAAABfQ29yRGxsTWFp
bgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAA
AABIAAAAWEAAABQEAAAAAAAAAAAAABQENAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBP
AAAAAAC9BO/+AAABAAAAAQAsSDcYAAABACxINxg/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAA
RAAAAAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBv
AG4AAAAAAAAAsAR0AwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAABQAwAAAQAwADAA
MAAwADAANABiADAAAAA0AAkAAQBDAG8AbQBwAGEAbgB5AE4AYQBtAGUAAAAAAHIAaQBnAGgAdAAt
AG8AbgAAAAAAgAArAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAAAFMAVABfADkA
YgBlAGYANgBjADQAZABlAGEAZgBiADQAMgA0AGYAYgAwADIAYQBkAGYAZAAyADkAOAA3ADkANwBm
ADIAZgAuAGMAcwBwAHIAbwBqAAAAAABAAA8AAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEA
LgAwAC4ANgAxADkAOQAuADEAOAA0ADcANgAAAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBt
AGUAAABzAHQAXwAzADkAZgAxAGUAOAA1AGUAYwA5AGMANQA0AGEAOABiADkAZAA0AGUAMAA1AGIA
OQBmADkAMwAyADMAOABkAGUALgBkAGwAbAAAAFgAGgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBn
AGgAdAAAAEMAbwBwAHkAcgBpAGcAaAB0ACAAQAAgAHIAaQBnAGgAdAAtAG8AbgAgADIAMAAxADUA
AAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEAbQBlAAAAcwB0AF8AMwA5AGYAMQBl
ADgANQBlAGMAOQBjADUANABhADgAYgA5AGQANABlADAANQBiADkAZgA5ADMAMgAzADgAZABlAC4A
ZABsAGwAAAB4ACsAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUAAAAAAFMAVABfADkAYgBlAGYANgBj
ADQAZABlAGEAZgBiADQAMgA0AGYAYgAwADIAYQBkAGYAZAAyADkAOAA3ADkANwBmADIAZgAuAGMA
cwBwAHIAbwBqAAAAAABEAA8AAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAxAC4AMAAu
ADYAMQA5ADkALgAxADgANAA3ADYAAAAAAEgADwABAEEAcwBzAGUAbQBiAGwAeQAgAFYAZQByAHMA
aQBvAG4AAAAxAC4AMAAuADYAMQA5ADkALgAxADgANAA3ADYAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAwAAAAAPwAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\CHECK FTP PUT STATUS (IF FTP PUT STATUS IS 未 THEN CREATE AND UPLOAD ERROR FILE).PrecedenceConstraints[制約]"
          DTS:CreationName=""
          DTS:DTSID="{291A7779-2586-4937-AEF4-96A457F6B8AE}"
          DTS:EvalOp="1"
          DTS:Expression="@[User::waitFlag]==true"
          DTS:From="Package\CHECK FTP PUT STATUS (IF FTP PUT STATUS IS 未 THEN CREATE AND UPLOAD ERROR FILE)\エラーログのファイル作成"
          DTS:LogicalAnd="True"
          DTS:ObjectName="制約"
          DTS:To="Package\CHECK FTP PUT STATUS (IF FTP PUT STATUS IS 未 THEN CREATE AND UPLOAD ERROR FILE)\ファイルを待っています(SLEEP)" />
      </DTS:PrecedenceConstraints>
      <DTS:EventHandlers>
        <DTS:EventHandler
          DTS:refId="Package\CHECK FTP PUT STATUS (IF FTP PUT STATUS IS 未 THEN CREATE AND UPLOAD ERROR FILE).EventHandlers[OnError]"
          DTS:CreationName="OnError"
          DTS:DTSID="{4859240D-0098-4917-A588-449265E6FBD4}"
          DTS:EventID="939524152"
          DTS:EventName="OnError"
          DTS:LocaleID="-1">
          <DTS:Variables>
            <DTS:Variable
              DTS:CreationName=""
              DTS:Description="イベントの反映プロパティです"
              DTS:DTSID="{7A02FB0A-B96C-4292-8C2F-9BEE6F5A21DD}"
              DTS:IncludeInDebugDump="6789"
              DTS:Namespace="System"
              DTS:ObjectName="Propagate">
              <DTS:VariableValue
                DTS:DataType="11">-1</DTS:VariableValue>
            </DTS:Variable>
          </DTS:Variables>
          <DTS:Executables />
        </DTS:EventHandler>
      </DTS:EventHandlers>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:EventHandlers>
    <DTS:EventHandler
      DTS:refId="Package.EventHandlers[OnError]"
      DTS:CreationName="OnError"
      DTS:DTSID="{5384435E-AA2A-44BA-9E77-3CA557361259}"
      DTS:EventID="100663302"
      DTS:EventName="OnError"
      DTS:LocaleID="-1">
      <DTS:Variables>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="イベントの反映プロパティです"
          DTS:DTSID="{D2A27F96-C54A-4598-A97A-85DF33616722}"
          DTS:IncludeInDebugDump="6789"
          DTS:Namespace="System"
          DTS:ObjectName="Propagate">
          <DTS:VariableValue
            DTS:DataType="11">-1</DTS:VariableValue>
        </DTS:Variable>
      </DTS:Variables>
      <DTS:Executables />
    </DTS:EventHandler>
  </DTS:EventHandlers>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="sql12">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="208,42"
          Id="Package\CHECK FTP PUT STATUS (IF FTP PUT STATUS IS 未 THEN CREATE AND UPLOAD ERROR FILE)\エラーログのファイル作成"
          TopLeft="119.528301886793,22.7924528301887" />
        <NodeLayout
          Size="208,42"
          Id="Package\CHECK FTP PUT STATUS (IF FTP PUT STATUS IS 未 THEN CREATE AND UPLOAD ERROR FILE)\ファイルを待っています(SLEEP)"
          TopLeft="117.962264150943,114.037735849057" />
        <EdgeLayout
          Id="Package\CHECK FTP PUT STATUS (IF FTP PUT STATUS IS 未 THEN CREATE AND UPLOAD ERROR FILE).PrecedenceConstraints[制約]"
          TopLeft="222.745283018868,64.7924528301887">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,49.2452830188683"
              Start="0,0"
              End="0,41.7452830188683">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,41.7452830188683" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-8,12.8726415094342,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43.924528301886795"
          IsExpanded="True"
          PanelSize="460,214"
          Size="460,258"
          Id="Package\CHECK FTP PUT STATUS (IF FTP PUT STATUS IS 未 THEN CREATE AND UPLOAD ERROR FILE)"
          TopLeft="167.5,54.5" />
        <AnnotationLayout
          Text="作成人:　イルファンマンスリー &#xA;説明: This package aim to create log file from &#xA;PACKAGE_ERROR table, for the reading purpose&#xA;of KANSHI_PACKAGE.&#xA;&#xA;Creating file name by its specified package name &#xA;&amp; its error. File will contain ERROR detail."
          ParentId="Package"
          FontInfo="{assembly:Null}"
          Size="322,131"
          Id="eef08d1b-303b-4820-8f96-23f6047254e1"
          TopLeft="875,17" />
      </GraphLayout>
    </LayoutInfo>
  </Package>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>